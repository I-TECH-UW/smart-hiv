<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="HIVIND72Logic"/>
  <meta>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"/>
  </meta>
  <text>
    <status value="generated"/><div xmlns="http://www.w3.org/1999/xhtml"><p class="res-header-id"><b>Generated Narrative: Library HIVIND72Logic</b></p><a name="HIVIND72Logic"> </a><a name="hcHIVIND72Logic"> </a><a name="HIVIND72Logic-en-US"> </a><h2>Related Artifacts</h2><table class="grid"><tr><td>Depends On</td><td>Library HIC</td><td><code>http://smart.who.int/hiv/Library/HIVCommon|0.0.1</code></td></tr><tr><td>Depends On</td><td>Library WCom</td><td><code>http://smart.who.int/hiv/Library/WHOCommon</code></td></tr></table><h2>Parameters</h2><table class="grid"><tr><td>Measurement Period</td><td>in</td><td>0</td><td>1</td><td>Period</td></tr><tr><td>Patient</td><td>out</td><td>0</td><td>1</td><td>Patient</td></tr><tr><td>Initial Population</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Numerator</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Denominator</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr></table><h2>Contents</h2><p><code>text/cql</code></p><pre><code class="language-sql">/**
 * Library: HIV.IND.72 Logic
 * Ref No: STI.5A
 * Short Name: Gonorrhoea test positivity, HIV prevention services
 *
 * Definition: % of people who tested positive for gonorrhoea during the reporting period
 *
 * Numerator: Number of people attending HIV prevention services who tested positive for gonorrhoea during the reporting period
 * Numerator Calculation: COUNT of clients with &quot;Gonorrhoea test date&quot; in the reporting period AND &quot;Gonorrhoea test result&quot;='Positive'
 * Numerator Exclusions: 
 *
 * Denominator: Number of people attending HIV prevention services tested for gonorrhoea (using a molecular test, culture or POC test) during the reporting period
 * Denominator Calculation: COUNT of clients with &quot;Gonorrhoea test date&quot; on &quot;Date accessed HIV prevention intervention&quot; in the reporting period
 * Denominator Exclusions: 
 *
 * Disaggregations:
 * • Gender (male, female, other*) 
 *  • Age (15–19, 20–24, 25–29, 30–49, 50+ years) 
 *  • Key populations (men who have sex with men, people living in prisons and other closed settings, people who inject drugs, sex workers, trans and gender diverse people)** 
 *  • HIV status (HIV-positive, HIV-negative, unknown status) 
 *  • HIV prevention intervention (for example, PrEP) 
 *  • Diagnostic test used and anatomic site sampled 
 *  • Cities and other administrative regions of epidemiologic importance
 *
 * Disaggregation Elements: Gender | Age | Key population member type | HIV status | HIV prevention intervention | Type of specimen | Neisseria gonorrhoeae test type
 *
 * Numerator and Denominator Elements:
 * Date accessed HIV prevention intervention 
 *  Gonorrhoea test date 
 *  Gonorrhoea test result
 *
 * Reference: Consolidated guidelines on person-centred HIV strategic information: strengthening routine data for impact. Geneva: World Health Organization; 2022
 * 
 * Data Concepts:
 * HIV.A.DE17: Age | Calculated age (number of years) of the client based on date of birth
 * HIV.A.DE18: Gender* | Gender of the client*
 * HIV.A.DE19: Female | Client identifies as female
 * HIV.A.DE20: Male | Client identifies as male
 * HIV.A.DE21: Transgender male | Client identifies as transgender male
 * HIV.A.DE22: Transgender female | Client identifies as transgender female
 * HIV.A.DE23: Other | Additional category
 * HIV.B.DE50: Key population member type* | The type of key population that the client is included in
 * HIV.B.DE51: Sex worker | Client is a sex worker
 * HIV.B.DE52: Men who have sex with men | Client is a man who has sex with men
 * HIV.B.DE53: Trans and gender-diverse people | Client identifies as trans and gender-diverse
 * HIV.B.DE54: People who inject drugs | Client is a person who injects drugs
 * HIV.B.DE55: People living in prisons and other closed settings | Client lives in a prison or another closed setting
 * HIV.B.DE115: HIV status | HIV status reported after applying the national HIV testing algorithm. No single HIV test can provide an HIV-positive diagnosis.
 * HIV.B.DE116: HIV-positive | Client is HIV-positive
 * HIV.B.DE117: HIV-negative | Client is HIV-negative
 * HIV.B.DE118: Unknown | Client has unknown HIV status
 * HIV.B.DE255: Gonorrhoea test date | Date of Gonorrhoea test
 * HIV.B.DE256: Gonorrhoea test result | Result from Gonorrhoea test
 * HIV.B.DE257: Positive | Test result is positive for Neisseria gonorrhoeae
 * HIV.B.DE258: Negative | Test result is negative for Neisseria gonorrhoeae
 * HIV.B.DE259: Inconclusive | Test result is inconclusive
 * HIV.B.DE261: Type of specimen | Type of specimen to be collected
 * HIV.B.DE262: Blood | Blood specimen to be collected
 * HIV.B.DE263: Urine | Urine specimen to be collected
 * HIV.B.DE264: Cervical or vaginal swab | Cervical or vaginal swab to be collected
 * HIV.B.DE265: Urethral or penile swab | Urethral or penile swab to be collected
 * HIV.B.DE266: Rectal swab | Rectal swab to be collected
 * HIV.B.DE267: Other | Other specimen type to be collected
 * HIV.B.DE276: Neisseria gonorrhoeae test type | Type of diagnostic test used for Neisseria gonorrhoeae
 * HIV.B.DE277: NAAT | Nucleic Acid Amplification Test (NAAT) used
 * HIV.B.DE278: POC Test | Point-of-care (POC) test used
 * HIV.B.DE279: Culture | Culture test used
 * HIV.B.DE280: Microscopy | Microscopy test used
 * HIV.B.DE281: Other | Other type of test used
 * HIV.D.DE807: Gonorrhoea test date | Date of Gonorrhoea test
 * HIV.D.DE808: Gonorrhoea test result | Result from Gonorrhoea test
 * HIV.D.DE809: Positive | Test result is positive for Neisseria gonorrhoeae
 * HIV.D.DE810: Negative | Test result is negative for Neisseria gonorrhoeae
 * HIV.D.DE811: Inconclusive | Test result is inconclusive
 * HIV.D.DE813: Type of specimen | Type of specimen to be collected
 * HIV.D.DE814: Blood | Blood specimen to be collected
 * HIV.D.DE815: Urine | Urine specimen to be collected
 * HIV.D.DE816: Cervical or vaginal swab | Cervical or vaginal swab to be collected
 * HIV.D.DE817: Urethral or penile swab | Urethral or penile swab to be collected
 * HIV.D.DE818: Rectal swab | Rectal swab to be collected
 * HIV.D.DE819: Other | Other specimen type to be collected
 * HIV.D.DE828: Neisseria gonorrhoeae test type | Type of diagnostic test used for Neisseria gonorrhoeae
 * HIV.D.DE829: NAAT | Nucleic Acid Amplification Test (NAAT) used
 * HIV.D.DE830: POC Test | Point-of-care (POC) test used
 * HIV.D.DE831: Culture | Culture test used
 * HIV.D.DE832: Microscopy | Microscopy test used
 * HIV.D.DE833: Other | Other type of test used
 * HIV.E.DE114: Key population member type* | The type of key population that the infant's mother is included in
 * HIV.E.DE115: Sex worker | Infant's mother is a sex worker
 * HIV.E.DE116: People who inject drugs | Infant's mother is a person who injects drugs
 * HIV.E.DE117: Trans and gender-diverse people | Infant's mother identifies as trans and gender-diverse
 * HIV.E.DE118: People living in prisons and other closed setting | Infant's mother is in a prison or closed setting
 * HIV.PRV.DE2: HIV prevention intervention | HIV prevention intervention that client accessed
 * HIV.PRV.DE3: PrEP service | Client accessed PrEP services
 * HIV.PRV.DE4: OAMT | Client accessed opioid agonist maintenance treatment (OAMT) services
 * HIV.PRV.DE5: NSP | Client accessed needle-syringe programme (NSP) services
 * HIV.PRV.DE6: STI services | Client accessed sexually transmitted infection (STI) services
 * HIV.PRV.DE7: VMMC | Client accessed voluntary medical male circumcision (VMMC) services
 * HIV.PRV.DE8: Other | Client accessed other HIV prevention services
 * HIV.PRV.DE10: Date accessed HIV prevention intervention | Date the client accessed HIV prevention intervention
 *
 * Additional Context
 * - what it measures: A: % of people attending HIV prevention services who were tested for gonorrhoea and | had a positive test result during the reporting period | B: % of people living with HIV who were tested for gonorrhoea and had a positive test result during the reporting period
 * - rationale: • Gonorrhoea test positivity can be used to highlight areas within a country that require additional support and provide early warning of potential changes in HIV and sexually transmitted infection transmission in the general population. | • Gonorrhoea test positivity is important information for generating national, regional and global incidence and prevalence estimates for gonorrhoea. | • Data on gonorrhoea test positivity are important for understanding the challenges imposed by increasing resistance to currently recommended treatment options.
 * - method: Individual-level data obtained from programme records.   |  | If individual-level data are not available, the indicator can be reported using aggregate programme data.
 * 
 * Suggested Scoring Method: proportion | http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/proportion-measure-cqfm
 */

library HIVIND72Logic

// Included Libraries
using FHIR version '4.0.1'

include HIVCommon version '0.0.1' called HIC
include FHIRHelpers version '4.0.1'

include WHOCommon called WCom

// Indicator Definition
parameter &quot;Measurement Period&quot; Interval&lt;Date&gt; default Interval[@2023-01-01, @2023-01-30]

context Patient
/* Populations */

/*
 *Initial Population
 */

define &quot;Initial Population&quot;:
  true

/**
 * Numerator
 * 
 * Definition: Number of people attending HIV prevention services who tested positive for gonorrhoea during the reporting period
 * Calculation: COUNT of clients with &quot;Gonorrhoea test date&quot; in the reporting period AND &quot;Gonorrhoea test result&quot;='Positive'
 */

define &quot;Numerator&quot;:
  true


/**
 * Denominator
 *
 * Definition: Number of people attending HIV prevention services tested for gonorrhoea (using a molecular test, culture or POC test) during the reporting period
 * Calculation: COUNT of clients with &quot;Gonorrhoea test date&quot; on &quot;Date accessed HIV prevention intervention&quot; in the reporting period
 */

define &quot;Denominator&quot;:
  true
    

/* end Populations */

</code></pre><p><code>Content not shown - (</code><code>application/elm+xml</code>, size = 15Kb )</p></div>
  </text>
  <extension url="http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability">
    <valueCode value="computable"/>
  </extension>
  <url value="http://smart.who.int/hiv/Library/HIVIND72Logic"/>
  <version value="0.2.0"/>
  <name value="HIVIND72Logic"/>
  <title value="HIV.IND.72 Logic"/>
  <status value="draft"/>
  <experimental value="true"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2024-08-13T19:21:15+00:00"/>
  <publisher value="WHO"/>
  <contact>
    <name value="WHO"/>
    <telecom>
      <system value="url"/>
      <value value="http://who.int"/>
    </telecom>
  </contact>
  <description value="% of people who tested positive for gonorrhoea during the reporting period"/>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library HIC"/>
    <resource value="http://smart.who.int/hiv/Library/HIVCommon|0.0.1"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library WCom"/>
    <resource value="http://smart.who.int/hiv/Library/WHOCommon"/>
  </relatedArtifact>
  <parameter>
    <name value="Measurement Period"/>
    <use value="in"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Period"/>
  </parameter>
  <parameter>
    <name value="Patient"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Patient"/>
  </parameter>
  <parameter>
    <name value="Initial Population"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Numerator"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Denominator"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <content>
    <contentType value="text/cql"/>
    <data value=""/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
    <data value=""/>
  </content>
</Library>