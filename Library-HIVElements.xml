<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="HIVElements"/>
  <meta>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"/>
  </meta>
  <text>
    <status value="generated"/><div xmlns="http://www.w3.org/1999/xhtml"><p class="res-header-id"><b>Generated Narrative: Library HIVElements</b></p><a name="HIVElements"> </a><a name="hcHIVElements"> </a><a name="HIVElements-en-US"> </a><h2>Contents</h2><p><code>text/cql</code></p><pre><code>library HIVElements

using FHIR version '4.0.1'

//include fhir.cqf.common.FHIRCommon called FC
include FHIRHelpers version '4.0.1'

include WHOConcepts
include WHOCommon called WC
include WHOElements called WE

include HIVConcepts called Concepts
include HIVConceptsCustom called ConceptsCustom
include HIVCommon called Common

context Patient

/**
 * HIV Elements
 */

/* General Element Definitions */

// From Common

// Exposure to HIV
define Exposure_Occupational:
  exists (
    [Observation: Concepts.&quot;HIV exposure type&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.value ~ Concepts.&quot;Occupational&quot;
  )

define Exposure_Non_Occupational_violent:
  exists (
    [Observation: Concepts.&quot;HIV exposure type&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.value ~ Concepts.&quot;Non-occupational violent&quot;
  )

define Exposure_Non_Occupational_consensual_sex:
  exists (
    [Observation: Concepts.&quot;HIV exposure type&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.value ~ Concepts.&quot;Non-occupational consensual sex&quot;
  )

// Needle Syringe Dispensed
define &quot;Needle Syringe Dispensed&quot;:  
  [DeviceUseStatement] DUS
  with [Observation: Concepts.&quot;Key population member - HIV.E.DE113&quot;] O
      such that DUS.reasonReference.references(O) 
        and O.status in { 'final', 'amended', 'corrected' }
        and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
        and O.value ~ Concepts.&quot;People who inject drugs - HIV.B.DE54&quot;
  where DUS.status = 'completed'

define &quot;HIV PREP Active&quot;:
[MedicationStatement] MS
    where MS.status = 'completed'
    and exists(MS.reasonCode C where C ~ Concepts.&quot;PrEP for HIV prevention&quot;)

 define &quot;Client is at elevated risk for HIV acquisition&quot;:
    [Observation] O
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.code ~ Concepts.&quot;At elevated risk for HIV acquisition - HIV.B.DE225&quot;

define &quot;PREP Prescription&quot;:
  [MedicationRequest] MR
    where MR.status = 'completed'
    and MR.intent = 'order'
    and MR.medication ~ Concepts.&quot;PrEP for HIV prevention&quot;

define &quot;PEP Prescription&quot;:
  [MedicationRequest] MR
      where MR.status = 'completed'
      and MR.intent = 'order'
      and MR.medication ~ Concepts.&quot;PEP for HIV prevention&quot;

define &quot;routine viral load sample collection&quot;:
  [Procedure] P
  where P.status = 'completed'
  and P.code ~ ConceptsCustom.&quot;viral load test&quot;
  and exists(P.reasonCode RC where RC ~ Concepts.&quot;Routine viral load test&quot;)

define &quot;viral load sample collection&quot;:
  [Procedure] P
  where P.status = 'completed'
  and P.code ~ ConceptsCustom.&quot;viral load test&quot;

define &quot;HIV Positive Condition&quot;:
[Condition] C
    where C.clinicalStatus ~ ConceptsCustom.&quot;active&quot;
    and exists(C.category CC where CC ~ ConceptsCustom.&quot;encounter-diagnosis&quot;)
    and C.code ~ Concepts.&quot;HIV-positive - HIV.B.DE116&quot;
    sort by start of onset.toInterval()

define &quot;First HIV Treatment&quot;:
  First(&quot;On ART H.DE47&quot;)

define &quot;First HIV Positive Condition&quot;:
  First(&quot;HIV Positive Condition&quot;)
  

/* On ART - includes &quot;On ART - HIV.B.DE47&quot; and &quot;On ART - HIV.B.DE48&quot; */
define &quot;ART Medication Statement&quot;:
  [MedicationStatement: Concepts.&quot;ART regimen Choices&quot;] MS
  sort by start of effective.toInterval()

define &quot;On ART&quot;:
  exists &quot;ART Medication Statement&quot;

define &quot;ART start date&quot;:
  &quot;ART Medication Statement&quot; MS
  return start of MS.effective.toInterval()

define &quot;First On ART&quot;:
  (First(&quot;On ART D.DE38&quot;))

define &quot;Viral load tests received after ART intitiation&quot;:
  &quot;Viral load test result D.DE387&quot; O
  where start of O.issued.toInterval() after start of &quot;First On ART&quot;.effective.toInterval()
  sort by start of issued.toInterval()

// Entries based on DAK Data Dictionary for Data Elements marked as used
// in at least one Decision Support Table or Aggregate Indicator

/*
@dataElement: HIV.A.DE3 - Visit date
@activity: HIV.A2 Gather client details
@description: The date and time of the client's visit
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Visit date A.DE3&quot;:
  [Observation: Concepts.&quot;Visit date - HIV.A.DE3&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Visit date A.DE3 Value&quot;:
  &quot;Visit date A.DE3&quot; O
  return O.value
/* End of Visit date A.DE3 */

/*
@dataElement: HIV.A.DE16 - Estimated age
@activity: HIV.A6.1 Review sociodemographic data with client | HIV.A5 Create new client record
@description: If DOB is unknown, enter the client's estimated age. Display client's age in number of years.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Estimated age&quot;:
  [Observation: Concepts.&quot;Estimated age&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Estimated age Value&quot;:
  &quot;Estimated age&quot; O
  return O.value
/* End of Estimated age */

/*
@dataElement: HIV.A.DE17 - Age
@activity: HIV.A6.1 Review sociodemographic data with client | HIV.A5 Create new client record
@description: Calculated age (number of years) of the client based on date of birth
*/
/** 
 * @dataElement Patient age in years
 */
define &quot;Current Patient Age In Years&quot;:
  AgeInYearsAt(Today())

/** 
 * @dataElement Patient age in weeks
 */
define &quot;Current Patient Age In Weeks&quot;:
  AgeInWeeksAt(Today())

/** 
 * @dataElement Patient age in months
 */
define &quot;Current Patient Age In Months&quot;:
  AgeInMonthsAt(Today())
/* End of Age */

/*
@dataElement: HIV.A.DE18 - Gender
@activity: HIV.A6.1 Review sociodemographic data with client | HIV.A5 Create new client record
@description: Gender of the client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Gender&quot;:
  exists &quot;Gender Observation&quot;
define &quot;Gender Observation&quot;:
  [Observation: Concepts.&quot;Gender&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Gender */

/*
@dataElement: HIV.A.DE19 - Female
@activity: HIV.A6.1 Review sociodemographic data with client | HIV.A5 Create new client record
@description: Client identifies as female
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Female&quot;:
  exists &quot;Female Condition&quot;
    or exists &quot;Female Observation&quot;
define &quot;Female Condition&quot;:
  [Condition: Concepts.&quot;Female&quot;]
define &quot;Female Observation&quot;:
  &quot;Gender Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Female&quot;
/* End of Female */

/*
@dataElement: HIV.A.DE20 - Male
@activity: HIV.A6.1 Review sociodemographic data with client | HIV.A5 Create new client record
@description: Client identifies as male
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Male&quot;:
  exists &quot;Male Condition&quot;
    or exists &quot;Male Observation&quot;
define &quot;Male Condition&quot;:
  [Condition: Concepts.&quot;Male&quot;]
define &quot;Male Observation&quot;:
  &quot;Gender Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Male&quot;
/* End of Male */

/*
@dataElement: HIV.A.DE21 - Transgender male
@activity: HIV.A6.1 Review sociodemographic data with client | HIV.A5 Create new client record
@description: Client identifies as transgender male
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Transgender male&quot;:
  exists &quot;Transgender male Condition&quot;
    or exists &quot;Transgender male Observation&quot;
define &quot;Transgender male Condition&quot;:
  [Condition: Concepts.&quot;Transgender male&quot;]
define &quot;Transgender male Observation&quot;:
  &quot;Gender Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Transgender male&quot;
/* End of Transgender male */

/*
@dataElement: HIV.A.DE22 - Transgender female
@activity: HIV.A6.1 Review sociodemographic data with client | HIV.A5 Create new client record
@description: Client identifies as transgender female
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Transgender female&quot;:
  exists &quot;Transgender female Condition&quot;
    or exists &quot;Transgender female Observation&quot;
define &quot;Transgender female Condition&quot;:
  [Condition: Concepts.&quot;Transgender female&quot;]
define &quot;Transgender female Observation&quot;:
  &quot;Gender Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Transgender female&quot;
/* End of Transgender female */

/*
@dataElement: HIV.A.DE23 - Other
@activity: HIV.A6.1 Review sociodemographic data with client | HIV.A5 Create new client record
@description: Additional category
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other A.DE23&quot;:
  exists &quot;Other A.DE23 Condition&quot;
    or exists &quot;Other A.DE23 Observation&quot;
define &quot;Other A.DE23 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.A.DE23&quot;]
define &quot;Other A.DE23 Observation&quot;:
  &quot;Gender Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.A.DE23&quot;
/* End of Other A.DE23 */


/*
@dataElement: HIV.B HTS Visit Enounter
@activity: HIV.B1 Determine reason for visit
@description: Encounter for HIV testing services visit
*/
define &quot;HTS Visit Encounter&quot;:
  [Encounter] E
    where E.type.coding.code contains ConceptsCustom.&quot;HTS Visit&quot;.code

/*
@dataElement: HIV.B.DE1 - Reason for visit
@activity: HIV.B1 Determine reason for visit
@description: Reason for HIV testing services visit
*/
define &quot;Reason for visit B.DE1&quot;:
  &quot;HTS Visit Encounter&quot; E
  return E.reasonCode 
/* End of Reason for visit B.DE1 */

/*
@dataElement: HIV.B.DE2 - First-time HIV test
@activity: HIV.B1 Determine reason for visit
@description: First encounter for screening for human immunodeficiency virus
*/
define &quot;First-time HIV test Encounter&quot;:
  &quot;HTS Visit Encounter&quot; E
  where E.reasonCode.coding.code contains Concepts.&quot;First-time HIV test&quot;.code
/* End of First-time HIV test */

/*
@dataElement: HIV.B.DE3 - Retesting for HIV
@activity: HIV.B1 Determine reason for visit
@description: Retesting for human immunodeficiency virus
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Retesting for HIV B.DE3 Encounter&quot;:
  &quot;HTS Visit Encounter&quot; E
  where E.reasonCode.coding.code contains Concepts.&quot;Retesting for HIV - HIV.B.DE3&quot;.code
/* End of Retesting for HIV B.DE3 */

/*
@dataElement: HIV.B.DE4 - HIV testing services visit
@activity: HIV.B1 Determine reason for visit
@description: Client attending facility for HIV testing services visit
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV testing services visit Encounter&quot;:
  &quot;HTS Visit Encounter&quot; E
  where E.reasonCode.coding.code contains Concepts.&quot;HIV testing services visit&quot;.code
/* End of HIV testing services visit */

/*
@dataElement: HIV.B.DE5 - Referred through partner services
@activity: HIV.B1 Determine reason for visit
@description: Client reported coming to the facility after receiving a provider-assisted referral or patient referral from a contact or partner
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Referred through partner services&quot;:
  exists &quot;Referred through partner services Observation&quot;
define &quot;Referred through partner services Observation&quot;:
  [Observation: Concepts.&quot;Referred through partner services&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Referred through partner services */

/*
@dataElement: HIV.B.DE6 - Partner or contact of an index case
@activity: HIV.B1 Determine reason for visit
@description: The client is a contact or partner of a person diagnosed with HIV (an index case)
*/

define &quot;Partner or contact of an index case&quot;:
    [Observation: Concepts.&quot;Referred through partner services&quot;] O 
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.code ~ Concepts.&quot;Partner or contact of an index case&quot;
  
define &quot;Drug-injecting partner&quot;:
  [Observation: Concepts.&quot;Type of contact or partner for partner services&quot;] O 
  where O.status in { 'final', 'amended', 'corrected' }
  and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
  and O.code ~ Concepts.&quot;Drug-injecting partner - HIV.B.DE10&quot;

define &quot;Sexual partner&quot;:
  [Observation: Concepts.&quot;Type of contact or partner for partner services&quot;] O 
  where O.status in { 'final', 'amended', 'corrected' }
  and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
  and O.code ~ Concepts.&quot;Sexual partner - HIV.B.DE11&quot; 

//HIV status of partner or contact (already known positive, newly diagnosed positive, negative) 

define &quot;already known positive&quot;:
  [Observation: Concepts.&quot;HIV status of partner or contact&quot;] O 
  where O.status in { 'final', 'amended', 'corrected' }
  and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
  and O.code ~ Concepts.&quot;Already knew positive&quot;

define &quot;Negative - HIV.H.DE37&quot;:
  [Observation: Concepts.&quot;HIV status of partner or contact&quot;] O 
  where O.status in { 'final', 'amended', 'corrected' }
  and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
  and O.code ~ Concepts.&quot;Negative - HIV.H.DE37&quot;

/* End of Partner or contact of an index case */

/*
@dataElement: HIV.B.DE7 - Partner or contact of an HIV testing client non-index case
@activity: HIV.B1 Determine reason for visit
@description: The client is a contact or partner identified through partner or social network services, but is not known to be a partner of an index-case
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Partner or contact of an HIV testing client non-index case&quot;:
  exists &quot;Partner or contact of an HIV testing client non-index case Condition&quot;
    or exists &quot;Partner or contact of an HIV testing client non-index case Observation&quot;
define &quot;Partner or contact of an HIV testing client non-index case Condition&quot;:
  [Condition: Concepts.&quot;Partner or contact of an HIV testing client non-index case&quot;]
define &quot;Partner or contact of an HIV testing client non-index case Observation&quot;:
  &quot;Referred through partner services Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Partner or contact of an HIV testing client non-index case&quot;
/* End of Partner or contact of an HIV testing client non-index case */

/*
@dataElement: HIV.B.DE8 - Type of contact or partner for partner services
@activity: HIV.B1 Determine reason for visit
@description: Client's relationship to the person that referred the client for partner services or family services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Type of contact or partner for partner services&quot;:
  exists &quot;Type of contact or partner for partner services Observation&quot;
define &quot;Type of contact or partner for partner services Observation&quot;:
  [Observation: Concepts.&quot;Type of contact or partner for partner services&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Type of contact or partner for partner services */

/*
@dataElement: HIV.B.DE9 - Biological child
@activity: HIV.B1 Determine reason for visit
@description: Client is the biological child of the person that referred the client for family services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Biological child&quot;:
  exists &quot;Biological child Condition&quot;
    or exists &quot;Biological child Observation&quot;
define &quot;Biological child Condition&quot;:
  [Condition: Concepts.&quot;Biological child&quot;]
define &quot;Biological child Observation&quot;:
  &quot;Type of contact or partner for partner services Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Biological child&quot;
/* End of Biological child */

/*
@dataElement: HIV.B.DE10 - Drug-injecting partner
@activity: HIV.B1 Determine reason for visit
@description: Client is a drug-injecting partner of the person that referred the client for partner services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Drug-injecting partner B.DE10&quot;:
  exists &quot;Drug-injecting partner B.DE10 Condition&quot;
    or exists &quot;Drug-injecting partner B.DE10 Observation&quot;
define &quot;Drug-injecting partner B.DE10 Condition&quot;:
  [Condition: Concepts.&quot;Drug-injecting partner - HIV.B.DE10&quot;]
define &quot;Drug-injecting partner B.DE10 Observation&quot;:
  &quot;Type of contact or partner for partner services Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Drug-injecting partner - HIV.B.DE10&quot;
/* End of Drug-injecting partner B.DE10 */

/*
@dataElement: HIV.B.DE11 - Sexual partner
@activity: HIV.B1 Determine reason for visit
@description: Client is a sexual partner of the person that referred the client for partner services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sexual partner B.DE11&quot;:
  exists &quot;Sexual partner B.DE11 Condition&quot;
    or exists &quot;Sexual partner B.DE11 Observation&quot;
define &quot;Sexual partner B.DE11 Condition&quot;:
  [Condition: Concepts.&quot;Sexual partner - HIV.B.DE11&quot;]
define &quot;Sexual partner B.DE11 Observation&quot;:
  &quot;Type of contact or partner for partner services Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Sexual partner - HIV.B.DE11&quot;
/* End of Sexual partner B.DE11 */

/*
@dataElement: HIV.B.DE12 - Social contact
@activity: HIV.B1 Determine reason for visit
@description: Client is a social contact of the person that referred the client for social-network services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Social contact B.DE12&quot;:
  exists &quot;Social contact B.DE12 Condition&quot;
    or exists &quot;Social contact B.DE12 Observation&quot;
define &quot;Social contact B.DE12 Condition&quot;:
  [Condition: Concepts.&quot;Social contact - HIV.B.DE12&quot;]
define &quot;Social contact B.DE12 Observation&quot;:
  &quot;Type of contact or partner for partner services Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Social contact - HIV.B.DE12&quot;
/* End of Social contact B.DE12 */

/*
@dataElement: HIV.B.DE14 - Date/time of suspected exposure to HIV
@activity: HIV.B1 Determine reason for visit
@description: Date and time when the client had suspected exposure to HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date/time of suspected exposure to HIV B.DE14&quot;:
  [Observation: Concepts.&quot;Date/time of suspected exposure to HIV - HIV.B.DE14&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date/time of suspected exposure to HIV B.DE14 Value&quot;:
  &quot;Date/time of suspected exposure to HIV B.DE14&quot; O
  return O.value
/* End of Date/time of suspected exposure to HIV B.DE14 */

/*
@dataElement: HIV.B.DE15 - Testing entry point
@activity: HIV.B1 Determine reason for visit
@description: Whether testing is happening in the community or at a facility
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Testing entry point&quot;:
  exists &quot;Testing entry point Observation&quot;
define &quot;Testing entry point Observation&quot;:
  [Observation: Concepts.&quot;Testing entry point&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Testing entry point */

/*
@dataElement: HIV.B.DE16 - Community-level testing
@activity: HIV.B1 Determine reason for visit
@description: Testing is happening in the community, which includes mobile testing
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Community-level testing&quot;:
  exists &quot;Community-level testing Condition&quot;
    or exists &quot;Community-level testing Observation&quot;
define &quot;Community-level testing Condition&quot;:
  [Condition: Concepts.&quot;Community-level testing&quot;]
define &quot;Community-level testing Observation&quot;:
  &quot;Testing entry point Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Community-level testing&quot;
/* End of Community-level testing */

/*
@dataElement: HIV.B.DE17 - Facility-level testing
@activity: HIV.B1 Determine reason for visit
@description: Testing is happening at a facility
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Facility-level testing&quot;:
  exists &quot;Facility-level testing Condition&quot;
    or exists &quot;Facility-level testing Observation&quot;
define &quot;Facility-level testing Condition&quot;:
  [Condition: Concepts.&quot;Facility-level testing&quot;]
define &quot;Facility-level testing Observation&quot;:
  &quot;Testing entry point Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Facility-level testing&quot;
/* End of Facility-level testing */

/*
@dataElement: HIV.B.DE29 - Currently pregnant
@activity: HIV.B6 Capture or update client history
@description: Client is currently pregnant
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Currently pregnant B.DE29&quot;:
  exists &quot;Currently pregnant B.DE29 Observation&quot;
define &quot;Currently pregnant B.DE29 Observation&quot;:
  [Observation: Concepts.&quot;Currently pregnant - HIV.B.DE29&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Currently pregnant B.DE29 */

/*
@dataElement: HIV.B.DE32 - Breastfeeding
@activity: HIV.B6 Capture or update client history
@description: Infant is being breastfed by mother
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Breastfeeding B.DE32&quot;:
  exists &quot;Breastfeeding B.DE32 Observation&quot;
define &quot;Breastfeeding B.DE32 Observation&quot;:
  [Observation: Concepts.&quot;Breastfeeding - HIV.B.DE32&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Breastfeeding B.DE32 */

/*
@dataElement: HIV.B.DE33 - Partner HIV status reported
@activity: HIV.B6 Capture or update client history
@description: The HIV status of the client's partner.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Partner HIV status reported&quot;:
  exists &quot;Partner HIV status reported Observation&quot;
define &quot;Partner HIV status reported Observation&quot;:
  [Observation: Concepts.&quot;Partner HIV status reported&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Partner HIV status reported */

/*
@dataElement: HIV.B.DE34 - HIV-positive
@activity: HIV.B6 Capture or update client history
@description: Client's partner is HIV-positive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV-positive B.DE34&quot;:
  exists &quot;HIV-positive B.DE34 Condition&quot;
    or exists &quot;HIV-positive B.DE34 Observation&quot;
define &quot;HIV-positive B.DE34 Condition&quot;:
  [Condition: Concepts.&quot;HIV-positive&quot;]
define &quot;HIV-positive B.DE34 Observation&quot;:
  &quot;Partner HIV status reported Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV-positive&quot;
/* End of HIV-positive B.DE34 */

/*
@dataElement: HIV.B.DE35 - HIV-negative
@activity: HIV.B6 Capture or update client history
@description: Client's partner is HIV-negative
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV-negative B.DE35&quot;:
  exists &quot;HIV-negative B.DE35 Condition&quot;
    or exists &quot;HIV-negative B.DE35 Observation&quot;
define &quot;HIV-negative B.DE35 Condition&quot;:
  [Condition: Concepts.&quot;HIV-negative&quot;]
define &quot;HIV-negative B.DE35 Observation&quot;:
  &quot;Partner HIV status reported Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV-negative&quot;
/* End of HIV-negative B.DE35 */

/*
@dataElement: HIV.B.DE36 - Unknown
@activity: HIV.B6 Capture or update client history
@description: Don't know HIV status - client does not know partner's HIV status
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unknown B.DE36&quot;:
  exists &quot;Unknown B.DE36 Condition&quot;
    or exists &quot;Unknown B.DE36 Observation&quot;
define &quot;Unknown B.DE36 Condition&quot;:
  [Condition: Concepts.&quot;Unknown&quot;]
define &quot;Unknown B.DE36 Observation&quot;:
  &quot;Partner HIV status reported Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unknown&quot;
/* End of Unknown B.DE36 */

/*
 * Key populations (men who have sex with men, people living in prisons and other closed settings, people who inject drugs, sex workers, trans and gender diverse people)
 */

/*
@dataElement: HIV.B.DE49 - Key population member
@activity: HIV.B6 Capture or update client history
@description: Client is a member of a key population that has an increased risk of HIV
*/
define &quot;Is Key population member&quot;:
  exists &quot;Key population member type Observation&quot;
/* End of Key population member B.DE49 */

/*
@dataElement: HIV.B.DE50 - Key population member type
@activity: HIV.B6 Capture or update client history
@description: The type of key population that the client is included in
*/
define &quot;Key population member type Observation&quot;:
  [Observation: Concepts.&quot;Key population member - HIV.B.DE49&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
/* End of Key population member type B.DE50 */

/*
@dataElement: HIV.B.DE51 - Sex worker
@activity: HIV.B6 Capture or update client history
@description: Client is a sex worker
*/
define &quot;Sex worker&quot;:
  &quot;Key population member type Observation&quot; O
    where O.value ~ Concepts.&quot;Sex worker - HIV.B.DE51&quot;
/* End of Sex worker B.DE51 */

/*
@dataElement: HIV.B.DE52 - Men who have sex with men
@activity: HIV.B6 Capture or update client history
@description: Client is a man who has sex with men
*/
define &quot;Men who have sex with men&quot;:
  &quot;Key population member type Observation&quot; O
    where O.value ~ Concepts.&quot;Men who have sex with men&quot;
  
/* End of Men who have sex with men */

/*
@dataElement: HIV.B.DE53 - Trans and gender-diverse people
@activity: HIV.B6 Capture or update client history
@description: Client identifies as trans and gender-diverse
*/
define &quot;Trans and gender-diverse people&quot;:
  &quot;Key population member type Observation&quot; O
    where O.value ~ Concepts.&quot;Trans and gender-diverse people - HIV.B.DE53&quot;
  
/* End of Trans and gender-diverse people B.DE53 */

/*
@dataElement: HIV.B.DE54 - People who inject drugs
@activity: HIV.B6 Capture or update client history
@description: Client is a person who injects drugs
*/
define &quot;People who inject drugs&quot;:
  &quot;Key population member type Observation&quot; O
    where O.value ~ Concepts.&quot;People who inject drugs - HIV.B.DE54&quot;
  
/* End of People who inject drugs B.DE54 */

/*
@dataElement: HIV.B.DE55 - People living in prisons and other closed settings
@activity: HIV.B6 Capture or update client history
@description: Client lives in a prison or another closed setting
*/
define &quot;People living in prisons and other closed settings&quot;:
  &quot;Key population member type Observation&quot; O
    where O.value ~ Concepts.&quot;People living in prisons and other closed settings&quot;
/* End of People living in prisons and other closed settings */

/*
@dataElement: HIV.B.DE60 - Date HIV test results returned
@activity: HIV.B6 Capture or update client history
@description: Date HIV test result returned to client
*/
define &quot;Date HIV test results returned&quot;:
  &quot;HIV test&quot; O
  return O.issued
/* End of Date HIV test results returned */

/*
@dataElement: HIV.B.DE61 - HIV exposure type
@activity: HIV.B6 Capture or update client history
@description: Ways in which the client was exposed to HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV exposure type&quot;:
  exists &quot;HIV exposure type Observation&quot;
define &quot;HIV exposure type Observation&quot;:
  [Observation: Concepts.&quot;HIV exposure type&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HIV exposure type */

/*
@dataElement: HIV.B.DE62 - Occupational
@activity: HIV.B6 Capture or update client history
@description: Occupational exposure to HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Occupational&quot;:
  exists &quot;Occupational Condition&quot;
    or exists &quot;Occupational Observation&quot;
define &quot;Occupational Condition&quot;:
  [Condition: Concepts.&quot;Occupational&quot;]
define &quot;Occupational Observation&quot;:
  &quot;HIV exposure type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Occupational&quot;
/* End of Occupational */

/*
@dataElement: HIV.B.DE63 - Non-occupational violent
@activity: HIV.B6 Capture or update client history
@description: Non-occupational violent exposure to HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Non-occupational violent&quot;:
  exists &quot;Non-occupational violent Condition&quot;
    or exists &quot;Non-occupational violent Observation&quot;
define &quot;Non-occupational violent Condition&quot;:
  [Condition: Concepts.&quot;Non-occupational violent&quot;]
define &quot;Non-occupational violent Observation&quot;:
  &quot;HIV exposure type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Non-occupational violent&quot;
/* End of Non-occupational violent */

/*
@dataElement: HIV.B.DE64 - Non-occupational consensual sex
@activity: HIV.B6 Capture or update client history
@description: Exposure to HIV through non-occupational consensual sex
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Non-occupational consensual sex&quot;:
  exists &quot;Non-occupational consensual sex Condition&quot;
    or exists &quot;Non-occupational consensual sex Observation&quot;
define &quot;Non-occupational consensual sex Condition&quot;:
  [Condition: Concepts.&quot;Non-occupational consensual sex&quot;]
define &quot;Non-occupational consensual sex Observation&quot;:
  &quot;HIV exposure type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Non-occupational consensual sex&quot;
/* End of Non-occupational consensual sex */

/*
@dataElement: HIV.B.DE65 - Date informed of HIV-positive diagnosis
@activity: HIV.B6 Capture or update client history
@description: The date on which the client was diagnosed with HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date informed of HIV-positive diagnosis&quot;:
  [Observation: Concepts.&quot;Date informed of HIV-positive diagnosis&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date informed of HIV-positive diagnosis Value&quot;:
  &quot;Date informed of HIV-positive diagnosis&quot; O
  return O.value
/* End of Date informed of HIV-positive diagnosis */

/*
@activity: HIV.B7 Test for HIV using testing algorithm
*/
define &quot;HIV test&quot;:
  [Observation: Concepts.&quot;HIV test type - HIV.B.DE81 Choices&quot;] O
  where O.status in { 'final', 'amended', 'corrected' }

define &quot;Non-Self HIV test&quot;:
  &quot;HIV test&quot; O
  where O.code !~ Concepts.&quot;HIV self-test&quot;

/*
@dataElement: HIV.B.DE71 - HIV diagnosis date
@activity: HIV.B8 Provide post-test counselling
@description: Date diagnosis was returned to client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV diagnosis date&quot;:
  [Observation: Concepts.&quot;HIV diagnosis date&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;HIV diagnosis date Value&quot;:
  &quot;HIV diagnosis date&quot; O
  return O.value
/* End of HIV diagnosis date */

/*
@dataElement: HIV.B.DE72 - ART start date
@activity: HIV.B8 Provide post-test counselling
@description: The date on which the client started or restarted antiretroviral therapy (ART)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;ART start date B.DE72&quot;:
  [Observation: Concepts.&quot;ART start date - HIV.B.DE72&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;ART start date B.DE72 Value&quot;:
  &quot;ART start date B.DE72&quot; O
  return O.value
/* End of ART start date B.DE72 */

/*
@dataElement: HIV.B.DE80 - HIV test conducted
@activity: HIV.B7 Test for HIV using testing algorithm
@description: An HIV test was performed on the client during the visit
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV test conducted&quot;:
  exists &quot;HIV test conducted Observation&quot;
define &quot;HIV test conducted Observation&quot;:
  [Observation: Concepts.&quot;HIV test conducted&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of HIV test conducted */

/*
@dataElement: HIV.B.DE81 - HIV test type
@activity: HIV.B7 Test for HIV using testing algorithm
@description: Type of HIV test
*/
define &quot;HIV test type B.DE81&quot;:
  [Observation: Concepts.&quot;HIV test type - HIV.B.DE81&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;HIV test type B.DE81 Value&quot;:
  &quot;HIV test type B.DE81&quot; O
  return O.value
/* End of HIV test type B.DE81 */

/*
@dataElement: HIV.B.DE82 - Rapid diagnostic test for HIV
@activity: HIV.B7 Test for HIV using testing algorithm
@description: Antibody test for HIV performed with a rapid diagnostic
*/

define &quot;Rapid diagnostic test for HIV B.DE82&quot;:
  &quot;HIV test type B.DE81&quot; O
      where O.value ~ Concepts.&quot;Rapid diagnostic test for HIV - HIV.B.DE82&quot;
/* End of Rapid diagnostic test for HIV B.DE82 */

/*
@dataElement: HIV.B.DE83 - Enzyme immunoassay for HIV
@activity: HIV.B7 Test for HIV using testing algorithm
@description: Antibody test for HIV performed with an enzyme immunoassay
*/

define &quot;Enzyme immunoassay for HIV B.DE83&quot;:
  &quot;HIV test type B.DE81&quot; O
      where O.value ~ Concepts.&quot;Enzyme immunoassay for HIV - HIV.B.DE83&quot;
/* End of Enzyme immunoassay for HIV B.DE83 */

/*
@dataElement: HIV.B.DE84 - Nucleic acid test for HIV
@activity: HIV.B7 Test for HIV using testing algorithm
@description: Virological test, which includes testing for early infant diagnosis
*/
define &quot;Nucleic acid test for HIV B.DE84&quot;:
  &quot;HIV test type B.DE81&quot; O
      where O.value ~ Concepts.&quot;Nucleic acid test for HIV - HIV.B.DE84&quot;
/* End of Nucleic acid test for HIV B.DE84 */

/*
@dataElement: HIV.B.DE85 - Dual HIV/syphilis rapid diagnostic test
@activity: HIV.B7 Test for HIV using testing algorithm
@description: Antibody test for HIV and syphilis performed with a rapid diagnostic
*/

define &quot;Dual HIV/syphilis rapid diagnostic test B.DE85&quot;:
  &quot;HIV test type B.DE81&quot; O
      where O.value ~ Concepts.&quot;Dual HIV/syphilis rapid diagnostic test - HIV.B.DE85&quot;
/* End of Dual HIV/syphilis rapid diagnostic test B.DE85 */

/*
@dataElement: HIV.B.DE86 - HIV self-test
@activity: HIV.B7 Test for HIV using testing algorithm
@description: Antibody test for HIV performed by self-tester using a rapid diagnostic
*/

define &quot;HIV self-test&quot;:
  &quot;HIV test type B.DE81&quot; O
      where O.value ~ Concepts.&quot;HIV self-test&quot;
/* End of HIV self-test */

/*
@dataElement: HIV.B.DE88 - Assay number in testing strategy
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The number of the assay (test kit) in the HIV testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assay number in testing strategy B.DE88&quot;:
  exists &quot;Assay number in testing strategy B.DE88 Observation&quot;
define &quot;Assay number in testing strategy B.DE88 Observation&quot;:
  [Observation: Concepts.&quot;Assay number in testing strategy - HIV.B.DE88&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Assay number in testing strategy B.DE88 */

/*
@dataElement: HIV.B.DE89 - Assay 0
@activity: HIV.B7 Test for HIV using testing algorithm
@description: A community outreach test-for-triage or self-test which is not included in the HIV testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assay 0 B.DE89&quot;:
  exists &quot;Assay 0 B.DE89 Condition&quot;
    or exists &quot;Assay 0 B.DE89 Observation&quot;
define &quot;Assay 0 B.DE89 Condition&quot;:
  [Condition: Concepts.&quot;Assay 0 - HIV.B.DE89&quot;]
define &quot;Assay 0 B.DE89 Observation&quot;:
  &quot;Assay number in testing strategy B.DE88 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Assay 0 - HIV.B.DE89&quot;
/* End of Assay 0 B.DE89 */

/*
@dataElement: HIV.B.DE90 - Assay 1
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The first test in the HIV testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assay 1 B.DE90&quot;:
  exists &quot;Assay 1 B.DE90 Condition&quot;
    or exists &quot;Assay 1 B.DE90 Observation&quot;
define &quot;Assay 1 B.DE90 Condition&quot;:
  [Condition: Concepts.&quot;Assay 1 - HIV.B.DE90&quot;]
define &quot;Assay 1 B.DE90 Observation&quot;:
  &quot;Assay number in testing strategy B.DE88 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Assay 1 - HIV.B.DE90&quot;
/* End of Assay 1 B.DE90 */

/*
@dataElement: HIV.B.DE91 - Assay 2
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The second test in the HIV testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assay 2 B.DE91&quot;:
  exists &quot;Assay 2 B.DE91 Condition&quot;
    or exists &quot;Assay 2 B.DE91 Observation&quot;
define &quot;Assay 2 B.DE91 Condition&quot;:
  [Condition: Concepts.&quot;Assay 2 - HIV.B.DE91&quot;]
define &quot;Assay 2 B.DE91 Observation&quot;:
  &quot;Assay number in testing strategy B.DE88 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Assay 2 - HIV.B.DE91&quot;
/* End of Assay 2 B.DE91 */

/*
@dataElement: HIV.B.DE92 - Assay 3
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The third test in the HIV testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assay 3 B.DE92&quot;:
  exists &quot;Assay 3 B.DE92 Condition&quot;
    or exists &quot;Assay 3 B.DE92 Observation&quot;
define &quot;Assay 3 B.DE92 Condition&quot;:
  [Condition: Concepts.&quot;Assay 3 - HIV.B.DE92&quot;]
define &quot;Assay 3 B.DE92 Observation&quot;:
  &quot;Assay number in testing strategy B.DE88 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Assay 3 - HIV.B.DE92&quot;
/* End of Assay 3 B.DE92 */

/*
@dataElement: HIV.B.DE93 - Assay 1 repeated
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The first test in the HIV testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assay 1 repeated B.DE93&quot;:
  exists &quot;Assay 1 repeated B.DE93 Condition&quot;
    or exists &quot;Assay 1 repeated B.DE93 Observation&quot;
define &quot;Assay 1 repeated B.DE93 Condition&quot;:
  [Condition: Concepts.&quot;Assay 1 repeated - HIV.B.DE93&quot;]
define &quot;Assay 1 repeated B.DE93 Observation&quot;:
  &quot;Assay number in testing strategy B.DE88 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Assay 1 repeated - HIV.B.DE93&quot;
/* End of Assay 1 repeated B.DE93 */

/*
@dataElement: HIV.B.DE94 - Test result of HIV assay 1
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the first HIV assay in the testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Test result of HIV assay 1 B.DE94&quot;:
  exists &quot;Test result of HIV assay 1 B.DE94 Observation&quot;
define &quot;Test result of HIV assay 1 B.DE94 Observation&quot;:
  [Observation: Concepts.&quot;Test result of HIV assay 1 - HIV.B.DE94&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Test result of HIV assay 1 B.DE94 */

/*
@dataElement: HIV.B.DE95 - Reactive
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reactive B.DE95&quot;:
  exists &quot;Reactive B.DE95 Condition&quot;
    or exists &quot;Reactive B.DE95 Observation&quot;
define &quot;Reactive B.DE95 Condition&quot;:
  [Condition: Concepts.&quot;Reactive - HIV.B.DE95&quot;]
define &quot;Reactive B.DE95 Observation&quot;:
  &quot;Test result of HIV assay 1 B.DE94 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Reactive - HIV.B.DE95&quot;
/* End of Reactive B.DE95 */

/*
@dataElement: HIV.B.DE96 - Non-reactive
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was non-reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Non-reactive B.DE96&quot;:
  exists &quot;Non-reactive B.DE96 Condition&quot;
    or exists &quot;Non-reactive B.DE96 Observation&quot;
define &quot;Non-reactive B.DE96 Condition&quot;:
  [Condition: Concepts.&quot;Non-reactive - HIV.B.DE96&quot;]
define &quot;Non-reactive B.DE96 Observation&quot;:
  &quot;Test result of HIV assay 1 B.DE94 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Non-reactive - HIV.B.DE96&quot;
/* End of Non-reactive B.DE96 */

/*
@dataElement: HIV.B.DE97 - Invalid
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was invalid
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invalid B.DE97&quot;:
  exists &quot;Invalid B.DE97 Condition&quot;
    or exists &quot;Invalid B.DE97 Observation&quot;
define &quot;Invalid B.DE97 Condition&quot;:
  [Condition: Concepts.&quot;Invalid - HIV.B.DE97&quot;]
define &quot;Invalid B.DE97 Observation&quot;:
  &quot;Test result of HIV assay 1 B.DE94 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Invalid - HIV.B.DE97&quot;
/* End of Invalid B.DE97 */

/*
@dataElement: HIV.B.DE98 - Test result of HIV assay 2
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the second HIV assay in the testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Test result of HIV assay 2 B.DE98&quot;:
  exists &quot;Test result of HIV assay 2 B.DE98 Observation&quot;
define &quot;Test result of HIV assay 2 B.DE98 Observation&quot;:
  [Observation: Concepts.&quot;Test result of HIV assay 2 - HIV.B.DE98&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Test result of HIV assay 2 B.DE98 */

/*
@dataElement: HIV.B.DE99 - Reactive
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reactive B.DE99&quot;:
  exists &quot;Reactive B.DE99 Condition&quot;
    or exists &quot;Reactive B.DE99 Observation&quot;
define &quot;Reactive B.DE99 Condition&quot;:
  [Condition: Concepts.&quot;Reactive - HIV.B.DE99&quot;]
define &quot;Reactive B.DE99 Observation&quot;:
  &quot;Test result of HIV assay 2 B.DE98 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Reactive - HIV.B.DE99&quot;
/* End of Reactive B.DE99 */

/*
@dataElement: HIV.B.DE100 - Non-reactive
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was non-reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Non-reactive B.DE100&quot;:
  exists &quot;Non-reactive B.DE100 Condition&quot;
    or exists &quot;Non-reactive B.DE100 Observation&quot;
define &quot;Non-reactive B.DE100 Condition&quot;:
  [Condition: Concepts.&quot;Non-reactive - HIV.B.DE100&quot;]
define &quot;Non-reactive B.DE100 Observation&quot;:
  &quot;Test result of HIV assay 2 B.DE98 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Non-reactive - HIV.B.DE100&quot;
/* End of Non-reactive B.DE100 */

/*
@dataElement: HIV.B.DE101 - Invalid
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was invalid
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invalid B.DE101&quot;:
  exists &quot;Invalid B.DE101 Condition&quot;
    or exists &quot;Invalid B.DE101 Observation&quot;
define &quot;Invalid B.DE101 Condition&quot;:
  [Condition: Concepts.&quot;Invalid - HIV.B.DE101&quot;]
define &quot;Invalid B.DE101 Observation&quot;:
  &quot;Test result of HIV assay 2 B.DE98 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Invalid - HIV.B.DE101&quot;
/* End of Invalid B.DE101 */

/*
@dataElement: HIV.B.DE102 - Test result of HIV assay 3
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the third HIV assay in the testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Test result of HIV assay 3 B.DE102&quot;:
  exists &quot;Test result of HIV assay 3 B.DE102 Observation&quot;
define &quot;Test result of HIV assay 3 B.DE102 Observation&quot;:
  [Observation: Concepts.&quot;Test result of HIV assay 3 - HIV.B.DE102&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Test result of HIV assay 3 B.DE102 */

/*
@dataElement: HIV.B.DE103 - Reactive
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reactive B.DE103&quot;:
  exists &quot;Reactive B.DE103 Condition&quot;
    or exists &quot;Reactive B.DE103 Observation&quot;
define &quot;Reactive B.DE103 Condition&quot;:
  [Condition: Concepts.&quot;Reactive - HIV.B.DE103&quot;]
define &quot;Reactive B.DE103 Observation&quot;:
  &quot;Test result of HIV assay 3 B.DE102 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Reactive - HIV.B.DE103&quot;
/* End of Reactive B.DE103 */

/*
@dataElement: HIV.B.DE104 - Non-reactive
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was non-reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Non-reactive B.DE104&quot;:
  exists &quot;Non-reactive B.DE104 Condition&quot;
    or exists &quot;Non-reactive B.DE104 Observation&quot;
define &quot;Non-reactive B.DE104 Condition&quot;:
  [Condition: Concepts.&quot;Non-reactive - HIV.B.DE104&quot;]
define &quot;Non-reactive B.DE104 Observation&quot;:
  &quot;Test result of HIV assay 3 B.DE102 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Non-reactive - HIV.B.DE104&quot;
/* End of Non-reactive B.DE104 */

/*
@dataElement: HIV.B.DE105 - Invalid
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was invalid
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invalid B.DE105&quot;:
  exists &quot;Invalid B.DE105 Condition&quot;
    or exists &quot;Invalid B.DE105 Observation&quot;
define &quot;Invalid B.DE105 Condition&quot;:
  [Condition: Concepts.&quot;Invalid - HIV.B.DE105&quot;]
define &quot;Invalid B.DE105 Observation&quot;:
  &quot;Test result of HIV assay 3 B.DE102 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Invalid - HIV.B.DE105&quot;
/* End of Invalid B.DE105 */

/*
@dataElement: HIV.B.DE106 - Test result of HIV assay 1 repeated
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the repeated first HIV assay in the testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Test result of HIV assay 1 repeated B.DE106&quot;:
  exists &quot;Test result of HIV assay 1 repeated B.DE106 Observation&quot;
define &quot;Test result of HIV assay 1 repeated B.DE106 Observation&quot;:
  [Observation: Concepts.&quot;Test result of HIV assay 1 repeated - HIV.B.DE106&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Test result of HIV assay 1 repeated B.DE106 */

/*
@dataElement: HIV.B.DE107 - Reactive
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reactive B.DE107&quot;:
  exists &quot;Reactive B.DE107 Condition&quot;
    or exists &quot;Reactive B.DE107 Observation&quot;
define &quot;Reactive B.DE107 Condition&quot;:
  [Condition: Concepts.&quot;Reactive - HIV.B.DE107&quot;]
define &quot;Reactive B.DE107 Observation&quot;:
  &quot;Test result of HIV assay 1 repeated B.DE106 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Reactive - HIV.B.DE107&quot;
/* End of Reactive B.DE107 */

/*
@dataElement: HIV.B.DE108 - Non-reactive
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was non-reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Non-reactive B.DE108&quot;:
  exists &quot;Non-reactive B.DE108 Condition&quot;
    or exists &quot;Non-reactive B.DE108 Observation&quot;
define &quot;Non-reactive B.DE108 Condition&quot;:
  [Condition: Concepts.&quot;Non-reactive - HIV.B.DE108&quot;]
define &quot;Non-reactive B.DE108 Observation&quot;:
  &quot;Test result of HIV assay 1 repeated B.DE106 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Non-reactive - HIV.B.DE108&quot;
/* End of Non-reactive B.DE108 */

/*
@dataElement: HIV.B.DE109 - Invalid
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was invalid
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invalid B.DE109&quot;:
  exists &quot;Invalid B.DE109 Condition&quot;
    or exists &quot;Invalid B.DE109 Observation&quot;
define &quot;Invalid B.DE109 Condition&quot;:
  [Condition: Concepts.&quot;Invalid - HIV.B.DE109&quot;]
define &quot;Invalid B.DE109 Observation&quot;:
  &quot;Test result of HIV assay 1 repeated B.DE106 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Invalid - HIV.B.DE109&quot;
/* End of Invalid B.DE109 */

/*
@dataElement: HIV.B.DE110 - HIV test date
@activity: HIV.B7 Test for HIV using testing algorithm
@description: Date of the HIV test
*/
define &quot;HIV test date B.DE110&quot;:
  &quot;HIV test&quot; O
  return start of O.effective.toInterval()
/* End of HIV test date B.DE110 */

/*
@dataElement: HIV.B.DE111 - HIV test result
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result from HIV testing after applying the testing algorithm
*/
// Same as test - see profile
define &quot;HIV test result Observation&quot;:
  &quot;HIV test&quot; O

define &quot;HIV test result Value&quot;:
  &quot;HIV test&quot; O
  return O.value

// Moved and Redefined in HIE
// define &quot;HIV test resulted&quot;:
//   [Observation] O
//     where O.status in {'final', 'amended'}
//     and O.code ~ Concepts.&quot;Rapid diagnostic test for HIV - HIV.B.DE82&quot;

/* End of HIV test result B.DE111 */

/*
@dataElement: HIV.B.DE112 - HIV-positive
@activity: HIV.B7 Test for HIV using testing algorithm
@description: Test result is HIV-positive
*/
define &quot;HIV-positive test result&quot;:
  &quot;HIV test result Observation&quot; O
    where O.value ~ Concepts.&quot;HIV-positive - HIV.B.DE112&quot;
/* End of HIV-positive B.DE112 */

/*
@dataElement: HIV.B.DE113 - HIV-negative
@activity: HIV.B7 Test for HIV using testing algorithm
@description: Test result is HIV-negative
*/
define &quot;HIV-negative test result&quot;:
  &quot;HIV test result Observation&quot; O
    where O.value ~ Concepts.&quot;HIV-negative - HIV.B.DE113&quot;
/* End of HIV-negative B.DE113 */

/*
@dataElement: HIV.B.DE114 - HIV-inconclusive
@activity: HIV.B7 Test for HIV using testing algorithm
@description: Test result is HIV-inconclusive
*/
define &quot;HIV-inconclusive test result&quot;:
  &quot;HIV test result Observation&quot; O
    where O.value ~ Concepts.&quot;HIV-inconclusive&quot;
/* End of HIV-inconclusive */

/*
@dataElement: HIV.B.DE115 - HIV status
@activity: HIV.B7 Test for HIV using testing algorithm
@description: HIV status reported after applying the national HIV testing algorithm. No single HIV test can provide an HIV-positive diagnosis.
*/
define &quot;HIV Status Observation&quot;:
  [Observation: Concepts.&quot;HIV status&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }

/*
@dataElement: HIV.B.DE116 - HIV-positive
@activity: HIV.B7 Test for HIV using testing algorithm
@description: Client is HIV-positive
*/
define &quot;Date HIV Status Positive&quot;:
  Min(&quot;HIV Status Positive Observation Date&quot; union &quot;HIV Status Positive Condition Date&quot;)

define &quot;HIV Status Positive Observation&quot;:
&quot;HIV Status Observation&quot; O
    where O.value ~ Concepts.&quot;HIV-positive - HIV.B.DE116&quot;
      sort by start of effective.toInterval()

define &quot;HIV Status Positive Observation Date&quot;:
  &quot;HIV Status Positive Observation&quot; O
  return start of O.effective.toInterval()

 
define &quot;HIV Status Positive Condition&quot;:
  [Condition: Concepts.&quot;HIV-positive - HIV.B.DE116&quot;] C
    where C.clinicalStatus ~ ConceptsCustom.&quot;active&quot;
      and exists(C.category CC where CC ~ ConceptsCustom.&quot;encounter-diagnosis&quot;)
    sort by start of onset.toInterval()

define &quot;HIV Status Positive Condition Date&quot;:
  &quot;HIV Status Positive Condition&quot; C
  return start of C.onset.toInterval()
  
define &quot;HIV Status Negative Observation&quot;:
  &quot;HIV Status Observation&quot; O
    where O.value ~ Concepts.&quot;HIV-negative - HIV.B.DE117&quot;
    sort by start of effective.toInterval()

define &quot;HIV Status Negative Condition&quot;:
  [Condition: Concepts.&quot;HIV-negative - HIV.B.DE117&quot;] C
  where C.clinicalStatus ~ ConceptsCustom.&quot;active&quot;
  and exists(C.category CC where CC ~ ConceptsCustom.&quot;encounter-diagnosis&quot;)
  sort by start of onset.toInterval()
/* End of HIV status */

/*
@dataElement: HIV.B.DE121 - Probable route of transmission
@activity: HIV.B8 Provide post-test counselling
@description: Probable route(s) of transmission of HIV to client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Probable route of transmission&quot;:
  exists &quot;Probable route of transmission Observation&quot;
define &quot;Probable route of transmission Observation&quot;:
  [Observation: Concepts.&quot;Probable route of transmission&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Probable route of transmission */

/*
@dataElement: HIV.B.DE122 - Heterosexual sex
@activity: HIV.B8 Provide post-test counselling
@description: Probable route of HIV transmission was through heterosexual sex
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Heterosexual sex&quot;:
  exists &quot;Heterosexual sex Condition&quot;
    or exists &quot;Heterosexual sex Observation&quot;
define &quot;Heterosexual sex Condition&quot;:
  [Condition: Concepts.&quot;Heterosexual sex&quot;]
define &quot;Heterosexual sex Observation&quot;:
  &quot;Probable route of transmission Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Heterosexual sex&quot;
/* End of Heterosexual sex */

/*
@dataElement: HIV.B.DE123 - Sex between men
@activity: HIV.B8 Provide post-test counselling
@description: Probable route of HIV transmission was through sex between men
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sex between men&quot;:
  exists &quot;Sex between men Condition&quot;
    or exists &quot;Sex between men Observation&quot;
define &quot;Sex between men Condition&quot;:
  [Condition: Concepts.&quot;Sex between men&quot;]
define &quot;Sex between men Observation&quot;:
  &quot;Probable route of transmission Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Sex between men&quot;
/* End of Sex between men */

/*
@dataElement: HIV.B.DE124 - Unprotected intercourse during sex work
@activity: HIV.B8 Provide post-test counselling
@description: Probable route of HIV transmission was through unprotected intercourse during sex work
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unprotected intercourse during sex work&quot;:
  exists &quot;Unprotected intercourse during sex work Condition&quot;
    or exists &quot;Unprotected intercourse during sex work Observation&quot;
define &quot;Unprotected intercourse during sex work Condition&quot;:
  [Condition: Concepts.&quot;Unprotected intercourse during sex work&quot;]
define &quot;Unprotected intercourse during sex work Observation&quot;:
  &quot;Probable route of transmission Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unprotected intercourse during sex work&quot;
/* End of Unprotected intercourse during sex work */

/*
@dataElement: HIV.B.DE125 - Injecting drug use with unsterile equipment
@activity: HIV.B8 Provide post-test counselling
@description: Probable route of HIV transmission was through injecting drug use with unsterile equipment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Injecting drug use with unsterile equipment&quot;:
  exists &quot;Injecting drug use with unsterile equipment Condition&quot;
    or exists &quot;Injecting drug use with unsterile equipment Observation&quot;
define &quot;Injecting drug use with unsterile equipment Condition&quot;:
  [Condition: Concepts.&quot;Injecting drug use with unsterile equipment&quot;]
define &quot;Injecting drug use with unsterile equipment Observation&quot;:
  &quot;Probable route of transmission Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Injecting drug use with unsterile equipment&quot;
/* End of Injecting drug use with unsterile equipment */

/*
@dataElement: HIV.B.DE126 - Nosocomial
@activity: HIV.B8 Provide post-test counselling
@description: Probable route of HIV transmission was nosocomial
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Nosocomial&quot;:
  exists &quot;Nosocomial Condition&quot;
    or exists &quot;Nosocomial Observation&quot;
define &quot;Nosocomial Condition&quot;:
  [Condition: Concepts.&quot;Nosocomial&quot;]
define &quot;Nosocomial Observation&quot;:
  &quot;Probable route of transmission Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Nosocomial&quot;
/* End of Nosocomial */

/*
@dataElement: HIV.B.DE127 - Vertical
@activity: HIV.B8 Provide post-test counselling
@description: Probable route of HIV transmission to an infant was during pregnancy, labour, delivery and breastfeeding (vertical transmission)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Vertical&quot;:
  exists &quot;Vertical Condition&quot;
    or exists &quot;Vertical Observation&quot;
define &quot;Vertical Condition&quot;:
  [Condition: Concepts.&quot;Vertical&quot;]
define &quot;Vertical Observation&quot;:
  &quot;Probable route of transmission Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Vertical&quot;
/* End of Vertical */

/*
@dataElement: HIV.B.DE128 - Other
@activity: HIV.B8 Provide post-test counselling
@description: Probable route of HIV transmission was other and may include needle accidents, blood transfusion, blood products or organ/tissue donations, tattoos, piercings, circumcision, or acupuncture.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other B.DE128&quot;:
  exists &quot;Other B.DE128 Condition&quot;
    or exists &quot;Other B.DE128 Observation&quot;
define &quot;Other B.DE128 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.B.DE128&quot;]
define &quot;Other B.DE128 Observation&quot;:
  &quot;Probable route of transmission Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.B.DE128&quot;
/* End of Other B.DE128 */

/*
@dataElement: HIV.B.DE141 - Partner virally suppressed on ART
@activity: HIV.B6 Capture or update client history
@description: ART and virally suppression status of a partner of the client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Partner virally suppressed on ART&quot;:
  exists &quot;Partner virally suppressed on ART Observation&quot;
define &quot;Partner virally suppressed on ART Observation&quot;:
  [Observation: Concepts.&quot;Partner virally suppressed on ART&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Partner virally suppressed on ART */

/*
@dataElement: HIV.B.DE142 - Counselling provided
@activity: HIV.B8 Provide post-test counselling
@description: Whether counselling was provided to a client during the visit
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Counselling provided&quot;:
  exists &quot;Counselling provided Observation&quot;
define &quot;Counselling provided Observation&quot;:
  [Observation: Concepts.&quot;Counselling provided&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Counselling provided */

/*
@dataElement: HIV.B.DE143 - HIV-positive counselling conducted
@activity: HIV.B8 Provide post-test counselling
@description: Whether counselling was provided to a client who has been diagnosed with HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV-positive counselling conducted&quot;:
  exists &quot;HIV-positive counselling conducted Condition&quot;
    or exists &quot;HIV-positive counselling conducted Observation&quot;
define &quot;HIV-positive counselling conducted Condition&quot;:
  [Condition: Concepts.&quot;HIV-positive counselling conducted&quot;]
define &quot;HIV-positive counselling conducted Observation&quot;:
  &quot;Counselling provided Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV-positive counselling conducted&quot;
/* End of HIV-positive counselling conducted */

/*
@dataElement: HIV.B.DE144 - Hepatitis B positive counselling conducted
@activity: HIV.B8 Provide post-test counselling
@description: Whether counselling was provided to a client who has been diagnosed with hepatitis B
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Hepatitis B positive counselling conducted&quot;:
  exists &quot;Hepatitis B positive counselling conducted Condition&quot;
    or exists &quot;Hepatitis B positive counselling conducted Observation&quot;
define &quot;Hepatitis B positive counselling conducted Condition&quot;:
  [Condition: Concepts.&quot;Hepatitis B positive counselling conducted&quot;]
define &quot;Hepatitis B positive counselling conducted Observation&quot;:
  &quot;Counselling provided Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Hepatitis B positive counselling conducted&quot;
/* End of Hepatitis B positive counselling conducted */

/*
@dataElement: HIV.B.DE145 - Hepatitis C positive counselling conducted
@activity: HIV.B8 Provide post-test counselling
@description: Whether counselling was provided to a client who has been diagnosed with hepatitis C
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Hepatitis C positive counselling conducted&quot;:
  exists &quot;Hepatitis C positive counselling conducted Condition&quot;
    or exists &quot;Hepatitis C positive counselling conducted Observation&quot;
define &quot;Hepatitis C positive counselling conducted Condition&quot;:
  [Condition: Concepts.&quot;Hepatitis C positive counselling conducted&quot;]
define &quot;Hepatitis C positive counselling conducted Observation&quot;:
  &quot;Counselling provided Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Hepatitis C positive counselling conducted&quot;
/* End of Hepatitis C positive counselling conducted */

/*
@dataElement: HIV.B.DE146 - Syphilis counselling, treatment and further testing
@activity: HIV.B8 Provide post-test counselling
@description: Whether counselling and treatment was provided to a client who has been diagnosed with syphilis. Additional testing (RPR test) recommended.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Syphilis counselling, treatment and further testing&quot;:
  exists &quot;Syphilis counselling, treatment and further testing Condition&quot;
    or exists &quot;Syphilis counselling, treatment and further testing Observation&quot;
define &quot;Syphilis counselling, treatment and further testing Condition&quot;:
  [Condition: Concepts.&quot;Syphilis counselling, treatment and further testing&quot;]
define &quot;Syphilis counselling, treatment and further testing Observation&quot;:
  &quot;Counselling provided Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Syphilis counselling, treatment and further testing&quot;
/* End of Syphilis counselling, treatment and further testing */

/*
@dataElement: HIV.B.DE147 - Linked to enrolment in care and ART initiation
@activity: HIV.B8 Provide post-test counselling
@description: Linkage made from HIV testing to enrolment in care following an HIV diagnosis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Linked to enrolment in care and ART initiation&quot;:
  exists &quot;Linked to enrolment in care and ART initiation Condition&quot;
    or exists &quot;Linked to enrolment in care and ART initiation Observation&quot;
define &quot;Linked to enrolment in care and ART initiation Condition&quot;:
  [Condition: Concepts.&quot;Linked to enrolment in care and ART initiation&quot;]
define &quot;Linked to enrolment in care and ART initiation Observation&quot;:
  &quot;Counselling provided Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Linked to enrolment in care and ART initiation&quot;
/* End of Linked to enrolment in care and ART initiation */

/*
@dataElement: HIV.B.DE148 - VMMC counselling provided
@activity: HIV.B8 Provide post-test counselling
@description: Whether counselling for voluntary medical male circumcision (VMMC) was provided following an HIV-negative test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;VMMC counselling provided&quot;:
  exists &quot;VMMC counselling provided Condition&quot;
    or exists &quot;VMMC counselling provided Observation&quot;
define &quot;VMMC counselling provided Condition&quot;:
  [Condition: Concepts.&quot;VMMC counselling provided&quot;]
define &quot;VMMC counselling provided Observation&quot;:
  &quot;Counselling provided Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;VMMC counselling provided&quot;
/* End of VMMC counselling provided */

/*
@dataElement: HIV.B.DE149 - Prevention services offered and referrals
@activity: HIV.B9 Determine recommended services
@description: Offer or refer to prevention services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Prevention services offered and referrals B.DE149&quot;:
  exists &quot;Prevention services offered and referrals B.DE149 Observation&quot;
define &quot;Prevention services offered and referrals B.DE149 Observation&quot;:
  [Observation: Concepts.&quot;Prevention services offered and referrals - HIV.B.DE149&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Prevention services offered and referrals B.DE149 */

/*
@dataElement: HIV.B.DE150 - Offer male and female condoms and condom-compatible lubricants
@activity: HIV.B9 Determine recommended services
@description: Offer male and female condoms and condom-compatible lubricants
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Offer male and female condoms and condom-compatible lubricants B.DE150&quot;:
  exists &quot;Offer male and female condoms and condom-compatible lubricants B.DE150 Condition&quot;
    or exists &quot;Offer male and female condoms and condom-compatible lubricants B.DE150 Observation&quot;
define &quot;Offer male and female condoms and condom-compatible lubricants B.DE150 Condition&quot;:
  [Condition: Concepts.&quot;Offer male and female condoms and condom-compatible lubricants - HIV.B.DE150&quot;]
define &quot;Offer male and female condoms and condom-compatible lubricants B.DE150 Observation&quot;:
  &quot;Prevention services offered and referrals B.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Offer male and female condoms and condom-compatible lubricants - HIV.B.DE150&quot;
/* End of Offer male and female condoms and condom-compatible lubricants B.DE150 */

/*
@dataElement: HIV.B.DE151 - Offer pre-exposure prophylaxis PrEP for people at elevated risk for HIV acquisition
@activity: HIV.B9 Determine recommended services
@description: Offer pre-exposure prophylaxis (PrEP) to people with substantial ongoing risk of HIV infection
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Offer pre-exposure prophylaxis PrEP for people at elevated risk for HIV acquisition&quot;:
  exists &quot;Offer pre-exposure prophylaxis PrEP for people at elevated risk for HIV acquisition Condition&quot;
    or exists &quot;Offer pre-exposure prophylaxis PrEP for people at elevated risk for HIV acquisition Observation&quot;
define &quot;Offer pre-exposure prophylaxis PrEP for people at elevated risk for HIV acquisition Condition&quot;:
  [Condition: Concepts.&quot;Offer pre-exposure prophylaxis PrEP for people at elevated risk for HIV acquisition&quot;]
define &quot;Offer pre-exposure prophylaxis PrEP for people at elevated risk for HIV acquisition Observation&quot;:
  &quot;Prevention services offered and referrals B.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Offer pre-exposure prophylaxis PrEP for people at elevated risk for HIV acquisition&quot;
/* End of Offer pre-exposure prophylaxis PrEP for people at elevated risk for HIV acquisition */

/*
@dataElement: HIV.B.DE152 - Offer post-exposure prophylaxis PEP following suspected exposure
@activity: HIV.B9 Determine recommended services
@description: Offer or refer client for PEP following suspected exposure
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Offer post-exposure prophylaxis PEP following suspected exposure&quot;:
  exists &quot;Offer post-exposure prophylaxis PEP following suspected exposure Condition&quot;
    or exists &quot;Offer post-exposure prophylaxis PEP following suspected exposure Observation&quot;
define &quot;Offer post-exposure prophylaxis PEP following suspected exposure Condition&quot;:
  [Condition: Concepts.&quot;Offer post-exposure prophylaxis PEP following suspected exposure&quot;]
define &quot;Offer post-exposure prophylaxis PEP following suspected exposure Observation&quot;:
  &quot;Prevention services offered and referrals B.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Offer post-exposure prophylaxis PEP following suspected exposure&quot;
/* End of Offer post-exposure prophylaxis PEP following suspected exposure */

/*
@dataElement: HIV.B.DE153 - Voluntary medical male circumcision VMMC
@activity: HIV.B9 Determine recommended services
@description: Offer referral for VMMC services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Voluntary medical male circumcision VMMC&quot;:
  exists &quot;Voluntary medical male circumcision VMMC Condition&quot;
    or exists &quot;Voluntary medical male circumcision VMMC Observation&quot;
define &quot;Voluntary medical male circumcision VMMC Condition&quot;:
  [Condition: Concepts.&quot;Voluntary medical male circumcision VMMC&quot;]
define &quot;Voluntary medical male circumcision VMMC Observation&quot;:
  &quot;Prevention services offered and referrals B.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Voluntary medical male circumcision VMMC&quot;
/* End of Voluntary medical male circumcision VMMC */

/*
@dataElement: HIV.B.DE154 - Harm reduction for people who inject drugs
@activity: HIV.B9 Determine recommended services
@description: Offer or refer to harm reduction services for people who inject drugs (needle and syringe programmes, opioid substitution therapy, other drug-dependence treatment and opioid overdose prevention and management)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Harm reduction for people who inject drugs B.DE154&quot;:
  exists &quot;Harm reduction for people who inject drugs B.DE154 Condition&quot;
    or exists &quot;Harm reduction for people who inject drugs B.DE154 Observation&quot;
define &quot;Harm reduction for people who inject drugs B.DE154 Condition&quot;:
  [Condition: Concepts.&quot;Harm reduction for people who inject drugs - HIV.B.DE154&quot;]
define &quot;Harm reduction for people who inject drugs B.DE154 Observation&quot;:
  &quot;Prevention services offered and referrals B.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Harm reduction for people who inject drugs - HIV.B.DE154&quot;
/* End of Harm reduction for people who inject drugs B.DE154 */

/*
@dataElement: HIV.B.DE155 - Behavioural interventions to support risk reduction, particularly for people with HIV and members of key populations
@activity: HIV.B9 Determine recommended services
@description: Offer or refer to behavioural interventions to support risk reduction, particularly for people with HIV and members of key populations
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Behavioural interventions to support risk reduction, particularly for people with HIV and members of key populations&quot;:
  exists &quot;Behavioural interventions to support risk reduction, particularly for people with HIV and members of key populations Condition&quot;
    or exists &quot;Behavioural interventions to support risk reduction, particularly for people with HIV and members of key populations Observation&quot;
define &quot;Behavioural interventions to support risk reduction, particularly for people with HIV and members of key populations Condition&quot;:
  [Condition: Concepts.&quot;Behavioural interventions to support risk reduction, particularly for people with HIV and members of key populations&quot;]
define &quot;Behavioural interventions to support risk reduction, particularly for people with HIV and members of key populations Observation&quot;:
  &quot;Prevention services offered and referrals B.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Behavioural interventions to support risk reduction, particularly for people with HIV and members of key populations&quot;
/* End of Behavioural interventions to support risk reduction, particularly for people with HIV and members of key populations */

/*
@dataElement: HIV.B.DE156 - HIV testing for partners and biological children
@activity: HIV.B9 Determine recommended services
@description: Offer voluntary testing for all partners and biological children of positive cases (includes partner services and index case testing), as welll as partners and social contacts of people from key populations, where appropriate
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV testing for partners and biological children B.DE156&quot;:
  exists &quot;HIV testing for partners and biological children B.DE156 Condition&quot;
    or exists &quot;HIV testing for partners and biological children B.DE156 Observation&quot;
define &quot;HIV testing for partners and biological children B.DE156 Condition&quot;:
  [Condition: Concepts.&quot;HIV testing for partners and biological children - HIV.B.DE156&quot;]
define &quot;HIV testing for partners and biological children B.DE156 Observation&quot;:
  &quot;Prevention services offered and referrals B.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV testing for partners and biological children - HIV.B.DE156&quot;
/* End of HIV testing for partners and biological children B.DE156 */

/*
@dataElement: HIV.B.DE157 - HIV testing for partners and social contacts of people from key populations, where appropriate
@activity: HIV.B9 Determine recommended services
@description: Offer voluntary testing for partners and social contacts of people from key populations, where appropriate
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV testing for partners and social contacts of people from key populations, where appropriate&quot;:
  exists &quot;HIV testing for partners and social contacts of people from key populations, where appropriate Condition&quot;
    or exists &quot;HIV testing for partners and social contacts of people from key populations, where appropriate Observation&quot;
define &quot;HIV testing for partners and social contacts of people from key populations, where appropriate Condition&quot;:
  [Condition: Concepts.&quot;HIV testing for partners and social contacts of people from key populations, where appropriate&quot;]
define &quot;HIV testing for partners and social contacts of people from key populations, where appropriate Observation&quot;:
  &quot;Prevention services offered and referrals B.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV testing for partners and social contacts of people from key populations, where appropriate&quot;
/* End of HIV testing for partners and social contacts of people from key populations, where appropriate */

/*
@dataElement: HIV.B.DE158 - Sexual and reproductive health integrated services
@activity: HIV.B9 Determine recommended services
@description: Offer or refer to sexual and reproductive health services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sexual and reproductive health integrated services B.DE158&quot;:
  exists &quot;Sexual and reproductive health integrated services B.DE158 Observation&quot;
define &quot;Sexual and reproductive health integrated services B.DE158 Observation&quot;:
  [Observation: Concepts.&quot;Sexual and reproductive health integrated services - HIV.B.DE158&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Sexual and reproductive health integrated services B.DE158 */

/*
@dataElement: HIV.B.DE159 - Contraception and family planning
@activity: HIV.B9 Determine recommended services
@description: Offer contraception and family planning services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Contraception and family planning B.DE159&quot;:
  exists &quot;Contraception and family planning B.DE159 Condition&quot;
    or exists &quot;Contraception and family planning B.DE159 Observation&quot;
define &quot;Contraception and family planning B.DE159 Condition&quot;:
  [Condition: Concepts.&quot;Contraception and family planning - HIV.B.DE159&quot;]
define &quot;Contraception and family planning B.DE159 Observation&quot;:
  &quot;Sexual and reproductive health integrated services B.DE158 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Contraception and family planning - HIV.B.DE159&quot;
/* End of Contraception and family planning B.DE159 */

/*
@dataElement: HIV.B.DE160 - Check pregnancy status
@activity: HIV.B9 Determine recommended services
@description: Check women's pregnancy status
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Check pregnancy status B.DE160&quot;:
  exists &quot;Check pregnancy status B.DE160 Condition&quot;
    or exists &quot;Check pregnancy status B.DE160 Observation&quot;
define &quot;Check pregnancy status B.DE160 Condition&quot;:
  [Condition: Concepts.&quot;Check pregnancy status - HIV.B.DE160&quot;]
define &quot;Check pregnancy status B.DE160 Observation&quot;:
  &quot;Sexual and reproductive health integrated services B.DE158 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Check pregnancy status - HIV.B.DE160&quot;
/* End of Check pregnancy status B.DE160 */

/*
@dataElement: HIV.B.DE161 - Prevention of mother-to-child transmission counselling
@activity: HIV.B9 Determine recommended services
@description: Offer services for prevention of mother-to-child transmission (counselling)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Prevention of mother-to-child transmission counselling&quot;:
  exists &quot;Prevention of mother-to-child transmission counselling Condition&quot;
    or exists &quot;Prevention of mother-to-child transmission counselling Observation&quot;
define &quot;Prevention of mother-to-child transmission counselling Condition&quot;:
  [Condition: Concepts.&quot;Prevention of mother-to-child transmission counselling&quot;]
define &quot;Prevention of mother-to-child transmission counselling Observation&quot;:
  &quot;Sexual and reproductive health integrated services B.DE158 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Prevention of mother-to-child transmission counselling&quot;
/* End of Prevention of mother-to-child transmission counselling */

/*
@dataElement: HIV.B.DE162 - Cervical cancer screening and treatment counselling
@activity: HIV.B9 Determine recommended services
@description: Offer cervical cancer screening and treatment counselling and services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cervical cancer screening and treatment counselling&quot;:
  exists &quot;Cervical cancer screening and treatment counselling Condition&quot;
    or exists &quot;Cervical cancer screening and treatment counselling Observation&quot;
define &quot;Cervical cancer screening and treatment counselling Condition&quot;:
  [Condition: Concepts.&quot;Cervical cancer screening and treatment counselling&quot;]
define &quot;Cervical cancer screening and treatment counselling Observation&quot;:
  &quot;Sexual and reproductive health integrated services B.DE158 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Cervical cancer screening and treatment counselling&quot;
/* End of Cervical cancer screening and treatment counselling */

/*
@dataElement: HIV.B.DE163 - Anal cancer screening for men who have sex with men
@activity: HIV.B9 Determine recommended services
@description: Offer services for anal cancer screening (for men who have sex with men)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Anal cancer screening for men who have sex with men B.DE163&quot;:
  exists &quot;Anal cancer screening for men who have sex with men B.DE163 Condition&quot;
    or exists &quot;Anal cancer screening for men who have sex with men B.DE163 Observation&quot;
define &quot;Anal cancer screening for men who have sex with men B.DE163 Condition&quot;:
  [Condition: Concepts.&quot;Anal cancer screening for men who have sex with men - HIV.B.DE163&quot;]
define &quot;Anal cancer screening for men who have sex with men B.DE163 Observation&quot;:
  &quot;Sexual and reproductive health integrated services B.DE158 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Anal cancer screening for men who have sex with men - HIV.B.DE163&quot;
/* End of Anal cancer screening for men who have sex with men B.DE163 */

/*
@dataElement: HIV.B.DE164 - STI testing and treatment services
@activity: HIV.B9 Determine recommended services
@description: Offer sexually transmitted infection (STI) testing and treatment services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;STI testing and treatment services&quot;:
  exists &quot;STI testing and treatment services Condition&quot;
    or exists &quot;STI testing and treatment services Observation&quot;
define &quot;STI testing and treatment services Condition&quot;:
  [Condition: Concepts.&quot;STI testing and treatment services&quot;]
define &quot;STI testing and treatment services Observation&quot;:
  &quot;Sexual and reproductive health integrated services B.DE158 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;STI testing and treatment services&quot;
/* End of STI testing and treatment services */

/*
@dataElement: HIV.B.DE165 - Offer other clinical services
@activity: HIV.B9 Determine recommended services
@description: Other clinical services offered or referrals given to the client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Offer other clinical services B.DE165&quot;:
  exists &quot;Offer other clinical services B.DE165 Observation&quot;
define &quot;Offer other clinical services B.DE165 Observation&quot;:
  [Observation: Concepts.&quot;Offer other clinical services - HIV.B.DE165&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Offer other clinical services B.DE165 */

/*
@dataElement: HIV.B.DE166 - Assessment and provision of vaccinations
@activity: HIV.B9 Determine recommended services
@description: Assessment and provision of vaccinations, such as for people from key populations, pregnant women and infants; and, where appropriate, tetanus vaccination for adolescent boys and men receiving VMMC
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assessment and provision of vaccinations B.DE166&quot;:
  exists &quot;Assessment and provision of vaccinations B.DE166 Condition&quot;
    or exists &quot;Assessment and provision of vaccinations B.DE166 Observation&quot;
define &quot;Assessment and provision of vaccinations B.DE166 Condition&quot;:
  [Condition: Concepts.&quot;Assessment and provision of vaccinations - HIV.B.DE166&quot;]
define &quot;Assessment and provision of vaccinations B.DE166 Observation&quot;:
  &quot;Offer other clinical services B.DE165 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Assessment and provision of vaccinations - HIV.B.DE166&quot;
/* End of Assessment and provision of vaccinations B.DE166 */

/*
@dataElement: HIV.B.DE167 - Hepatitis B HBV and hepatitis C virus HCV testing and treatment provided
@activity: HIV.B9 Determine recommended services
@description: Offer or refer for HBV and/or HCV testing and treatment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment provided&quot;:
  exists &quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment provided Condition&quot;
    or exists &quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment provided Observation&quot;
define &quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment provided Condition&quot;:
  [Condition: Concepts.&quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment provided&quot;]
define &quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment provided Observation&quot;:
  &quot;Offer other clinical services B.DE165 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment provided&quot;
/* End of Hepatitis B HBV and hepatitis C virus HCV testing and treatment provided */

/*
@dataElement: HIV.B.DE168 - Co-trimoxazole chemoprophylaxis to prevent Pneumocystis carinii pneumonia provided
@activity: HIV.B9 Determine recommended services
@description: Offer or refer for co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Co-trimoxazole chemoprophylaxis to prevent Pneumocystis carinii pneumonia provided&quot;:
  exists &quot;Co-trimoxazole chemoprophylaxis to prevent Pneumocystis carinii pneumonia provided Condition&quot;
    or exists &quot;Co-trimoxazole chemoprophylaxis to prevent Pneumocystis carinii pneumonia provided Observation&quot;
define &quot;Co-trimoxazole chemoprophylaxis to prevent Pneumocystis carinii pneumonia provided Condition&quot;:
  [Condition: Concepts.&quot;Co-trimoxazole chemoprophylaxis to prevent Pneumocystis carinii pneumonia provided&quot;]
define &quot;Co-trimoxazole chemoprophylaxis to prevent Pneumocystis carinii pneumonia provided Observation&quot;:
  &quot;Offer other clinical services B.DE165 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Co-trimoxazole chemoprophylaxis to prevent Pneumocystis carinii pneumonia provided&quot;
/* End of Co-trimoxazole chemoprophylaxis to prevent Pneumocystis carinii pneumonia provided */

/*
@dataElement: HIV.B.DE169 - Intensified TB case finding and linkage to TB treatment provided
@activity: HIV.B9 Determine recommended services
@description: Offer or refer for intensified TB case finding and linkage to TB treatment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Intensified TB case finding and linkage to TB treatment provided&quot;:
  exists &quot;Intensified TB case finding and linkage to TB treatment provided Condition&quot;
    or exists &quot;Intensified TB case finding and linkage to TB treatment provided Observation&quot;
define &quot;Intensified TB case finding and linkage to TB treatment provided Condition&quot;:
  [Condition: Concepts.&quot;Intensified TB case finding and linkage to TB treatment provided&quot;]
define &quot;Intensified TB case finding and linkage to TB treatment provided Observation&quot;:
  &quot;Offer other clinical services B.DE165 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Intensified TB case finding and linkage to TB treatment provided&quot;
/* End of Intensified TB case finding and linkage to TB treatment provided */

/*
@dataElement: HIV.B.DE170 - Provision of isoniazid preventive therapy if person does not have TB
@activity: HIV.B9 Determine recommended services
@description: Offer or refer for provision of isoniazid preventive therapy if person does not have TB
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Provision of isoniazid preventive therapy if person does not have TB B.DE170&quot;:
  exists &quot;Provision of isoniazid preventive therapy if person does not have TB B.DE170 Condition&quot;
    or exists &quot;Provision of isoniazid preventive therapy if person does not have TB B.DE170 Observation&quot;
define &quot;Provision of isoniazid preventive therapy if person does not have TB B.DE170 Condition&quot;:
  [Condition: Concepts.&quot;Provision of isoniazid preventive therapy if person does not have TB - HIV.B.DE170&quot;]
define &quot;Provision of isoniazid preventive therapy if person does not have TB B.DE170 Observation&quot;:
  &quot;Offer other clinical services B.DE165 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Provision of isoniazid preventive therapy if person does not have TB - HIV.B.DE170&quot;
/* End of Provision of isoniazid preventive therapy if person does not have TB B.DE170 */

/*
@dataElement: HIV.B.DE171 - Malaria prevention such as bed nets and prophylaxis, depending on epidemiology
@activity: HIV.B9 Determine recommended services
@description: Offer or refer for malaria prevention (such as bed nets and prophylaxis), depending on epidemiology
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology B.DE171&quot;:
  exists &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology B.DE171 Condition&quot;
    or exists &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology B.DE171 Observation&quot;
define &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology B.DE171 Condition&quot;:
  [Condition: Concepts.&quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology - HIV.B.DE171&quot;]
define &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology B.DE171 Observation&quot;:
  &quot;Offer other clinical services B.DE165 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology - HIV.B.DE171&quot;
/* End of Malaria prevention such as bed nets and prophylaxis, depending on epidemiology B.DE171 */

/*
@dataElement: HIV.B.DE172 - Other support services
@activity: HIV.B9 Determine recommended services
@description: Offer or refer for other support services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other support services B.DE172&quot;:
  exists &quot;Other support services B.DE172 Observation&quot;
define &quot;Other support services B.DE172 Observation&quot;:
  [Observation: Concepts.&quot;Other support services - HIV.B.DE172&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Other support services B.DE172 */

/*
@dataElement: HIV.B.DE173 - Mental health services
@activity: HIV.B9 Determine recommended services
@description: Offer or refer for mental health services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Mental health services B.DE173&quot;:
  exists &quot;Mental health services B.DE173 Condition&quot;
    or exists &quot;Mental health services B.DE173 Observation&quot;
define &quot;Mental health services B.DE173 Condition&quot;:
  [Condition: Concepts.&quot;Mental health services - HIV.B.DE173&quot;]
define &quot;Mental health services B.DE173 Observation&quot;:
  &quot;Other support services B.DE172 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Mental health services - HIV.B.DE173&quot;
/* End of Mental health services B.DE173 */

/*
@dataElement: HIV.B.DE174 - Psychosocial counselling, support and treatment adherence counselling
@activity: HIV.B9 Determine recommended services
@description: Offer or refer for psychosocial counselling, support and treatment adherence counselling
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Psychosocial counselling, support and treatment adherence counselling B.DE174&quot;:
  exists &quot;Psychosocial counselling, support and treatment adherence counselling B.DE174 Condition&quot;
    or exists &quot;Psychosocial counselling, support and treatment adherence counselling B.DE174 Observation&quot;
define &quot;Psychosocial counselling, support and treatment adherence counselling B.DE174 Condition&quot;:
  [Condition: Concepts.&quot;Psychosocial counselling, support and treatment adherence counselling - HIV.B.DE174&quot;]
define &quot;Psychosocial counselling, support and treatment adherence counselling B.DE174 Observation&quot;:
  &quot;Other support services B.DE172 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Psychosocial counselling, support and treatment adherence counselling - HIV.B.DE174&quot;
/* End of Psychosocial counselling, support and treatment adherence counselling B.DE174 */

/*
@dataElement: HIV.B.DE175 - Support for disclosure and partner services
@activity: HIV.B9 Determine recommended services
@description: Offer or refer for support for disclosure and partner services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Support for disclosure and partner services B.DE175&quot;:
  exists &quot;Support for disclosure and partner services B.DE175 Condition&quot;
    or exists &quot;Support for disclosure and partner services B.DE175 Observation&quot;
define &quot;Support for disclosure and partner services B.DE175 Condition&quot;:
  [Condition: Concepts.&quot;Support for disclosure and partner services - HIV.B.DE175&quot;]
define &quot;Support for disclosure and partner services B.DE175 Observation&quot;:
  &quot;Other support services B.DE172 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Support for disclosure and partner services - HIV.B.DE175&quot;
/* End of Support for disclosure and partner services B.DE175 */

/*
@dataElement: HIV.B.DE176 - Legal and social services
@activity: HIV.B9 Determine recommended services
@description: Offer or refer for legal and social services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Legal and social services B.DE176&quot;:
  exists &quot;Legal and social services B.DE176 Condition&quot;
    or exists &quot;Legal and social services B.DE176 Observation&quot;
define &quot;Legal and social services B.DE176 Condition&quot;:
  [Condition: Concepts.&quot;Legal and social services - HIV.B.DE176&quot;]
define &quot;Legal and social services B.DE176 Observation&quot;:
  &quot;Other support services B.DE172 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Legal and social services - HIV.B.DE176&quot;
/* End of Legal and social services B.DE176 */

/*
@dataElement: HIV.B.DE177 - Services for responding to violence against women
@activity: HIV.B9 Determine recommended services
@description: Offer or refer for services for responding to violence against women, including first-line support and psychosocial support, post-rape care and other support services including shelters, legal services and women and child protection services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Services for responding to violence against women B.DE177&quot;:
  exists &quot;Services for responding to violence against women B.DE177 Condition&quot;
    or exists &quot;Services for responding to violence against women B.DE177 Observation&quot;
define &quot;Services for responding to violence against women B.DE177 Condition&quot;:
  [Condition: Concepts.&quot;Services for responding to violence against women - HIV.B.DE177&quot;]
define &quot;Services for responding to violence against women B.DE177 Observation&quot;:
  &quot;Other support services B.DE172 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Services for responding to violence against women - HIV.B.DE177&quot;
/* End of Services for responding to violence against women B.DE177 */

/*
@dataElement: HIV.B.DE191 - Type of follow-up appointment
@activity: HIV.B20 Schedule retest
@description: Type of follow-up appointment for testing services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Type of follow-up appointment B.DE191&quot;:
  exists &quot;Type of follow-up appointment B.DE191 Observation&quot;
define &quot;Type of follow-up appointment B.DE191 Observation&quot;:
  [Observation: Concepts.&quot;Type of follow-up appointment - HIV.B.DE191&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Type of follow-up appointment B.DE191 */

/*
@dataElement: HIV.B.DE192 - Retesting for HIV
@activity: HIV.B20 Schedule retest
@description: Retesting follow-up appointment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Retesting for HIV B.DE192&quot;:
  exists &quot;Retesting for HIV B.DE192 Condition&quot;
    or exists &quot;Retesting for HIV B.DE192 Observation&quot;
define &quot;Retesting for HIV B.DE192 Condition&quot;:
  [Condition: Concepts.&quot;Retesting for HIV - HIV.B.DE192&quot;]
define &quot;Retesting for HIV B.DE192 Observation&quot;:
  &quot;Type of follow-up appointment B.DE191 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Retesting for HIV - HIV.B.DE192&quot;
/* End of Retesting for HIV B.DE192 */

/*
@dataElement: HIV.B.DE193 - Other
@activity: HIV.B20 Schedule retest
@description: Other reason for the follow-up appointment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other B.DE193&quot;:
  exists &quot;Other B.DE193 Condition&quot;
    or exists &quot;Other B.DE193 Observation&quot;
define &quot;Other B.DE193 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.B.DE193&quot;]
define &quot;Other B.DE193 Observation&quot;:
  &quot;Type of follow-up appointment B.DE191 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.B.DE193&quot;
/* End of Other B.DE193 */

/*
@dataElement: HIV.B.DE195 - Date/time of follow-up appointment
@activity: HIV.B20 Schedule retest
@description: Date the patient is to return for monitoring, re-supply or any other reason
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date/time of follow-up appointment B.DE195&quot;:
  [Observation: Concepts.&quot;Date/time of follow-up appointment - HIV.B.DE195&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date/time of follow-up appointment B.DE195 Value&quot;:
  &quot;Date/time of follow-up appointment B.DE195&quot; O
  return O.value
/* End of Date/time of follow-up appointment B.DE195 */

/*
@dataElement: HIV.B.DE198 - VMMC procedure date
@activity: HIV.B21 Offer prevention options
@description: Date on which a voluntary medical male circumcision procedure was performed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;VMMC procedure date&quot;:
  [Observation: Concepts.&quot;VMMC procedure date&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;VMMC procedure date Value&quot;:
  &quot;VMMC procedure date&quot; O
  return O.value
/* End of VMMC procedure date */

/*
@dataElement: HIV.B.DE201 - Adverse event severity
@activity: HIV.B21 Offer prevention options
@description: Severity of the adverse event associated with voluntary medical male circumcision (VMMC) procedure
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Adverse event severity&quot;:
  exists &quot;Adverse event severity Observation&quot;
define &quot;Adverse event severity Observation&quot;:
  [Observation: Concepts.&quot;Adverse event severity&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Adverse event severity */

/*
@dataElement: HIV.B.DE202 - Moderate
@activity: HIV.B21 Offer prevention options
@description: Severity of the adverse event associated with VMMC procedure was moderate
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Moderate&quot;:
  exists &quot;Moderate Condition&quot;
    or exists &quot;Moderate Observation&quot;
define &quot;Moderate Condition&quot;:
  [Condition: Concepts.&quot;Moderate&quot;]
define &quot;Moderate Observation&quot;:
  &quot;Adverse event severity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Moderate&quot;
/* End of Moderate */

/*
@dataElement: HIV.B.DE203 - Severe
@activity: HIV.B21 Offer prevention options
@description: Severity of the adverse event associated with VMMC procedure was severe
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Severe&quot;:
  exists &quot;Severe Condition&quot;
    or exists &quot;Severe Observation&quot;
define &quot;Severe Condition&quot;:
  [Condition: Concepts.&quot;Severe&quot;]
define &quot;Severe Observation&quot;:
  &quot;Adverse event severity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Severe&quot;
/* End of Severe */

/*
@dataElement: HIV.B.DE204 - Timing of adverse event
@activity: HIV.B21 Offer prevention options
@description: When the adverse event associated with VMMC procedure occurred
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Timing of adverse event&quot;:
  exists &quot;Timing of adverse event Observation&quot;
define &quot;Timing of adverse event Observation&quot;:
  [Observation: Concepts.&quot;Timing of adverse event&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Timing of adverse event */

/*
@dataElement: HIV.B.DE205 - Intraoperative
@activity: HIV.B21 Offer prevention options
@description: The adverse event associated with VMMC procedure occurred during the procedure
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Intraoperative&quot;:
  exists &quot;Intraoperative Condition&quot;
    or exists &quot;Intraoperative Observation&quot;
define &quot;Intraoperative Condition&quot;:
  [Condition: Concepts.&quot;Intraoperative&quot;]
define &quot;Intraoperative Observation&quot;:
  &quot;Timing of adverse event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Intraoperative&quot;
/* End of Intraoperative */

/*
@dataElement: HIV.B.DE206 - Postoperative
@activity: HIV.B21 Offer prevention options
@description: The adverse event associated with VMMC procedure occurred within the first 30 days after the procedure
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Postoperative&quot;:
  exists &quot;Postoperative Condition&quot;
    or exists &quot;Postoperative Observation&quot;
define &quot;Postoperative Condition&quot;:
  [Condition: Concepts.&quot;Postoperative&quot;]
define &quot;Postoperative Observation&quot;:
  &quot;Timing of adverse event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Postoperative&quot;
/* End of Postoperative */

/*
@dataElement: HIV.B.DE207 - Type of adverse VMMC event
@activity: HIV.B21 Offer prevention options
@description: Type of adverse event associated with voluntary medical male circumcision (VMMC) procedure
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Type of adverse VMMC event&quot;:
  exists &quot;Type of adverse VMMC event Observation&quot;
define &quot;Type of adverse VMMC event Observation&quot;:
  [Observation: Concepts.&quot;Type of adverse VMMC event&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Type of adverse VMMC event */

/*
@dataElement: HIV.B.DE208 - Abnormal pain
@activity: HIV.B21 Offer prevention options
@description: Client experienced abnormal pain
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Abnormal pain&quot;:
  exists &quot;Abnormal pain Condition&quot;
    or exists &quot;Abnormal pain Observation&quot;
define &quot;Abnormal pain Condition&quot;:
  [Condition: Concepts.&quot;Abnormal pain&quot;]
define &quot;Abnormal pain Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Abnormal pain&quot;
/* End of Abnormal pain */

/*
@dataElement: HIV.B.DE209 - Anaesthesia-related effects
@activity: HIV.B21 Offer prevention options
@description: Client had anaesthesia-related effects
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Anaesthesia-related effects&quot;:
  exists &quot;Anaesthesia-related effects Condition&quot;
    or exists &quot;Anaesthesia-related effects Observation&quot;
define &quot;Anaesthesia-related effects Condition&quot;:
  [Condition: Concepts.&quot;Anaesthesia-related effects&quot;]
define &quot;Anaesthesia-related effects Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Anaesthesia-related effects&quot;
/* End of Anaesthesia-related effects */

/*
@dataElement: HIV.B.DE210 - Bleeding
@activity: HIV.B21 Offer prevention options
@description: Client had bleeding
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Bleeding&quot;:
  exists &quot;Bleeding Condition&quot;
    or exists &quot;Bleeding Observation&quot;
define &quot;Bleeding Condition&quot;:
  [Condition: Concepts.&quot;Bleeding&quot;]
define &quot;Bleeding Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Bleeding&quot;
/* End of Bleeding */

/*
@dataElement: HIV.B.DE211 - Damage to the penis
@activity: HIV.B21 Offer prevention options
@description: Client had damage to the penis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Damage to the penis&quot;:
  exists &quot;Damage to the penis Condition&quot;
    or exists &quot;Damage to the penis Observation&quot;
define &quot;Damage to the penis Condition&quot;:
  [Condition: Concepts.&quot;Damage to the penis&quot;]
define &quot;Damage to the penis Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Damage to the penis&quot;
/* End of Damage to the penis */

/*
@dataElement: HIV.B.DE212 - Difficulty urinating
@activity: HIV.B21 Offer prevention options
@description: Client had difficulty urinating
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Difficulty urinating&quot;:
  exists &quot;Difficulty urinating Condition&quot;
    or exists &quot;Difficulty urinating Observation&quot;
define &quot;Difficulty urinating Condition&quot;:
  [Condition: Concepts.&quot;Difficulty urinating&quot;]
define &quot;Difficulty urinating Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Difficulty urinating&quot;
/* End of Difficulty urinating */

/*
@dataElement: HIV.B.DE213 - Excessive bleeding
@activity: HIV.B21 Offer prevention options
@description: Client experienced excessive bleeding
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Excessive bleeding&quot;:
  exists &quot;Excessive bleeding Condition&quot;
    or exists &quot;Excessive bleeding Observation&quot;
define &quot;Excessive bleeding Condition&quot;:
  [Condition: Concepts.&quot;Excessive bleeding&quot;]
define &quot;Excessive bleeding Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Excessive bleeding&quot;
/* End of Excessive bleeding */

/*
@dataElement: HIV.B.DE214 - Excessive skin removal
@activity: HIV.B21 Offer prevention options
@description: Client experienced excessive skin removal
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Excessive skin removal&quot;:
  exists &quot;Excessive skin removal Condition&quot;
    or exists &quot;Excessive skin removal Observation&quot;
define &quot;Excessive skin removal Condition&quot;:
  [Condition: Concepts.&quot;Excessive skin removal&quot;]
define &quot;Excessive skin removal Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Excessive skin removal&quot;
/* End of Excessive skin removal */

/*
@dataElement: HIV.B.DE215 - Excessive swelling
@activity: HIV.B21 Offer prevention options
@description: Client experienced excessive swelling
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Excessive swelling&quot;:
  exists &quot;Excessive swelling Condition&quot;
    or exists &quot;Excessive swelling Observation&quot;
define &quot;Excessive swelling Condition&quot;:
  [Condition: Concepts.&quot;Excessive swelling&quot;]
define &quot;Excessive swelling Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Excessive swelling&quot;
/* End of Excessive swelling */

/*
@dataElement: HIV.B.DE216 - Haematoma
@activity: HIV.B21 Offer prevention options
@description: Client experienced haematoma
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Haematoma&quot;:
  exists &quot;Haematoma Condition&quot;
    or exists &quot;Haematoma Observation&quot;
define &quot;Haematoma Condition&quot;:
  [Condition: Concepts.&quot;Haematoma&quot;]
define &quot;Haematoma Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Haematoma&quot;
/* End of Haematoma */

/*
@dataElement: HIV.B.DE217 - Infection
@activity: HIV.B21 Offer prevention options
@description: Client experienced infection
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Infection&quot;:
  exists &quot;Infection Condition&quot;
    or exists &quot;Infection Observation&quot;
define &quot;Infection Condition&quot;:
  [Condition: Concepts.&quot;Infection&quot;]
define &quot;Infection Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Infection&quot;
/* End of Infection */

/*
@dataElement: HIV.B.DE218 - Injury to glans
@activity: HIV.B21 Offer prevention options
@description: Client experienced injury to glans
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Injury to glans&quot;:
  exists &quot;Injury to glans Condition&quot;
    or exists &quot;Injury to glans Observation&quot;
define &quot;Injury to glans Condition&quot;:
  [Condition: Concepts.&quot;Injury to glans&quot;]
define &quot;Injury to glans Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Injury to glans&quot;
/* End of Injury to glans */

/*
@dataElement: HIV.B.DE219 - Scar or disfigurement
@activity: HIV.B21 Offer prevention options
@description: Client experienced scar or disfigurement
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Scar or disfigurement&quot;:
  exists &quot;Scar or disfigurement Condition&quot;
    or exists &quot;Scar or disfigurement Observation&quot;
define &quot;Scar or disfigurement Condition&quot;:
  [Condition: Concepts.&quot;Scar or disfigurement&quot;]
define &quot;Scar or disfigurement Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Scar or disfigurement&quot;
/* End of Scar or disfigurement */

/*
@dataElement: HIV.B.DE220 - Sharps injury to personnel
@activity: HIV.B21 Offer prevention options
@description: During VMMC procedure there was sharps injury to personnel
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sharps injury to personnel&quot;:
  exists &quot;Sharps injury to personnel Condition&quot;
    or exists &quot;Sharps injury to personnel Observation&quot;
define &quot;Sharps injury to personnel Condition&quot;:
  [Condition: Concepts.&quot;Sharps injury to personnel&quot;]
define &quot;Sharps injury to personnel Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Sharps injury to personnel&quot;
/* End of Sharps injury to personnel */

/*
@dataElement: HIV.B.DE221 - Wound disruption
@activity: HIV.B21 Offer prevention options
@description: Client experienced wound disruption
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Wound disruption&quot;:
  exists &quot;Wound disruption Condition&quot;
    or exists &quot;Wound disruption Observation&quot;
define &quot;Wound disruption Condition&quot;:
  [Condition: Concepts.&quot;Wound disruption&quot;]
define &quot;Wound disruption Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Wound disruption&quot;
/* End of Wound disruption */

/*
@dataElement: HIV.B.DE222 - Other
@activity: HIV.B21 Offer prevention options
@description: Client experienced other adverse VMMC event
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other B.DE222&quot;:
  exists &quot;Other B.DE222 Condition&quot;
    or exists &quot;Other B.DE222 Observation&quot;
define &quot;Other B.DE222 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.B.DE222&quot;]
define &quot;Other B.DE222 Observation&quot;:
  &quot;Type of adverse VMMC event Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.B.DE222&quot;
/* End of Other B.DE222 */

/*
@dataElement: HIV.B.DE224 - HIV retest prior to starting ART conducted
@activity: HIV.B20 Schedule retest
@description: HIV retest prior to starting ART conducted
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV retest prior to starting ART conducted&quot;:
  exists &quot;HIV retest prior to starting ART conducted Observation&quot;
define &quot;HIV retest prior to starting ART conducted Observation&quot;:
  [Observation: Concepts.&quot;HIV retest prior to starting ART conducted&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of HIV retest prior to starting ART conducted */

/*
@dataElement: HIV.B.DE225 - At elevated risk for HIV acquisition
@activity: HIV.B6 Capture or update client history
@description: Client is at elevated risk for HIV acquisition
*/

define &quot;At elevated risk for HIV acquisition B.DE225&quot;:
  [Observation] O
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.code ~ Concepts.&quot;At elevated risk for HIV acquisition - HIV.B.DE225&quot;
/* End of At elevated risk for HIV acquisition B.DE225 */

/*
@dataElement: HIV.B.DE226 - Syndrome/STI diagnosed
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Syndrome or STI for which client is diagnosed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Syndrome/STI diagnosed B.DE226&quot;:
  exists &quot;Syndrome/STI diagnosed B.DE226 Observation&quot;
define &quot;Syndrome/STI diagnosed B.DE226 Observation&quot;:
  [Observation: Concepts.&quot;Syndrome/STI diagnosed - HIV.B.DE226&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Syndrome/STI diagnosed B.DE226 */

/*
@dataElement: HIV.B.DE227 - Urethral discharge syndrome
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Client diagnosed with urethral discharge syndrome
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Urethral discharge syndrome B.DE227&quot;:
  exists &quot;Urethral discharge syndrome B.DE227 Condition&quot;
    or exists &quot;Urethral discharge syndrome B.DE227 Observation&quot;
define &quot;Urethral discharge syndrome B.DE227 Condition&quot;:
  [Condition: Concepts.&quot;Urethral discharge syndrome - HIV.B.DE227&quot;]
define &quot;Urethral discharge syndrome B.DE227 Observation&quot;:
  &quot;Syndrome/STI diagnosed B.DE226 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Urethral discharge syndrome - HIV.B.DE227&quot;
/* End of Urethral discharge syndrome B.DE227 */

/*
@dataElement: HIV.B.DE228 - Vaginal discharge syndrome
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Client diagnosed with vaginal discharge syndrome
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Vaginal discharge syndrome B.DE228&quot;:
  exists &quot;Vaginal discharge syndrome B.DE228 Condition&quot;
    or exists &quot;Vaginal discharge syndrome B.DE228 Observation&quot;
define &quot;Vaginal discharge syndrome B.DE228 Condition&quot;:
  [Condition: Concepts.&quot;Vaginal discharge syndrome - HIV.B.DE228&quot;]
define &quot;Vaginal discharge syndrome B.DE228 Observation&quot;:
  &quot;Syndrome/STI diagnosed B.DE226 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Vaginal discharge syndrome - HIV.B.DE228&quot;
/* End of Vaginal discharge syndrome B.DE228 */

/*
@dataElement: HIV.B.DE229 - Lower Abdominal pain 
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Client diagnosed with lower abdominal pain
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Lower Abdominal pain  B.DE229&quot;:
  exists &quot;Lower Abdominal pain  B.DE229 Condition&quot;
    or exists &quot;Lower Abdominal pain  B.DE229 Observation&quot;
define &quot;Lower Abdominal pain  B.DE229 Condition&quot;:
  [Condition: Concepts.&quot;Lower Abdominal pain  - HIV.B.DE229&quot;]
define &quot;Lower Abdominal pain  B.DE229 Observation&quot;:
  &quot;Syndrome/STI diagnosed B.DE226 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Lower Abdominal pain  - HIV.B.DE229&quot;
/* End of Lower Abdominal pain  B.DE229 */

/*
@dataElement: HIV.B.DE230 - Genital ulcer disease syndrome
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Client diagnosed with genital ulcer disease syndrome
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Genital ulcer disease syndrome B.DE230&quot;:
  exists &quot;Genital ulcer disease syndrome B.DE230 Condition&quot;
    or exists &quot;Genital ulcer disease syndrome B.DE230 Observation&quot;
define &quot;Genital ulcer disease syndrome B.DE230 Condition&quot;:
  [Condition: Concepts.&quot;Genital ulcer disease syndrome - HIV.B.DE230&quot;]
define &quot;Genital ulcer disease syndrome B.DE230 Observation&quot;:
  &quot;Syndrome/STI diagnosed B.DE226 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Genital ulcer disease syndrome - HIV.B.DE230&quot;
/* End of Genital ulcer disease syndrome B.DE230 */

/*
@dataElement: HIV.B.DE231 - Anorectal discharge
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Client diagnosed with anorectal discharge
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Anorectal discharge B.DE231&quot;:
  exists &quot;Anorectal discharge B.DE231 Condition&quot;
    or exists &quot;Anorectal discharge B.DE231 Observation&quot;
define &quot;Anorectal discharge B.DE231 Condition&quot;:
  [Condition: Concepts.&quot;Anorectal discharge - HIV.B.DE231&quot;]
define &quot;Anorectal discharge B.DE231 Observation&quot;:
  &quot;Syndrome/STI diagnosed B.DE226 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Anorectal discharge - HIV.B.DE231&quot;
/* End of Anorectal discharge B.DE231 */

/*
@dataElement: HIV.B.DE232 - Sent for testing
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Specimen sent for testing
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sent for testing B.DE232&quot;:
  exists &quot;Sent for testing B.DE232 Condition&quot;
    or exists &quot;Sent for testing B.DE232 Observation&quot;
define &quot;Sent for testing B.DE232 Condition&quot;:
  [Condition: Concepts.&quot;Sent for testing - HIV.B.DE232&quot;]
define &quot;Sent for testing B.DE232 Observation&quot;:
  &quot;Syndrome/STI diagnosed B.DE226 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Sent for testing - HIV.B.DE232&quot;
/* End of Sent for testing B.DE232 */

/*
@dataElement: HIV.B.DE233 - Other
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Other syndrome/STI diagnosed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other B.DE233&quot;:
  exists &quot;Other B.DE233 Condition&quot;
    or exists &quot;Other B.DE233 Observation&quot;
define &quot;Other B.DE233 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.B.DE233&quot;]
define &quot;Other B.DE233 Observation&quot;:
  &quot;Syndrome/STI diagnosed B.DE226 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.B.DE233&quot;
/* End of Other B.DE233 */

/*
@dataElement: HIV.B.DE235 - Any STI syndrome diagnosed
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Was the client diagnosed with any of the five STI syndromes during this visit?
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Any STI syndrome diagnosed B.DE235&quot;:
  exists &quot;Any STI syndrome diagnosed B.DE235 Observation&quot;
define &quot;Any STI syndrome diagnosed B.DE235 Observation&quot;:
  [Observation: Concepts.&quot;Any STI syndrome diagnosed - HIV.B.DE235&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Any STI syndrome diagnosed B.DE235 */

/*
@dataElement: HIV.B.DE249 - Syphilis test date
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Date of syphilis test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Syphilis test date B.DE249&quot;:
  [Observation: Concepts.&quot;Syphilis test date - HIV.B.DE249&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Syphilis test date B.DE249 Value&quot;:
  &quot;Syphilis test date B.DE249&quot; O
  return O.value
/* End of Syphilis test date B.DE249 */

/*
@dataElement: HIV.B.DE250 - Syphilis test result
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Result from syphilis test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Syphilis test result B.DE250&quot;:
  exists &quot;Syphilis test result B.DE250 Observation&quot;
define &quot;Syphilis test result B.DE250 Observation&quot;:
  [Observation: Concepts.&quot;Syphilis test result - HIV.B.DE250&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Syphilis test result B.DE250 */

/*
@dataElement: HIV.B.DE251 - Positive
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Test result is positive for syphilis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Positive B.DE251&quot;:
  exists &quot;Positive B.DE251 Condition&quot;
    or exists &quot;Positive B.DE251 Observation&quot;
define &quot;Positive B.DE251 Condition&quot;:
  [Condition: Concepts.&quot;Positive - HIV.B.DE251&quot;]
define &quot;Positive B.DE251 Observation&quot;:
  &quot;Syphilis test result B.DE250 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Positive - HIV.B.DE251&quot;
/* End of Positive B.DE251 */

/*
@dataElement: HIV.B.DE252 - Negative
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Test result is negative for syphilis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Negative B.DE252&quot;:
  exists &quot;Negative B.DE252 Condition&quot;
    or exists &quot;Negative B.DE252 Observation&quot;
define &quot;Negative B.DE252 Condition&quot;:
  [Condition: Concepts.&quot;Negative - HIV.B.DE252&quot;]
define &quot;Negative B.DE252 Observation&quot;:
  &quot;Syphilis test result B.DE250 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Negative - HIV.B.DE252&quot;
/* End of Negative B.DE252 */

/*
@dataElement: HIV.B.DE253 - Inconclusive
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Test result is inconclusive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Inconclusive B.DE253&quot;:
  exists &quot;Inconclusive B.DE253 Condition&quot;
    or exists &quot;Inconclusive B.DE253 Observation&quot;
define &quot;Inconclusive B.DE253 Condition&quot;:
  [Condition: Concepts.&quot;Inconclusive - HIV.B.DE253&quot;]
define &quot;Inconclusive B.DE253 Observation&quot;:
  &quot;Syphilis test result B.DE250 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Inconclusive - HIV.B.DE253&quot;
/* End of Inconclusive B.DE253 */

/*
@dataElement: HIV.B.DE254 - Syphilis treatment start date
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Date of initiation of syphilis treatment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Syphilis treatment start date B.DE254&quot;:
  [Observation: Concepts.&quot;Syphilis treatment start date - HIV.B.DE254&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Syphilis treatment start date B.DE254 Value&quot;:
  &quot;Syphilis treatment start date B.DE254&quot; O
  return O.value
/* End of Syphilis treatment start date B.DE254 */

/*
@dataElement: HIV.B.DE255 - Gonorrhoea test date
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Date of Gonorrhoea test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Gonorrhoea test date B.DE255&quot;:
  [Observation: Concepts.&quot;Gonorrhoea test date - HIV.B.DE255&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Gonorrhoea test date B.DE255 Value&quot;:
  &quot;Gonorrhoea test date B.DE255&quot; O
  return O.value
/* End of Gonorrhoea test date B.DE255 */

/*
@dataElement: HIV.B.DE256 - Gonorrhoea test result
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Result from Gonorrhoea test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Gonorrhoea test result B.DE256&quot;:
  exists &quot;Gonorrhoea test result B.DE256 Observation&quot;
define &quot;Gonorrhoea test result B.DE256 Observation&quot;:
  [Observation: Concepts.&quot;Gonorrhoea test result - HIV.B.DE256&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Gonorrhoea test result B.DE256 */

/*
@dataElement: HIV.B.DE257 - Positive
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Test result is positive for Neisseria gonorrhoeae
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Positive B.DE257&quot;:
  exists &quot;Positive B.DE257 Condition&quot;
    or exists &quot;Positive B.DE257 Observation&quot;
define &quot;Positive B.DE257 Condition&quot;:
  [Condition: Concepts.&quot;Positive - HIV.B.DE257&quot;]
define &quot;Positive B.DE257 Observation&quot;:
  &quot;Gonorrhoea test result B.DE256 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Positive - HIV.B.DE257&quot;
/* End of Positive B.DE257 */

/*
@dataElement: HIV.B.DE258 - Negative
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Test result is negative for Neisseria gonorrhoeae
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Negative B.DE258&quot;:
  exists &quot;Negative B.DE258 Condition&quot;
    or exists &quot;Negative B.DE258 Observation&quot;
define &quot;Negative B.DE258 Condition&quot;:
  [Condition: Concepts.&quot;Negative - HIV.B.DE258&quot;]
define &quot;Negative B.DE258 Observation&quot;:
  &quot;Gonorrhoea test result B.DE256 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Negative - HIV.B.DE258&quot;
/* End of Negative B.DE258 */

/*
@dataElement: HIV.B.DE259 - Inconclusive
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Test result is inconclusive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Inconclusive B.DE259&quot;:
  exists &quot;Inconclusive B.DE259 Condition&quot;
    or exists &quot;Inconclusive B.DE259 Observation&quot;
define &quot;Inconclusive B.DE259 Condition&quot;:
  [Condition: Concepts.&quot;Inconclusive - HIV.B.DE259&quot;]
define &quot;Inconclusive B.DE259 Observation&quot;:
  &quot;Gonorrhoea test result B.DE256 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Inconclusive - HIV.B.DE259&quot;
/* End of Inconclusive B.DE259 */

/*
@dataElement: HIV.B.DE260 - Gonorrhoea treatment start date
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Date of initiation of Gonorrhoea treatment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Gonorrhoea treatment start date B.DE260&quot;:
  [Observation: Concepts.&quot;Gonorrhoea treatment start date - HIV.B.DE260&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Gonorrhoea treatment start date B.DE260 Value&quot;:
  &quot;Gonorrhoea treatment start date B.DE260&quot; O
  return O.value
/* End of Gonorrhoea treatment start date B.DE260 */

/*
@dataElement: HIV.B.DE261 - Type of specimen
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Type of specimen to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Type of specimen B.DE261&quot;:
  exists &quot;Type of specimen B.DE261 Observation&quot;
define &quot;Type of specimen B.DE261 Observation&quot;:
  [Observation: Concepts.&quot;Type of specimen - HIV.B.DE261&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Type of specimen B.DE261 */

/*
@dataElement: HIV.B.DE262 - Blood
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Blood specimen to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Blood B.DE262&quot;:
  exists &quot;Blood B.DE262 Condition&quot;
    or exists &quot;Blood B.DE262 Observation&quot;
define &quot;Blood B.DE262 Condition&quot;:
  [Condition: Concepts.&quot;Blood - HIV.B.DE262&quot;]
define &quot;Blood B.DE262 Observation&quot;:
  &quot;Type of specimen B.DE261 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Blood - HIV.B.DE262&quot;
/* End of Blood B.DE262 */

/*
@dataElement: HIV.B.DE263 - Urine
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Urine specimen to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Urine B.DE263&quot;:
  exists &quot;Urine B.DE263 Condition&quot;
    or exists &quot;Urine B.DE263 Observation&quot;
define &quot;Urine B.DE263 Condition&quot;:
  [Condition: Concepts.&quot;Urine - HIV.B.DE263&quot;]
define &quot;Urine B.DE263 Observation&quot;:
  &quot;Type of specimen B.DE261 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Urine - HIV.B.DE263&quot;
/* End of Urine B.DE263 */

/*
@dataElement: HIV.B.DE264 - Cervical or vaginal swab
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Cervical or vaginal swab to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cervical or vaginal swab B.DE264&quot;:
  exists &quot;Cervical or vaginal swab B.DE264 Condition&quot;
    or exists &quot;Cervical or vaginal swab B.DE264 Observation&quot;
define &quot;Cervical or vaginal swab B.DE264 Condition&quot;:
  [Condition: Concepts.&quot;Cervical or vaginal swab - HIV.B.DE264&quot;]
define &quot;Cervical or vaginal swab B.DE264 Observation&quot;:
  &quot;Type of specimen B.DE261 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Cervical or vaginal swab - HIV.B.DE264&quot;
/* End of Cervical or vaginal swab B.DE264 */

/*
@dataElement: HIV.B.DE265 - Urethral or penile swab
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Urethral or penile swab to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Urethral or penile swab B.DE265&quot;:
  exists &quot;Urethral or penile swab B.DE265 Condition&quot;
    or exists &quot;Urethral or penile swab B.DE265 Observation&quot;
define &quot;Urethral or penile swab B.DE265 Condition&quot;:
  [Condition: Concepts.&quot;Urethral or penile swab - HIV.B.DE265&quot;]
define &quot;Urethral or penile swab B.DE265 Observation&quot;:
  &quot;Type of specimen B.DE261 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Urethral or penile swab - HIV.B.DE265&quot;
/* End of Urethral or penile swab B.DE265 */

/*
@dataElement: HIV.B.DE266 - Rectal swab
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Rectal swab to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Rectal swab B.DE266&quot;:
  exists &quot;Rectal swab B.DE266 Condition&quot;
    or exists &quot;Rectal swab B.DE266 Observation&quot;
define &quot;Rectal swab B.DE266 Condition&quot;:
  [Condition: Concepts.&quot;Rectal swab - HIV.B.DE266&quot;]
define &quot;Rectal swab B.DE266 Observation&quot;:
  &quot;Type of specimen B.DE261 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Rectal swab - HIV.B.DE266&quot;
/* End of Rectal swab B.DE266 */

/*
@dataElement: HIV.B.DE267 - Other
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Other specimen type to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other B.DE267&quot;:
  exists &quot;Other B.DE267 Condition&quot;
    or exists &quot;Other B.DE267 Observation&quot;
define &quot;Other B.DE267 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.B.DE267&quot;]
define &quot;Other B.DE267 Observation&quot;:
  &quot;Type of specimen B.DE261 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.B.DE267&quot;
/* End of Other B.DE267 */

/*
@dataElement: HIV.B.DE276 - Neisseria gonorrhoeae test type
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Type of diagnostic test used for Neisseria gonorrhoeae
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Neisseria gonorrhoeae test type B.DE276&quot;:
  exists &quot;Neisseria gonorrhoeae test type B.DE276 Observation&quot;
define &quot;Neisseria gonorrhoeae test type B.DE276 Observation&quot;:
  [Observation: Concepts.&quot;Neisseria gonorrhoeae test type - HIV.B.DE276&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Neisseria gonorrhoeae test type B.DE276 */

/*
@dataElement: HIV.B.DE277 - NAAT
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Nucleic Acid Amplification Test (NAAT) used
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;NAAT B.DE277&quot;:
  exists &quot;NAAT B.DE277 Condition&quot;
    or exists &quot;NAAT B.DE277 Observation&quot;
define &quot;NAAT B.DE277 Condition&quot;:
  [Condition: Concepts.&quot;NAAT - HIV.B.DE277&quot;]
define &quot;NAAT B.DE277 Observation&quot;:
  &quot;Neisseria gonorrhoeae test type B.DE276 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;NAAT - HIV.B.DE277&quot;
/* End of NAAT B.DE277 */

/*
@dataElement: HIV.B.DE278 - POC Test
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Point-of-care (POC) test used
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;POC Test B.DE278&quot;:
  exists &quot;POC Test B.DE278 Condition&quot;
    or exists &quot;POC Test B.DE278 Observation&quot;
define &quot;POC Test B.DE278 Condition&quot;:
  [Condition: Concepts.&quot;POC Test - HIV.B.DE278&quot;]
define &quot;POC Test B.DE278 Observation&quot;:
  &quot;Neisseria gonorrhoeae test type B.DE276 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;POC Test - HIV.B.DE278&quot;
/* End of POC Test B.DE278 */

/*
@dataElement: HIV.B.DE279 - Culture
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Culture test used
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Culture B.DE279&quot;:
  exists &quot;Culture B.DE279 Condition&quot;
    or exists &quot;Culture B.DE279 Observation&quot;
define &quot;Culture B.DE279 Condition&quot;:
  [Condition: Concepts.&quot;Culture - HIV.B.DE279&quot;]
define &quot;Culture B.DE279 Observation&quot;:
  &quot;Neisseria gonorrhoeae test type B.DE276 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Culture - HIV.B.DE279&quot;
/* End of Culture B.DE279 */

/*
@dataElement: HIV.B.DE280 - Microscopy
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Microscopy test used
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Microscopy B.DE280&quot;:
  exists &quot;Microscopy B.DE280 Condition&quot;
    or exists &quot;Microscopy B.DE280 Observation&quot;
define &quot;Microscopy B.DE280 Condition&quot;:
  [Condition: Concepts.&quot;Microscopy - HIV.B.DE280&quot;]
define &quot;Microscopy B.DE280 Observation&quot;:
  &quot;Neisseria gonorrhoeae test type B.DE276 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Microscopy - HIV.B.DE280&quot;
/* End of Microscopy B.DE280 */

/*
@dataElement: HIV.B.DE281 - Other
@activity: HIV.B23 Offer sexual and reproductive health services
@description: Other type of test used
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other B.DE281&quot;:
  exists &quot;Other B.DE281 Condition&quot;
    or exists &quot;Other B.DE281 Observation&quot;
define &quot;Other B.DE281 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.B.DE281&quot;]
define &quot;Other B.DE281 Observation&quot;:
  &quot;Neisseria gonorrhoeae test type B.DE276 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.B.DE281&quot;
/* End of Other B.DE281 */

/*
@dataElement: HIV.C.DE9 - Date/time of suspected exposure to HIV
@activity: HIV.C3 Capture or update client history
@description: When the suspect exposure to HIV took place
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date/time of suspected exposure to HIV C.DE9&quot;:
  [Observation: Concepts.&quot;Date/time of suspected exposure to HIV - HIV.C.DE9&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date/time of suspected exposure to HIV C.DE9 Value&quot;:
  &quot;Date/time of suspected exposure to HIV C.DE9&quot; O
  return O.value
/* End of Date/time of suspected exposure to HIV C.DE9 */

/*
@dataElement: HIV.C.DE10 - Currently on PrEP
@activity: HIV.C3 Capture or update client history
@description: The client is currently taking PrEP. Oral pre-exposure prophylaxis (PrEP) of HIV is the use of ARV drugs by people who are not infected with HIV to block the acquisition of HIV.
*/

/*@triggeredBy Encounter with location = community level testing*/

define &quot;PREP Product Oral&quot;:
  exists([MedicationStatement] MS
    where MS.status = 'completed'
    and exists(MS.reasonCode C where C ~ Concepts.&quot;Currently on PrEP&quot;)
    and (MS.medication ~ Concepts.&quot;TDF + FTC - HIV.C.DE18&quot; or
    MS.medication ~ Concepts.&quot;TDF - HIV.C.DE19&quot; or
    MS.medication ~ Concepts.&quot;TDF + 3TC - HIV.C.DE20&quot; or
    MS.medication ~ Concepts.&quot;Other TDF-based regimen&quot;)
  )

define &quot;PREP Product long-acting device&quot;:
  exists([MedicationStatement] MS
    where MS.status = 'completed'
    and exists(MS.reasonCode C where C ~ Concepts.&quot;Currently on PrEP&quot;)
    and MS.medication ~ Concepts.&quot;Dapivirine vaginal ring DVR - HIV.C.DE22&quot;
  )

define &quot;PREP Product long-acting injectable&quot;:
  exists([MedicationStatement] MS
    where MS.status = 'completed'
    and exists(MS.reasonCode C where C ~ Concepts.&quot;Currently on PrEP&quot;)
    and MS.medication ~ Concepts.&quot;CAB-LA - HIV.C.DE23&quot;
  )
  
define &quot;PREP first time&quot;:
  exists([MedicationStatement] MS
    where MS.status = 'completed'
    and exists(MS.reasonCode C where C ~ Concepts.&quot;Currently on PrEP&quot;)
    and exists(MS.statusReason SR where SR ~ Concepts.&quot;First-time user - HIV.C.DE25&quot;)
  )

define &quot;PREP Continuing user&quot;:
  exists([MedicationStatement] MS
    where MS.status = 'completed'
    and exists(MS.reasonCode C where C ~ Concepts.&quot;Currently on PrEP&quot;)
    and exists(MS.statusReason SR where SR ~ Concepts.&quot;Continuing user&quot;)
  )
  
define &quot;PREP Restarting&quot;:
  exists([MedicationStatement] MS
    where MS.status = 'completed'
    and exists(MS.reasonCode C where C ~ Concepts.&quot;Currently on PrEP&quot;)
    and exists(MS.statusReason SR where SR ~ Concepts.&quot;Restarting following a period of not taking PrEP&quot;)
  )

define &quot;Daily_oral_PrEP&quot;:
  exists([MedicationStatement] MS
    where MS.status = 'completed'
    and exists(MS.reasonCode C where C ~ Concepts.&quot;Currently on PrEP&quot;)
    and exists(MS.dosage.additionalInstruction AI where AI ~ Concepts.&quot;Daily oral PrEP&quot;)
  )

define &quot;Event_driven_PrEP&quot;:
  exists([MedicationStatement] MS
    where MS.status = 'completed'
    and exists(MS.reasonCode C where C ~ Concepts.&quot;Currently on PrEP&quot;)
    and exists(MS.dosage.additionalInstruction AI where AI ~ Concepts.&quot;Event-driven PrEP 2+1+1&quot;) 
  )

define &quot;other_dosing_PrEP&quot;:
  exists([MedicationStatement] MS
    where MS.status = 'completed'
    and exists(MS.reasonCode C where C ~ Concepts.&quot;Currently on PrEP&quot;)
    and exists(MS.dosage.additionalInstruction AI where AI ~ Concepts.&quot;Other PrEP dosing type&quot;) 
  )



// TODO: Replace placeholder with relevant CQL logic
define &quot;Currently on PrEP&quot;:
  exists &quot;Currently on PrEP Observation&quot;
define &quot;Currently on PrEP Observation&quot;:
  [Observation: Concepts.&quot;Currently on PrEP&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Currently on PrEP */

/*
@dataElement: HIV.C.DE11 - PrEP dosing type
@activity: HIV.C3 Capture or update client history
@description: Way in which pre-exposure prophylaxis (PrEP) is taken (daily or event-driven)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;PrEP dosing type&quot;:
  exists &quot;PrEP dosing type Observation&quot;
define &quot;PrEP dosing type Observation&quot;:
  [Observation: Concepts.&quot;PrEP dosing type&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of PrEP dosing type */

/*
@dataElement: HIV.C.DE12 - Daily oral PrEP
@activity: HIV.C3 Capture or update client history
@description: Pre-exposure prophylaxis (PrEP) is taken every day
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Daily oral PrEP&quot;:
  exists &quot;Daily oral PrEP Condition&quot;
    or exists &quot;Daily oral PrEP Observation&quot;
define &quot;Daily oral PrEP Condition&quot;:
  [Condition: Concepts.&quot;Daily oral PrEP&quot;]
define &quot;Daily oral PrEP Observation&quot;:
  &quot;PrEP dosing type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Daily oral PrEP&quot;
/* End of Daily oral PrEP */

/*
@dataElement: HIV.C.DE13 - Event-driven PrEP 2+1+1
@activity: HIV.C3 Capture or update client history
@description: Event-driven pre-exposure prophylaxis (PrEP) is taken on an even-driven basis (2+1+1)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Event-driven PrEP 2+1+1&quot;:
  exists &quot;Event-driven PrEP 2+1+1 Condition&quot;
    or exists &quot;Event-driven PrEP 2+1+1 Observation&quot;
define &quot;Event-driven PrEP 2+1+1 Condition&quot;:
  [Condition: Concepts.&quot;Event-driven PrEP 2+1+1&quot;]
define &quot;Event-driven PrEP 2+1+1 Observation&quot;:
  &quot;PrEP dosing type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Event-driven PrEP 2+1+1&quot;
/* End of Event-driven PrEP 2+1+1 */

/*
@dataElement: HIV.C.DE14 - Other PrEP dosing type
@activity: HIV.C3 Capture or update client history
@description: Other PrEP dosing type
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other PrEP dosing type&quot;:
  exists &quot;Other PrEP dosing type Condition&quot;
    or exists &quot;Other PrEP dosing type Observation&quot;
define &quot;Other PrEP dosing type Condition&quot;:
  [Condition: Concepts.&quot;Other PrEP dosing type&quot;]
define &quot;Other PrEP dosing type Observation&quot;:
  &quot;PrEP dosing type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other PrEP dosing type&quot;
/* End of Other PrEP dosing type */

/*
@dataElement: HIV.C.DE17 - Current PrEP regimen
@activity: HIV.C3 Capture or update client history
@description: HIV pre-exposure prophylaxis (PrEP) regimen
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Current PrEP regimen&quot;:
  exists &quot;Current PrEP regimen Observation&quot;
define &quot;Current PrEP regimen Observation&quot;:
  [Observation: Concepts.&quot;Current PrEP regimen&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Current PrEP regimen */

/*
@dataElement: HIV.C.DE18 - TDF + FTC
@activity: HIV.C3 Capture or update client history
@description: Treated with tenofovir disoproxil fumarate (TDF) and emtricitabine (FTC) pre-exposure prophylaxis (PrEP) regimen (oral PrEP)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TDF + FTC C.DE18&quot;:
  exists &quot;TDF + FTC C.DE18 Condition&quot;
    or exists &quot;TDF + FTC C.DE18 Observation&quot;
define &quot;TDF + FTC C.DE18 Condition&quot;:
  [Condition: Concepts.&quot;TDF + FTC - HIV.C.DE18&quot;]
define &quot;TDF + FTC C.DE18 Observation&quot;:
  &quot;Current PrEP regimen Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;TDF + FTC - HIV.C.DE18&quot;
/* End of TDF + FTC C.DE18 */

/*
@dataElement: HIV.C.DE19 - TDF
@activity: HIV.C3 Capture or update client history
@description: Treated with single-agent tenofovir disoproxil fumarate (TDF) pre-exposure prophylaxis (PrEP) regimen (oral PrEP)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TDF C.DE19&quot;:
  exists &quot;TDF C.DE19 Condition&quot;
    or exists &quot;TDF C.DE19 Observation&quot;
define &quot;TDF C.DE19 Condition&quot;:
  [Condition: Concepts.&quot;TDF - HIV.C.DE19&quot;]
define &quot;TDF C.DE19 Observation&quot;:
  &quot;Current PrEP regimen Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;TDF - HIV.C.DE19&quot;
/* End of TDF C.DE19 */

/*
@dataElement: HIV.C.DE20 - TDF + 3TC
@activity: HIV.C3 Capture or update client history
@description: Treated with tenofovir disoproxil fumarate (TDF) and lamivudine (3TC) pre-exposure prophylaxis (PrEP) regimen (oral PrEP)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TDF + 3TC C.DE20&quot;:
  exists &quot;TDF + 3TC C.DE20 Condition&quot;
    or exists &quot;TDF + 3TC C.DE20 Observation&quot;
define &quot;TDF + 3TC C.DE20 Condition&quot;:
  [Condition: Concepts.&quot;TDF + 3TC - HIV.C.DE20&quot;]
define &quot;TDF + 3TC C.DE20 Observation&quot;:
  &quot;Current PrEP regimen Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;TDF + 3TC - HIV.C.DE20&quot;
/* End of TDF + 3TC C.DE20 */

/*
@dataElement: HIV.C.DE21 - Other TDF-based regimen
@activity: HIV.C3 Capture or update client history
@description: Treated with other tenofovir disoproxil fumarate (TDF)-based regimen (oral PrEP)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other TDF-based regimen&quot;:
  exists &quot;Other TDF-based regimen Condition&quot;
    or exists &quot;Other TDF-based regimen Observation&quot;
define &quot;Other TDF-based regimen Condition&quot;:
  [Condition: Concepts.&quot;Other TDF-based regimen&quot;]
define &quot;Other TDF-based regimen Observation&quot;:
  &quot;Current PrEP regimen Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other TDF-based regimen&quot;
/* End of Other TDF-based regimen */

/*
@dataElement: HIV.C.DE22 - Dapivirine vaginal ring DVR
@activity: HIV.C3 Capture or update client history
@description: Dapivirine vaginal ring (DVR) for HIV prevention
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Dapivirine vaginal ring DVR C.DE22&quot;:
  exists &quot;Dapivirine vaginal ring DVR C.DE22 Condition&quot;
    or exists &quot;Dapivirine vaginal ring DVR C.DE22 Observation&quot;
define &quot;Dapivirine vaginal ring DVR C.DE22 Condition&quot;:
  [Condition: Concepts.&quot;Dapivirine vaginal ring DVR - HIV.C.DE22&quot;]
define &quot;Dapivirine vaginal ring DVR C.DE22 Observation&quot;:
  &quot;Current PrEP regimen Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Dapivirine vaginal ring DVR - HIV.C.DE22&quot;
/* End of Dapivirine vaginal ring DVR C.DE22 */

/*
@dataElement: HIV.C.DE23 - CAB-LA
@activity: HIV.C3 Capture or update client history
@description: Long-acting injectable cabotegravir
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;CAB-LA C.DE23&quot;:
  exists &quot;CAB-LA C.DE23 Condition&quot;
    or exists &quot;CAB-LA C.DE23 Observation&quot;
define &quot;CAB-LA C.DE23 Condition&quot;:
  [Condition: Concepts.&quot;CAB-LA - HIV.C.DE23&quot;]
define &quot;CAB-LA C.DE23 Observation&quot;:
  &quot;Current PrEP regimen Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;CAB-LA - HIV.C.DE23&quot;
/* End of CAB-LA C.DE23 */

/*
@dataElement: HIV.C.DE24 - Experience with PrEP
@activity: HIV.C3 Capture or update client history
@description: The client's experience in taking PrEP
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Experience with PrEP&quot;:
  exists &quot;Experience with PrEP Observation&quot;
define &quot;Experience with PrEP Observation&quot;:
  [Observation: Concepts.&quot;Experience with PrEP&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Experience with PrEP */

/*
@dataElement: HIV.C.DE25 - First-time user
@activity: HIV.C3 Capture or update client history
@description: The client has never used pre-exposure prophylaxis (PrEP) before (naive)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;First-time user C.DE25&quot;:
  exists &quot;First-time user C.DE25 Condition&quot;
    or exists &quot;First-time user C.DE25 Observation&quot;
define &quot;First-time user C.DE25 Condition&quot;:
  [Condition: Concepts.&quot;First-time user - HIV.C.DE25&quot;]
define &quot;First-time user C.DE25 Observation&quot;:
  &quot;Experience with PrEP Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;First-time user - HIV.C.DE25&quot;
/* End of First-time user C.DE25 */

/*
@dataElement: HIV.C.DE26 - Continuing user
@activity: HIV.C3 Capture or update client history
@description: The client has used PrEP before and is continuing to use PrEP
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Continuing user&quot;:
  exists &quot;Continuing user Condition&quot;
    or exists &quot;Continuing user Observation&quot;
define &quot;Continuing user Condition&quot;:
  [Condition: Concepts.&quot;Continuing user&quot;]
define &quot;Continuing user Observation&quot;:
  &quot;Experience with PrEP Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Continuing user&quot;
/* End of Continuing user */

/*
@dataElement: HIV.C.DE27 - Restarting following a period of not taking PrEP
@activity: HIV.C3 Capture or update client history
@description: The client is restarting PrEP following a period of not taking PrEP
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Restarting following a period of not taking PrEP&quot;:
  exists &quot;Restarting following a period of not taking PrEP Condition&quot;
    or exists &quot;Restarting following a period of not taking PrEP Observation&quot;
define &quot;Restarting following a period of not taking PrEP Condition&quot;:
  [Condition: Concepts.&quot;Restarting following a period of not taking PrEP&quot;]
define &quot;Restarting following a period of not taking PrEP Observation&quot;:
  &quot;Experience with PrEP Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Restarting following a period of not taking PrEP&quot;
/* End of Restarting following a period of not taking PrEP */

/*
@dataElement: HIV.C.DE31 - PEP history
@activity: HIV.C3 Capture or update client history
@description: The client's history in taking post-exposure prophylaxis (PEP) for HIV prevention
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;PEP history&quot;:
  exists &quot;PEP history Observation&quot;
define &quot;PEP history Observation&quot;:
  [Observation: Concepts.&quot;PEP history&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of PEP history */

/*
@dataElement: HIV.C.DE32 - First-time user
@activity: HIV.C3 Capture or update client history
@description: The client has never used post-exposure prophylaxis (PEP) before
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;First-time user C.DE32&quot;:
  exists &quot;First-time user C.DE32 Condition&quot;
    or exists &quot;First-time user C.DE32 Observation&quot;
define &quot;First-time user C.DE32 Condition&quot;:
  [Condition: Concepts.&quot;First-time user - HIV.C.DE32&quot;]
define &quot;First-time user C.DE32 Observation&quot;:
  &quot;PEP history Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;First-time user - HIV.C.DE32&quot;
/* End of First-time user C.DE32 */

/*
@dataElement: HIV.C.DE33 - Repeat user
@activity: HIV.C3 Capture or update client history
@description: The client has used post-exposure prophylaxis (PEP) before
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Repeat user&quot;:
  exists &quot;Repeat user Condition&quot;
    or exists &quot;Repeat user Observation&quot;
define &quot;Repeat user Condition&quot;:
  [Condition: Concepts.&quot;Repeat user&quot;]
define &quot;Repeat user Observation&quot;:
  &quot;PEP history Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Repeat user&quot;
/* End of Repeat user */

/*
@dataElement: HIV.C.DE35 - Date client completes PEP course
@activity: HIV.C3 Capture or update client history
@description: Date client completes PEP course
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date client completes PEP course&quot;:
  [Observation: Concepts.&quot;Date client completes PEP course&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date client completes PEP course Value&quot;:
  &quot;Date client completes PEP course&quot; O
  return O.value
/* End of Date client completes PEP course */

/*
@dataElement: HIV.C.DE36 - Signs of substantial risk of HIV infection
@activity: HIV.C3 Capture or update client history
@description: Signs the client is at a substantial risk of HIV infection
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Signs of substantial risk of HIV infection C.DE36&quot;:
  exists &quot;Signs of substantial risk of HIV infection C.DE36 Observation&quot;
define &quot;Signs of substantial risk of HIV infection C.DE36 Observation&quot;:
  [Observation: Concepts.&quot;Signs of substantial risk of HIV infection - HIV.C.DE36&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Signs of substantial risk of HIV infection C.DE36 */

/*
@dataElement: HIV.C.DE37 - No condom use during sex with more than one partner in the past 6 months
@activity: HIV.C3 Capture or update client history
@description: Recent vaginal or anal sexual intercourse without a condom with more than one partner
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;No condom use during sex with more than one partner in the past 6 months C.DE37&quot;:
  exists &quot;No condom use during sex with more than one partner in the past 6 months C.DE37 Condition&quot;
    or exists &quot;No condom use during sex with more than one partner in the past 6 months C.DE37 Observation&quot;
define &quot;No condom use during sex with more than one partner in the past 6 months C.DE37 Condition&quot;:
  [Condition: Concepts.&quot;No condom use during sex with more than one partner in the past 6 months - HIV.C.DE37&quot;]
define &quot;No condom use during sex with more than one partner in the past 6 months C.DE37 Observation&quot;:
  &quot;Signs of substantial risk of HIV infection C.DE36 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;No condom use during sex with more than one partner in the past 6 months - HIV.C.DE37&quot;
/* End of No condom use during sex with more than one partner in the past 6 months C.DE37 */

/*
@dataElement: HIV.C.DE38 - STI in the past 6 months
@activity: HIV.C3 Capture or update client history
@description: A recent history (in the last 6 months) of a sexually transmitted infection (STI ) by laboratory testing, self-report or syndromic STI treatment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;STI in the past 6 months C.DE38&quot;:
  exists &quot;STI in the past 6 months C.DE38 Condition&quot;
    or exists &quot;STI in the past 6 months C.DE38 Observation&quot;
define &quot;STI in the past 6 months C.DE38 Condition&quot;:
  [Condition: Concepts.&quot;STI in the past 6 months - HIV.C.DE38&quot;]
define &quot;STI in the past 6 months C.DE38 Observation&quot;:
  &quot;Signs of substantial risk of HIV infection C.DE36 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;STI in the past 6 months - HIV.C.DE38&quot;
/* End of STI in the past 6 months C.DE38 */

/*
@dataElement: HIV.C.DE39 - A sexual partner in the past 6 months had one or more HIV risk factors
@activity: HIV.C3 Capture or update client history
@description: A recent sex partner of the client had HIV risk factors
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;A sexual partner in the past 6 months had one or more HIV risk factors C.DE39&quot;:
  exists &quot;A sexual partner in the past 6 months had one or more HIV risk factors C.DE39 Condition&quot;
    or exists &quot;A sexual partner in the past 6 months had one or more HIV risk factors C.DE39 Observation&quot;
define &quot;A sexual partner in the past 6 months had one or more HIV risk factors C.DE39 Condition&quot;:
  [Condition: Concepts.&quot;A sexual partner in the past 6 months had one or more HIV risk factors - HIV.C.DE39&quot;]
define &quot;A sexual partner in the past 6 months had one or more HIV risk factors C.DE39 Observation&quot;:
  &quot;Signs of substantial risk of HIV infection C.DE36 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;A sexual partner in the past 6 months had one or more HIV risk factors - HIV.C.DE39&quot;
/* End of A sexual partner in the past 6 months had one or more HIV risk factors C.DE39 */

/*
@dataElement: HIV.C.DE40 - PrEP requested by client
@activity: HIV.C3 Capture or update client history
@description: Client is requesting PrEP, reflecting a decision-making process has already taken place and suggesting of substantial risk of HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;PrEP requested by client C.DE40&quot;:
  exists &quot;PrEP requested by client C.DE40 Condition&quot;
    or exists &quot;PrEP requested by client C.DE40 Observation&quot;
define &quot;PrEP requested by client C.DE40 Condition&quot;:
  [Condition: Concepts.&quot;PrEP requested by client - HIV.C.DE40&quot;]
define &quot;PrEP requested by client C.DE40 Observation&quot;:
  &quot;Signs of substantial risk of HIV infection C.DE36 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;PrEP requested by client - HIV.C.DE40&quot;
/* End of PrEP requested by client C.DE40 */

/*
@dataElement: HIV.C.DE46 - Acute HIV infection symptoms
@activity: HIV.C3 Capture or update client history
@description: Symptoms that could suggest an acute HIV infection
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Acute HIV infection symptoms C.DE46&quot;:
  exists &quot;Acute HIV infection symptoms C.DE46 Observation&quot;
define &quot;Acute HIV infection symptoms C.DE46 Observation&quot;:
  [Observation: Concepts.&quot;Acute HIV infection symptoms - HIV.C.DE46&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Acute HIV infection symptoms C.DE46 */

/*
@dataElement: HIV.C.DE47 - Fever
@activity: HIV.C3 Capture or update client history
@description: Client's symptoms include a fever
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Fever&quot;:
  exists &quot;Fever Condition&quot;
    or exists &quot;Fever Observation&quot;
define &quot;Fever Condition&quot;:
  [Condition: Concepts.&quot;Fever&quot;]
define &quot;Fever Observation&quot;:
  &quot;Acute HIV infection symptoms C.DE46 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Fever&quot;
/* End of Fever */

/*
@dataElement: HIV.C.DE48 - Sore throat
@activity: HIV.C3 Capture or update client history
@description: Client's symptoms include a sore throat
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sore throat&quot;:
  exists &quot;Sore throat Condition&quot;
    or exists &quot;Sore throat Observation&quot;
define &quot;Sore throat Condition&quot;:
  [Condition: Concepts.&quot;Sore throat&quot;]
define &quot;Sore throat Observation&quot;:
  &quot;Acute HIV infection symptoms C.DE46 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Sore throat&quot;
/* End of Sore throat */

/*
@dataElement: HIV.C.DE49 - Aches
@activity: HIV.C3 Capture or update client history
@description: Client's symptoms include aches
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Aches&quot;:
  exists &quot;Aches Condition&quot;
    or exists &quot;Aches Observation&quot;
define &quot;Aches Condition&quot;:
  [Condition: Concepts.&quot;Aches&quot;]
define &quot;Aches Observation&quot;:
  &quot;Acute HIV infection symptoms C.DE46 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Aches&quot;
/* End of Aches */

/*
@dataElement: HIV.C.DE50 - Pains
@activity: HIV.C3 Capture or update client history
@description: Client's symptoms include pains
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Pains&quot;:
  exists &quot;Pains Condition&quot;
    or exists &quot;Pains Observation&quot;
define &quot;Pains Condition&quot;:
  [Condition: Concepts.&quot;Pains&quot;]
define &quot;Pains Observation&quot;:
  &quot;Acute HIV infection symptoms C.DE46 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Pains&quot;
/* End of Pains */

/*
@dataElement: HIV.C.DE51 - Swollen glands
@activity: HIV.C3 Capture or update client history
@description: Client's symptoms include swollen glands
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Swollen glands&quot;:
  exists &quot;Swollen glands Condition&quot;
    or exists &quot;Swollen glands Observation&quot;
define &quot;Swollen glands Condition&quot;:
  [Condition: Concepts.&quot;Swollen glands&quot;]
define &quot;Swollen glands Observation&quot;:
  &quot;Acute HIV infection symptoms C.DE46 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Swollen glands&quot;
/* End of Swollen glands */

/*
@dataElement: HIV.C.DE52 - Mouth sores
@activity: HIV.C3 Capture or update client history
@description: Client's symptoms include a mouth sores
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Mouth sores&quot;:
  exists &quot;Mouth sores Condition&quot;
    or exists &quot;Mouth sores Observation&quot;
define &quot;Mouth sores Condition&quot;:
  [Condition: Concepts.&quot;Mouth sores&quot;]
define &quot;Mouth sores Observation&quot;:
  &quot;Acute HIV infection symptoms C.DE46 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Mouth sores&quot;
/* End of Mouth sores */

/*
@dataElement: HIV.C.DE53 - Headaches
@activity: HIV.C3 Capture or update client history
@description: Client's symptoms include a headaches
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Headaches&quot;:
  exists &quot;Headaches Condition&quot;
    or exists &quot;Headaches Observation&quot;
define &quot;Headaches Condition&quot;:
  [Condition: Concepts.&quot;Headaches&quot;]
define &quot;Headaches Observation&quot;:
  &quot;Acute HIV infection symptoms C.DE46 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Headaches&quot;
/* End of Headaches */

/*
@dataElement: HIV.C.DE54 - Rash
@activity: HIV.C3 Capture or update client history
@description: Client's symptoms include a rash
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Rash&quot;:
  exists &quot;Rash Condition&quot;
    or exists &quot;Rash Observation&quot;
define &quot;Rash Condition&quot;:
  [Condition: Concepts.&quot;Rash&quot;]
define &quot;Rash Observation&quot;:
  &quot;Acute HIV infection symptoms C.DE46 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Rash&quot;
/* End of Rash */

/*
@dataElement: HIV.C.DE55 - Sex partners HIV treatment status
@activity: HIV.C3 Capture or update client history
@description: Treatment adherence of client's sex partner for partners that are HIV-positive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sex partners HIV treatment status&quot;:
  exists &quot;Sex partners HIV treatment status Observation&quot;
define &quot;Sex partners HIV treatment status Observation&quot;:
  [Observation: Concepts.&quot;Sex partners HIV treatment status&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Sex partners HIV treatment status */

/*
@dataElement: HIV.C.DE56 - Not on ART
@activity: HIV.C3 Capture or update client history
@description: Sex partner is HIV-positive and not on ART
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Not on ART&quot;:
  exists &quot;Not on ART Condition&quot;
    or exists &quot;Not on ART Observation&quot;
define &quot;Not on ART Condition&quot;:
  [Condition: Concepts.&quot;Not on ART&quot;]
define &quot;Not on ART Observation&quot;:
  &quot;Sex partners HIV treatment status Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Not on ART&quot;
/* End of Not on ART */

/*
@dataElement: HIV.C.DE57 - On ART less than 6 months
@activity: HIV.C3 Capture or update client history
@description: Sex partner is HIV-positive and is on ART less than 6 months. ART may take up to 6 months to suppress viral load. In studies of serodiscordant couples, pre-exposure prophylaxis (PrEP) has provided a useful bridge to full viral suppression by the partner during that time.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;On ART less than 6 months&quot;:
  exists &quot;On ART less than 6 months Condition&quot;
    or exists &quot;On ART less than 6 months Observation&quot;
define &quot;On ART less than 6 months Condition&quot;:
  [Condition: Concepts.&quot;On ART less than 6 months&quot;]
define &quot;On ART less than 6 months Observation&quot;:
  &quot;Sex partners HIV treatment status Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;On ART less than 6 months&quot;
/* End of On ART less than 6 months */

/*
@dataElement: HIV.C.DE58 - Partner has suspected low adherence to ART
@activity: HIV.C3 Capture or update client history
@description: Sex partner is HIV-positive and is suspected to have low adherence to ART. There have been gaps in the partner's treatment adherence or the couple is not communicating openly about treatment adherence and viral load test results.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Partner has suspected low adherence to ART&quot;:
  exists &quot;Partner has suspected low adherence to ART Condition&quot;
    or exists &quot;Partner has suspected low adherence to ART Observation&quot;
define &quot;Partner has suspected low adherence to ART Condition&quot;:
  [Condition: Concepts.&quot;Partner has suspected low adherence to ART&quot;]
define &quot;Partner has suspected low adherence to ART Observation&quot;:
  &quot;Sex partners HIV treatment status Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Partner has suspected low adherence to ART&quot;
/* End of Partner has suspected low adherence to ART */

/*
@dataElement: HIV.C.DE59 - Partner is not virally suppressed
@activity: HIV.C3 Capture or update client history
@description: Sex partner is HIV-positive and not virally suppressed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Partner is not virally suppressed&quot;:
  exists &quot;Partner is not virally suppressed Condition&quot;
    or exists &quot;Partner is not virally suppressed Observation&quot;
define &quot;Partner is not virally suppressed Condition&quot;:
  [Condition: Concepts.&quot;Partner is not virally suppressed&quot;]
define &quot;Partner is not virally suppressed Observation&quot;:
  &quot;Sex partners HIV treatment status Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Partner is not virally suppressed&quot;
/* End of Partner is not virally suppressed */

/*
@dataElement: HIV.C.DE60 - Partner is virally suppressed and has been on ART for 6 months or more
@activity: HIV.C3 Capture or update client history
@description: Sex partner is HIV-positive and virally suppressed with 6 months or more on ART
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Partner is virally suppressed and has been on ART for 6 months or more&quot;:
  exists &quot;Partner is virally suppressed and has been on ART for 6 months or more Condition&quot;
    or exists &quot;Partner is virally suppressed and has been on ART for 6 months or more Observation&quot;
define &quot;Partner is virally suppressed and has been on ART for 6 months or more Condition&quot;:
  [Condition: Concepts.&quot;Partner is virally suppressed and has been on ART for 6 months or more&quot;]
define &quot;Partner is virally suppressed and has been on ART for 6 months or more Observation&quot;:
  &quot;Sex partners HIV treatment status Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Partner is virally suppressed and has been on ART for 6 months or more&quot;
/* End of Partner is virally suppressed and has been on ART for 6 months or more */

/*
@dataElement: HIV.C.DE61 - Suitable for PrEP
@activity: HIV.C8 Suitable for PrEP or PEP?
@description: The client is suitable for PrEP
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Suitable for PrEP&quot;:
  exists &quot;Suitable for PrEP Observation&quot;
define &quot;Suitable for PrEP Observation&quot;:
  [Observation: Concepts.&quot;Suitable for PrEP&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Suitable for PrEP */

/*
@dataElement: HIV.C.DE74 - Date medications prescribed
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Date the client was prescribed medications
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date medications prescribed C.DE74&quot;:
  [Observation: Concepts.&quot;Date medications prescribed - HIV.C.DE74&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date medications prescribed C.DE74 Value&quot;:
  &quot;Date medications prescribed C.DE74&quot; O
  return O.value
/* End of Date medications prescribed C.DE74 */

/*
@dataElement: HIV.C.DE75 - Medications prescribed
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Medications the client was prescribed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Medications prescribed C.DE75&quot;:
  exists &quot;Medications prescribed C.DE75 Observation&quot;
define &quot;Medications prescribed C.DE75 Observation&quot;:
  [Observation: Concepts.&quot;Medications prescribed - HIV.C.DE75&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Medications prescribed C.DE75 */

/*
@dataElement: HIV.C.DE76 - PrEP for HIV prevention
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Client was prescribed pre-exposure prophylaxis (PrEP) for HIV prevention
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;PrEP for HIV prevention&quot;:
  exists &quot;PrEP for HIV prevention Condition&quot;
    or exists &quot;PrEP for HIV prevention Observation&quot;
define &quot;PrEP for HIV prevention Condition&quot;:
  [Condition: Concepts.&quot;PrEP for HIV prevention&quot;]
define &quot;PrEP for HIV prevention Observation&quot;:
  &quot;Medications prescribed C.DE75 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;PrEP for HIV prevention&quot;
/* End of PrEP for HIV prevention */

/*
@dataElement: HIV.C.DE77 - PEP for HIV prevention
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Client was prescribed post-exposure prophylaxis (PEP) for HIV prevention
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;PEP for HIV prevention&quot;:
  exists &quot;PEP for HIV prevention Condition&quot;
    or exists &quot;PEP for HIV prevention Observation&quot;
define &quot;PEP for HIV prevention Condition&quot;:
  [Condition: Concepts.&quot;PEP for HIV prevention&quot;]
define &quot;PEP for HIV prevention Observation&quot;:
  &quot;Medications prescribed C.DE75 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;PEP for HIV prevention&quot;
/* End of PEP for HIV prevention */

/*
@dataElement: HIV.C.DE78 - Other
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Client was prescribed other medications
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other C.DE78&quot;:
  exists &quot;Other C.DE78 Condition&quot;
    or exists &quot;Other C.DE78 Observation&quot;
define &quot;Other C.DE78 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.C.DE78&quot;]
define &quot;Other C.DE78 Observation&quot;:
  &quot;Medications prescribed C.DE75 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.C.DE78&quot;
/* End of Other C.DE78 */

/*
@dataElement: HIV.C.DE80 - PrEP product prescribed
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: PrEP product that the client was prescribed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;PrEP product prescribed&quot;:
  exists &quot;PrEP product prescribed Observation&quot;
define &quot;PrEP product prescribed Observation&quot;:
  [Observation: Concepts.&quot;PrEP product prescribed&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of PrEP product prescribed */

/*
@dataElement: HIV.C.DE81 - Oral PrEP
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Client was prescribed oral PrEP
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Oral PrEP&quot;:
  exists &quot;Oral PrEP Condition&quot;
    or exists &quot;Oral PrEP Observation&quot;
define &quot;Oral PrEP Condition&quot;:
  [Condition: Concepts.&quot;Oral PrEP&quot;]
define &quot;Oral PrEP Observation&quot;:
  &quot;PrEP product prescribed Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Oral PrEP&quot;
/* End of Oral PrEP */

/*
@dataElement: HIV.C.DE82 - Dapivirine vaginal ring DVR
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Client was prescribed dapivirine vaginal ring (DVR)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Dapivirine vaginal ring DVR C.DE82&quot;:
  exists &quot;Dapivirine vaginal ring DVR C.DE82 Condition&quot;
    or exists &quot;Dapivirine vaginal ring DVR C.DE82 Observation&quot;
define &quot;Dapivirine vaginal ring DVR C.DE82 Condition&quot;:
  [Condition: Concepts.&quot;Dapivirine vaginal ring DVR - HIV.C.DE82&quot;]
define &quot;Dapivirine vaginal ring DVR C.DE82 Observation&quot;:
  &quot;PrEP product prescribed Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Dapivirine vaginal ring DVR - HIV.C.DE82&quot;
/* End of Dapivirine vaginal ring DVR C.DE82 */

/*
@dataElement: HIV.C.DE83 - CAB-LA
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Client was prescribed long-acting cabotegravir (CAB-LA)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;CAB-LA C.DE83&quot;:
  exists &quot;CAB-LA C.DE83 Condition&quot;
    or exists &quot;CAB-LA C.DE83 Observation&quot;
define &quot;CAB-LA C.DE83 Condition&quot;:
  [Condition: Concepts.&quot;CAB-LA - HIV.C.DE83&quot;]
define &quot;CAB-LA C.DE83 Observation&quot;:
  &quot;PrEP product prescribed Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;CAB-LA - HIV.C.DE83&quot;
/* End of CAB-LA C.DE83 */

/*
@dataElement: HIV.C.DE84 - Other
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Client was prescribed other PrEP product
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other C.DE84&quot;:
  exists &quot;Other C.DE84 Condition&quot;
    or exists &quot;Other C.DE84 Observation&quot;
define &quot;Other C.DE84 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.C.DE84&quot;]
define &quot;Other C.DE84 Observation&quot;:
  &quot;PrEP product prescribed Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.C.DE84&quot;
/* End of Other C.DE84 */

/*
@dataElement: HIV.C.DE91 - Preferred PEP backbone regimen
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Preferred backbone regimen for PEP
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Preferred PEP backbone regimen&quot;:
  exists &quot;Preferred PEP backbone regimen Observation&quot;
define &quot;Preferred PEP backbone regimen Observation&quot;:
  [Observation: Concepts.&quot;Preferred PEP backbone regimen&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Preferred PEP backbone regimen */

/*
@dataElement: HIV.C.DE92 - TDF + 3TC
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Preferred backbone containing tenofovir disoproxil fumarate and lamivudine
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TDF + 3TC C.DE92&quot;:
  exists &quot;TDF + 3TC C.DE92 Condition&quot;
    or exists &quot;TDF + 3TC C.DE92 Observation&quot;
define &quot;TDF + 3TC C.DE92 Condition&quot;:
  [Condition: Concepts.&quot;TDF + 3TC - HIV.C.DE92&quot;]
define &quot;TDF + 3TC C.DE92 Observation&quot;:
  &quot;Preferred PEP backbone regimen Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;TDF + 3TC - HIV.C.DE92&quot;
/* End of TDF + 3TC C.DE92 */

/*
@dataElement: HIV.C.DE93 - TDF + FTC
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Preferred backbone containing tenofovir disoproxil fumarate and emtricitabine
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TDF + FTC C.DE93&quot;:
  exists &quot;TDF + FTC C.DE93 Condition&quot;
    or exists &quot;TDF + FTC C.DE93 Observation&quot;
define &quot;TDF + FTC C.DE93 Condition&quot;:
  [Condition: Concepts.&quot;TDF + FTC - HIV.C.DE93&quot;]
define &quot;TDF + FTC C.DE93 Observation&quot;:
  &quot;Preferred PEP backbone regimen Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;TDF + FTC - HIV.C.DE93&quot;
/* End of TDF + FTC C.DE93 */

/*
@dataElement: HIV.C.DE94 - AZT + 3TC
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Preferred backbone containing zidovudine and lamivudine
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;AZT + 3TC&quot;:
  exists &quot;AZT + 3TC Condition&quot;
    or exists &quot;AZT + 3TC Observation&quot;
define &quot;AZT + 3TC Condition&quot;:
  [Condition: Concepts.&quot;AZT + 3TC&quot;]
define &quot;AZT + 3TC Observation&quot;:
  &quot;Preferred PEP backbone regimen Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;AZT + 3TC&quot;
/* End of AZT + 3TC */

/*
@dataElement: HIV.C.DE95 - Alternative PEP backbone regimen
@activity: HIV.C3 Capture or update client history
@description: Alternative backbone regimen for PEP
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Alternative PEP backbone regimen&quot;:
  exists &quot;Alternative PEP backbone regimen Observation&quot;
define &quot;Alternative PEP backbone regimen Observation&quot;:
  [Observation: Concepts.&quot;Alternative PEP backbone regimen&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Alternative PEP backbone regimen */

/*
@dataElement: HIV.C.DE96 - ABC + 3TC
@activity: HIV.C3 Capture or update client history
@description: Alternative backbone containing abacavir and lamivudine
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;ABC + 3TC&quot;:
  exists &quot;ABC + 3TC Condition&quot;
    or exists &quot;ABC + 3TC Observation&quot;
define &quot;ABC + 3TC Condition&quot;:
  [Condition: Concepts.&quot;ABC + 3TC&quot;]
define &quot;ABC + 3TC Observation&quot;:
  &quot;Alternative PEP backbone regimen Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;ABC + 3TC&quot;
/* End of ABC + 3TC */

/*
@dataElement: HIV.C.DE97 - TDF + 3TC
@activity: HIV.C3 Capture or update client history
@description: Alternative backbone containing tenofovir disoproxil fumarate and lamivudine
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TDF + 3TC C.DE97&quot;:
  exists &quot;TDF + 3TC C.DE97 Condition&quot;
    or exists &quot;TDF + 3TC C.DE97 Observation&quot;
define &quot;TDF + 3TC C.DE97 Condition&quot;:
  [Condition: Concepts.&quot;TDF + 3TC - HIV.C.DE97&quot;]
define &quot;TDF + 3TC C.DE97 Observation&quot;:
  &quot;Alternative PEP backbone regimen Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;TDF + 3TC - HIV.C.DE97&quot;
/* End of TDF + 3TC C.DE97 */

/*
@dataElement: HIV.C.DE98 - TDF + FTC
@activity: HIV.C3 Capture or update client history
@description: Alternative backbone containing tenofovir disoproxil fumarate and emtricitabine
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TDF + FTC C.DE98&quot;:
  exists &quot;TDF + FTC C.DE98 Condition&quot;
    or exists &quot;TDF + FTC C.DE98 Observation&quot;
define &quot;TDF + FTC C.DE98 Condition&quot;:
  [Condition: Concepts.&quot;TDF + FTC - HIV.C.DE98&quot;]
define &quot;TDF + FTC C.DE98 Observation&quot;:
  &quot;Alternative PEP backbone regimen Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;TDF + FTC - HIV.C.DE98&quot;
/* End of TDF + FTC C.DE98 */

/*
@dataElement: HIV.C.DE99 - Preferred third PEP drug
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Preferred third drug for PEP
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Preferred third PEP drug&quot;:
  exists &quot;Preferred third PEP drug Observation&quot;
define &quot;Preferred third PEP drug Observation&quot;:
  [Observation: Concepts.&quot;Preferred third PEP drug&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Preferred third PEP drug */

/*
@dataElement: HIV.C.DE100 - DTG
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Preferred third drug of dolutegravir
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;DTG C.DE100&quot;:
  exists &quot;DTG C.DE100 Condition&quot;
    or exists &quot;DTG C.DE100 Observation&quot;
define &quot;DTG C.DE100 Condition&quot;:
  [Condition: Concepts.&quot;DTG - HIV.C.DE100&quot;]
define &quot;DTG C.DE100 Observation&quot;:
  &quot;Preferred third PEP drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;DTG - HIV.C.DE100&quot;
/* End of DTG C.DE100 */

/*
@dataElement: HIV.C.DE101 - Alternative third PEP drug
@activity: HIV.C3 Capture or update client history
@description: Alternative third drug for PEP
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Alternative third PEP drug&quot;:
  exists &quot;Alternative third PEP drug Observation&quot;
define &quot;Alternative third PEP drug Observation&quot;:
  [Observation: Concepts.&quot;Alternative third PEP drug&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Alternative third PEP drug */

/*
@dataElement: HIV.C.DE102 - ATV/r
@activity: HIV.C3 Capture or update client history
@description: Alternative third drug of atazanavir/ritonavir (ATV/r)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;ATV/r C.DE102&quot;:
  exists &quot;ATV/r C.DE102 Condition&quot;
    or exists &quot;ATV/r C.DE102 Observation&quot;
define &quot;ATV/r C.DE102 Condition&quot;:
  [Condition: Concepts.&quot;ATV/r - HIV.C.DE102&quot;]
define &quot;ATV/r C.DE102 Observation&quot;:
  &quot;Alternative third PEP drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;ATV/r - HIV.C.DE102&quot;
/* End of ATV/r C.DE102 */

/*
@dataElement: HIV.C.DE103 - DRV/r
@activity: HIV.C3 Capture or update client history
@description: Alternative third drug of darunavir/ritonavir (DRV/r)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;DRV/r C.DE103&quot;:
  exists &quot;DRV/r C.DE103 Condition&quot;
    or exists &quot;DRV/r C.DE103 Observation&quot;
define &quot;DRV/r C.DE103 Condition&quot;:
  [Condition: Concepts.&quot;DRV/r - HIV.C.DE103&quot;]
define &quot;DRV/r C.DE103 Observation&quot;:
  &quot;Alternative third PEP drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;DRV/r - HIV.C.DE103&quot;
/* End of DRV/r C.DE103 */

/*
@dataElement: HIV.C.DE104 - LPV/r
@activity: HIV.C3 Capture or update client history
@description: Alternative third drug of lopinavir/ritonavir (LPV/r)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;LPV/r C.DE104&quot;:
  exists &quot;LPV/r C.DE104 Condition&quot;
    or exists &quot;LPV/r C.DE104 Observation&quot;
define &quot;LPV/r C.DE104 Condition&quot;:
  [Condition: Concepts.&quot;LPV/r - HIV.C.DE104&quot;]
define &quot;LPV/r C.DE104 Observation&quot;:
  &quot;Alternative third PEP drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;LPV/r - HIV.C.DE104&quot;
/* End of LPV/r C.DE104 */

/*
@dataElement: HIV.C.DE105 - RAL
@activity: HIV.C3 Capture or update client history
@description: Alternative third drug of raltegravir (RAL)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;RAL C.DE105&quot;:
  exists &quot;RAL C.DE105 Condition&quot;
    or exists &quot;RAL C.DE105 Observation&quot;
define &quot;RAL C.DE105 Condition&quot;:
  [Condition: Concepts.&quot;RAL - HIV.C.DE105&quot;]
define &quot;RAL C.DE105 Observation&quot;:
  &quot;Alternative third PEP drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;RAL - HIV.C.DE105&quot;
/* End of RAL C.DE105 */

/*
@dataElement: HIV.C.DE106 - Estimated creatinine clearance
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Estimated creatinine clearance of the client returned from lab in mL/min
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Estimated creatinine clearance&quot;:
  [Observation: Concepts.&quot;Estimated creatinine clearance&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Estimated creatinine clearance Value&quot;:
  &quot;Estimated creatinine clearance&quot; O
  return O.value
/* End of Estimated creatinine clearance */

/*
@dataElement: HIV.C.DE112 - Contraindications to PrEP usage
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Listing of contraindications to pre-exposure prophylaxis (PrEP)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Contraindications to PrEP usage&quot;:
  exists &quot;Contraindications to PrEP usage Observation&quot;
define &quot;Contraindications to PrEP usage Observation&quot;:
  [Observation: Concepts.&quot;Contraindications to PrEP usage&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Contraindications to PrEP usage */

/*
@dataElement: HIV.C.DE113 - Tenofovir disoproxil fumarate TDF allergy or contraindication
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Allergy to pre-exposure prophylaxis (PrEP) tenofovir disoproxil fumarate (TDF)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Tenofovir disoproxil fumarate TDF allergy or contraindication&quot;:
  exists &quot;Tenofovir disoproxil fumarate TDF allergy or contraindication Condition&quot;
    or exists &quot;Tenofovir disoproxil fumarate TDF allergy or contraindication Observation&quot;
define &quot;Tenofovir disoproxil fumarate TDF allergy or contraindication Condition&quot;:
  [Condition: Concepts.&quot;Tenofovir disoproxil fumarate TDF allergy or contraindication&quot;]
define &quot;Tenofovir disoproxil fumarate TDF allergy or contraindication Observation&quot;:
  &quot;Contraindications to PrEP usage Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Tenofovir disoproxil fumarate TDF allergy or contraindication&quot;
/* End of Tenofovir disoproxil fumarate TDF allergy or contraindication */

/*
@dataElement: HIV.C.DE114 - HIV-positive
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Client is HIV-positive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV-positive C.DE114&quot;:
  exists &quot;HIV-positive C.DE114 Condition&quot;
    or exists &quot;HIV-positive C.DE114 Observation&quot;
define &quot;HIV-positive C.DE114 Condition&quot;:
  [Condition: Concepts.&quot;HIV-positive - HIV.C.DE114&quot;]
define &quot;HIV-positive C.DE114 Observation&quot;:
  &quot;Contraindications to PrEP usage Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV-positive - HIV.C.DE114&quot;
/* End of HIV-positive C.DE114 */

/*
@dataElement: HIV.C.DE115 - Low estimated creatinine clearance
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Estimated creatinine clearance of less than 60 ml/min (if known)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Low estimated creatinine clearance&quot;:
  exists &quot;Low estimated creatinine clearance Condition&quot;
    or exists &quot;Low estimated creatinine clearance Observation&quot;
define &quot;Low estimated creatinine clearance Condition&quot;:
  [Condition: Concepts.&quot;Low estimated creatinine clearance&quot;]
define &quot;Low estimated creatinine clearance Observation&quot;:
  &quot;Contraindications to PrEP usage Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Low estimated creatinine clearance&quot;
/* End of Low estimated creatinine clearance */

/*
@dataElement: HIV.C.DE116 - Acute HIV infection symptoms
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Symptoms that could suggest an acute HIV infection
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Acute HIV infection symptoms C.DE116&quot;:
  exists &quot;Acute HIV infection symptoms C.DE116 Condition&quot;
    or exists &quot;Acute HIV infection symptoms C.DE116 Observation&quot;
define &quot;Acute HIV infection symptoms C.DE116 Condition&quot;:
  [Condition: Concepts.&quot;Acute HIV infection symptoms - HIV.C.DE116&quot;]
define &quot;Acute HIV infection symptoms C.DE116 Observation&quot;:
  &quot;Contraindications to PrEP usage Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Acute HIV infection symptoms - HIV.C.DE116&quot;
/* End of Acute HIV infection symptoms C.DE116 */

/*
@dataElement: HIV.C.DE117 - Probable recent exposure to HIV
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: When the client is reported to have had probable recent exposure to HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Probable recent exposure to HIV&quot;:
  exists &quot;Probable recent exposure to HIV Condition&quot;
    or exists &quot;Probable recent exposure to HIV Observation&quot;
define &quot;Probable recent exposure to HIV Condition&quot;:
  [Condition: Concepts.&quot;Probable recent exposure to HIV&quot;]
define &quot;Probable recent exposure to HIV Observation&quot;:
  &quot;Contraindications to PrEP usage Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Probable recent exposure to HIV&quot;
/* End of Probable recent exposure to HIV */

/*
@dataElement: HIV.C.DE118 - Other allergy or contraindication to a medicine in the PrEP regimen
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Client has another allergy or contraindication to a medicine in the pre-exposure prophylaxis (PrEP) regimen
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other allergy or contraindication to a medicine in the PrEP regimen&quot;:
  exists &quot;Other allergy or contraindication to a medicine in the PrEP regimen Condition&quot;
    or exists &quot;Other allergy or contraindication to a medicine in the PrEP regimen Observation&quot;
define &quot;Other allergy or contraindication to a medicine in the PrEP regimen Condition&quot;:
  [Condition: Concepts.&quot;Other allergy or contraindication to a medicine in the PrEP regimen&quot;]
define &quot;Other allergy or contraindication to a medicine in the PrEP regimen Observation&quot;:
  &quot;Contraindications to PrEP usage Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other allergy or contraindication to a medicine in the PrEP regimen&quot;
/* End of Other allergy or contraindication to a medicine in the PrEP regimen */

/*
@dataElement: HIV.C.DE121 - Number of days prescribed
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Days of medication client has been prescribed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Number of days prescribed C.DE121&quot;:
  [Observation: Concepts.&quot;Number of days prescribed - HIV.C.DE121&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Number of days prescribed C.DE121 Value&quot;:
  &quot;Number of days prescribed C.DE121&quot; O
  return O.value
/* End of Number of days prescribed C.DE121 */

/*
@dataElement: HIV.C.DE123 - Adherence counselling provided
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Whether adherence counselling was provided
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Adherence counselling provided C.DE123&quot;:
  exists &quot;Adherence counselling provided C.DE123 Observation&quot;
define &quot;Adherence counselling provided C.DE123 Observation&quot;:
  [Observation: Concepts.&quot;Adherence counselling provided - HIV.C.DE123&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Adherence counselling provided C.DE123 */

/*
@dataElement: HIV.C.DE124 - Date/time of follow-up appointment
@activity: HIV.C24 Schedule follow-up
@description: Date the client is to return for monitoring, re-supply, or any other reason
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date/time of follow-up appointment C.DE124&quot;:
  [Observation: Concepts.&quot;Date/time of follow-up appointment - HIV.C.DE124&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date/time of follow-up appointment C.DE124 Value&quot;:
  &quot;Date/time of follow-up appointment C.DE124&quot; O
  return O.value
/* End of Date/time of follow-up appointment C.DE124 */

/*
@dataElement: HIV.C.DE125 - Type of follow-up appointment
@activity: HIV.C24 Schedule follow-up
@description: Type of follow-up appointment for testing services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Type of follow-up appointment C.DE125&quot;:
  exists &quot;Type of follow-up appointment C.DE125 Observation&quot;
define &quot;Type of follow-up appointment C.DE125 Observation&quot;:
  [Observation: Concepts.&quot;Type of follow-up appointment - HIV.C.DE125&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Type of follow-up appointment C.DE125 */

/*
@dataElement: HIV.C.DE126 - Retesting for HIV
@activity: HIV.C24 Schedule follow-up
@description: Retesting follow-up appointment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Retesting for HIV C.DE126&quot;:
  exists &quot;Retesting for HIV C.DE126 Condition&quot;
    or exists &quot;Retesting for HIV C.DE126 Observation&quot;
define &quot;Retesting for HIV C.DE126 Condition&quot;:
  [Condition: Concepts.&quot;Retesting for HIV - HIV.C.DE126&quot;]
define &quot;Retesting for HIV C.DE126 Observation&quot;:
  &quot;Type of follow-up appointment C.DE125 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Retesting for HIV - HIV.C.DE126&quot;
/* End of Retesting for HIV C.DE126 */

/*
@dataElement: HIV.C.DE127 - Follow-up appointment for PrEP
@activity: HIV.C24 Schedule follow-up
@description: Retesting follow-up appointment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Follow-up appointment for PrEP&quot;:
  exists &quot;Follow-up appointment for PrEP Condition&quot;
    or exists &quot;Follow-up appointment for PrEP Observation&quot;
define &quot;Follow-up appointment for PrEP Condition&quot;:
  [Condition: Concepts.&quot;Follow-up appointment for PrEP&quot;]
define &quot;Follow-up appointment for PrEP Observation&quot;:
  &quot;Type of follow-up appointment C.DE125 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Follow-up appointment for PrEP&quot;
/* End of Follow-up appointment for PrEP */

/*
@dataElement: HIV.C.DE128 - Other
@activity: HIV.C24 Schedule follow-up
@description: Other reason for the follow-up appointment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other C.DE128&quot;:
  exists &quot;Other C.DE128 Condition&quot;
    or exists &quot;Other C.DE128 Observation&quot;
define &quot;Other C.DE128 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.C.DE128&quot;]
define &quot;Other C.DE128 Observation&quot;:
  &quot;Type of follow-up appointment C.DE125 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.C.DE128&quot;
/* End of Other C.DE128 */

/*
@dataElement: HIV.C.DE131 - Prevention services offered and referrals
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer to prevention services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Prevention services offered and referrals C.DE131&quot;:
  exists &quot;Prevention services offered and referrals C.DE131 Observation&quot;
define &quot;Prevention services offered and referrals C.DE131 Observation&quot;:
  [Observation: Concepts.&quot;Prevention services offered and referrals - HIV.C.DE131&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Prevention services offered and referrals C.DE131 */

/*
@dataElement: HIV.C.DE132 - Male and female condoms and condom-compatible lubricants offered
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer male and female condoms and condom-compatible lubricants
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Male and female condoms and condom-compatible lubricants offered&quot;:
  exists &quot;Male and female condoms and condom-compatible lubricants offered Condition&quot;
    or exists &quot;Male and female condoms and condom-compatible lubricants offered Observation&quot;
define &quot;Male and female condoms and condom-compatible lubricants offered Condition&quot;:
  [Condition: Concepts.&quot;Male and female condoms and condom-compatible lubricants offered&quot;]
define &quot;Male and female condoms and condom-compatible lubricants offered Observation&quot;:
  &quot;Prevention services offered and referrals C.DE131 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Male and female condoms and condom-compatible lubricants offered&quot;
/* End of Male and female condoms and condom-compatible lubricants offered */

/*
@dataElement: HIV.C.DE133 - Voluntary medical male circumcision VMMC referral
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer referral for VMMC services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Voluntary medical male circumcision VMMC referral&quot;:
  exists &quot;Voluntary medical male circumcision VMMC referral Condition&quot;
    or exists &quot;Voluntary medical male circumcision VMMC referral Observation&quot;
define &quot;Voluntary medical male circumcision VMMC referral Condition&quot;:
  [Condition: Concepts.&quot;Voluntary medical male circumcision VMMC referral&quot;]
define &quot;Voluntary medical male circumcision VMMC referral Observation&quot;:
  &quot;Prevention services offered and referrals C.DE131 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Voluntary medical male circumcision VMMC referral&quot;
/* End of Voluntary medical male circumcision VMMC referral */

/*
@dataElement: HIV.C.DE134 - Harm reduction for people who inject drugs
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer to harm reduction for people who inject drugs (needle and syringe programmes, opioid substitution therapy, other drug-dependence treatment and opioid overdose prevention and management) services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Harm reduction for people who inject drugs C.DE134&quot;:
  exists &quot;Harm reduction for people who inject drugs C.DE134 Condition&quot;
    or exists &quot;Harm reduction for people who inject drugs C.DE134 Observation&quot;
define &quot;Harm reduction for people who inject drugs C.DE134 Condition&quot;:
  [Condition: Concepts.&quot;Harm reduction for people who inject drugs - HIV.C.DE134&quot;]
define &quot;Harm reduction for people who inject drugs C.DE134 Observation&quot;:
  &quot;Prevention services offered and referrals C.DE131 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Harm reduction for people who inject drugs - HIV.C.DE134&quot;
/* End of Harm reduction for people who inject drugs C.DE134 */

/*
@dataElement: HIV.C.DE135 - Behavioural interventions to support risk reduction
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer to services for behavioural interventions to support risk reduction, particularly for people with HIV and members of key populations
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Behavioural interventions to support risk reduction C.DE135&quot;:
  exists &quot;Behavioural interventions to support risk reduction C.DE135 Condition&quot;
    or exists &quot;Behavioural interventions to support risk reduction C.DE135 Observation&quot;
define &quot;Behavioural interventions to support risk reduction C.DE135 Condition&quot;:
  [Condition: Concepts.&quot;Behavioural interventions to support risk reduction - HIV.C.DE135&quot;]
define &quot;Behavioural interventions to support risk reduction C.DE135 Observation&quot;:
  &quot;Prevention services offered and referrals C.DE131 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Behavioural interventions to support risk reduction - HIV.C.DE135&quot;
/* End of Behavioural interventions to support risk reduction C.DE135 */

/*
@dataElement: HIV.C.DE138 - Condom type
@activity: HIV.C10 Counsel on risk and prevention
@description: Type of condom provided to client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Condom type&quot;:
  exists &quot;Condom type Observation&quot;
define &quot;Condom type Observation&quot;:
  [Observation: Concepts.&quot;Condom type&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Condom type */

/*
@dataElement: HIV.C.DE139 - Male condom
@activity: HIV.C10 Counsel on risk and prevention
@description: Male condoms were provided to the client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Male condom&quot;:
  exists &quot;Male condom Condition&quot;
    or exists &quot;Male condom Observation&quot;
define &quot;Male condom Condition&quot;:
  [Condition: Concepts.&quot;Male condom&quot;]
define &quot;Male condom Observation&quot;:
  &quot;Condom type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Male condom&quot;
/* End of Male condom */

/*
@dataElement: HIV.C.DE140 - Female condom
@activity: HIV.C10 Counsel on risk and prevention
@description: Female condoms were provided to the client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Female condom&quot;:
  exists &quot;Female condom Condition&quot;
    or exists &quot;Female condom Observation&quot;
define &quot;Female condom Condition&quot;:
  [Condition: Concepts.&quot;Female condom&quot;]
define &quot;Female condom Observation&quot;:
  &quot;Condom type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Female condom&quot;
/* End of Female condom */

/*
@dataElement: HIV.C.DE142 - Number of HIV self-test kits distributed
@activity: HIV.C10 Counsel on risk and prevention
@description: Number of HIV self-test kits distributed to the client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Number of HIV self-test kits distributed&quot;:
  [Observation: Concepts.&quot;Number of HIV self-test kits distributed&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Number of HIV self-test kits distributed Value&quot;:
  &quot;Number of HIV self-test kits distributed&quot; O
  return O.value
/* End of Number of HIV self-test kits distributed */

/*
@dataElement: HIV.C.DE143 - HIV self-test distributed for use by
@activity: HIV.C10 Counsel on risk and prevention
@description: Whom the client plans to give the HIV self-test kit (self, sexual partner, social contact, etc.)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV self-test distributed for use by&quot;:
  exists &quot;HIV self-test distributed for use by Observation&quot;
define &quot;HIV self-test distributed for use by Observation&quot;:
  [Observation: Concepts.&quot;HIV self-test distributed for use by&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HIV self-test distributed for use by */

/*
@dataElement: HIV.C.DE144 - Self
@activity: HIV.C10 Counsel on risk and prevention
@description: Client plans to use the self-test kit
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Self&quot;:
  exists &quot;Self Condition&quot;
    or exists &quot;Self Observation&quot;
define &quot;Self Condition&quot;:
  [Condition: Concepts.&quot;Self&quot;]
define &quot;Self Observation&quot;:
  &quot;HIV self-test distributed for use by Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Self&quot;
/* End of Self */

/*
@dataElement: HIV.C.DE145 - Family member
@activity: HIV.C10 Counsel on risk and prevention
@description: Client plans to give the self-test kit to a family member to use
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Family member&quot;:
  exists &quot;Family member Condition&quot;
    or exists &quot;Family member Observation&quot;
define &quot;Family member Condition&quot;:
  [Condition: Concepts.&quot;Family member&quot;]
define &quot;Family member Observation&quot;:
  &quot;HIV self-test distributed for use by Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Family member&quot;
/* End of Family member */

/*
@dataElement: HIV.C.DE146 - Drug-injecting partner
@activity: HIV.C10 Counsel on risk and prevention
@description: Client plans to give the self-test kit to a drug-injecting partner
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Drug-injecting partner C.DE146&quot;:
  exists &quot;Drug-injecting partner C.DE146 Condition&quot;
    or exists &quot;Drug-injecting partner C.DE146 Observation&quot;
define &quot;Drug-injecting partner C.DE146 Condition&quot;:
  [Condition: Concepts.&quot;Drug-injecting partner - HIV.C.DE146&quot;]
define &quot;Drug-injecting partner C.DE146 Observation&quot;:
  &quot;HIV self-test distributed for use by Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Drug-injecting partner - HIV.C.DE146&quot;
/* End of Drug-injecting partner C.DE146 */

/*
@dataElement: HIV.C.DE147 - Sexual partner
@activity: HIV.C10 Counsel on risk and prevention
@description: Client plans to give the self-test kit to a sexual partner
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sexual partner C.DE147&quot;:
  exists &quot;Sexual partner C.DE147 Condition&quot;
    or exists &quot;Sexual partner C.DE147 Observation&quot;
define &quot;Sexual partner C.DE147 Condition&quot;:
  [Condition: Concepts.&quot;Sexual partner - HIV.C.DE147&quot;]
define &quot;Sexual partner C.DE147 Observation&quot;:
  &quot;HIV self-test distributed for use by Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Sexual partner - HIV.C.DE147&quot;
/* End of Sexual partner C.DE147 */

/*
@dataElement: HIV.C.DE148 - Social contact
@activity: HIV.C10 Counsel on risk and prevention
@description: Client plans to give the self-test kit to a social contact
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Social contact C.DE148&quot;:
  exists &quot;Social contact C.DE148 Condition&quot;
    or exists &quot;Social contact C.DE148 Observation&quot;
define &quot;Social contact C.DE148 Condition&quot;:
  [Condition: Concepts.&quot;Social contact - HIV.C.DE148&quot;]
define &quot;Social contact C.DE148 Observation&quot;:
  &quot;HIV self-test distributed for use by Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Social contact - HIV.C.DE148&quot;
/* End of Social contact C.DE148 */

/*
@dataElement: HIV.C.DE149 - Sexual and reproductive health integrated services
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer to sexual and reproductive health services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sexual and reproductive health integrated services C.DE149&quot;:
  exists &quot;Sexual and reproductive health integrated services C.DE149 Observation&quot;
define &quot;Sexual and reproductive health integrated services C.DE149 Observation&quot;:
  [Observation: Concepts.&quot;Sexual and reproductive health integrated services - HIV.C.DE149&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Sexual and reproductive health integrated services C.DE149 */

/*
@dataElement: HIV.C.DE150 - Contraception and family planning
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer contraception and family planning services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Contraception and family planning C.DE150&quot;:
  exists &quot;Contraception and family planning C.DE150 Condition&quot;
    or exists &quot;Contraception and family planning C.DE150 Observation&quot;
define &quot;Contraception and family planning C.DE150 Condition&quot;:
  [Condition: Concepts.&quot;Contraception and family planning - HIV.C.DE150&quot;]
define &quot;Contraception and family planning C.DE150 Observation&quot;:
  &quot;Sexual and reproductive health integrated services C.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Contraception and family planning - HIV.C.DE150&quot;
/* End of Contraception and family planning C.DE150 */

/*
@dataElement: HIV.C.DE151 - Check pregnancy status
@activity: HIV.C10 Counsel on risk and prevention
@description: Check woman's pregnancy status
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Check pregnancy status C.DE151&quot;:
  exists &quot;Check pregnancy status C.DE151 Condition&quot;
    or exists &quot;Check pregnancy status C.DE151 Observation&quot;
define &quot;Check pregnancy status C.DE151 Condition&quot;:
  [Condition: Concepts.&quot;Check pregnancy status - HIV.C.DE151&quot;]
define &quot;Check pregnancy status C.DE151 Observation&quot;:
  &quot;Sexual and reproductive health integrated services C.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Check pregnancy status - HIV.C.DE151&quot;
/* End of Check pregnancy status C.DE151 */

/*
@dataElement: HIV.C.DE152 - Prevent mother-to-child transmission
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer services (counselling) to help prevent of mother-to-child transmission
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Prevent mother-to-child transmission&quot;:
  exists &quot;Prevent mother-to-child transmission Condition&quot;
    or exists &quot;Prevent mother-to-child transmission Observation&quot;
define &quot;Prevent mother-to-child transmission Condition&quot;:
  [Condition: Concepts.&quot;Prevent mother-to-child transmission&quot;]
define &quot;Prevent mother-to-child transmission Observation&quot;:
  &quot;Sexual and reproductive health integrated services C.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Prevent mother-to-child transmission&quot;
/* End of Prevent mother-to-child transmission */

/*
@dataElement: HIV.C.DE153 - Cervical cancer screening and treatment
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer cervical cancer screening and treatment services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cervical cancer screening and treatment&quot;:
  exists &quot;Cervical cancer screening and treatment Condition&quot;
    or exists &quot;Cervical cancer screening and treatment Observation&quot;
define &quot;Cervical cancer screening and treatment Condition&quot;:
  [Condition: Concepts.&quot;Cervical cancer screening and treatment&quot;]
define &quot;Cervical cancer screening and treatment Observation&quot;:
  &quot;Sexual and reproductive health integrated services C.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Cervical cancer screening and treatment&quot;
/* End of Cervical cancer screening and treatment */

/*
@dataElement: HIV.C.DE154 - Anal cancer screening for men who have sex with men
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer anal cancer screening (for men who have sex with men) services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Anal cancer screening for men who have sex with men C.DE154&quot;:
  exists &quot;Anal cancer screening for men who have sex with men C.DE154 Condition&quot;
    or exists &quot;Anal cancer screening for men who have sex with men C.DE154 Observation&quot;
define &quot;Anal cancer screening for men who have sex with men C.DE154 Condition&quot;:
  [Condition: Concepts.&quot;Anal cancer screening for men who have sex with men - HIV.C.DE154&quot;]
define &quot;Anal cancer screening for men who have sex with men C.DE154 Observation&quot;:
  &quot;Sexual and reproductive health integrated services C.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Anal cancer screening for men who have sex with men - HIV.C.DE154&quot;
/* End of Anal cancer screening for men who have sex with men C.DE154 */

/*
@dataElement: HIV.C.DE155 - STI testing and treatment
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer STI testing and treatment services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;STI testing and treatment C.DE155&quot;:
  exists &quot;STI testing and treatment C.DE155 Condition&quot;
    or exists &quot;STI testing and treatment C.DE155 Observation&quot;
define &quot;STI testing and treatment C.DE155 Condition&quot;:
  [Condition: Concepts.&quot;STI testing and treatment - HIV.C.DE155&quot;]
define &quot;STI testing and treatment C.DE155 Observation&quot;:
  &quot;Sexual and reproductive health integrated services C.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;STI testing and treatment - HIV.C.DE155&quot;
/* End of STI testing and treatment C.DE155 */

/*
@dataElement: HIV.C.DE156 - HIV testing for partners and biological children
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer testing for all partners and biological children of positive cases (includes partner services and index case testing), as well as partners and social contacts of people from key populations, where appropriate
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV testing for partners and biological children C.DE156&quot;:
  exists &quot;HIV testing for partners and biological children C.DE156 Condition&quot;
    or exists &quot;HIV testing for partners and biological children C.DE156 Observation&quot;
define &quot;HIV testing for partners and biological children C.DE156 Condition&quot;:
  [Condition: Concepts.&quot;HIV testing for partners and biological children - HIV.C.DE156&quot;]
define &quot;HIV testing for partners and biological children C.DE156 Observation&quot;:
  &quot;Sexual and reproductive health integrated services C.DE149 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV testing for partners and biological children - HIV.C.DE156&quot;
/* End of HIV testing for partners and biological children C.DE156 */

/*
@dataElement: HIV.C.DE157 - Offer other clinical services
@activity: HIV.C10 Counsel on risk and prevention
@description: Other clinical services offered or referrals given to the client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Offer other clinical services C.DE157&quot;:
  exists &quot;Offer other clinical services C.DE157 Observation&quot;
define &quot;Offer other clinical services C.DE157 Observation&quot;:
  [Observation: Concepts.&quot;Offer other clinical services - HIV.C.DE157&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Offer other clinical services C.DE157 */

/*
@dataElement: HIV.C.DE158 - Assessment and provision of vaccinations
@activity: HIV.C10 Counsel on risk and prevention
@description: Assessment and provision of vaccinations, such as for people from key populations, pregnant women and infants; and, where appropriate, tetanus vaccination for adolescent boys and men receiving VMMC
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assessment and provision of vaccinations C.DE158&quot;:
  exists &quot;Assessment and provision of vaccinations C.DE158 Condition&quot;
    or exists &quot;Assessment and provision of vaccinations C.DE158 Observation&quot;
define &quot;Assessment and provision of vaccinations C.DE158 Condition&quot;:
  [Condition: Concepts.&quot;Assessment and provision of vaccinations - HIV.C.DE158&quot;]
define &quot;Assessment and provision of vaccinations C.DE158 Observation&quot;:
  &quot;Offer other clinical services C.DE157 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Assessment and provision of vaccinations - HIV.C.DE158&quot;
/* End of Assessment and provision of vaccinations C.DE158 */

/*
@dataElement: HIV.C.DE159 - Hepatitis B virus HBV and hepatitis C virus HCV testing and treatment
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer for HBV testing and vaccination and HCV testing and treatment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Hepatitis B virus HBV and hepatitis C virus HCV testing and treatment&quot;:
  exists &quot;Hepatitis B virus HBV and hepatitis C virus HCV testing and treatment Condition&quot;
    or exists &quot;Hepatitis B virus HBV and hepatitis C virus HCV testing and treatment Observation&quot;
define &quot;Hepatitis B virus HBV and hepatitis C virus HCV testing and treatment Condition&quot;:
  [Condition: Concepts.&quot;Hepatitis B virus HBV and hepatitis C virus HCV testing and treatment&quot;]
define &quot;Hepatitis B virus HBV and hepatitis C virus HCV testing and treatment Observation&quot;:
  &quot;Offer other clinical services C.DE157 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Hepatitis B virus HBV and hepatitis C virus HCV testing and treatment&quot;
/* End of Hepatitis B virus HBV and hepatitis C virus HCV testing and treatment */

/*
@dataElement: HIV.C.DE160 - Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer for co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia C.DE160&quot;:
  exists &quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia C.DE160 Condition&quot;
    or exists &quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia C.DE160 Observation&quot;
define &quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia C.DE160 Condition&quot;:
  [Condition: Concepts.&quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia - HIV.C.DE160&quot;]
define &quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia C.DE160 Observation&quot;:
  &quot;Offer other clinical services C.DE157 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia - HIV.C.DE160&quot;
/* End of Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia C.DE160 */

/*
@dataElement: HIV.C.DE161 - Intensified TB case finding and linkage to TB treatment
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer for TB case finding and linkage to TB treatment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Intensified TB case finding and linkage to TB treatment C.DE161&quot;:
  exists &quot;Intensified TB case finding and linkage to TB treatment C.DE161 Condition&quot;
    or exists &quot;Intensified TB case finding and linkage to TB treatment C.DE161 Observation&quot;
define &quot;Intensified TB case finding and linkage to TB treatment C.DE161 Condition&quot;:
  [Condition: Concepts.&quot;Intensified TB case finding and linkage to TB treatment - HIV.C.DE161&quot;]
define &quot;Intensified TB case finding and linkage to TB treatment C.DE161 Observation&quot;:
  &quot;Offer other clinical services C.DE157 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Intensified TB case finding and linkage to TB treatment - HIV.C.DE161&quot;
/* End of Intensified TB case finding and linkage to TB treatment C.DE161 */

/*
@dataElement: HIV.C.DE162 - Provision of isoniazid preventive therapy if person does not have TB
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer for provision of isoniazid preventive therapy if person does not have TB
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Provision of isoniazid preventive therapy if person does not have TB C.DE162&quot;:
  exists &quot;Provision of isoniazid preventive therapy if person does not have TB C.DE162 Condition&quot;
    or exists &quot;Provision of isoniazid preventive therapy if person does not have TB C.DE162 Observation&quot;
define &quot;Provision of isoniazid preventive therapy if person does not have TB C.DE162 Condition&quot;:
  [Condition: Concepts.&quot;Provision of isoniazid preventive therapy if person does not have TB - HIV.C.DE162&quot;]
define &quot;Provision of isoniazid preventive therapy if person does not have TB C.DE162 Observation&quot;:
  &quot;Offer other clinical services C.DE157 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Provision of isoniazid preventive therapy if person does not have TB - HIV.C.DE162&quot;
/* End of Provision of isoniazid preventive therapy if person does not have TB C.DE162 */

/*
@dataElement: HIV.C.DE163 - Malaria prevention such as bed nets and prophylaxis, depending on epidemiology
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer for malaria prevention (such as bed nets and prophylaxis), depending on epidemiology
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology C.DE163&quot;:
  exists &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology C.DE163 Condition&quot;
    or exists &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology C.DE163 Observation&quot;
define &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology C.DE163 Condition&quot;:
  [Condition: Concepts.&quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology - HIV.C.DE163&quot;]
define &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology C.DE163 Observation&quot;:
  &quot;Offer other clinical services C.DE157 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology - HIV.C.DE163&quot;
/* End of Malaria prevention such as bed nets and prophylaxis, depending on epidemiology C.DE163 */

/*
@dataElement: HIV.C.DE164 - Other support services
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer for other support services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other support services C.DE164&quot;:
  exists &quot;Other support services C.DE164 Observation&quot;
define &quot;Other support services C.DE164 Observation&quot;:
  [Observation: Concepts.&quot;Other support services - HIV.C.DE164&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Other support services C.DE164 */

/*
@dataElement: HIV.C.DE165 - Mental health services
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer for mental health services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Mental health services C.DE165&quot;:
  exists &quot;Mental health services C.DE165 Condition&quot;
    or exists &quot;Mental health services C.DE165 Observation&quot;
define &quot;Mental health services C.DE165 Condition&quot;:
  [Condition: Concepts.&quot;Mental health services - HIV.C.DE165&quot;]
define &quot;Mental health services C.DE165 Observation&quot;:
  &quot;Other support services C.DE164 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Mental health services - HIV.C.DE165&quot;
/* End of Mental health services C.DE165 */

/*
@dataElement: HIV.C.DE166 - Psychosocial counselling, support and treatment adherence counselling
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer for psychosocial counselling, support and treatment adherence counselling
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Psychosocial counselling, support and treatment adherence counselling C.DE166&quot;:
  exists &quot;Psychosocial counselling, support and treatment adherence counselling C.DE166 Condition&quot;
    or exists &quot;Psychosocial counselling, support and treatment adherence counselling C.DE166 Observation&quot;
define &quot;Psychosocial counselling, support and treatment adherence counselling C.DE166 Condition&quot;:
  [Condition: Concepts.&quot;Psychosocial counselling, support and treatment adherence counselling - HIV.C.DE166&quot;]
define &quot;Psychosocial counselling, support and treatment adherence counselling C.DE166 Observation&quot;:
  &quot;Other support services C.DE164 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Psychosocial counselling, support and treatment adherence counselling - HIV.C.DE166&quot;
/* End of Psychosocial counselling, support and treatment adherence counselling C.DE166 */

/*
@dataElement: HIV.C.DE167 - Support for disclosure and partner services
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer for support for disclosure and partner services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Support for disclosure and partner services C.DE167&quot;:
  exists &quot;Support for disclosure and partner services C.DE167 Condition&quot;
    or exists &quot;Support for disclosure and partner services C.DE167 Observation&quot;
define &quot;Support for disclosure and partner services C.DE167 Condition&quot;:
  [Condition: Concepts.&quot;Support for disclosure and partner services - HIV.C.DE167&quot;]
define &quot;Support for disclosure and partner services C.DE167 Observation&quot;:
  &quot;Other support services C.DE164 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Support for disclosure and partner services - HIV.C.DE167&quot;
/* End of Support for disclosure and partner services C.DE167 */

/*
@dataElement: HIV.C.DE168 - Legal and social services
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer for legal and social services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Legal and social services C.DE168&quot;:
  exists &quot;Legal and social services C.DE168 Condition&quot;
    or exists &quot;Legal and social services C.DE168 Observation&quot;
define &quot;Legal and social services C.DE168 Condition&quot;:
  [Condition: Concepts.&quot;Legal and social services - HIV.C.DE168&quot;]
define &quot;Legal and social services C.DE168 Observation&quot;:
  &quot;Other support services C.DE164 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Legal and social services - HIV.C.DE168&quot;
/* End of Legal and social services C.DE168 */

/*
@dataElement: HIV.C.DE169 - Services for responding to violence against women
@activity: HIV.C10 Counsel on risk and prevention
@description: Offer or refer for services for responding to violence against women, including first-line support and psychosocial support, post-rape care and other support services including shelters, legal services and women and child protection services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Services for responding to violence against women C.DE169&quot;:
  exists &quot;Services for responding to violence against women C.DE169 Condition&quot;
    or exists &quot;Services for responding to violence against women C.DE169 Observation&quot;
define &quot;Services for responding to violence against women C.DE169 Condition&quot;:
  [Condition: Concepts.&quot;Services for responding to violence against women - HIV.C.DE169&quot;]
define &quot;Services for responding to violence against women C.DE169 Observation&quot;:
  &quot;Other support services C.DE164 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Services for responding to violence against women - HIV.C.DE169&quot;
/* End of Services for responding to violence against women C.DE169 */

/*
@dataElement: HIV.D.DE1 - Reason for visit
@activity: HIV.D1 Determine reason for visit
@description: Whether visit was scheduled or unscheduled, clinical only, or for ARV drug pick-up
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reason for visit D.DE1&quot;:
  exists &quot;Reason for visit D.DE1 Observation&quot;
define &quot;Reason for visit D.DE1 Observation&quot;:
  [Observation: Concepts.&quot;Reason for visit - HIV.D.DE1&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Reason for visit D.DE1 */

/*
@dataElement: HIV.D.DE2 - First clinical visit
@activity: HIV.D1 Determine reason for visit
@description: The client's first appointment for clinical care by a provider at the facility
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;First clinical visit&quot;:
  exists &quot;First clinical visit Condition&quot;
    or exists &quot;First clinical visit Observation&quot;
define &quot;First clinical visit Condition&quot;:
  [Condition: Concepts.&quot;First clinical visit&quot;]
define &quot;First clinical visit Observation&quot;:
  &quot;Reason for visit D.DE1 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;First clinical visit&quot;
/* End of First clinical visit */

/*
@dataElement: HIV.D.DE3 - Clinical visit
@activity: HIV.D1 Determine reason for visit
@description: Appointment for clinical care by a provider
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Clinical visit D.DE3&quot;:
  exists &quot;Clinical visit D.DE3 Condition&quot;
    or exists &quot;Clinical visit D.DE3 Observation&quot;
define &quot;Clinical visit D.DE3 Condition&quot;:
  [Condition: Concepts.&quot;Clinical visit - HIV.D.DE3&quot;]
define &quot;Clinical visit D.DE3 Observation&quot;:
  &quot;Reason for visit D.DE1 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Clinical visit - HIV.D.DE3&quot;
/* End of Clinical visit D.DE3 */

/*
@dataElement: HIV.D.DE4 - ART initiation
@activity: HIV.D1 Determine reason for visit
@description: Appointment for initiation of ART
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;ART initiation&quot;:
  exists &quot;ART initiation Condition&quot;
    or exists &quot;ART initiation Observation&quot;
define &quot;ART initiation Condition&quot;:
  [Condition: Concepts.&quot;ART initiation&quot;]
define &quot;ART initiation Observation&quot;:
  &quot;Reason for visit D.DE1 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;ART initiation&quot;
/* End of ART initiation */

/*
@dataElement: HIV.D.DE5 - ART drug pick up
@activity: HIV.D1 Determine reason for visit
@description: Appointment for an antiretroviral drug pick up
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;ART drug pick up&quot;:
  exists &quot;ART drug pick up Condition&quot;
    or exists &quot;ART drug pick up Observation&quot;
define &quot;ART drug pick up Condition&quot;:
  [Condition: Concepts.&quot;ART drug pick up&quot;]
define &quot;ART drug pick up Observation&quot;:
  &quot;Reason for visit D.DE1 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;ART drug pick up&quot;
/* End of ART drug pick up */

/*
@dataElement: HIV.D.DE6 - Issues and concerns
@activity: HIV.D1 Determine reason for visit
@description: Visit to address issues and concerns
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Issues and concerns&quot;:
  exists &quot;Issues and concerns Condition&quot;
    or exists &quot;Issues and concerns Observation&quot;
define &quot;Issues and concerns Condition&quot;:
  [Condition: Concepts.&quot;Issues and concerns&quot;]
define &quot;Issues and concerns Observation&quot;:
  &quot;Reason for visit D.DE1 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Issues and concerns&quot;
/* End of Issues and concerns */

/*
@dataElement: HIV.D.DE7 - Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer
@activity: HIV.D1 Determine reason for visit
@description: Appointment for a post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer D.DE7&quot;:
  exists &quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer D.DE7 Condition&quot;
    or exists &quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer D.DE7 Observation&quot;
define &quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer D.DE7 Condition&quot;:
  [Condition: Concepts.&quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer - HIV.D.DE7&quot;]
define &quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer D.DE7 Observation&quot;:
  &quot;Reason for visit D.DE1 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer - HIV.D.DE7&quot;
/* End of Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer D.DE7 */

/*
@dataElement: HIV.D.DE9 - Body temperature
@activity: HIV.D2 Take vital signs
@description: Temperature of the client in Celsius
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Body temperature&quot;:
  [Observation: Concepts.&quot;Body temperature&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Body temperature Value&quot;:
  &quot;Body temperature&quot; O
  return O.value
/* End of Body temperature */

/*
@dataElement: HIV.D.DE13 - Body weight
@activity: HIV.D2 Take vital signs
@description: The client's current weight in kilograms
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Body weight&quot;:
  [Observation: Concepts.&quot;Body weight&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Body weight Value&quot;:
  &quot;Body weight&quot; O
  return O.value
/* End of Body weight */

/*
@dataElement: HIV.D.DE17 - Signs of serious illness
@activity: HIV.D3 Check for signs of serious illness
@description: Signs that may indicate the client has a serious illness and needs triage or an emergency referral
*/
define &quot;Signs of serious illness&quot;:
  exists &quot;Signs of serious illness Observation&quot;
define &quot;Signs of serious illness Observation&quot;:
  [Observation: Concepts.&quot;Signs of serious illness&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Signs of serious illness */

/*
@dataElement: HIV.D.DE18 - Fever of 39 C or greater
@activity: HIV.D3 Check for signs of serious illness
@description: Client has a fever with a measured temperature of 102.2 F/39 C or greater
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Fever of 39 C or greater&quot;:
  exists &quot;Fever of 39 C or greater Condition&quot;
    or exists &quot;Fever of 39 C or greater Observation&quot;
define &quot;Fever of 39 C or greater Condition&quot;:
  [Condition: Concepts.&quot;Fever of 39 C or greater&quot;]
define &quot;Fever of 39 C or greater Observation&quot;:
  &quot;Signs of serious illness Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Fever of 39 C or greater&quot;
/* End of Fever of 39 C or greater */

/*
@dataElement: HIV.D.DE19 - Tachycardia
@activity: HIV.D3 Check for signs of serious illness
@description: Heart rate above a rate per minute based on age
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Tachycardia&quot;:
  exists &quot;Tachycardia Condition&quot;
    or exists &quot;Tachycardia Observation&quot;
define &quot;Tachycardia Condition&quot;:
  [Condition: Concepts.&quot;Tachycardia&quot;]
define &quot;Tachycardia Observation&quot;:
  &quot;Signs of serious illness Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Tachycardia&quot;
/* End of Tachycardia */

/*
@dataElement: HIV.D.DE20 - Tachypnea
@activity: HIV.D3 Check for signs of serious illness
@description: Respiratory rate above a number of breaths per minute based on age
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Tachypnea&quot;:
  exists &quot;Tachypnea Condition&quot;
    or exists &quot;Tachypnea Observation&quot;
define &quot;Tachypnea Condition&quot;:
  [Condition: Concepts.&quot;Tachypnea&quot;]
define &quot;Tachypnea Observation&quot;:
  &quot;Signs of serious illness Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Tachypnea&quot;
/* End of Tachypnea */

/*
@dataElement: HIV.D.DE21 - Unable to walk unaided
@activity: HIV.D3 Check for signs of serious illness
@description: Client is not able to walk without help
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unable to walk unaided&quot;:
  exists &quot;Unable to walk unaided Condition&quot;
    or exists &quot;Unable to walk unaided Observation&quot;
define &quot;Unable to walk unaided Condition&quot;:
  [Condition: Concepts.&quot;Unable to walk unaided&quot;]
define &quot;Unable to walk unaided Observation&quot;:
  &quot;Signs of serious illness Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unable to walk unaided&quot;
/* End of Unable to walk unaided */

/*
@dataElement: HIV.D.DE22 - Lethargy
@activity: HIV.D3 Check for signs of serious illness
@description: Client is exhibiting lethargy as a sign of serious illness
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Lethargy D.DE22&quot;:
  exists &quot;Lethargy D.DE22 Condition&quot;
    or exists &quot;Lethargy D.DE22 Observation&quot;
define &quot;Lethargy D.DE22 Condition&quot;:
  [Condition: Concepts.&quot;Lethargy - HIV.D.DE22&quot;]
define &quot;Lethargy D.DE22 Observation&quot;:
  &quot;Signs of serious illness Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Lethargy - HIV.D.DE22&quot;
/* End of Lethargy D.DE22 */

/*
@dataElement: HIV.D.DE23 - Unconsciousness
@activity: HIV.D3 Check for signs of serious illness
@description: Client is currently unconscious
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unconsciousness&quot;:
  exists &quot;Unconsciousness Condition&quot;
    or exists &quot;Unconsciousness Observation&quot;
define &quot;Unconsciousness Condition&quot;:
  [Condition: Concepts.&quot;Unconsciousness&quot;]
define &quot;Unconsciousness Observation&quot;:
  &quot;Signs of serious illness Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unconsciousness&quot;
/* End of Unconsciousness */

/*
@dataElement: HIV.D.DE24 - Convulsions
@activity: HIV.D3 Check for signs of serious illness
@description: Client is convulsing
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Convulsions&quot;:
  exists &quot;Convulsions Condition&quot;
    or exists &quot;Convulsions Observation&quot;
define &quot;Convulsions Condition&quot;:
  [Condition: Concepts.&quot;Convulsions&quot;]
define &quot;Convulsions Observation&quot;:
  &quot;Signs of serious illness Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Convulsions&quot;
/* End of Convulsions */

/*
@dataElement: HIV.D.DE25 - Unable to drink
@activity: HIV.D3 Check for signs of serious illness
@description: Child is not able to drink
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unable to drink&quot;:
  exists &quot;Unable to drink Condition&quot;
    or exists &quot;Unable to drink Observation&quot;
define &quot;Unable to drink Condition&quot;:
  [Condition: Concepts.&quot;Unable to drink&quot;]
define &quot;Unable to drink Observation&quot;:
  &quot;Signs of serious illness Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unable to drink&quot;
/* End of Unable to drink */

/*
@dataElement: HIV.D.DE26 - Unable to breastfeed
@activity: HIV.D3 Check for signs of serious illness
@description: Infant or child is not able to breastfeed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unable to breastfeed&quot;:
  exists &quot;Unable to breastfeed Condition&quot;
    or exists &quot;Unable to breastfeed Observation&quot;
define &quot;Unable to breastfeed Condition&quot;:
  [Condition: Concepts.&quot;Unable to breastfeed&quot;]
define &quot;Unable to breastfeed Observation&quot;:
  &quot;Signs of serious illness Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unable to breastfeed&quot;
/* End of Unable to breastfeed */

/*
@dataElement: HIV.D.DE27 - Repeated vomiting
@activity: HIV.D3 Check for signs of serious illness
@description: Client is repeatedly vomiting
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Repeated vomiting&quot;:
  exists &quot;Repeated vomiting Condition&quot;
    or exists &quot;Repeated vomiting Observation&quot;
define &quot;Repeated vomiting Condition&quot;:
  [Condition: Concepts.&quot;Repeated vomiting&quot;]
define &quot;Repeated vomiting Observation&quot;:
  &quot;Signs of serious illness Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Repeated vomiting&quot;
/* End of Repeated vomiting */

/*
@dataElement: HIV.D.DE28 - Headache
@activity: HIV.D3 Check for signs of serious illness
@description: Client is exhibiting a headache
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Headache D.DE28&quot;:
  exists &quot;Headache D.DE28 Condition&quot;
    or exists &quot;Headache D.DE28 Observation&quot;
define &quot;Headache D.DE28 Condition&quot;:
  [Condition: Concepts.&quot;Headache - HIV.D.DE28&quot;]
define &quot;Headache D.DE28 Observation&quot;:
  &quot;Signs of serious illness Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Headache - HIV.D.DE28&quot;
/* End of Headache D.DE28 */

/*
@dataElement: HIV.D.DE29 - Other sign of serious illness
@activity: HIV.D3 Check for signs of serious illness
@description: Client is exhibiting another sign of a serious illness
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other sign of serious illness&quot;:
  exists &quot;Other sign of serious illness Condition&quot;
    or exists &quot;Other sign of serious illness Observation&quot;
define &quot;Other sign of serious illness Condition&quot;:
  [Condition: Concepts.&quot;Other sign of serious illness&quot;]
define &quot;Other sign of serious illness Observation&quot;:
  &quot;Signs of serious illness Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other sign of serious illness&quot;
/* End of Other sign of serious illness */

/*
@dataElement: HIV.D.DE31 - Currently pregnant
@activity: HIV.D8 Capture or update client history
@description: Client is currently pregnant
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Currently pregnant D.DE31&quot;:
  exists &quot;Currently pregnant D.DE31 Observation&quot;
define &quot;Currently pregnant D.DE31 Observation&quot;:
  [Observation: Concepts.&quot;Currently pregnant - HIV.D.DE31&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Currently pregnant D.DE31 */

/*
@dataElement: HIV.D.DE32 - Breastfeeding
@activity: HIV.D8 Capture or update client history
@description: Client is giving infant breast milk
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Breastfeeding D.DE32&quot;:
  exists &quot;Breastfeeding D.DE32 Observation&quot;
define &quot;Breastfeeding D.DE32 Observation&quot;:
  [Observation: Concepts.&quot;Breastfeeding - HIV.D.DE32&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Breastfeeding D.DE32 */

/*
@dataElement: HIV.D.DE37 - Serodiscordant partner
@activity: HIV.D8 Capture or update client history
@description: Client's HIV status is different from a current partner's HIV status
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Serodiscordant partner D.DE37&quot;:
  exists &quot;Serodiscordant partner D.DE37 Observation&quot;
define &quot;Serodiscordant partner D.DE37 Observation&quot;:
  [Observation: Concepts.&quot;Serodiscordant partner - HIV.D.DE37&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Serodiscordant partner D.DE37 */

/*
@dataElement: HIV.D.DE38 - On ART
@activity: HIV.D8 Capture or update client history
@description: Client is currently taking ART
*/

define &quot;On ART D.DE38&quot;:
    [MedicationStatement] MS
    where exists(MS.reasonCode C where C ~ Concepts.&quot;On ART - HIV.D.DE38&quot;)
    sort by start of effective.toInterval()
/* End of On ART D.DE38 */

/*
@dataElement: HIV.D.DE39 - ART start date
@activity: HIV.D8 Capture or update client history
@description: The date on which the client started or restarted ART
*/
define &quot;ART start date D.DE39&quot;:
  &quot;On ART D.DE38&quot; MS
  return start of MS.effective.toInterval()
/* End of ART start date D.DE39 */

/*
@dataElement: HIV.D.DE41 - Date ART stopped
@activity: HIV.D8 Capture or update client history
@description: Date on which client stopped ART
*/
define &quot;Date ART stopped D.DE41&quot;:
  &quot;On ART D.DE38&quot; MS
  return end of MS.effective.toInterval()
/* End of Date ART stopped D.DE41 */

/*
@dataElement: HIV.D.DE42 - Established on ART
@activity: HIV.D8 Capture or update client history
@description: Is the client successfully established on ART?
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Established on ART&quot;:
  exists &quot;Established on ART Observation&quot;
define &quot;Established on ART Observation&quot;:
  [Observation: Concepts.&quot;Established on ART&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Established on ART */

/*
@dataElement: HIV.D.DE43 - ART start type
@activity: HIV.D8 Capture or update client history
@description: Whether the client is ART naive or is restarting ART
*/

define &quot;ART start type&quot;:
  [MedicationStatement] MS
    where exists(MS.reasonCode C where C ~ Concepts.&quot;On ART - HIV.D.DE38&quot;)
    sort by start of effective.toInterval()
/* End of ART start type */

/*
@dataElement: HIV.D.DE44 - First-time user of ART
@activity: HIV.D8 Capture or update client history
@description: Client is ART naive, having never taken ART to treat HIV before
*/

define &quot;First-time user of ART&quot;:
  &quot;ART start type&quot; MS
      where exists(MS.reasonCode C where C ~ Concepts.&quot;First-time user of ART&quot;) 
/* End of First-time user of ART */

/*
@dataElement: HIV.D.DE45 - Restarting ART
@activity: HIV.D8 Capture or update client history
@description: Client is restarting ART after stopping treatment for any reason
*/

define &quot;Restarting ART&quot;:
   &quot;ART start type&quot; MS
      where exists(MS.reasonCode C where C ~ Concepts.&quot;Restarting ART&quot;) 

/* End of Restarting ART */

/*
@dataElement: HIV.D.DE75 - Current ART regimen
@activity: HIV.D8 Capture or update client history
@description: The current ART regimen the client is taking
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Current ART regimen&quot;:
  exists &quot;Current ART regimen Observation&quot;
define &quot;Current ART regimen Observation&quot;:
  [Observation: Concepts.&quot;Current ART regimen&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Current ART regimen */

/*
@dataElement: HIV.D.DE77 - Preferred first-line ART regimen
@activity: HIV.D8 Capture or update client history
@description: The preferred first-line ART regimen for the client according to WHO (or national) guidelines
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Preferred first-line ART regimen&quot;:
  exists &quot;Preferred first-line ART regimen Observation&quot;
define &quot;Preferred first-line ART regimen Observation&quot;:
  [Observation: Concepts.&quot;Preferred first-line ART regimen&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Preferred first-line ART regimen */

/*
@dataElement: HIV.D.DE78 - Alternative first-line ART regimen
@activity: HIV.D8 Capture or update client history
@description: The alternative first-line ART regimen for the client according to WHO (or national) guidelines
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Alternative first-line ART regimen&quot;:
  exists &quot;Alternative first-line ART regimen Observation&quot;
define &quot;Alternative first-line ART regimen Observation&quot;:
  [Observation: Concepts.&quot;Alternative first-line ART regimen&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Alternative first-line ART regimen */

/*
@dataElement: HIV.D.DE79 - First-line ART regimen under special circumstances
@activity: HIV.D8 Capture or update client history
@description: The first-line ART regimen for the client under special circumstances according to WHO (or national) guidelines
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;First-line ART regimen under special circumstances&quot;:
  exists &quot;First-line ART regimen under special circumstances Observation&quot;
define &quot;First-line ART regimen under special circumstances Observation&quot;:
  [Observation: Concepts.&quot;First-line ART regimen under special circumstances&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of First-line ART regimen under special circumstances */

/*
@dataElement: HIV.D.DE80 - Preferred second-line ART regimen
@activity: HIV.D8 Capture or update client history
@description: The preferred second-line ART regimen for the client according to WHO (or national) guidelines
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Preferred second-line ART regimen&quot;:
  exists &quot;Preferred second-line ART regimen Observation&quot;
define &quot;Preferred second-line ART regimen Observation&quot;:
  [Observation: Concepts.&quot;Preferred second-line ART regimen&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Preferred second-line ART regimen */

/*
@dataElement: HIV.D.DE81 - Alternative second-line ART regimen
@activity: HIV.D8 Capture or update client history
@description: The alternative second-line ART regimen for the client according to WHO (or national) guidelines
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Alternative second-line ART regimen&quot;:
  exists &quot;Alternative second-line ART regimen Observation&quot;
define &quot;Alternative second-line ART regimen Observation&quot;:
  [Observation: Concepts.&quot;Alternative second-line ART regimen&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Alternative second-line ART regimen */

/*
@dataElement: HIV.D.DE82 - Optimal regimen for transition
@activity: HIV.D8 Capture or update client history
@description: The optimal regimen for transition to DTG-based regimens for children established on ART
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Optimal regimen for transition&quot;:
  exists &quot;Optimal regimen for transition Observation&quot;
define &quot;Optimal regimen for transition Observation&quot;:
  [Observation: Concepts.&quot;Optimal regimen for transition&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Optimal regimen for transition */

/*
@dataElement: HIV.D.DE83 - Current ART regimen first-, second-, or third-line
@activity: HIV.D8 Capture or update client history
@description: ART regimen for treating clients living with HIV, based on national guidance
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Current ART regimen first-, second-, or third-line&quot;:
  exists &quot;Current ART regimen first-, second-, or third-line Observation&quot;
define &quot;Current ART regimen first-, second-, or third-line Observation&quot;:
  [Observation: Concepts.&quot;Current ART regimen first-, second-, or third-line&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Current ART regimen first-, second-, or third-line */

/*
@dataElement: HIV.D.DE84 - First-line ART regimen for adults and adolescents
@activity: HIV.D8 Capture or update client history
@description: First-line ART regimen for adults and adolescents living with HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;First-line ART regimen for adults and adolescents&quot;:
  exists &quot;First-line ART regimen for adults and adolescents Condition&quot;
    or exists &quot;First-line ART regimen for adults and adolescents Observation&quot;
define &quot;First-line ART regimen for adults and adolescents Condition&quot;:
  [Condition: Concepts.&quot;First-line ART regimen for adults and adolescents&quot;]
define &quot;First-line ART regimen for adults and adolescents Observation&quot;:
  &quot;Current ART regimen first-, second-, or third-line Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;First-line ART regimen for adults and adolescents&quot;
/* End of First-line ART regimen for adults and adolescents */

/*
@dataElement: HIV.D.DE85 - First-line ART regimen for children
@activity: HIV.D8 Capture or update client history
@description: First-line ART regimen for children living with HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;First-line ART regimen for children&quot;:
  exists &quot;First-line ART regimen for children Condition&quot;
    or exists &quot;First-line ART regimen for children Observation&quot;
define &quot;First-line ART regimen for children Condition&quot;:
  [Condition: Concepts.&quot;First-line ART regimen for children&quot;]
define &quot;First-line ART regimen for children Observation&quot;:
  &quot;Current ART regimen first-, second-, or third-line Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;First-line ART regimen for children&quot;
/* End of First-line ART regimen for children */

/*
@dataElement: HIV.D.DE86 - First-line ART regimen for neonates
@activity: HIV.D8 Capture or update client history
@description: First-line ART regimen for neonates living with HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;First-line ART regimen for neonates&quot;:
  exists &quot;First-line ART regimen for neonates Condition&quot;
    or exists &quot;First-line ART regimen for neonates Observation&quot;
define &quot;First-line ART regimen for neonates Condition&quot;:
  [Condition: Concepts.&quot;First-line ART regimen for neonates&quot;]
define &quot;First-line ART regimen for neonates Observation&quot;:
  &quot;Current ART regimen first-, second-, or third-line Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;First-line ART regimen for neonates&quot;
/* End of First-line ART regimen for neonates */

/*
@dataElement: HIV.D.DE87 - Second-line ART regimen for adults and adolescents
@activity: HIV.D8 Capture or update client history
@description: Second-line ART regimen for adults and adolescents living with HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Second-line ART regimen for adults and adolescents&quot;:
  exists &quot;Second-line ART regimen for adults and adolescents Condition&quot;
    or exists &quot;Second-line ART regimen for adults and adolescents Observation&quot;
define &quot;Second-line ART regimen for adults and adolescents Condition&quot;:
  [Condition: Concepts.&quot;Second-line ART regimen for adults and adolescents&quot;]
define &quot;Second-line ART regimen for adults and adolescents Observation&quot;:
  &quot;Current ART regimen first-, second-, or third-line Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Second-line ART regimen for adults and adolescents&quot;
/* End of Second-line ART regimen for adults and adolescents */

/*
@dataElement: HIV.D.DE88 - Second-line ART regimen for children
@activity: HIV.D8 Capture or update client history
@description: Second-line ART regimen for children living with HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Second-line ART regimen for children&quot;:
  exists &quot;Second-line ART regimen for children Condition&quot;
    or exists &quot;Second-line ART regimen for children Observation&quot;
define &quot;Second-line ART regimen for children Condition&quot;:
  [Condition: Concepts.&quot;Second-line ART regimen for children&quot;]
define &quot;Second-line ART regimen for children Observation&quot;:
  &quot;Current ART regimen first-, second-, or third-line Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Second-line ART regimen for children&quot;
/* End of Second-line ART regimen for children */

/*
@dataElement: HIV.D.DE89 - Third-line ART regimen
@activity: HIV.D8 Capture or update client history
@description: Third-line ART regimen for people living with HIV (Not defined by WHO. National programmes should develop policies for third-line ART)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Third-line ART regimen&quot;:
  exists &quot;Third-line ART regimen Condition&quot;
    or exists &quot;Third-line ART regimen Observation&quot;
define &quot;Third-line ART regimen Condition&quot;:
  [Condition: Concepts.&quot;Third-line ART regimen&quot;]
define &quot;Third-line ART regimen Observation&quot;:
  &quot;Current ART regimen first-, second-, or third-line Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Third-line ART regimen&quot;
/* End of Third-line ART regimen */

/*
@dataElement: HIV.D.DE128 - ART regimen composition
@activity: HIV.D8 Capture or update client history
@description: Drug composition of client's current ART regimen
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;ART regimen composition&quot;:
  exists &quot;ART regimen composition Observation&quot;
define &quot;ART regimen composition Observation&quot;:
  [Observation: Concepts.&quot;ART regimen composition&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of ART regimen composition */

/*
@dataElement: HIV.D.DE129 - ABC
@activity: HIV.D8 Capture or update client history
@description: Treated with abacavir (ABC)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;ABC&quot;:
  exists &quot;ABC Condition&quot;
    or exists &quot;ABC Observation&quot;
define &quot;ABC Condition&quot;:
  [Condition: Concepts.&quot;ABC&quot;]
define &quot;ABC Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;ABC&quot;
/* End of ABC */

/*
@dataElement: HIV.D.DE130 - FTC
@activity: HIV.D8 Capture or update client history
@description: Treated with emtricitabine (FTC)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;FTC&quot;:
  exists &quot;FTC Condition&quot;
    or exists &quot;FTC Observation&quot;
define &quot;FTC Condition&quot;:
  [Condition: Concepts.&quot;FTC&quot;]
define &quot;FTC Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;FTC&quot;
/* End of FTC */

/*
@dataElement: HIV.D.DE131 - 3TC
@activity: HIV.D8 Capture or update client history
@description: Treated with lamivudine (3TC)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;3TC&quot;:
  exists &quot;3TC Condition&quot;
    or exists &quot;3TC Observation&quot;
define &quot;3TC Condition&quot;:
  [Condition: Concepts.&quot;3TC&quot;]
define &quot;3TC Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;3TC&quot;
/* End of 3TC */

/*
@dataElement: HIV.D.DE132 - AZT
@activity: HIV.D8 Capture or update client history
@description: Treated with zidovudine (AZT)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;AZT&quot;:
  exists &quot;AZT Condition&quot;
    or exists &quot;AZT Observation&quot;
define &quot;AZT Condition&quot;:
  [Condition: Concepts.&quot;AZT&quot;]
define &quot;AZT Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;AZT&quot;
/* End of AZT */

/*
@dataElement: HIV.D.DE133 - DDI
@activity: HIV.D8 Capture or update client history
@description: Treated with didanosine (DDI)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;DDI&quot;:
  exists &quot;DDI Condition&quot;
    or exists &quot;DDI Observation&quot;
define &quot;DDI Condition&quot;:
  [Condition: Concepts.&quot;DDI&quot;]
define &quot;DDI Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;DDI&quot;
/* End of DDI */

/*
@dataElement: HIV.D.DE134 - D4T
@activity: HIV.D8 Capture or update client history
@description: Treated with stavudine (D4T)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;D4T&quot;:
  exists &quot;D4T Condition&quot;
    or exists &quot;D4T Observation&quot;
define &quot;D4T Condition&quot;:
  [Condition: Concepts.&quot;D4T&quot;]
define &quot;D4T Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;D4T&quot;
/* End of D4T */

/*
@dataElement: HIV.D.DE135 - TDF
@activity: HIV.D8 Capture or update client history
@description: Treated with tenofovir (TDF)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TDF D.DE135&quot;:
  exists &quot;TDF D.DE135 Condition&quot;
    or exists &quot;TDF D.DE135 Observation&quot;
define &quot;TDF D.DE135 Condition&quot;:
  [Condition: Concepts.&quot;TDF - HIV.D.DE135&quot;]
define &quot;TDF D.DE135 Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;TDF - HIV.D.DE135&quot;
/* End of TDF D.DE135 */

/*
@dataElement: HIV.D.DE136 - EFV
@activity: HIV.D8 Capture or update client history
@description: Treated with efavirenz (EFV)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;EFV&quot;:
  exists &quot;EFV Condition&quot;
    or exists &quot;EFV Observation&quot;
define &quot;EFV Condition&quot;:
  [Condition: Concepts.&quot;EFV&quot;]
define &quot;EFV Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;EFV&quot;
/* End of EFV */

/*
@dataElement: HIV.D.DE137 - ETV
@activity: HIV.D8 Capture or update client history
@description: Treated with etravirine (ETV)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;ETV&quot;:
  exists &quot;ETV Condition&quot;
    or exists &quot;ETV Observation&quot;
define &quot;ETV Condition&quot;:
  [Condition: Concepts.&quot;ETV&quot;]
define &quot;ETV Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;ETV&quot;
/* End of ETV */

/*
@dataElement: HIV.D.DE138 - NVP
@activity: HIV.D8 Capture or update client history
@description: Treated with nevirapine (NVP)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;NVP&quot;:
  exists &quot;NVP Condition&quot;
    or exists &quot;NVP Observation&quot;
define &quot;NVP Condition&quot;:
  [Condition: Concepts.&quot;NVP&quot;]
define &quot;NVP Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;NVP&quot;
/* End of NVP */

/*
@dataElement: HIV.D.DE139 - RIL
@activity: HIV.D8 Capture or update client history
@description: Treated with rilpivirine (RIL)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;RIL&quot;:
  exists &quot;RIL Condition&quot;
    or exists &quot;RIL Observation&quot;
define &quot;RIL Condition&quot;:
  [Condition: Concepts.&quot;RIL&quot;]
define &quot;RIL Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;RIL&quot;
/* End of RIL */

/*
@dataElement: HIV.D.DE140 - ATV/r
@activity: HIV.D8 Capture or update client history
@description: Treated with atazanavir/ritonavir (ATV/r)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;ATV/r D.DE140&quot;:
  exists &quot;ATV/r D.DE140 Condition&quot;
    or exists &quot;ATV/r D.DE140 Observation&quot;
define &quot;ATV/r D.DE140 Condition&quot;:
  [Condition: Concepts.&quot;ATV/r - HIV.D.DE140&quot;]
define &quot;ATV/r D.DE140 Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;ATV/r - HIV.D.DE140&quot;
/* End of ATV/r D.DE140 */

/*
@dataElement: HIV.D.DE141 - LPV/r
@activity: HIV.D8 Capture or update client history
@description: Treated with lopinavir/ritonavir (LPV/r)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;LPV/r D.DE141&quot;:
  exists &quot;LPV/r D.DE141 Condition&quot;
    or exists &quot;LPV/r D.DE141 Observation&quot;
define &quot;LPV/r D.DE141 Condition&quot;:
  [Condition: Concepts.&quot;LPV/r - HIV.D.DE141&quot;]
define &quot;LPV/r D.DE141 Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;LPV/r - HIV.D.DE141&quot;
/* End of LPV/r D.DE141 */

/*
@dataElement: HIV.D.DE142 - DRV/r
@activity: HIV.D8 Capture or update client history
@description: Treated with darunavir/ritonavir (DRV/r)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;DRV/r D.DE142&quot;:
  exists &quot;DRV/r D.DE142 Condition&quot;
    or exists &quot;DRV/r D.DE142 Observation&quot;
define &quot;DRV/r D.DE142 Condition&quot;:
  [Condition: Concepts.&quot;DRV/r - HIV.D.DE142&quot;]
define &quot;DRV/r D.DE142 Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;DRV/r - HIV.D.DE142&quot;
/* End of DRV/r D.DE142 */

/*
@dataElement: HIV.D.DE143 - RTV
@activity: HIV.D8 Capture or update client history
@description: Treated with ritonavir (RTV)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;RTV&quot;:
  exists &quot;RTV Condition&quot;
    or exists &quot;RTV Observation&quot;
define &quot;RTV Condition&quot;:
  [Condition: Concepts.&quot;RTV&quot;]
define &quot;RTV Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;RTV&quot;
/* End of RTV */

/*
@dataElement: HIV.D.DE144 - DTG
@activity: HIV.D8 Capture or update client history
@description: Treated with dolutegravir (DTG)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;DTG D.DE144&quot;:
  exists &quot;DTG D.DE144 Condition&quot;
    or exists &quot;DTG D.DE144 Observation&quot;
define &quot;DTG D.DE144 Condition&quot;:
  [Condition: Concepts.&quot;DTG - HIV.D.DE144&quot;]
define &quot;DTG D.DE144 Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;DTG - HIV.D.DE144&quot;
/* End of DTG D.DE144 */

/*
@dataElement: HIV.D.DE145 - RAL
@activity: HIV.D8 Capture or update client history
@description: Treated with raltegravir (RAL)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;RAL D.DE145&quot;:
  exists &quot;RAL D.DE145 Condition&quot;
    or exists &quot;RAL D.DE145 Observation&quot;
define &quot;RAL D.DE145 Condition&quot;:
  [Condition: Concepts.&quot;RAL - HIV.D.DE145&quot;]
define &quot;RAL D.DE145 Observation&quot;:
  &quot;ART regimen composition Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;RAL - HIV.D.DE145&quot;
/* End of RAL D.DE145 */

/*
@dataElement: HIV.D.DE152 - Prevention services offered and referrals
@activity: HIV.D12 Determine recommended screenings and tests
@description: Offer or refer for prevention services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Prevention services offered and referrals D.DE152&quot;:
  exists &quot;Prevention services offered and referrals D.DE152 Observation&quot;
define &quot;Prevention services offered and referrals D.DE152 Observation&quot;:
  [Observation: Concepts.&quot;Prevention services offered and referrals - HIV.D.DE152&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Prevention services offered and referrals D.DE152 */

/*
@dataElement: HIV.D.DE153 - Offer male and female condoms and condom-compatible lubricants
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Offer male and female condoms and condom-compatible lubricants
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Offer male and female condoms and condom-compatible lubricants D.DE153&quot;:
  exists &quot;Offer male and female condoms and condom-compatible lubricants D.DE153 Condition&quot;
    or exists &quot;Offer male and female condoms and condom-compatible lubricants D.DE153 Observation&quot;
define &quot;Offer male and female condoms and condom-compatible lubricants D.DE153 Condition&quot;:
  [Condition: Concepts.&quot;Offer male and female condoms and condom-compatible lubricants - HIV.D.DE153&quot;]
define &quot;Offer male and female condoms and condom-compatible lubricants D.DE153 Observation&quot;:
  &quot;Prevention services offered and referrals D.DE152 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Offer male and female condoms and condom-compatible lubricants - HIV.D.DE153&quot;
/* End of Offer male and female condoms and condom-compatible lubricants D.DE153 */

/*
@dataElement: HIV.D.DE154 - Harm reduction for people who inject drugs
@activity: HIV.D12 Determine recommended screenings and tests
@description: Offer or refer people who inject drugs to harm reduction services (needle and syringe programmes, opioid substitution therapy, other drug-dependence treatment and opioid overdose prevention and management)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Harm reduction for people who inject drugs D.DE154&quot;:
  exists &quot;Harm reduction for people who inject drugs D.DE154 Condition&quot;
    or exists &quot;Harm reduction for people who inject drugs D.DE154 Observation&quot;
define &quot;Harm reduction for people who inject drugs D.DE154 Condition&quot;:
  [Condition: Concepts.&quot;Harm reduction for people who inject drugs - HIV.D.DE154&quot;]
define &quot;Harm reduction for people who inject drugs D.DE154 Observation&quot;:
  &quot;Prevention services offered and referrals D.DE152 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Harm reduction for people who inject drugs - HIV.D.DE154&quot;
/* End of Harm reduction for people who inject drugs D.DE154 */

/*
@dataElement: HIV.D.DE155 - Behavioural interventions to support risk reduction
@activity: HIV.D12 Determine recommended screenings and tests
@description: Offer or refer to services for behavioural interventions to support risk reduction, particularly for people with HIV and members of key populations
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Behavioural interventions to support risk reduction D.DE155&quot;:
  exists &quot;Behavioural interventions to support risk reduction D.DE155 Condition&quot;
    or exists &quot;Behavioural interventions to support risk reduction D.DE155 Observation&quot;
define &quot;Behavioural interventions to support risk reduction D.DE155 Condition&quot;:
  [Condition: Concepts.&quot;Behavioural interventions to support risk reduction - HIV.D.DE155&quot;]
define &quot;Behavioural interventions to support risk reduction D.DE155 Observation&quot;:
  &quot;Prevention services offered and referrals D.DE152 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Behavioural interventions to support risk reduction - HIV.D.DE155&quot;
/* End of Behavioural interventions to support risk reduction D.DE155 */

/*
@dataElement: HIV.D.DE156 - Sexual and reproductive health integrated services
@activity: HIV.D12 Determine recommended screenings and tests
@description: Offer or refer to sexual and reproductive health services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sexual and reproductive health integrated services D.DE156&quot;:
  exists &quot;Sexual and reproductive health integrated services D.DE156 Observation&quot;
define &quot;Sexual and reproductive health integrated services D.DE156 Observation&quot;:
  [Observation: Concepts.&quot;Sexual and reproductive health integrated services - HIV.D.DE156&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Sexual and reproductive health integrated services D.DE156 */

/*
@dataElement: HIV.D.DE157 - Contraception and family planning
@activity: HIV.D12 Determine recommended screenings and tests
@description: Offer contraception and family planning services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Contraception and family planning D.DE157&quot;:
  exists &quot;Contraception and family planning D.DE157 Condition&quot;
    or exists &quot;Contraception and family planning D.DE157 Observation&quot;
define &quot;Contraception and family planning D.DE157 Condition&quot;:
  [Condition: Concepts.&quot;Contraception and family planning - HIV.D.DE157&quot;]
define &quot;Contraception and family planning D.DE157 Observation&quot;:
  &quot;Sexual and reproductive health integrated services D.DE156 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Contraception and family planning - HIV.D.DE157&quot;
/* End of Contraception and family planning D.DE157 */

/*
@dataElement: HIV.D.DE158 - Check pregnancy status
@activity: HIV.D12 Determine recommended screenings and tests
@description: Check woman's pregnancy status
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Check pregnancy status D.DE158&quot;:
  exists &quot;Check pregnancy status D.DE158 Condition&quot;
    or exists &quot;Check pregnancy status D.DE158 Observation&quot;
define &quot;Check pregnancy status D.DE158 Condition&quot;:
  [Condition: Concepts.&quot;Check pregnancy status - HIV.D.DE158&quot;]
define &quot;Check pregnancy status D.DE158 Observation&quot;:
  &quot;Sexual and reproductive health integrated services D.DE156 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Check pregnancy status - HIV.D.DE158&quot;
/* End of Check pregnancy status D.DE158 */

/*
@dataElement: HIV.D.DE159 - Prevention of mother-to-child transmission
@activity: HIV.D12 Determine recommended screenings and tests
@description: Offer prevention of mother-to-child transmission services (counselling)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Prevention of mother-to-child transmission&quot;:
  exists &quot;Prevention of mother-to-child transmission Condition&quot;
    or exists &quot;Prevention of mother-to-child transmission Observation&quot;
define &quot;Prevention of mother-to-child transmission Condition&quot;:
  [Condition: Concepts.&quot;Prevention of mother-to-child transmission&quot;]
define &quot;Prevention of mother-to-child transmission Observation&quot;:
  &quot;Sexual and reproductive health integrated services D.DE156 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Prevention of mother-to-child transmission&quot;
/* End of Prevention of mother-to-child transmission */

/*
@dataElement: HIV.D.DE160 - STI testing and treatment
@activity: HIV.D12 Determine recommended screenings and tests
@description: Offer STI testing and treatment services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;STI testing and treatment D.DE160&quot;:
  exists &quot;STI testing and treatment D.DE160 Condition&quot;
    or exists &quot;STI testing and treatment D.DE160 Observation&quot;
define &quot;STI testing and treatment D.DE160 Condition&quot;:
  [Condition: Concepts.&quot;STI testing and treatment - HIV.D.DE160&quot;]
define &quot;STI testing and treatment D.DE160 Observation&quot;:
  &quot;Sexual and reproductive health integrated services D.DE156 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;STI testing and treatment - HIV.D.DE160&quot;
/* End of STI testing and treatment D.DE160 */

/*
@dataElement: HIV.D.DE161 - HBsAg test date
@activity: HIV.D12 Determine recommended screenings and tests
@description: Date client was tested for hepatitis B virus (HBV)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HBsAg test date D.DE161&quot;:
  [Observation: Concepts.&quot;HBsAg test date - HIV.D.DE161&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;HBsAg test date D.DE161 Value&quot;:
  &quot;HBsAg test date D.DE161&quot; O
  return O.value
/* End of HBsAg test date D.DE161 */

/*
@dataElement: HIV.D.DE162 - HBsAg test result
@activity: HIV.D12 Determine recommended screenings and tests
@description: Hepatitis B virus test result (HBsAg)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HBsAg test result D.DE162&quot;:
  exists &quot;HBsAg test result D.DE162 Observation&quot;
define &quot;HBsAg test result D.DE162 Observation&quot;:
  [Observation: Concepts.&quot;HBsAg test result - HIV.D.DE162&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HBsAg test result D.DE162 */

/*
@dataElement: HIV.D.DE163 - Positive
@activity: HIV.D12 Determine recommended screenings and tests
@description: HBsAg test result was positive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Positive D.DE163&quot;:
  exists &quot;Positive D.DE163 Condition&quot;
    or exists &quot;Positive D.DE163 Observation&quot;
define &quot;Positive D.DE163 Condition&quot;:
  [Condition: Concepts.&quot;Positive - HIV.D.DE163&quot;]
define &quot;Positive D.DE163 Observation&quot;:
  &quot;HBsAg test result D.DE162 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Positive - HIV.D.DE163&quot;
/* End of Positive D.DE163 */

/*
@dataElement: HIV.D.DE164 - Negative
@activity: HIV.D12 Determine recommended screenings and tests
@description: HBsAg test result was negative
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Negative D.DE164&quot;:
  exists &quot;Negative D.DE164 Condition&quot;
    or exists &quot;Negative D.DE164 Observation&quot;
define &quot;Negative D.DE164 Condition&quot;:
  [Condition: Concepts.&quot;Negative - HIV.D.DE164&quot;]
define &quot;Negative D.DE164 Observation&quot;:
  &quot;HBsAg test result D.DE162 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Negative - HIV.D.DE164&quot;
/* End of Negative D.DE164 */

/*
@dataElement: HIV.D.DE165 - Indeterminate
@activity: HIV.D12 Determine recommended screenings and tests
@description: HBsAg test result was indeterminate
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Indeterminate D.DE165&quot;:
  exists &quot;Indeterminate D.DE165 Condition&quot;
    or exists &quot;Indeterminate D.DE165 Observation&quot;
define &quot;Indeterminate D.DE165 Condition&quot;:
  [Condition: Concepts.&quot;Indeterminate - HIV.D.DE165&quot;]
define &quot;Indeterminate D.DE165 Observation&quot;:
  &quot;HBsAg test result D.DE162 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Indeterminate - HIV.D.DE165&quot;
/* End of Indeterminate D.DE165 */

/*
@dataElement: HIV.D.DE167 - HBV treatment TDF start date
@activity: HIV.D12 Determine recommended screenings and tests
@description: Date when client started treatment (TDF) for hepatitis B virus (HBV)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HBV treatment TDF start date&quot;:
  [Observation: Concepts.&quot;HBV treatment TDF start date&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;HBV treatment TDF start date Value&quot;:
  &quot;HBV treatment TDF start date&quot; O
  return O.value
/* End of HBV treatment TDF start date */

/*
@dataElement: HIV.D.DE169 - HCV test date
@activity: HIV.D12 Determine recommended screenings and tests
@description: Date client was tested for hepatitis C virus (HCV antibody, HCV RNA or HCV core antigen)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HCV test date D.DE169&quot;:
  [Observation: Concepts.&quot;HCV test date - HIV.D.DE169&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;HCV test date D.DE169 Value&quot;:
  &quot;HCV test date D.DE169&quot; O
  return O.value
/* End of HCV test date D.DE169 */

/*
@dataElement: HIV.D.DE170 - HCV test result
@activity: HIV.D12 Determine recommended screenings and tests
@description: Hepatitis C virus test result (HCV antibody, HCV RNA or HCV core antigen)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HCV test result D.DE170&quot;:
  exists &quot;HCV test result D.DE170 Observation&quot;
define &quot;HCV test result D.DE170 Observation&quot;:
  [Observation: Concepts.&quot;HCV test result - HIV.D.DE170&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HCV test result D.DE170 */

/*
@dataElement: HIV.D.DE171 - Positive
@activity: HIV.D12 Determine recommended screenings and tests
@description: HCV test result was positive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Positive D.DE171&quot;:
  exists &quot;Positive D.DE171 Condition&quot;
    or exists &quot;Positive D.DE171 Observation&quot;
define &quot;Positive D.DE171 Condition&quot;:
  [Condition: Concepts.&quot;Positive - HIV.D.DE171&quot;]
define &quot;Positive D.DE171 Observation&quot;:
  &quot;HCV test result D.DE170 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Positive - HIV.D.DE171&quot;
/* End of Positive D.DE171 */

/*
@dataElement: HIV.D.DE172 - Negative
@activity: HIV.D12 Determine recommended screenings and tests
@description: HCV test result was negative
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Negative D.DE172&quot;:
  exists &quot;Negative D.DE172 Condition&quot;
    or exists &quot;Negative D.DE172 Observation&quot;
define &quot;Negative D.DE172 Condition&quot;:
  [Condition: Concepts.&quot;Negative - HIV.D.DE172&quot;]
define &quot;Negative D.DE172 Observation&quot;:
  &quot;HCV test result D.DE170 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Negative - HIV.D.DE172&quot;
/* End of Negative D.DE172 */

/*
@dataElement: HIV.D.DE173 - Indeterminate
@activity: HIV.D12 Determine recommended screenings and tests
@description: HCV test result was indeterminate
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Indeterminate D.DE173&quot;:
  exists &quot;Indeterminate D.DE173 Condition&quot;
    or exists &quot;Indeterminate D.DE173 Observation&quot;
define &quot;Indeterminate D.DE173 Condition&quot;:
  [Condition: Concepts.&quot;Indeterminate - HIV.D.DE173&quot;]
define &quot;Indeterminate D.DE173 Observation&quot;:
  &quot;HCV test result D.DE170 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Indeterminate - HIV.D.DE173&quot;
/* End of Indeterminate D.DE173 */

/*
@dataElement: HIV.D.DE175 - HCV treatment start date
@activity: HIV.D12 Determine recommended screenings and tests
@description: Date when client started treatment for hepatitis C virus (HCV)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HCV treatment start date&quot;:
  [Observation: Concepts.&quot;HCV treatment start date&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;HCV treatment start date Value&quot;:
  &quot;HCV treatment start date&quot; O
  return O.value
/* End of HCV treatment start date */

/*
@dataElement: HIV.D.DE176 - HCV treatment completion date
@activity: HIV.D12 Determine recommended screenings and tests
@description: Date when client completed treatment for hepatitis C virus (HCV)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HCV treatment completion date&quot;:
  [Observation: Concepts.&quot;HCV treatment completion date&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;HCV treatment completion date Value&quot;:
  &quot;HCV treatment completion date&quot; O
  return O.value
/* End of HCV treatment completion date */

/*
@dataElement: HIV.D.DE178 - HCV viral load test date
@activity: HIV.D12 Determine recommended screenings and tests
@description: Hepatitis C viral load test date
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HCV viral load test date D.DE178&quot;:
  [Observation: Concepts.&quot;HCV viral load test date - HIV.D.DE178&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;HCV viral load test date D.DE178 Value&quot;:
  &quot;HCV viral load test date D.DE178&quot; O
  return O.value
/* End of HCV viral load test date D.DE178 */

/*
@dataElement: HIV.D.DE179 - HCV viral load test result
@activity: HIV.D12 Determine recommended screenings and tests
@description: Hepatitis C viral load test result (qualitative)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HCV viral load test result D.DE179&quot;:
  exists &quot;HCV viral load test result D.DE179 Observation&quot;
define &quot;HCV viral load test result D.DE179 Observation&quot;:
  [Observation: Concepts.&quot;HCV viral load test result - HIV.D.DE179&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HCV viral load test result D.DE179 */

/*
@dataElement: HIV.D.DE180 - Detected
@activity: HIV.D12 Determine recommended screenings and tests
@description: HCV was detected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Detected D.DE180&quot;:
  exists &quot;Detected D.DE180 Condition&quot;
    or exists &quot;Detected D.DE180 Observation&quot;
define &quot;Detected D.DE180 Condition&quot;:
  [Condition: Concepts.&quot;Detected - HIV.D.DE180&quot;]
define &quot;Detected D.DE180 Observation&quot;:
  &quot;HCV viral load test result D.DE179 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Detected - HIV.D.DE180&quot;
/* End of Detected D.DE180 */

/*
@dataElement: HIV.D.DE181 - Not detected
@activity: HIV.D12 Determine recommended screenings and tests
@description: HCV was not detected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Not detected D.DE181&quot;:
  exists &quot;Not detected D.DE181 Condition&quot;
    or exists &quot;Not detected D.DE181 Observation&quot;
define &quot;Not detected D.DE181 Condition&quot;:
  [Condition: Concepts.&quot;Not detected - HIV.D.DE181&quot;]
define &quot;Not detected D.DE181 Observation&quot;:
  &quot;HCV viral load test result D.DE179 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Not detected - HIV.D.DE181&quot;
/* End of Not detected D.DE181 */

/*
@dataElement: HIV.D.DE182 - HCV medicine type
@activity: HIV.D12 Determine recommended screenings and tests
@description: Type of medicine client is prescribed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HCV medicine type&quot;:
  exists &quot;HCV medicine type Observation&quot;
define &quot;HCV medicine type Observation&quot;:
  [Observation: Concepts.&quot;HCV medicine type&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HCV medicine type */

/*
@dataElement: HIV.D.DE183 - Interferon
@activity: HIV.D12 Determine recommended screenings and tests
@description: Client is prescribed interferon
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Interferon&quot;:
  exists &quot;Interferon Condition&quot;
    or exists &quot;Interferon Observation&quot;
define &quot;Interferon Condition&quot;:
  [Condition: Concepts.&quot;Interferon&quot;]
define &quot;Interferon Observation&quot;:
  &quot;HCV medicine type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Interferon&quot;
/* End of Interferon */

/*
@dataElement: HIV.D.DE184 - Direct acting antivirals
@activity: HIV.D12 Determine recommended screenings and tests
@description: Client is prescribed direct acting antivirals
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Direct acting antivirals&quot;:
  exists &quot;Direct acting antivirals Condition&quot;
    or exists &quot;Direct acting antivirals Observation&quot;
define &quot;Direct acting antivirals Condition&quot;:
  [Condition: Concepts.&quot;Direct acting antivirals&quot;]
define &quot;Direct acting antivirals Observation&quot;:
  &quot;HCV medicine type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Direct acting antivirals&quot;
/* End of Direct acting antivirals */

/*
@dataElement: HIV.D.DE185 - Currently on TDF-based ART
@activity: HIV.D12 Determine recommended screenings and tests
@description: Client is currently on TDF-based ART regimen
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Currently on TDF-based ART&quot;:
  exists &quot;Currently on TDF-based ART Observation&quot;
define &quot;Currently on TDF-based ART Observation&quot;:
  [Observation: Concepts.&quot;Currently on TDF-based ART&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Currently on TDF-based ART */

/*
@dataElement: HIV.D.DE186 - HIV clinical stage
@activity: HIV.D8 Capture or update client history
@description: WHO clinical stage of client based on signs and symptoms. WHO clinical staging is a way to categorize HIV disease severity based on new or recurrent clinical events. There are 4 WHO clinical stages that range from mild symptoms (WHO clinical stage 1) to severe symptoms (WHO clinical stage 4).
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV clinical stage D.DE186&quot;:
  exists &quot;HIV clinical stage D.DE186 Observation&quot;
define &quot;HIV clinical stage D.DE186 Observation&quot;:
  [Observation: Concepts.&quot;HIV clinical stage - HIV.D.DE186&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HIV clinical stage D.DE186 */

/*
@dataElement: HIV.D.DE187 - WHO HIV clinical stage 1
@activity: HIV.D8 Capture or update client history
@description: Client is currently assessed to be at a clinical stage 1, based on clinical assessment and diagnostics
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;WHO HIV clinical stage 1&quot;:
  exists &quot;WHO HIV clinical stage 1 Condition&quot;
    or exists &quot;WHO HIV clinical stage 1 Observation&quot;
define &quot;WHO HIV clinical stage 1 Condition&quot;:
  [Condition: Concepts.&quot;WHO HIV clinical stage 1&quot;]
define &quot;WHO HIV clinical stage 1 Observation&quot;:
  &quot;HIV clinical stage D.DE186 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;WHO HIV clinical stage 1&quot;
/* End of WHO HIV clinical stage 1 */

/*
@dataElement: HIV.D.DE188 - WHO HIV clinical stage 2
@activity: HIV.D8 Capture or update client history
@description: Client is currently assessed to be at a clinical stage 2, based on clinical assessment and diagnostics
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;WHO HIV clinical stage 2&quot;:
  exists &quot;WHO HIV clinical stage 2 Condition&quot;
    or exists &quot;WHO HIV clinical stage 2 Observation&quot;
define &quot;WHO HIV clinical stage 2 Condition&quot;:
  [Condition: Concepts.&quot;WHO HIV clinical stage 2&quot;]
define &quot;WHO HIV clinical stage 2 Observation&quot;:
  &quot;HIV clinical stage D.DE186 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;WHO HIV clinical stage 2&quot;
/* End of WHO HIV clinical stage 2 */

/*
@dataElement: HIV.D.DE189 - WHO HIV clinical stage 3
@activity: HIV.D8 Capture or update client history
@description: Client is currently assessed to be at a clinical stage 3, based on clinical assessment and diagnostics
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;WHO HIV clinical stage 3&quot;:
  exists &quot;WHO HIV clinical stage 3 Condition&quot;
    or exists &quot;WHO HIV clinical stage 3 Observation&quot;
define &quot;WHO HIV clinical stage 3 Condition&quot;:
  [Condition: Concepts.&quot;WHO HIV clinical stage 3&quot;]
define &quot;WHO HIV clinical stage 3 Observation&quot;:
  &quot;HIV clinical stage D.DE186 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;WHO HIV clinical stage 3&quot;
/* End of WHO HIV clinical stage 3 */

/*
@dataElement: HIV.D.DE190 - WHO HIV clinical stage 4
@activity: HIV.D8 Capture or update client history
@description: Client is currently assessed to be at a clinical stage 4, based on clinical assessment and diagnostics
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;WHO HIV clinical stage 4&quot;:
  exists &quot;WHO HIV clinical stage 4 Condition&quot;
    or exists &quot;WHO HIV clinical stage 4 Observation&quot;
define &quot;WHO HIV clinical stage 4 Condition&quot;:
  [Condition: Concepts.&quot;WHO HIV clinical stage 4&quot;]
define &quot;WHO HIV clinical stage 4 Observation&quot;:
  &quot;HIV clinical stage D.DE186 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;WHO HIV clinical stage 4&quot;
/* End of WHO HIV clinical stage 4 */

/*
@dataElement: HIV.D.DE193 - Date viral load test results received by client
@activity: HIV.D10 Counsel returning client
@description: The date on which the client received results from viral load test
*/

define &quot;Date viral load test results received by client D.DE193&quot;:
  [Observation: Concepts.&quot;Viral load test result - HIV.D.DE387&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Date viral load test results received by client D.DE193 */

/*
@dataElement: HIV.D.DE194 - Date of viral load sample collection
@activity: HIV.D10 Counsel returning client
@description: Date and time when the sample was collected to test the client's HIV viral load
*/

define &quot;Date of viral load sample collection D.DE194&quot;:
  [Procedure] P
  where P.status = 'completed'
  and P.code ~ ConceptsCustom.&quot;viral load test&quot;
/* End of Date of viral load sample collection D.DE194 */

/*
@dataElement: HIV.D.DE195 - Date of scheduled review of viral load test results
@activity: HIV.D10 Counsel returning client
@description: Expected date when client's viral load test results will be returned and reviewed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date of scheduled review of viral load test results&quot;:
  [Observation: Concepts.&quot;Date of scheduled review of viral load test results&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date of scheduled review of viral load test results Value&quot;:
  &quot;Date of scheduled review of viral load test results&quot; O
  return O.value
/* End of Date of scheduled review of viral load test results */

/*
@dataElement: HIV.D.DE217 - Reason ART stopped
@activity: HIV.D10 Counsel returning client
@description: Reason client intentionally stopped ART
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reason ART stopped D.DE217&quot;:
  exists &quot;Reason ART stopped D.DE217 Observation&quot;
define &quot;Reason ART stopped D.DE217 Observation&quot;:
  [Observation: Concepts.&quot;Reason ART stopped - HIV.D.DE217&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Reason ART stopped D.DE217 */

/*
@dataElement: HIV.D.DE218 - Toxicity/side effects
@activity: HIV.D10 Counsel returning client
@description: Client stopped ART because of toxicity/side effects
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Toxicity/side effects D.DE218&quot;:
  exists &quot;Toxicity/side effects D.DE218 Condition&quot;
    or exists &quot;Toxicity/side effects D.DE218 Observation&quot;
define &quot;Toxicity/side effects D.DE218 Condition&quot;:
  [Condition: Concepts.&quot;Toxicity/side effects - HIV.D.DE218&quot;]
define &quot;Toxicity/side effects D.DE218 Observation&quot;:
  &quot;Reason ART stopped D.DE217 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Toxicity/side effects - HIV.D.DE218&quot;
/* End of Toxicity/side effects D.DE218 */

/*
@dataElement: HIV.D.DE219 - Severe illness, hospitalization
@activity: HIV.D10 Counsel returning client
@description: Client stopped ART because of severe illness, hospitalization
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Severe illness, hospitalization D.DE219&quot;:
  exists &quot;Severe illness, hospitalization D.DE219 Condition&quot;
    or exists &quot;Severe illness, hospitalization D.DE219 Observation&quot;
define &quot;Severe illness, hospitalization D.DE219 Condition&quot;:
  [Condition: Concepts.&quot;Severe illness, hospitalization - HIV.D.DE219&quot;]
define &quot;Severe illness, hospitalization D.DE219 Observation&quot;:
  &quot;Reason ART stopped D.DE217 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Severe illness, hospitalization - HIV.D.DE219&quot;
/* End of Severe illness, hospitalization D.DE219 */

/*
@dataElement: HIV.D.DE220 - Drugs out of stock
@activity: HIV.D10 Counsel returning client
@description: Client stopped ART because drugs were out of stock
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Drugs out of stock&quot;:
  exists &quot;Drugs out of stock Condition&quot;
    or exists &quot;Drugs out of stock Observation&quot;
define &quot;Drugs out of stock Condition&quot;:
  [Condition: Concepts.&quot;Drugs out of stock&quot;]
define &quot;Drugs out of stock Observation&quot;:
  &quot;Reason ART stopped D.DE217 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Drugs out of stock&quot;
/* End of Drugs out of stock */

/*
@dataElement: HIV.D.DE221 - Client lacks finances
@activity: HIV.D10 Counsel returning client
@description: Client stopped ART because of lack of finances
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Client lacks finances&quot;:
  exists &quot;Client lacks finances Condition&quot;
    or exists &quot;Client lacks finances Observation&quot;
define &quot;Client lacks finances Condition&quot;:
  [Condition: Concepts.&quot;Client lacks finances&quot;]
define &quot;Client lacks finances Observation&quot;:
  &quot;Reason ART stopped D.DE217 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Client lacks finances&quot;
/* End of Client lacks finances */

/*
@dataElement: HIV.D.DE222 - Excluded HIV infection in infant
@activity: HIV.D10 Counsel returning client
@description: Client stopped ART because HIV infection in infant was excluded
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Excluded HIV infection in infant D.DE222&quot;:
  exists &quot;Excluded HIV infection in infant D.DE222 Condition&quot;
    or exists &quot;Excluded HIV infection in infant D.DE222 Observation&quot;
define &quot;Excluded HIV infection in infant D.DE222 Condition&quot;:
  [Condition: Concepts.&quot;Excluded HIV infection in infant - HIV.D.DE222&quot;]
define &quot;Excluded HIV infection in infant D.DE222 Observation&quot;:
  &quot;Reason ART stopped D.DE217 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Excluded HIV infection in infant - HIV.D.DE222&quot;
/* End of Excluded HIV infection in infant D.DE222 */

/*
@dataElement: HIV.D.DE223 - Other reason for stopping ART
@activity: HIV.D10 Counsel returning client
@description: Client stopped ART because of other reason
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other reason for stopping ART D.DE223&quot;:
  exists &quot;Other reason for stopping ART D.DE223 Condition&quot;
    or exists &quot;Other reason for stopping ART D.DE223 Observation&quot;
define &quot;Other reason for stopping ART D.DE223 Condition&quot;:
  [Condition: Concepts.&quot;Other reason for stopping ART - HIV.D.DE223&quot;]
define &quot;Other reason for stopping ART D.DE223 Observation&quot;:
  &quot;Reason ART stopped D.DE217 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other reason for stopping ART - HIV.D.DE223&quot;
/* End of Other reason for stopping ART D.DE223 */

/*
@dataElement: HIV.D.DE225 - Treatment failure
@activity: HIV.D17 Check for signs of treatment failure
@description: ART treatment failure
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Treatment failure&quot;:
  exists &quot;Treatment failure Observation&quot;
define &quot;Treatment failure Observation&quot;:
  [Observation: Concepts.&quot;Treatment failure&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Treatment failure */

/*
@dataElement: HIV.D.DE226 - Clinical failure
@activity: HIV.D17 Check for signs of treatment failure
@description: New or recurrent clinical event indicating severe immunodeficiency in adults or advanced or severe immunodeficiency in children
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Clinical failure&quot;:
  exists &quot;Clinical failure Condition&quot;
    or exists &quot;Clinical failure Observation&quot;
define &quot;Clinical failure Condition&quot;:
  [Condition: Concepts.&quot;Clinical failure&quot;]
define &quot;Clinical failure Observation&quot;:
  &quot;Treatment failure Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Clinical failure&quot;
/* End of Clinical failure */

/*
@dataElement: HIV.D.DE227 - Immunological failure
@activity: HIV.D17 Check for signs of treatment failure
@description: CD4 count at or below 250 cells/mm3 following clinical failure
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Immunological failure&quot;:
  exists &quot;Immunological failure Condition&quot;
    or exists &quot;Immunological failure Observation&quot;
define &quot;Immunological failure Condition&quot;:
  [Condition: Concepts.&quot;Immunological failure&quot;]
define &quot;Immunological failure Observation&quot;:
  &quot;Treatment failure Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Immunological failure&quot;
/* End of Immunological failure */

/*
@dataElement: HIV.D.DE228 - Virological failure
@activity: HIV.D17 Check for signs of treatment failure
@description: The inability to achieve or maintain viral suppression below a certain threshold indicated by viral load above 1000 copies/mL based on two consecutive viral load measurements in 3 months, with adherence support following the first viral load test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Virological failure&quot;:
  exists &quot;Virological failure Condition&quot;
    or exists &quot;Virological failure Observation&quot;
define &quot;Virological failure Condition&quot;:
  [Condition: Concepts.&quot;Virological failure&quot;]
define &quot;Virological failure Observation&quot;:
  &quot;Treatment failure Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Virological failure&quot;
/* End of Virological failure */

/*
@dataElement: HIV.D.DE259 - Risk factors, comorbidities and coinfections signs and symptoms
@activity: HIV.D14 Prevent, screen, and manage comorbidities and coinfections
@description: Signs and symptoms of opportunistic infections or other comorbidities experienced by client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Risk factors, comorbidities and coinfections signs and symptoms&quot;:
  exists &quot;Risk factors, comorbidities and coinfections signs and symptoms Observation&quot;
define &quot;Risk factors, comorbidities and coinfections signs and symptoms Observation&quot;:
  [Observation: Concepts.&quot;Risk factors, comorbidities and coinfections signs and symptoms&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Risk factors, comorbidities and coinfections signs and symptoms */

/*
@dataElement: HIV.D.DE282 - Presumptive TB
@activity: HIV.D14 Prevent, screen, and manage comorbidities and coinfections
@description: Client's comorbidities or coinfections or symptoms of these include presumptive TB
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Presumptive TB D.DE282&quot;:
  exists &quot;Presumptive TB D.DE282 Condition&quot;
    or exists &quot;Presumptive TB D.DE282 Observation&quot;
define &quot;Presumptive TB D.DE282 Condition&quot;:
  [Condition: Concepts.&quot;Presumptive TB - HIV.D.DE282&quot;]
define &quot;Presumptive TB D.DE282 Observation&quot;:
  &quot;Risk factors, comorbidities and coinfections signs and symptoms Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Presumptive TB - HIV.D.DE282&quot;
/* End of Presumptive TB D.DE282 */

/*
@dataElement: HIV.D.DE289 - WHO HIV clinical stage condition or symptom
@activity: HIV.D15 Determine clinical stage of HIV
@description: New or recurrent clinical events used to categorize HIV disease severity based at baseline and follow up
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;WHO HIV clinical stage condition or symptom D.DE289&quot;:
  exists &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot;
define &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot;:
  [Observation: Concepts.&quot;WHO HIV clinical stage condition or symptom - HIV.D.DE289&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of WHO HIV clinical stage condition or symptom D.DE289 */

/*
@dataElement: HIV.D.DE290 - Asymptomatic
@activity: HIV.D15 Determine clinical stage of HIV
@description: No HIV-related symptoms reported and no clinical signs on examination
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Asymptomatic&quot;:
  exists &quot;Asymptomatic Condition&quot;
    or exists &quot;Asymptomatic Observation&quot;
define &quot;Asymptomatic Condition&quot;:
  [Condition: Concepts.&quot;Asymptomatic&quot;]
define &quot;Asymptomatic Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Asymptomatic&quot;
/* End of Asymptomatic */

/*
@dataElement: HIV.D.DE291 - Persistent generalized lymphadenopathy
@activity: HIV.D15 Determine clinical stage of HIV
@description: Persistent enlarged lymph nodes &gt;1 cm at two or more non-contiguous sites (excluding inguinal) without known cause
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Persistent generalized lymphadenopathy&quot;:
  exists &quot;Persistent generalized lymphadenopathy Condition&quot;
    or exists &quot;Persistent generalized lymphadenopathy Observation&quot;
define &quot;Persistent generalized lymphadenopathy Condition&quot;:
  [Condition: Concepts.&quot;Persistent generalized lymphadenopathy&quot;]
define &quot;Persistent generalized lymphadenopathy Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Persistent generalized lymphadenopathy&quot;
/* End of Persistent generalized lymphadenopathy */

/*
@dataElement: HIV.D.DE292 - Moderate unexplained weight loss
@activity: HIV.D15 Determine clinical stage of HIV
@description: Moderate unexplained weight loss (&lt;10% of presumed or measured body weight)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Moderate unexplained weight loss&quot;:
  exists &quot;Moderate unexplained weight loss Condition&quot;
    or exists &quot;Moderate unexplained weight loss Observation&quot;
define &quot;Moderate unexplained weight loss Condition&quot;:
  [Condition: Concepts.&quot;Moderate unexplained weight loss&quot;]
define &quot;Moderate unexplained weight loss Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Moderate unexplained weight loss&quot;
/* End of Moderate unexplained weight loss */

/*
@dataElement: HIV.D.DE293 - Recurrent respiratory tract infections
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include recurrent respiratory tract infections including sinusitis, tonsillitis, otitis media or pharyngitis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Recurrent respiratory tract infections&quot;:
  exists &quot;Recurrent respiratory tract infections Condition&quot;
    or exists &quot;Recurrent respiratory tract infections Observation&quot;
define &quot;Recurrent respiratory tract infections Condition&quot;:
  [Condition: Concepts.&quot;Recurrent respiratory tract infections&quot;]
define &quot;Recurrent respiratory tract infections Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Recurrent respiratory tract infections&quot;
/* End of Recurrent respiratory tract infections */

/*
@dataElement: HIV.D.DE294 - Unexplained persistent hepatosplenomegaly
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include unexplained persistent hepatosplenomegaly
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unexplained persistent hepatosplenomegaly&quot;:
  exists &quot;Unexplained persistent hepatosplenomegaly Condition&quot;
    or exists &quot;Unexplained persistent hepatosplenomegaly Observation&quot;
define &quot;Unexplained persistent hepatosplenomegaly Condition&quot;:
  [Condition: Concepts.&quot;Unexplained persistent hepatosplenomegaly&quot;]
define &quot;Unexplained persistent hepatosplenomegaly Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unexplained persistent hepatosplenomegaly&quot;
/* End of Unexplained persistent hepatosplenomegaly */

/*
@dataElement: HIV.D.DE295 - Herpes zoster
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include herpes zoster
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Herpes zoster&quot;:
  exists &quot;Herpes zoster Condition&quot;
    or exists &quot;Herpes zoster Observation&quot;
define &quot;Herpes zoster Condition&quot;:
  [Condition: Concepts.&quot;Herpes zoster&quot;]
define &quot;Herpes zoster Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Herpes zoster&quot;
/* End of Herpes zoster */

/*
@dataElement: HIV.D.DE296 - Angular cheilitis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include angular cheilitis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Angular cheilitis&quot;:
  exists &quot;Angular cheilitis Condition&quot;
    or exists &quot;Angular cheilitis Observation&quot;
define &quot;Angular cheilitis Condition&quot;:
  [Condition: Concepts.&quot;Angular cheilitis&quot;]
define &quot;Angular cheilitis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Angular cheilitis&quot;
/* End of Angular cheilitis */

/*
@dataElement: HIV.D.DE297 - Linear gingival erythema
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include linear gingival erythema
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Linear gingival erythema&quot;:
  exists &quot;Linear gingival erythema Condition&quot;
    or exists &quot;Linear gingival erythema Observation&quot;
define &quot;Linear gingival erythema Condition&quot;:
  [Condition: Concepts.&quot;Linear gingival erythema&quot;]
define &quot;Linear gingival erythema Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Linear gingival erythema&quot;
/* End of Linear gingival erythema */

/*
@dataElement: HIV.D.DE298 - Recurrent oral ulceration
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include recurrent oral ulceration
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Recurrent oral ulceration&quot;:
  exists &quot;Recurrent oral ulceration Condition&quot;
    or exists &quot;Recurrent oral ulceration Observation&quot;
define &quot;Recurrent oral ulceration Condition&quot;:
  [Condition: Concepts.&quot;Recurrent oral ulceration&quot;]
define &quot;Recurrent oral ulceration Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Recurrent oral ulceration&quot;
/* End of Recurrent oral ulceration */

/*
@dataElement: HIV.D.DE299 - Papular pruritic eruption
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include papular pruritic eruption
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Papular pruritic eruption&quot;:
  exists &quot;Papular pruritic eruption Condition&quot;
    or exists &quot;Papular pruritic eruption Observation&quot;
define &quot;Papular pruritic eruption Condition&quot;:
  [Condition: Concepts.&quot;Papular pruritic eruption&quot;]
define &quot;Papular pruritic eruption Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Papular pruritic eruption&quot;
/* End of Papular pruritic eruption */

/*
@dataElement: HIV.D.DE300 - Fungal nail infections
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include fungal nail infections
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Fungal nail infections&quot;:
  exists &quot;Fungal nail infections Condition&quot;
    or exists &quot;Fungal nail infections Observation&quot;
define &quot;Fungal nail infections Condition&quot;:
  [Condition: Concepts.&quot;Fungal nail infections&quot;]
define &quot;Fungal nail infections Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Fungal nail infections&quot;
/* End of Fungal nail infections */

/*
@dataElement: HIV.D.DE301 - Seborrhoeic dermatitis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include seborrhoeic dermatitis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Seborrhoeic dermatitis&quot;:
  exists &quot;Seborrhoeic dermatitis Condition&quot;
    or exists &quot;Seborrhoeic dermatitis Observation&quot;
define &quot;Seborrhoeic dermatitis Condition&quot;:
  [Condition: Concepts.&quot;Seborrhoeic dermatitis&quot;]
define &quot;Seborrhoeic dermatitis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Seborrhoeic dermatitis&quot;
/* End of Seborrhoeic dermatitis */

/*
@dataElement: HIV.D.DE302 - Extensive wart virus infection
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include extensive wart virus infection
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Extensive wart virus infection&quot;:
  exists &quot;Extensive wart virus infection Condition&quot;
    or exists &quot;Extensive wart virus infection Observation&quot;
define &quot;Extensive wart virus infection Condition&quot;:
  [Condition: Concepts.&quot;Extensive wart virus infection&quot;]
define &quot;Extensive wart virus infection Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Extensive wart virus infection&quot;
/* End of Extensive wart virus infection */

/*
@dataElement: HIV.D.DE303 - Extensive molluscum contagiosum
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include extensive molluscum contagiosum
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Extensive molluscum contagiosum&quot;:
  exists &quot;Extensive molluscum contagiosum Condition&quot;
    or exists &quot;Extensive molluscum contagiosum Observation&quot;
define &quot;Extensive molluscum contagiosum Condition&quot;:
  [Condition: Concepts.&quot;Extensive molluscum contagiosum&quot;]
define &quot;Extensive molluscum contagiosum Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Extensive molluscum contagiosum&quot;
/* End of Extensive molluscum contagiosum */

/*
@dataElement: HIV.D.DE304 - Unexplained persistent parotid enlargement
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include unexplained persistent parotid enlargement
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unexplained persistent parotid enlargement&quot;:
  exists &quot;Unexplained persistent parotid enlargement Condition&quot;
    or exists &quot;Unexplained persistent parotid enlargement Observation&quot;
define &quot;Unexplained persistent parotid enlargement Condition&quot;:
  [Condition: Concepts.&quot;Unexplained persistent parotid enlargement&quot;]
define &quot;Unexplained persistent parotid enlargement Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unexplained persistent parotid enlargement&quot;
/* End of Unexplained persistent parotid enlargement */

/*
@dataElement: HIV.D.DE305 - Unexplained severe weight loss in adults
@activity: HIV.D15 Determine clinical stage of HIV
@description: Unexplained severe weight loss (&gt;10% of presumed or measured body weight)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unexplained severe weight loss in adults&quot;:
  exists &quot;Unexplained severe weight loss in adults Condition&quot;
    or exists &quot;Unexplained severe weight loss in adults Observation&quot;
define &quot;Unexplained severe weight loss in adults Condition&quot;:
  [Condition: Concepts.&quot;Unexplained severe weight loss in adults&quot;]
define &quot;Unexplained severe weight loss in adults Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unexplained severe weight loss in adults&quot;
/* End of Unexplained severe weight loss in adults */

/*
@dataElement: HIV.D.DE306 - Unexplained moderate malnutrition not adequately responding to standard therapy
@activity: HIV.D15 Determine clinical stage of HIV
@description: Defined as weight-for-height &lt; - 2 z-score or mid-upper arm circumference 115 mm to &lt;125 mm. For children younger than five years of age: stunting is defined as severe acute malnutrition - either weight for height &lt; -3 z-score or mid-upper arm circumference &lt;115 mm or the presence of oedema.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unexplained moderate malnutrition not adequately responding to standard therapy&quot;:
  exists &quot;Unexplained moderate malnutrition not adequately responding to standard therapy Condition&quot;
    or exists &quot;Unexplained moderate malnutrition not adequately responding to standard therapy Observation&quot;
define &quot;Unexplained moderate malnutrition not adequately responding to standard therapy Condition&quot;:
  [Condition: Concepts.&quot;Unexplained moderate malnutrition not adequately responding to standard therapy&quot;]
define &quot;Unexplained moderate malnutrition not adequately responding to standard therapy Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unexplained moderate malnutrition not adequately responding to standard therapy&quot;
/* End of Unexplained moderate malnutrition not adequately responding to standard therapy */

/*
@dataElement: HIV.D.DE307 - Unexplained chronic diarrhoea for longer than 1 month
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include unexplained chronic diarrhoea for longer than 1 month
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unexplained chronic diarrhoea for longer than 1 month&quot;:
  exists &quot;Unexplained chronic diarrhoea for longer than 1 month Condition&quot;
    or exists &quot;Unexplained chronic diarrhoea for longer than 1 month Observation&quot;
define &quot;Unexplained chronic diarrhoea for longer than 1 month Condition&quot;:
  [Condition: Concepts.&quot;Unexplained chronic diarrhoea for longer than 1 month&quot;]
define &quot;Unexplained chronic diarrhoea for longer than 1 month Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unexplained chronic diarrhoea for longer than 1 month&quot;
/* End of Unexplained chronic diarrhoea for longer than 1 month */

/*
@dataElement: HIV.D.DE308 - Unexplained persistent diarrhoea 14 days or more
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include unexplained persistent diarrhoea (14 days or more)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unexplained persistent diarrhoea 14 days or more&quot;:
  exists &quot;Unexplained persistent diarrhoea 14 days or more Condition&quot;
    or exists &quot;Unexplained persistent diarrhoea 14 days or more Observation&quot;
define &quot;Unexplained persistent diarrhoea 14 days or more Condition&quot;:
  [Condition: Concepts.&quot;Unexplained persistent diarrhoea 14 days or more&quot;]
define &quot;Unexplained persistent diarrhoea 14 days or more Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unexplained persistent diarrhoea 14 days or more&quot;
/* End of Unexplained persistent diarrhoea 14 days or more */

/*
@dataElement: HIV.D.DE309 - Unexplained persistent fever above 37.5 C, intermittent or constant, for longer than one 1 month
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include unexplained persistent fever (above 37.5 C, intermittent or constant, for longer than one 1 month)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unexplained persistent fever above 37.5 C, intermittent or constant, for longer than one 1 month&quot;:
  exists &quot;Unexplained persistent fever above 37.5 C, intermittent or constant, for longer than one 1 month Condition&quot;
    or exists &quot;Unexplained persistent fever above 37.5 C, intermittent or constant, for longer than one 1 month Observation&quot;
define &quot;Unexplained persistent fever above 37.5 C, intermittent or constant, for longer than one 1 month Condition&quot;:
  [Condition: Concepts.&quot;Unexplained persistent fever above 37.5 C, intermittent or constant, for longer than one 1 month&quot;]
define &quot;Unexplained persistent fever above 37.5 C, intermittent or constant, for longer than one 1 month Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unexplained persistent fever above 37.5 C, intermittent or constant, for longer than one 1 month&quot;
/* End of Unexplained persistent fever above 37.5 C, intermittent or constant, for longer than one 1 month */

/*
@dataElement: HIV.D.DE310 - Persistent oral candidiasis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include persistent oral candidiasis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Persistent oral candidiasis&quot;:
  exists &quot;Persistent oral candidiasis Condition&quot;
    or exists &quot;Persistent oral candidiasis Observation&quot;
define &quot;Persistent oral candidiasis Condition&quot;:
  [Condition: Concepts.&quot;Persistent oral candidiasis&quot;]
define &quot;Persistent oral candidiasis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Persistent oral candidiasis&quot;
/* End of Persistent oral candidiasis */

/*
@dataElement: HIV.D.DE311 - Oral hairy leukoplakia
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client has fine white small linear or corrugated lesions on lateral borders of the tongue that do not scrape off
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Oral hairy leukoplakia&quot;:
  exists &quot;Oral hairy leukoplakia Condition&quot;
    or exists &quot;Oral hairy leukoplakia Observation&quot;
define &quot;Oral hairy leukoplakia Condition&quot;:
  [Condition: Concepts.&quot;Oral hairy leukoplakia&quot;]
define &quot;Oral hairy leukoplakia Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Oral hairy leukoplakia&quot;
/* End of Oral hairy leukoplakia */

/*
@dataElement: HIV.D.DE312 - Pulmonary TB
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include pulmonary TB
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Pulmonary TB D.DE312&quot;:
  exists &quot;Pulmonary TB D.DE312 Condition&quot;
    or exists &quot;Pulmonary TB D.DE312 Observation&quot;
define &quot;Pulmonary TB D.DE312 Condition&quot;:
  [Condition: Concepts.&quot;Pulmonary TB - HIV.D.DE312&quot;]
define &quot;Pulmonary TB D.DE312 Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Pulmonary TB - HIV.D.DE312&quot;
/* End of Pulmonary TB D.DE312 */

/*
@dataElement: HIV.D.DE313 - Lymph node TB
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include lymph node TB
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Lymph node TB D.DE313&quot;:
  exists &quot;Lymph node TB D.DE313 Condition&quot;
    or exists &quot;Lymph node TB D.DE313 Observation&quot;
define &quot;Lymph node TB D.DE313 Condition&quot;:
  [Condition: Concepts.&quot;Lymph node TB - HIV.D.DE313&quot;]
define &quot;Lymph node TB D.DE313 Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Lymph node TB - HIV.D.DE313&quot;
/* End of Lymph node TB D.DE313 */

/*
@dataElement: HIV.D.DE314 - Severe bacterial infections such as pneumonia, empyema, pyomyositis, bone or joint infection, meningitis, bacteraemia
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include severe bacterial infections (such as pneumonia, empyema, pyomyositis, bone or joint infection, meningitis, bacteraemia)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Severe bacterial infections such as pneumonia, empyema, pyomyositis, bone or joint infection, meningitis, bacteraemia&quot;:
  exists &quot;Severe bacterial infections such as pneumonia, empyema, pyomyositis, bone or joint infection, meningitis, bacteraemia Condition&quot;
    or exists &quot;Severe bacterial infections such as pneumonia, empyema, pyomyositis, bone or joint infection, meningitis, bacteraemia Observation&quot;
define &quot;Severe bacterial infections such as pneumonia, empyema, pyomyositis, bone or joint infection, meningitis, bacteraemia Condition&quot;:
  [Condition: Concepts.&quot;Severe bacterial infections such as pneumonia, empyema, pyomyositis, bone or joint infection, meningitis, bacteraemia&quot;]
define &quot;Severe bacterial infections such as pneumonia, empyema, pyomyositis, bone or joint infection, meningitis, bacteraemia Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Severe bacterial infections such as pneumonia, empyema, pyomyositis, bone or joint infection, meningitis, bacteraemia&quot;
/* End of Severe bacterial infections such as pneumonia, empyema, pyomyositis, bone or joint infection, meningitis, bacteraemia */

/*
@dataElement: HIV.D.DE315 - Severe recurrent bacterial pneumonia
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include severe recurrent bacterial pneumonia
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Severe recurrent bacterial pneumonia&quot;:
  exists &quot;Severe recurrent bacterial pneumonia Condition&quot;
    or exists &quot;Severe recurrent bacterial pneumonia Observation&quot;
define &quot;Severe recurrent bacterial pneumonia Condition&quot;:
  [Condition: Concepts.&quot;Severe recurrent bacterial pneumonia&quot;]
define &quot;Severe recurrent bacterial pneumonia Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Severe recurrent bacterial pneumonia&quot;
/* End of Severe recurrent bacterial pneumonia */

/*
@dataElement: HIV.D.DE316 - Acute necrotizing ulcerative stomatitis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include acute necrotizing ulcerative stomatitis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Acute necrotizing ulcerative stomatitis&quot;:
  exists &quot;Acute necrotizing ulcerative stomatitis Condition&quot;
    or exists &quot;Acute necrotizing ulcerative stomatitis Observation&quot;
define &quot;Acute necrotizing ulcerative stomatitis Condition&quot;:
  [Condition: Concepts.&quot;Acute necrotizing ulcerative stomatitis&quot;]
define &quot;Acute necrotizing ulcerative stomatitis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Acute necrotizing ulcerative stomatitis&quot;
/* End of Acute necrotizing ulcerative stomatitis */

/*
@dataElement: HIV.D.DE317 - Acute necrotizing ulcerative gingivitis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include acute necrotizing ulcerative gingivitis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Acute necrotizing ulcerative gingivitis&quot;:
  exists &quot;Acute necrotizing ulcerative gingivitis Condition&quot;
    or exists &quot;Acute necrotizing ulcerative gingivitis Observation&quot;
define &quot;Acute necrotizing ulcerative gingivitis Condition&quot;:
  [Condition: Concepts.&quot;Acute necrotizing ulcerative gingivitis&quot;]
define &quot;Acute necrotizing ulcerative gingivitis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Acute necrotizing ulcerative gingivitis&quot;
/* End of Acute necrotizing ulcerative gingivitis */

/*
@dataElement: HIV.D.DE318 - Acute necrotizing ulcerative periodontitis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include acute necrotizing ulcerative periodontitis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Acute necrotizing ulcerative periodontitis&quot;:
  exists &quot;Acute necrotizing ulcerative periodontitis Condition&quot;
    or exists &quot;Acute necrotizing ulcerative periodontitis Observation&quot;
define &quot;Acute necrotizing ulcerative periodontitis Condition&quot;:
  [Condition: Concepts.&quot;Acute necrotizing ulcerative periodontitis&quot;]
define &quot;Acute necrotizing ulcerative periodontitis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Acute necrotizing ulcerative periodontitis&quot;
/* End of Acute necrotizing ulcerative periodontitis */

/*
@dataElement: HIV.D.DE319 - Unexplained anaemia &lt;8 g/dL
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include unexplained anaemia (&lt;8 g/dL)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unexplained anaemia &lt;8 g/dL&quot;:
  exists &quot;Unexplained anaemia &lt;8 g/dL Condition&quot;
    or exists &quot;Unexplained anaemia &lt;8 g/dL Observation&quot;
define &quot;Unexplained anaemia &lt;8 g/dL Condition&quot;:
  [Condition: Concepts.&quot;Unexplained anaemia &lt;8 g/dL&quot;]
define &quot;Unexplained anaemia &lt;8 g/dL Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unexplained anaemia &lt;8 g/dL&quot;
/* End of Unexplained anaemia &lt;8 g/dL */

/*
@dataElement: HIV.D.DE320 - Neutropaenia &lt;0.5 x 10^9/L
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include neutropaenia (&lt;0.5 x 10^9/L)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Neutropaenia &lt;0.5 x 10^9/L&quot;:
  exists &quot;Neutropaenia &lt;0.5 x 10^9/L Condition&quot;
    or exists &quot;Neutropaenia &lt;0.5 x 10^9/L Observation&quot;
define &quot;Neutropaenia &lt;0.5 x 10^9/L Condition&quot;:
  [Condition: Concepts.&quot;Neutropaenia &lt;0.5 x 10^9/L&quot;]
define &quot;Neutropaenia &lt;0.5 x 10^9/L Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Neutropaenia &lt;0.5 x 10^9/L&quot;
/* End of Neutropaenia &lt;0.5 x 10^9/L */

/*
@dataElement: HIV.D.DE321 - Chronic thrombocytopaenia &lt;50 x 10^9/L
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include chronic thrombocytopaenia (&lt;50 x 10^9/L)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Chronic thrombocytopaenia &lt;50 x 10^9/L&quot;:
  exists &quot;Chronic thrombocytopaenia &lt;50 x 10^9/L Condition&quot;
    or exists &quot;Chronic thrombocytopaenia &lt;50 x 10^9/L Observation&quot;
define &quot;Chronic thrombocytopaenia &lt;50 x 10^9/L Condition&quot;:
  [Condition: Concepts.&quot;Chronic thrombocytopaenia &lt;50 x 10^9/L&quot;]
define &quot;Chronic thrombocytopaenia &lt;50 x 10^9/L Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Chronic thrombocytopaenia &lt;50 x 10^9/L&quot;
/* End of Chronic thrombocytopaenia &lt;50 x 10^9/L */

/*
@dataElement: HIV.D.DE322 - Symptomatic lymphoid interstitial pneumonitis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include symptomatic lymphoid interstitial pneumonitis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Symptomatic lymphoid interstitial pneumonitis&quot;:
  exists &quot;Symptomatic lymphoid interstitial pneumonitis Condition&quot;
    or exists &quot;Symptomatic lymphoid interstitial pneumonitis Observation&quot;
define &quot;Symptomatic lymphoid interstitial pneumonitis Condition&quot;:
  [Condition: Concepts.&quot;Symptomatic lymphoid interstitial pneumonitis&quot;]
define &quot;Symptomatic lymphoid interstitial pneumonitis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Symptomatic lymphoid interstitial pneumonitis&quot;
/* End of Symptomatic lymphoid interstitial pneumonitis */

/*
@dataElement: HIV.D.DE323 - Chronic HIV-associated lung disease, including bronchiectasis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include chronic HIV-associated lung disease, including bronchiectasis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Chronic HIV-associated lung disease, including bronchiectasis&quot;:
  exists &quot;Chronic HIV-associated lung disease, including bronchiectasis Condition&quot;
    or exists &quot;Chronic HIV-associated lung disease, including bronchiectasis Observation&quot;
define &quot;Chronic HIV-associated lung disease, including bronchiectasis Condition&quot;:
  [Condition: Concepts.&quot;Chronic HIV-associated lung disease, including bronchiectasis&quot;]
define &quot;Chronic HIV-associated lung disease, including bronchiectasis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Chronic HIV-associated lung disease, including bronchiectasis&quot;
/* End of Chronic HIV-associated lung disease, including bronchiectasis */

/*
@dataElement: HIV.D.DE324 - HIV wasting syndrome
@activity: HIV.D15 Determine clinical stage of HIV
@description: Unexplained involuntary weight loss (&gt;10% baseline body weight), with obvious wasting or body mass index &lt;18.5; PLUS EITHER unexplained chronic reported for longer than one month; OR reports of fever or night sweats for more than one month without other cause and lack of response to antibiotics or antimalarial agents; malaria must be excluded in malarious areas.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV wasting syndrome&quot;:
  exists &quot;HIV wasting syndrome Condition&quot;
    or exists &quot;HIV wasting syndrome Observation&quot;
define &quot;HIV wasting syndrome Condition&quot;:
  [Condition: Concepts.&quot;HIV wasting syndrome&quot;]
define &quot;HIV wasting syndrome Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV wasting syndrome&quot;
/* End of HIV wasting syndrome */

/*
@dataElement: HIV.D.DE325 - Unexplained severe wasting not responding to standard therapy
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client has unexplained severe wasting not responding to standard therapy . For under 5 years old, defined as weight-for-height &lt; -3 z-score
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unexplained severe wasting not responding to standard therapy&quot;:
  exists &quot;Unexplained severe wasting not responding to standard therapy Condition&quot;
    or exists &quot;Unexplained severe wasting not responding to standard therapy Observation&quot;
define &quot;Unexplained severe wasting not responding to standard therapy Condition&quot;:
  [Condition: Concepts.&quot;Unexplained severe wasting not responding to standard therapy&quot;]
define &quot;Unexplained severe wasting not responding to standard therapy Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unexplained severe wasting not responding to standard therapy&quot;
/* End of Unexplained severe wasting not responding to standard therapy */

/*
@dataElement: HIV.D.DE326 - Unexplained stunting not responding to standard therapy
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client has unexplained stunting not responding to standard therapy . For under 5 years old, defined as length-for- age/height-for-age &lt; -2 z-score
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unexplained stunting not responding to standard therapy&quot;:
  exists &quot;Unexplained stunting not responding to standard therapy Condition&quot;
    or exists &quot;Unexplained stunting not responding to standard therapy Observation&quot;
define &quot;Unexplained stunting not responding to standard therapy Condition&quot;:
  [Condition: Concepts.&quot;Unexplained stunting not responding to standard therapy&quot;]
define &quot;Unexplained stunting not responding to standard therapy Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unexplained stunting not responding to standard therapy&quot;
/* End of Unexplained stunting not responding to standard therapy */

/*
@dataElement: HIV.D.DE327 - Unexplained severe malnutrition not responding to standard therapy
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client has unexplained severe malnutrition not responding to standard therapy . For under 5 years old, weight for height &lt; -3 z-score or mid-upper arm circumference &lt;115 mm or the presence of oedema
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unexplained severe malnutrition not responding to standard therapy&quot;:
  exists &quot;Unexplained severe malnutrition not responding to standard therapy Condition&quot;
    or exists &quot;Unexplained severe malnutrition not responding to standard therapy Observation&quot;
define &quot;Unexplained severe malnutrition not responding to standard therapy Condition&quot;:
  [Condition: Concepts.&quot;Unexplained severe malnutrition not responding to standard therapy&quot;]
define &quot;Unexplained severe malnutrition not responding to standard therapy Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unexplained severe malnutrition not responding to standard therapy&quot;
/* End of Unexplained severe malnutrition not responding to standard therapy */

/*
@dataElement: HIV.D.DE328 - Pneumocystis jirovecii pneumonia
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include pneumocystis (jirovecii) pneumonia
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Pneumocystis jirovecii pneumonia&quot;:
  exists &quot;Pneumocystis jirovecii pneumonia Condition&quot;
    or exists &quot;Pneumocystis jirovecii pneumonia Observation&quot;
define &quot;Pneumocystis jirovecii pneumonia Condition&quot;:
  [Condition: Concepts.&quot;Pneumocystis jirovecii pneumonia&quot;]
define &quot;Pneumocystis jirovecii pneumonia Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Pneumocystis jirovecii pneumonia&quot;
/* End of Pneumocystis jirovecii pneumonia */

/*
@dataElement: HIV.D.DE329 - Recurrent severe bacterial pneumonia
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include recurrent severe bacterial pneumonia
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Recurrent severe bacterial pneumonia&quot;:
  exists &quot;Recurrent severe bacterial pneumonia Condition&quot;
    or exists &quot;Recurrent severe bacterial pneumonia Observation&quot;
define &quot;Recurrent severe bacterial pneumonia Condition&quot;:
  [Condition: Concepts.&quot;Recurrent severe bacterial pneumonia&quot;]
define &quot;Recurrent severe bacterial pneumonia Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Recurrent severe bacterial pneumonia&quot;
/* End of Recurrent severe bacterial pneumonia */

/*
@dataElement: HIV.D.DE330 - Recurrent severe bacterial infections such as empyema, pyomyositis, bone or joint infection, meningitis, but excluding pneumonia
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include recurrent severe bacterial infections (such as empyema, pyomyositis, bone or joint infection, meningitis, but excluding pneumonia)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Recurrent severe bacterial infections such as empyema, pyomyositis, bone or joint infection, meningitis, but excluding pneumonia&quot;:
  exists &quot;Recurrent severe bacterial infections such as empyema, pyomyositis, bone or joint infection, meningitis, but excluding pneumonia Condition&quot;
    or exists &quot;Recurrent severe bacterial infections such as empyema, pyomyositis, bone or joint infection, meningitis, but excluding pneumonia Observation&quot;
define &quot;Recurrent severe bacterial infections such as empyema, pyomyositis, bone or joint infection, meningitis, but excluding pneumonia Condition&quot;:
  [Condition: Concepts.&quot;Recurrent severe bacterial infections such as empyema, pyomyositis, bone or joint infection, meningitis, but excluding pneumonia&quot;]
define &quot;Recurrent severe bacterial infections such as empyema, pyomyositis, bone or joint infection, meningitis, but excluding pneumonia Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Recurrent severe bacterial infections such as empyema, pyomyositis, bone or joint infection, meningitis, but excluding pneumonia&quot;
/* End of Recurrent severe bacterial infections such as empyema, pyomyositis, bone or joint infection, meningitis, but excluding pneumonia */

/*
@dataElement: HIV.D.DE331 - Empyema
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include recurrent empyema
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Empyema&quot;:
  exists &quot;Empyema Condition&quot;
    or exists &quot;Empyema Observation&quot;
define &quot;Empyema Condition&quot;:
  [Condition: Concepts.&quot;Empyema&quot;]
define &quot;Empyema Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Empyema&quot;
/* End of Empyema */

/*
@dataElement: HIV.D.DE332 - Pyomyositis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include recurrent pyomyositis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Pyomyositis&quot;:
  exists &quot;Pyomyositis Condition&quot;
    or exists &quot;Pyomyositis Observation&quot;
define &quot;Pyomyositis Condition&quot;:
  [Condition: Concepts.&quot;Pyomyositis&quot;]
define &quot;Pyomyositis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Pyomyositis&quot;
/* End of Pyomyositis */

/*
@dataElement: HIV.D.DE333 - Bone or joint infection
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include recurrent bone or joint infections
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Bone or joint infection&quot;:
  exists &quot;Bone or joint infection Condition&quot;
    or exists &quot;Bone or joint infection Observation&quot;
define &quot;Bone or joint infection Condition&quot;:
  [Condition: Concepts.&quot;Bone or joint infection&quot;]
define &quot;Bone or joint infection Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Bone or joint infection&quot;
/* End of Bone or joint infection */

/*
@dataElement: HIV.D.DE334 - Meningitis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include recurrent meningitis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Meningitis&quot;:
  exists &quot;Meningitis Condition&quot;
    or exists &quot;Meningitis Observation&quot;
define &quot;Meningitis Condition&quot;:
  [Condition: Concepts.&quot;Meningitis&quot;]
define &quot;Meningitis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Meningitis&quot;
/* End of Meningitis */

/*
@dataElement: HIV.D.DE335 - Chronic herpes simplex infection orolabial or cutaneous of more than 1 month duration or visceral at any site
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include chronic herpes simplex infection (orolabial or cutaneous of more than 1 month duration or visceral at any site)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Chronic herpes simplex infection orolabial or cutaneous of more than 1 month duration or visceral at any site&quot;:
  exists &quot;Chronic herpes simplex infection orolabial or cutaneous of more than 1 month duration or visceral at any site Condition&quot;
    or exists &quot;Chronic herpes simplex infection orolabial or cutaneous of more than 1 month duration or visceral at any site Observation&quot;
define &quot;Chronic herpes simplex infection orolabial or cutaneous of more than 1 month duration or visceral at any site Condition&quot;:
  [Condition: Concepts.&quot;Chronic herpes simplex infection orolabial or cutaneous of more than 1 month duration or visceral at any site&quot;]
define &quot;Chronic herpes simplex infection orolabial or cutaneous of more than 1 month duration or visceral at any site Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Chronic herpes simplex infection orolabial or cutaneous of more than 1 month duration or visceral at any site&quot;
/* End of Chronic herpes simplex infection orolabial or cutaneous of more than 1 month duration or visceral at any site */

/*
@dataElement: HIV.D.DE336 - Chronic herpes simplex infection orolabial, genital or anorectal of more than 1 month in duration or visceral at any site
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include chronic herpes simplex infection (orolabial, genital or anorectal of more than one month in duration or visceral at any site)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Chronic herpes simplex infection orolabial, genital or anorectal of more than 1 month in duration or visceral at any site&quot;:
  exists &quot;Chronic herpes simplex infection orolabial, genital or anorectal of more than 1 month in duration or visceral at any site Condition&quot;
    or exists &quot;Chronic herpes simplex infection orolabial, genital or anorectal of more than 1 month in duration or visceral at any site Observation&quot;
define &quot;Chronic herpes simplex infection orolabial, genital or anorectal of more than 1 month in duration or visceral at any site Condition&quot;:
  [Condition: Concepts.&quot;Chronic herpes simplex infection orolabial, genital or anorectal of more than 1 month in duration or visceral at any site&quot;]
define &quot;Chronic herpes simplex infection orolabial, genital or anorectal of more than 1 month in duration or visceral at any site Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Chronic herpes simplex infection orolabial, genital or anorectal of more than 1 month in duration or visceral at any site&quot;
/* End of Chronic herpes simplex infection orolabial, genital or anorectal of more than 1 month in duration or visceral at any site */

/*
@dataElement: HIV.D.DE337 - Oesophageal candidiasis or candidiasis of trachea, bronchi or lungs
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include oesophageal candidiasis (or candidiasis of trachea, bronchi or lungs)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Oesophageal candidiasis or candidiasis of trachea, bronchi or lungs&quot;:
  exists &quot;Oesophageal candidiasis or candidiasis of trachea, bronchi or lungs Condition&quot;
    or exists &quot;Oesophageal candidiasis or candidiasis of trachea, bronchi or lungs Observation&quot;
define &quot;Oesophageal candidiasis or candidiasis of trachea, bronchi or lungs Condition&quot;:
  [Condition: Concepts.&quot;Oesophageal candidiasis or candidiasis of trachea, bronchi or lungs&quot;]
define &quot;Oesophageal candidiasis or candidiasis of trachea, bronchi or lungs Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Oesophageal candidiasis or candidiasis of trachea, bronchi or lungs&quot;
/* End of Oesophageal candidiasis or candidiasis of trachea, bronchi or lungs */

/*
@dataElement: HIV.D.DE338 - Extrapulmonary TB
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include extrapulmonary tuberculosis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Extrapulmonary TB D.DE338&quot;:
  exists &quot;Extrapulmonary TB D.DE338 Condition&quot;
    or exists &quot;Extrapulmonary TB D.DE338 Observation&quot;
define &quot;Extrapulmonary TB D.DE338 Condition&quot;:
  [Condition: Concepts.&quot;Extrapulmonary TB - HIV.D.DE338&quot;]
define &quot;Extrapulmonary TB D.DE338 Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Extrapulmonary TB - HIV.D.DE338&quot;
/* End of Extrapulmonary TB D.DE338 */

/*
@dataElement: HIV.D.DE339 - Kaposi sarcoma
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include Kaposi sarcoma
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Kaposi sarcoma&quot;:
  exists &quot;Kaposi sarcoma Condition&quot;
    or exists &quot;Kaposi sarcoma Observation&quot;
define &quot;Kaposi sarcoma Condition&quot;:
  [Condition: Concepts.&quot;Kaposi sarcoma&quot;]
define &quot;Kaposi sarcoma Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Kaposi sarcoma&quot;
/* End of Kaposi sarcoma */

/*
@dataElement: HIV.D.DE340 - Cytomegalovirus infection retinitis or infection of other organs
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include cytomegalovirus infection (retinitis or infection of other organs)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cytomegalovirus infection retinitis or infection of other organs&quot;:
  exists &quot;Cytomegalovirus infection retinitis or infection of other organs Condition&quot;
    or exists &quot;Cytomegalovirus infection retinitis or infection of other organs Observation&quot;
define &quot;Cytomegalovirus infection retinitis or infection of other organs Condition&quot;:
  [Condition: Concepts.&quot;Cytomegalovirus infection retinitis or infection of other organs&quot;]
define &quot;Cytomegalovirus infection retinitis or infection of other organs Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Cytomegalovirus infection retinitis or infection of other organs&quot;
/* End of Cytomegalovirus infection retinitis or infection of other organs */

/*
@dataElement: HIV.D.DE341 - Central nervous system toxoplasmosis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include central nervous system toxoplasmosis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Central nervous system toxoplasmosis&quot;:
  exists &quot;Central nervous system toxoplasmosis Condition&quot;
    or exists &quot;Central nervous system toxoplasmosis Observation&quot;
define &quot;Central nervous system toxoplasmosis Condition&quot;:
  [Condition: Concepts.&quot;Central nervous system toxoplasmosis&quot;]
define &quot;Central nervous system toxoplasmosis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Central nervous system toxoplasmosis&quot;
/* End of Central nervous system toxoplasmosis */

/*
@dataElement: HIV.D.DE342 - HIV encephalopathy
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include HIV encephalopathy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV encephalopathy&quot;:
  exists &quot;HIV encephalopathy Condition&quot;
    or exists &quot;HIV encephalopathy Observation&quot;
define &quot;HIV encephalopathy Condition&quot;:
  [Condition: Concepts.&quot;HIV encephalopathy&quot;]
define &quot;HIV encephalopathy Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV encephalopathy&quot;
/* End of HIV encephalopathy */

/*
@dataElement: HIV.D.DE343 - Extrapulmonary cryptococcosis, including meningitis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include extrapulmonary cryptococcosis, including meningitis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Extrapulmonary cryptococcosis, including meningitis&quot;:
  exists &quot;Extrapulmonary cryptococcosis, including meningitis Condition&quot;
    or exists &quot;Extrapulmonary cryptococcosis, including meningitis Observation&quot;
define &quot;Extrapulmonary cryptococcosis, including meningitis Condition&quot;:
  [Condition: Concepts.&quot;Extrapulmonary cryptococcosis, including meningitis&quot;]
define &quot;Extrapulmonary cryptococcosis, including meningitis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Extrapulmonary cryptococcosis, including meningitis&quot;
/* End of Extrapulmonary cryptococcosis, including meningitis */

/*
@dataElement: HIV.D.DE344 - Disseminated nontuberculous mycobacterial infection
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include disseminated nontuberculous mycobacterial infection
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Disseminated nontuberculous mycobacterial infection&quot;:
  exists &quot;Disseminated nontuberculous mycobacterial infection Condition&quot;
    or exists &quot;Disseminated nontuberculous mycobacterial infection Observation&quot;
define &quot;Disseminated nontuberculous mycobacterial infection Condition&quot;:
  [Condition: Concepts.&quot;Disseminated nontuberculous mycobacterial infection&quot;]
define &quot;Disseminated nontuberculous mycobacterial infection Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Disseminated nontuberculous mycobacterial infection&quot;
/* End of Disseminated nontuberculous mycobacterial infection */

/*
@dataElement: HIV.D.DE345 - Progressive multifocal leukoencephalopathy
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include progressive multifocal leukoencephalopathy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Progressive multifocal leukoencephalopathy&quot;:
  exists &quot;Progressive multifocal leukoencephalopathy Condition&quot;
    or exists &quot;Progressive multifocal leukoencephalopathy Observation&quot;
define &quot;Progressive multifocal leukoencephalopathy Condition&quot;:
  [Condition: Concepts.&quot;Progressive multifocal leukoencephalopathy&quot;]
define &quot;Progressive multifocal leukoencephalopathy Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Progressive multifocal leukoencephalopathy&quot;
/* End of Progressive multifocal leukoencephalopathy */

/*
@dataElement: HIV.D.DE346 - Chronic cryptosporidiosis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include chronic cryptosporidiosis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Chronic cryptosporidiosis&quot;:
  exists &quot;Chronic cryptosporidiosis Condition&quot;
    or exists &quot;Chronic cryptosporidiosis Observation&quot;
define &quot;Chronic cryptosporidiosis Condition&quot;:
  [Condition: Concepts.&quot;Chronic cryptosporidiosis&quot;]
define &quot;Chronic cryptosporidiosis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Chronic cryptosporidiosis&quot;
/* End of Chronic cryptosporidiosis */

/*
@dataElement: HIV.D.DE347 - Chronic cryptosporidiosis with diarrhoea
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include chronic cryptosporidiosis (with diarrhoea)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Chronic cryptosporidiosis with diarrhoea&quot;:
  exists &quot;Chronic cryptosporidiosis with diarrhoea Condition&quot;
    or exists &quot;Chronic cryptosporidiosis with diarrhoea Observation&quot;
define &quot;Chronic cryptosporidiosis with diarrhoea Condition&quot;:
  [Condition: Concepts.&quot;Chronic cryptosporidiosis with diarrhoea&quot;]
define &quot;Chronic cryptosporidiosis with diarrhoea Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Chronic cryptosporidiosis with diarrhoea&quot;
/* End of Chronic cryptosporidiosis with diarrhoea */

/*
@dataElement: HIV.D.DE348 - Chronic isosporiasis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include chronic isosporiasis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Chronic isosporiasis&quot;:
  exists &quot;Chronic isosporiasis Condition&quot;
    or exists &quot;Chronic isosporiasis Observation&quot;
define &quot;Chronic isosporiasis Condition&quot;:
  [Condition: Concepts.&quot;Chronic isosporiasis&quot;]
define &quot;Chronic isosporiasis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Chronic isosporiasis&quot;
/* End of Chronic isosporiasis */

/*
@dataElement: HIV.D.DE349 - Disseminated mycosis extrapulmonary histoplasmosis, coccidioidomycosis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include disseminated mycosis (extrapulmonary histoplasmosis, coccidioidomycosis)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Disseminated mycosis extrapulmonary histoplasmosis, coccidioidomycosis&quot;:
  exists &quot;Disseminated mycosis extrapulmonary histoplasmosis, coccidioidomycosis Condition&quot;
    or exists &quot;Disseminated mycosis extrapulmonary histoplasmosis, coccidioidomycosis Observation&quot;
define &quot;Disseminated mycosis extrapulmonary histoplasmosis, coccidioidomycosis Condition&quot;:
  [Condition: Concepts.&quot;Disseminated mycosis extrapulmonary histoplasmosis, coccidioidomycosis&quot;]
define &quot;Disseminated mycosis extrapulmonary histoplasmosis, coccidioidomycosis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Disseminated mycosis extrapulmonary histoplasmosis, coccidioidomycosis&quot;
/* End of Disseminated mycosis extrapulmonary histoplasmosis, coccidioidomycosis */

/*
@dataElement: HIV.D.DE350 - Disseminated endemic mycosis extrapulmonary histoplasmosis, coccidioidomycosis, penicilliosis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include disseminated endemic mycosis (extrapulmonary histoplasmosis, coccidioidomycosis, penicilliosis)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Disseminated endemic mycosis extrapulmonary histoplasmosis, coccidioidomycosis, penicilliosis&quot;:
  exists &quot;Disseminated endemic mycosis extrapulmonary histoplasmosis, coccidioidomycosis, penicilliosis Condition&quot;
    or exists &quot;Disseminated endemic mycosis extrapulmonary histoplasmosis, coccidioidomycosis, penicilliosis Observation&quot;
define &quot;Disseminated endemic mycosis extrapulmonary histoplasmosis, coccidioidomycosis, penicilliosis Condition&quot;:
  [Condition: Concepts.&quot;Disseminated endemic mycosis extrapulmonary histoplasmosis, coccidioidomycosis, penicilliosis&quot;]
define &quot;Disseminated endemic mycosis extrapulmonary histoplasmosis, coccidioidomycosis, penicilliosis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Disseminated endemic mycosis extrapulmonary histoplasmosis, coccidioidomycosis, penicilliosis&quot;
/* End of Disseminated endemic mycosis extrapulmonary histoplasmosis, coccidioidomycosis, penicilliosis */

/*
@dataElement: HIV.D.DE351 - Cerebral lymphoma
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include cerebral lymphoma
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cerebral lymphoma&quot;:
  exists &quot;Cerebral lymphoma Condition&quot;
    or exists &quot;Cerebral lymphoma Observation&quot;
define &quot;Cerebral lymphoma Condition&quot;:
  [Condition: Concepts.&quot;Cerebral lymphoma&quot;]
define &quot;Cerebral lymphoma Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Cerebral lymphoma&quot;
/* End of Cerebral lymphoma */

/*
@dataElement: HIV.D.DE352 - B-cell non-Hodgkin lymphoma
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include b-cell non-Hodgkin lymphoma
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;B-cell non-Hodgkin lymphoma&quot;:
  exists &quot;B-cell non-Hodgkin lymphoma Condition&quot;
    or exists &quot;B-cell non-Hodgkin lymphoma Observation&quot;
define &quot;B-cell non-Hodgkin lymphoma Condition&quot;:
  [Condition: Concepts.&quot;B-cell non-Hodgkin lymphoma&quot;]
define &quot;B-cell non-Hodgkin lymphoma Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;B-cell non-Hodgkin lymphoma&quot;
/* End of B-cell non-Hodgkin lymphoma */

/*
@dataElement: HIV.D.DE353 - HIV-associated nephropathy or cardiomyopathy
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include HIV- associated nephropathy or cardiomyopathy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV-associated nephropathy or cardiomyopathy&quot;:
  exists &quot;HIV-associated nephropathy or cardiomyopathy Condition&quot;
    or exists &quot;HIV-associated nephropathy or cardiomyopathy Observation&quot;
define &quot;HIV-associated nephropathy or cardiomyopathy Condition&quot;:
  [Condition: Concepts.&quot;HIV-associated nephropathy or cardiomyopathy&quot;]
define &quot;HIV-associated nephropathy or cardiomyopathy Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV-associated nephropathy or cardiomyopathy&quot;
/* End of HIV-associated nephropathy or cardiomyopathy */

/*
@dataElement: HIV.D.DE354 - Recurrent septicaemia including nontyphoidal Salmonella
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include recurrent bacteraemia (septicaemia) (including nontyphoidal salmonella)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Recurrent septicaemia including nontyphoidal Salmonella&quot;:
  exists &quot;Recurrent septicaemia including nontyphoidal Salmonella Condition&quot;
    or exists &quot;Recurrent septicaemia including nontyphoidal Salmonella Observation&quot;
define &quot;Recurrent septicaemia including nontyphoidal Salmonella Condition&quot;:
  [Condition: Concepts.&quot;Recurrent septicaemia including nontyphoidal Salmonella&quot;]
define &quot;Recurrent septicaemia including nontyphoidal Salmonella Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Recurrent septicaemia including nontyphoidal Salmonella&quot;
/* End of Recurrent septicaemia including nontyphoidal Salmonella */

/*
@dataElement: HIV.D.DE355 - Invasive cervical carcinoma
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include invasive cervical carcinoma
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invasive cervical carcinoma&quot;:
  exists &quot;Invasive cervical carcinoma Condition&quot;
    or exists &quot;Invasive cervical carcinoma Observation&quot;
define &quot;Invasive cervical carcinoma Condition&quot;:
  [Condition: Concepts.&quot;Invasive cervical carcinoma&quot;]
define &quot;Invasive cervical carcinoma Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Invasive cervical carcinoma&quot;
/* End of Invasive cervical carcinoma */

/*
@dataElement: HIV.D.DE356 - Atypical disseminated leishmaniasis
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include atypical disseminated leishmaniasis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Atypical disseminated leishmaniasis&quot;:
  exists &quot;Atypical disseminated leishmaniasis Condition&quot;
    or exists &quot;Atypical disseminated leishmaniasis Observation&quot;
define &quot;Atypical disseminated leishmaniasis Condition&quot;:
  [Condition: Concepts.&quot;Atypical disseminated leishmaniasis&quot;]
define &quot;Atypical disseminated leishmaniasis Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Atypical disseminated leishmaniasis&quot;
/* End of Atypical disseminated leishmaniasis */

/*
@dataElement: HIV.D.DE357 - Neutropenia
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include neutropenia, an abnormally low count of a type of white blood cell (neutrophils)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Neutropenia&quot;:
  exists &quot;Neutropenia Condition&quot;
    or exists &quot;Neutropenia Observation&quot;
define &quot;Neutropenia Condition&quot;:
  [Condition: Concepts.&quot;Neutropenia&quot;]
define &quot;Neutropenia Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE289 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Neutropenia&quot;
/* End of Neutropenia */

/*
@dataElement: HIV.D.DE364 - CD4 count
@activity: HIV.D20 Diagnostics
@description: CD4 cell count in cells/mm^3
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;CD4 count D.DE364&quot;:
  [Observation: Concepts.&quot;CD4 count - HIV.D.DE364&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;CD4 count D.DE364 Value&quot;:
  &quot;CD4 count D.DE364&quot; O
  return O.value
/* End of CD4 count D.DE364 */

/*
@dataElement: HIV.D.DE367 - Baseline CD4 count
@activity: HIV.D20 Diagnostics
@description: CD4 count performed at HIV diagnosis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Baseline CD4 count D.DE367&quot;:
  [Observation: Concepts.&quot;Baseline CD4 count - HIV.D.DE367&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Baseline CD4 count D.DE367 Value&quot;:
  &quot;Baseline CD4 count D.DE367&quot; O
  return O.value
/* End of Baseline CD4 count D.DE367 */

/*
@dataElement: HIV.D.DE368 - Date of baseline CD4 count test
@activity: HIV.D20 Diagnostics
@description: Date and time when baseline CD4 count test was conducted
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date of baseline CD4 count test D.DE368&quot;:
  [Observation: Concepts.&quot;Date of baseline CD4 count test - HIV.D.DE368&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date of baseline CD4 count test D.DE368 Value&quot;:
  &quot;Date of baseline CD4 count test D.DE368&quot; O
  return O.value
/* End of Date of baseline CD4 count test D.DE368 */

/*
@dataElement: HIV.D.DE383 - Time to start ART
@activity: HIV.D8 Capture or update client history
@description: Time from HIV diagnosis to when client started ART
*/
define &quot;Time to start ART&quot;:
  case 
      when difference in days between start of &quot;First HIV Treatment&quot;.effective.toInterval() and start of &quot;First HIV Positive Condition&quot;.onset.toInterval() &lt;= 7 then Concepts.&quot;Within 7 days of HIV diagnosis&quot;
      when difference in days between start of &quot;First HIV Treatment&quot;.effective.toInterval() and start of &quot;First HIV Positive Condition&quot;.onset.toInterval() &lt;= 30 then Concepts.&quot;Within 30 days of HIV diagnosis&quot;
      when difference in days between start of &quot;First HIV Treatment&quot;.effective.toInterval() and start of &quot;First HIV Positive Condition&quot;.onset.toInterval() &lt;= 90 then Concepts.&quot;Within 90 days of HIV diagnosis&quot;
  else null
  end
/* End of Time to start ART */

/*
@dataElement: HIV.D.DE387 - Viral load test result
@activity: HIV.D20 Diagnostics
@description: Result from the viral load test in number of copies/mL
*/

define &quot;Viral load test result D.DE387&quot;:
  [Observation: Concepts.&quot;Viral load test result - HIV.D.DE387&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Viral load test result D.DE387 Value&quot;:
  &quot;Viral load test result D.DE387&quot; O
  return O.value
/* End of Viral load test result D.DE387 */

/*
@dataElement: HIV.D.DE391 - Reason for HIV viral load test
@activity: HIV.D20 Diagnostics
@description: Whether the viral load is being tested for routine monitoring on a set schedule or for targeted monitoring for suspected treatment failure
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reason for HIV viral load test&quot;:
  exists &quot;Reason for HIV viral load test Observation&quot;
define &quot;Reason for HIV viral load test Observation&quot;:
  [Observation: Concepts.&quot;Reason for HIV viral load test&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Reason for HIV viral load test */

/*
@dataElement: HIV.D.DE392 - Routine viral load test
@activity: HIV.D20 Diagnostics
@description: Routine refers to viral load tests obtained at standard intervals following ART initiation to monitor viral load response to ART
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Routine viral load test&quot;:
  exists &quot;Routine viral load test Condition&quot;
    or exists &quot;Routine viral load test Observation&quot;
define &quot;Routine viral load test Condition&quot;:
  [Condition: Concepts.&quot;Routine viral load test&quot;]
define &quot;Routine viral load test Observation&quot;:
  &quot;Reason for HIV viral load test Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Routine viral load test&quot;
/* End of Routine viral load test */

/*
@dataElement: HIV.D.DE393 - Targeted viral load monitoring
@activity: HIV.D20 Diagnostics
@description: Targeted refers to viral load tests obtained based on a specific clinical indication (such as concern about disease progression or failure to respond to ART)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Targeted viral load monitoring&quot;:
  exists &quot;Targeted viral load monitoring Condition&quot;
    or exists &quot;Targeted viral load monitoring Observation&quot;
define &quot;Targeted viral load monitoring Condition&quot;:
  [Condition: Concepts.&quot;Targeted viral load monitoring&quot;]
define &quot;Targeted viral load monitoring Observation&quot;:
  &quot;Reason for HIV viral load test Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Targeted viral load monitoring&quot;
/* End of Targeted viral load monitoring */

/*
@dataElement: HIV.D.DE394 - Initial viral load test
@activity: HIV.D20 Diagnostics
@description: The first viral load test of the client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Initial viral load test&quot;:
  exists &quot;Initial viral load test Condition&quot;
    or exists &quot;Initial viral load test Observation&quot;
define &quot;Initial viral load test Condition&quot;:
  [Condition: Concepts.&quot;Initial viral load test&quot;]
define &quot;Initial viral load test Observation&quot;:
  &quot;Reason for HIV viral load test Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Initial viral load test&quot;
/* End of Initial viral load test */

/*
@dataElement: HIV.D.DE395 - Follow-up viral load test after receiving enhanced adherence counselling
@activity: HIV.D20 Diagnostics
@description: A follow-up viral load test within 3-6 months after enhanced adherence counselling after client received a high viral load test result
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Follow-up viral load test after receiving enhanced adherence counselling&quot;:
  exists &quot;Follow-up viral load test after receiving enhanced adherence counselling Condition&quot;
    or exists &quot;Follow-up viral load test after receiving enhanced adherence counselling Observation&quot;
define &quot;Follow-up viral load test after receiving enhanced adherence counselling Condition&quot;:
  [Condition: Concepts.&quot;Follow-up viral load test after receiving enhanced adherence counselling&quot;]
define &quot;Follow-up viral load test after receiving enhanced adherence counselling Observation&quot;:
  &quot;Reason for HIV viral load test Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Follow-up viral load test after receiving enhanced adherence counselling&quot;
/* End of Follow-up viral load test after receiving enhanced adherence counselling */

/*
@dataElement: HIV.D.DE399 - Monitoring examinations
@activity: HIV.D20 Diagnostics
@description: Name of examinations, test and results for any relevant investigations carried out for client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Monitoring examinations&quot;:
  exists &quot;Monitoring examinations Observation&quot;
define &quot;Monitoring examinations Observation&quot;:
  [Observation: Concepts.&quot;Monitoring examinations&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Monitoring examinations */

/*
@dataElement: HIV.D.DE400 - Haemoglobin Hb
@activity: HIV.D20 Diagnostics
@description: Provider ordered a Haemoglobin (Hb) test, number in g/dL test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Haemoglobin Hb&quot;:
  exists &quot;Haemoglobin Hb Condition&quot;
    or exists &quot;Haemoglobin Hb Observation&quot;
define &quot;Haemoglobin Hb Condition&quot;:
  [Condition: Concepts.&quot;Haemoglobin Hb&quot;]
define &quot;Haemoglobin Hb Observation&quot;:
  &quot;Monitoring examinations Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Haemoglobin Hb&quot;
/* End of Haemoglobin Hb */

/*
@dataElement: HIV.D.DE401 - Pregnancy test
@activity: HIV.D20 Diagnostics
@description: Provider ordered a pregnancy test for client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Pregnancy test&quot;:
  exists &quot;Pregnancy test Condition&quot;
    or exists &quot;Pregnancy test Observation&quot;
define &quot;Pregnancy test Condition&quot;:
  [Condition: Concepts.&quot;Pregnancy test&quot;]
define &quot;Pregnancy test Observation&quot;:
  &quot;Monitoring examinations Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Pregnancy test&quot;
/* End of Pregnancy test */

/*
@dataElement: HIV.D.DE402 - Syphilis test
@activity: HIV.D20 Diagnostics
@description: Provider ordered a syphilis test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Syphilis test&quot;:
  exists &quot;Syphilis test Condition&quot;
    or exists &quot;Syphilis test Observation&quot;
define &quot;Syphilis test Condition&quot;:
  [Condition: Concepts.&quot;Syphilis test&quot;]
define &quot;Syphilis test Observation&quot;:
  &quot;Monitoring examinations Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Syphilis test&quot;
/* End of Syphilis test */

/*
@dataElement: HIV.D.DE403 - Chest X-ray CXR
@activity: HIV.D20 Diagnostics
@description: Provider ordered a chest X-ray (CXR)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Chest X-ray CXR&quot;:
  exists &quot;Chest X-ray CXR Condition&quot;
    or exists &quot;Chest X-ray CXR Observation&quot;
define &quot;Chest X-ray CXR Condition&quot;:
  [Condition: Concepts.&quot;Chest X-ray CXR&quot;]
define &quot;Chest X-ray CXR Observation&quot;:
  &quot;Monitoring examinations Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Chest X-ray CXR&quot;
/* End of Chest X-ray CXR */

/*
@dataElement: HIV.D.DE404 - Sputum or culture for TB
@activity: HIV.D20 Diagnostics
@description: Provider ordered sputum or culture for TB
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sputum or culture for TB&quot;:
  exists &quot;Sputum or culture for TB Condition&quot;
    or exists &quot;Sputum or culture for TB Observation&quot;
define &quot;Sputum or culture for TB Condition&quot;:
  [Condition: Concepts.&quot;Sputum or culture for TB&quot;]
define &quot;Sputum or culture for TB Observation&quot;:
  &quot;Monitoring examinations Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Sputum or culture for TB&quot;
/* End of Sputum or culture for TB */

/*
@dataElement: HIV.D.DE405 - HBsAg test HBV
@activity: HIV.D20 Diagnostics
@description: Provider ordered an HBsAg test (HBV) test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HBsAg test HBV&quot;:
  exists &quot;HBsAg test HBV Condition&quot;
    or exists &quot;HBsAg test HBV Observation&quot;
define &quot;HBsAg test HBV Condition&quot;:
  [Condition: Concepts.&quot;HBsAg test HBV&quot;]
define &quot;HBsAg test HBV Observation&quot;:
  &quot;Monitoring examinations Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HBsAg test HBV&quot;
/* End of HBsAg test HBV */

/*
@dataElement: HIV.D.DE406 - HIV viral load test ordered
@activity: HIV.D20 Diagnostics
@description: Provider ordered an HIV viral load test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV viral load test ordered&quot;:
  exists &quot;HIV viral load test ordered Condition&quot;
    or exists &quot;HIV viral load test ordered Observation&quot;
define &quot;HIV viral load test ordered Condition&quot;:
  [Condition: Concepts.&quot;HIV viral load test ordered&quot;]
define &quot;HIV viral load test ordered Observation&quot;:
  &quot;Monitoring examinations Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV viral load test ordered&quot;
/* End of HIV viral load test ordered */

/*
@dataElement: HIV.D.DE407 - HIV viral load test scheduled
@activity: HIV.D20 Diagnostics
@description: Scheduled an HIV viral load test with client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV viral load test scheduled&quot;:
  exists &quot;HIV viral load test scheduled Condition&quot;
    or exists &quot;HIV viral load test scheduled Observation&quot;
define &quot;HIV viral load test scheduled Condition&quot;:
  [Condition: Concepts.&quot;HIV viral load test scheduled&quot;]
define &quot;HIV viral load test scheduled Observation&quot;:
  &quot;Monitoring examinations Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV viral load test scheduled&quot;
/* End of HIV viral load test scheduled */

/*
@dataElement: HIV.D.DE408 - CD4 count ordered
@activity: HIV.D20 Diagnostics
@description: Provider ordered a CD4 cell count
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;CD4 count ordered&quot;:
  exists &quot;CD4 count ordered Condition&quot;
    or exists &quot;CD4 count ordered Observation&quot;
define &quot;CD4 count ordered Condition&quot;:
  [Condition: Concepts.&quot;CD4 count ordered&quot;]
define &quot;CD4 count ordered Observation&quot;:
  &quot;Monitoring examinations Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;CD4 count ordered&quot;
/* End of CD4 count ordered */

/*
@dataElement: HIV.D.DE409 - CD4 count test scheduled
@activity: HIV.D20 Diagnostics
@description: Scheduled a CD4 test with client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;CD4 count test scheduled&quot;:
  exists &quot;CD4 count test scheduled Condition&quot;
    or exists &quot;CD4 count test scheduled Observation&quot;
define &quot;CD4 count test scheduled Condition&quot;:
  [Condition: Concepts.&quot;CD4 count test scheduled&quot;]
define &quot;CD4 count test scheduled Observation&quot;:
  &quot;Monitoring examinations Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;CD4 count test scheduled&quot;
/* End of CD4 count test scheduled */

/*
@dataElement: HIV.D.DE410 - Cryptococcal antigen test
@activity: HIV.D20 Diagnostics
@description: Provider ordered a cryptococcal antigen test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cryptococcal antigen test&quot;:
  exists &quot;Cryptococcal antigen test Condition&quot;
    or exists &quot;Cryptococcal antigen test Observation&quot;
define &quot;Cryptococcal antigen test Condition&quot;:
  [Condition: Concepts.&quot;Cryptococcal antigen test&quot;]
define &quot;Cryptococcal antigen test Observation&quot;:
  &quot;Monitoring examinations Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Cryptococcal antigen test&quot;
/* End of Cryptococcal antigen test */

/*
@dataElement: HIV.D.DE411 - Histoplasmosis antigen test
@activity: HIV.D20 Diagnostics
@description: Provider ordered a histoplasmosis antigen test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Histoplasmosis antigen test&quot;:
  exists &quot;Histoplasmosis antigen test Condition&quot;
    or exists &quot;Histoplasmosis antigen test Observation&quot;
define &quot;Histoplasmosis antigen test Condition&quot;:
  [Condition: Concepts.&quot;Histoplasmosis antigen test&quot;]
define &quot;Histoplasmosis antigen test Observation&quot;:
  &quot;Monitoring examinations Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Histoplasmosis antigen test&quot;
/* End of Histoplasmosis antigen test */

/*
@dataElement: HIV.D.DE412 - Cervical cancer screening scheduled
@activity: HIV.D28 Offer other services
@description: Scheduled cervical cancer screening with client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cervical cancer screening scheduled&quot;:
  exists &quot;Cervical cancer screening scheduled Condition&quot;
    or exists &quot;Cervical cancer screening scheduled Observation&quot;
define &quot;Cervical cancer screening scheduled Condition&quot;:
  [Condition: Concepts.&quot;Cervical cancer screening scheduled&quot;]
define &quot;Cervical cancer screening scheduled Observation&quot;:
  &quot;Monitoring examinations Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Cervical cancer screening scheduled&quot;
/* End of Cervical cancer screening scheduled */

/*
@dataElement: HIV.D.DE413 - Date of scheduled monitoring examination
@activity: HIV.D28 Offer other services
@description: Date of scheduled monitoring examination
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date of scheduled monitoring examination&quot;:
  [Observation: Concepts.&quot;Date of scheduled monitoring examination&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date of scheduled monitoring examination Value&quot;:
  &quot;Date of scheduled monitoring examination&quot; O
  return O.value
/* End of Date of scheduled monitoring examination */

/*
@dataElement: HIV.D.DE417 - Date viral load test results received by client
@activity: HIV.D20 Diagnostics
@description: The date on which the client received results from a viral load test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date viral load test results received by client D.DE417&quot;:
  [Observation: Concepts.&quot;Date viral load test results received by client - HIV.D.DE417&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date viral load test results received by client D.DE417 Value&quot;:
  &quot;Date viral load test results received by client D.DE417&quot; O
  return O.value
/* End of Date viral load test results received by client D.DE417 */

/*
@dataElement: HIV.D.DE418 - Reason for ARV drug regimen substitution
@activity: HIV.D21 Determine regimen and treatment options
@description: Reason why a substitution was made to the antiretroviral (ARV) drug regimen
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reason for ARV drug regimen substitution&quot;:
  exists &quot;Reason for ARV drug regimen substitution Observation&quot;
define &quot;Reason for ARV drug regimen substitution Observation&quot;:
  [Observation: Concepts.&quot;Reason for ARV drug regimen substitution&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Reason for ARV drug regimen substitution */

/*
@dataElement: HIV.D.DE419 - Toxicity/side effects
@activity: HIV.D21 Determine regimen and treatment options
@description: A substitution was made to the regimen because of toxicity/side effects
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Toxicity/side effects D.DE419&quot;:
  exists &quot;Toxicity/side effects D.DE419 Condition&quot;
    or exists &quot;Toxicity/side effects D.DE419 Observation&quot;
define &quot;Toxicity/side effects D.DE419 Condition&quot;:
  [Condition: Concepts.&quot;Toxicity/side effects - HIV.D.DE419&quot;]
define &quot;Toxicity/side effects D.DE419 Observation&quot;:
  &quot;Reason for ARV drug regimen substitution Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Toxicity/side effects - HIV.D.DE419&quot;
/* End of Toxicity/side effects D.DE419 */

/*
@dataElement: HIV.D.DE420 - Drug-drug interaction
@activity: HIV.D21 Determine regimen and treatment options
@description: A substitution was made to the regimen because of a drug-drug interaction
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Drug-drug interaction&quot;:
  exists &quot;Drug-drug interaction Condition&quot;
    or exists &quot;Drug-drug interaction Observation&quot;
define &quot;Drug-drug interaction Condition&quot;:
  [Condition: Concepts.&quot;Drug-drug interaction&quot;]
define &quot;Drug-drug interaction Observation&quot;:
  &quot;Reason for ARV drug regimen substitution Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Drug-drug interaction&quot;
/* End of Drug-drug interaction */

/*
@dataElement: HIV.D.DE421 - Pregnancy
@activity: HIV.D21 Determine regimen and treatment options
@description: A substitution was made to the regimen because of pregnancy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Pregnancy&quot;:
  exists &quot;Pregnancy Condition&quot;
    or exists &quot;Pregnancy Observation&quot;
define &quot;Pregnancy Condition&quot;:
  [Condition: Concepts.&quot;Pregnancy&quot;]
define &quot;Pregnancy Observation&quot;:
  &quot;Reason for ARV drug regimen substitution Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Pregnancy&quot;
/* End of Pregnancy */

/*
@dataElement: HIV.D.DE422 - New TB
@activity: HIV.D21 Determine regimen and treatment options
@description: A substitution was made to the regimen because of new tuberculosis (TB)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;New TB&quot;:
  exists &quot;New TB Condition&quot;
    or exists &quot;New TB Observation&quot;
define &quot;New TB Condition&quot;:
  [Condition: Concepts.&quot;New TB&quot;]
define &quot;New TB Observation&quot;:
  &quot;Reason for ARV drug regimen substitution Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;New TB&quot;
/* End of New TB */

/*
@dataElement: HIV.D.DE423 - New drug available
@activity: HIV.D21 Determine regimen and treatment options
@description: A substitution was made to the regimen because a new drug was available
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;New drug available&quot;:
  exists &quot;New drug available Condition&quot;
    or exists &quot;New drug available Observation&quot;
define &quot;New drug available Condition&quot;:
  [Condition: Concepts.&quot;New drug available&quot;]
define &quot;New drug available Observation&quot;:
  &quot;Reason for ARV drug regimen substitution Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;New drug available&quot;
/* End of New drug available */

/*
@dataElement: HIV.D.DE424 - Drug out of stock
@activity: HIV.D21 Determine regimen and treatment options
@description: A substitution was made to the regimen because drug was out of stock
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Drug out of stock&quot;:
  exists &quot;Drug out of stock Condition&quot;
    or exists &quot;Drug out of stock Observation&quot;
define &quot;Drug out of stock Condition&quot;:
  [Condition: Concepts.&quot;Drug out of stock&quot;]
define &quot;Drug out of stock Observation&quot;:
  &quot;Reason for ARV drug regimen substitution Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Drug out of stock&quot;
/* End of Drug out of stock */

/*
@dataElement: HIV.D.DE425 - Other reason for regimen substitution
@activity: HIV.D21 Determine regimen and treatment options
@description: A substitution was made for another reason
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other reason for regimen substitution&quot;:
  exists &quot;Other reason for regimen substitution Condition&quot;
    or exists &quot;Other reason for regimen substitution Observation&quot;
define &quot;Other reason for regimen substitution Condition&quot;:
  [Condition: Concepts.&quot;Other reason for regimen substitution&quot;]
define &quot;Other reason for regimen substitution Observation&quot;:
  &quot;Reason for ARV drug regimen substitution Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other reason for regimen substitution&quot;
/* End of Other reason for regimen substitution */

/*
@dataElement: HIV.D.DE427 - Switch to second-line ART regimen recommended
@activity: HIV.D21 Determine regimen and treatment options
@description: A switch to second-line ART regimen is recommended
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Switch to second-line ART regimen recommended&quot;:
  exists &quot;Switch to second-line ART regimen recommended Observation&quot;
define &quot;Switch to second-line ART regimen recommended Observation&quot;:
  [Observation: Concepts.&quot;Switch to second-line ART regimen recommended&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Switch to second-line ART regimen recommended */

/*
@dataElement: HIV.D.DE436 - Regimen substitution recommended
@activity: HIV.D23 Prescribe
@description: A drug substitution is recommended
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Regimen substitution recommended&quot;:
  exists &quot;Regimen substitution recommended Observation&quot;
define &quot;Regimen substitution recommended Observation&quot;:
  [Observation: Concepts.&quot;Regimen substitution recommended&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Regimen substitution recommended */

/*
@dataElement: HIV.D.DE437 - Dose adjustment recommended
@activity: HIV.D23 Prescribe
@description: A dosage change is recommended
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Dose adjustment recommended&quot;:
  exists &quot;Dose adjustment recommended Observation&quot;
define &quot;Dose adjustment recommended Observation&quot;:
  [Observation: Concepts.&quot;Dose adjustment recommended&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Dose adjustment recommended */

/*
@dataElement: HIV.D.DE443 - Suspicion of treatment failure or interruption
@activity: HIV.D23 Prescribe
@description: Client has been on ART, but has stopped taking it or a treatment failure is suspected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Suspicion of treatment failure or interruption&quot;:
  exists &quot;Suspicion of treatment failure or interruption Observation&quot;
define &quot;Suspicion of treatment failure or interruption Observation&quot;:
  [Observation: Concepts.&quot;Suspicion of treatment failure or interruption&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Suspicion of treatment failure or interruption */

/*
@dataElement: HIV.D.DE457 - Medications prescribed
@activity: HIV.D23 Prescribe
@description: Name or regimen code of all other medications prescribed during the visit
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Medications prescribed D.DE457&quot;:
  exists &quot;Medications prescribed D.DE457 Observation&quot;
define &quot;Medications prescribed D.DE457 Observation&quot;:
  [Observation: Concepts.&quot;Medications prescribed - HIV.D.DE457&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Medications prescribed D.DE457 */

/*
@dataElement: HIV.D.DE458 - Date medications prescribed
@activity: HIV.D23 Prescribe
@description: Date the medications were prescribed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date medications prescribed D.DE458&quot;:
  [Observation: Concepts.&quot;Date medications prescribed - HIV.D.DE458&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date medications prescribed D.DE458 Value&quot;:
  &quot;Date medications prescribed D.DE458&quot; O
  return O.value
/* End of Date medications prescribed D.DE458 */

/*
@dataElement: HIV.D.DE459 - Dose of medications prescribed
@activity: HIV.D23 Prescribe
@description: Number of doses (quantity taken at a single point in time) of drugs prescribed/dispensed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Dose of medications prescribed&quot;:
  [Observation: Concepts.&quot;Dose of medications prescribed&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Dose of medications prescribed Value&quot;:
  &quot;Dose of medications prescribed&quot; O
  return O.value
/* End of Dose of medications prescribed */

/*
@dataElement: HIV.D.DE460 - Number of days medications prescribed
@activity: HIV.D23 Prescribe
@description: Number of days supply of each medication or regimen prescribed during the visit
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Number of days medications prescribed&quot;:
  [Observation: Concepts.&quot;Number of days medications prescribed&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Number of days medications prescribed Value&quot;:
  &quot;Number of days medications prescribed&quot; O
  return O.value
/* End of Number of days medications prescribed */

/*
@dataElement: HIV.D.DE465 - Adherence counselling provided
@activity: HIV.D24 Counsel
@description: Counselling was carried out during visit
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Adherence counselling provided D.DE465&quot;:
  exists &quot;Adherence counselling provided D.DE465 Observation&quot;
define &quot;Adherence counselling provided D.DE465 Observation&quot;:
  [Observation: Concepts.&quot;Adherence counselling provided - HIV.D.DE465&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Adherence counselling provided D.DE465 */

/*
@dataElement: HIV.D.DE466 - Type of treatment-limiting toxicity
@activity: HIV.D21 Determine regimen and treatment options
@description: Type of treatment-limiting toxicity experienced by client. Treatment-limiting toxicity is defined as a serious adverse drug reaction that results in drug discontinuation or substitution. In addition, any reaction that leads to treatment interruption or requires changing the drug or regimen because of an adverse drug reaction is also considered a serious adverse drug reaction.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Type of treatment-limiting toxicity&quot;:
  exists &quot;Type of treatment-limiting toxicity Observation&quot;
define &quot;Type of treatment-limiting toxicity Observation&quot;:
  [Observation: Concepts.&quot;Type of treatment-limiting toxicity&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Type of treatment-limiting toxicity */

/*
@dataElement: HIV.D.DE467 - Gastrointestinal
@activity: HIV.D21 Determine regimen and treatment options
@description: Treatment-limiting toxicity due to GI issues (nausea, diarrhoea, abdominal pain, vomiting)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Gastrointestinal&quot;:
  exists &quot;Gastrointestinal Condition&quot;
    or exists &quot;Gastrointestinal Observation&quot;
define &quot;Gastrointestinal Condition&quot;:
  [Condition: Concepts.&quot;Gastrointestinal&quot;]
define &quot;Gastrointestinal Observation&quot;:
  &quot;Type of treatment-limiting toxicity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Gastrointestinal&quot;
/* End of Gastrointestinal */

/*
@dataElement: HIV.D.DE468 - Skin issues
@activity: HIV.D21 Determine regimen and treatment options
@description: Treatment-limiting toxicity due to skin issues (rash, hypersensitivity reaction)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Skin issues&quot;:
  exists &quot;Skin issues Condition&quot;
    or exists &quot;Skin issues Observation&quot;
define &quot;Skin issues Condition&quot;:
  [Condition: Concepts.&quot;Skin issues&quot;]
define &quot;Skin issues Observation&quot;:
  &quot;Type of treatment-limiting toxicity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Skin issues&quot;
/* End of Skin issues */

/*
@dataElement: HIV.D.DE469 - Peripheral neuropathy
@activity: HIV.D21 Determine regimen and treatment options
@description: Treatment-limiting toxicity due to peripheral neuropathy (burning/numbness/ tingling)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Peripheral neuropathy&quot;:
  exists &quot;Peripheral neuropathy Condition&quot;
    or exists &quot;Peripheral neuropathy Observation&quot;
define &quot;Peripheral neuropathy Condition&quot;:
  [Condition: Concepts.&quot;Peripheral neuropathy&quot;]
define &quot;Peripheral neuropathy Observation&quot;:
  &quot;Type of treatment-limiting toxicity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Peripheral neuropathy&quot;
/* End of Peripheral neuropathy */

/*
@dataElement: HIV.D.DE470 - Central nervous system symptoms
@activity: HIV.D21 Determine regimen and treatment options
@description: Treatment-limiting toxicity due to central nervous system symptoms (dizzy, anxiety, nightmare, depression, seizures)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Central nervous system symptoms&quot;:
  exists &quot;Central nervous system symptoms Condition&quot;
    or exists &quot;Central nervous system symptoms Observation&quot;
define &quot;Central nervous system symptoms Condition&quot;:
  [Condition: Concepts.&quot;Central nervous system symptoms&quot;]
define &quot;Central nervous system symptoms Observation&quot;:
  &quot;Type of treatment-limiting toxicity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Central nervous system symptoms&quot;
/* End of Central nervous system symptoms */

/*
@dataElement: HIV.D.DE471 - Weight gain
@activity: HIV.D21 Determine regimen and treatment options
@description: Treatment-limiting toxicity due to weight gain
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Weight gain&quot;:
  exists &quot;Weight gain Condition&quot;
    or exists &quot;Weight gain Observation&quot;
define &quot;Weight gain Condition&quot;:
  [Condition: Concepts.&quot;Weight gain&quot;]
define &quot;Weight gain Observation&quot;:
  &quot;Type of treatment-limiting toxicity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Weight gain&quot;
/* End of Weight gain */

/*
@dataElement: HIV.D.DE472 - Hepatic dysfunction
@activity: HIV.D21 Determine regimen and treatment options
@description: Treatment-limiting toxicity due to hepatic dysfunction (jaundice)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Hepatic dysfunction&quot;:
  exists &quot;Hepatic dysfunction Condition&quot;
    or exists &quot;Hepatic dysfunction Observation&quot;
define &quot;Hepatic dysfunction Condition&quot;:
  [Condition: Concepts.&quot;Hepatic dysfunction&quot;]
define &quot;Hepatic dysfunction Observation&quot;:
  &quot;Type of treatment-limiting toxicity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Hepatic dysfunction&quot;
/* End of Hepatic dysfunction */

/*
@dataElement: HIV.D.DE473 - Haematological disorders
@activity: HIV.D21 Determine regimen and treatment options
@description: Treatment-limiting toxicity due to haematological (anaemia, neutropenia) disorders
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Haematological disorders&quot;:
  exists &quot;Haematological disorders Condition&quot;
    or exists &quot;Haematological disorders Observation&quot;
define &quot;Haematological disorders Condition&quot;:
  [Condition: Concepts.&quot;Haematological disorders&quot;]
define &quot;Haematological disorders Observation&quot;:
  &quot;Type of treatment-limiting toxicity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Haematological disorders&quot;
/* End of Haematological disorders */

/*
@dataElement: HIV.D.DE474 - Fatigue
@activity: HIV.D21 Determine regimen and treatment options
@description: Treatment-limiting toxicity due to fatigue
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Fatigue&quot;:
  exists &quot;Fatigue Condition&quot;
    or exists &quot;Fatigue Observation&quot;
define &quot;Fatigue Condition&quot;:
  [Condition: Concepts.&quot;Fatigue&quot;]
define &quot;Fatigue Observation&quot;:
  &quot;Type of treatment-limiting toxicity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Fatigue&quot;
/* End of Fatigue */

/*
@dataElement: HIV.D.DE475 - Headache
@activity: HIV.D21 Determine regimen and treatment options
@description: Treatment-limiting toxicity due to headache
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Headache D.DE475&quot;:
  exists &quot;Headache D.DE475 Condition&quot;
    or exists &quot;Headache D.DE475 Observation&quot;
define &quot;Headache D.DE475 Condition&quot;:
  [Condition: Concepts.&quot;Headache - HIV.D.DE475&quot;]
define &quot;Headache D.DE475 Observation&quot;:
  &quot;Type of treatment-limiting toxicity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Headache - HIV.D.DE475&quot;
/* End of Headache D.DE475 */

/*
@dataElement: HIV.D.DE476 - Bone dysfunction
@activity: HIV.D21 Determine regimen and treatment options
@description: Treatment-limiting toxicity due to bone dysfunction (fractures, osteopenia)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Bone dysfunction&quot;:
  exists &quot;Bone dysfunction Condition&quot;
    or exists &quot;Bone dysfunction Observation&quot;
define &quot;Bone dysfunction Condition&quot;:
  [Condition: Concepts.&quot;Bone dysfunction&quot;]
define &quot;Bone dysfunction Observation&quot;:
  &quot;Type of treatment-limiting toxicity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Bone dysfunction&quot;
/* End of Bone dysfunction */

/*
@dataElement: HIV.D.DE477 - Metabolic symptoms
@activity: HIV.D21 Determine regimen and treatment options
@description: Treatment-limiting toxicity due to metabolic symptoms (body fat changes, hyperglycaemia, dyslipidaemia)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Metabolic symptoms&quot;:
  exists &quot;Metabolic symptoms Condition&quot;
    or exists &quot;Metabolic symptoms Observation&quot;
define &quot;Metabolic symptoms Condition&quot;:
  [Condition: Concepts.&quot;Metabolic symptoms&quot;]
define &quot;Metabolic symptoms Observation&quot;:
  &quot;Type of treatment-limiting toxicity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Metabolic symptoms&quot;
/* End of Metabolic symptoms */

/*
@dataElement: HIV.D.DE478 - Kidney dysfunction
@activity: HIV.D21 Determine regimen and treatment options
@description: Treatment-limiting toxicity due to kidney dysfunction (nephrolithiasis, renal insufficiency)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Kidney dysfunction&quot;:
  exists &quot;Kidney dysfunction Condition&quot;
    or exists &quot;Kidney dysfunction Observation&quot;
define &quot;Kidney dysfunction Condition&quot;:
  [Condition: Concepts.&quot;Kidney dysfunction&quot;]
define &quot;Kidney dysfunction Observation&quot;:
  &quot;Type of treatment-limiting toxicity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Kidney dysfunction&quot;
/* End of Kidney dysfunction */

/*
@dataElement: HIV.D.DE479 - Unexpected adverse drug reaction
@activity: HIV.D21 Determine regimen and treatment options
@description: Client experienced an unexpected adverse drug reaction
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unexpected adverse drug reaction&quot;:
  exists &quot;Unexpected adverse drug reaction Condition&quot;
    or exists &quot;Unexpected adverse drug reaction Observation&quot;
define &quot;Unexpected adverse drug reaction Condition&quot;:
  [Condition: Concepts.&quot;Unexpected adverse drug reaction&quot;]
define &quot;Unexpected adverse drug reaction Observation&quot;:
  &quot;Type of treatment-limiting toxicity Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unexpected adverse drug reaction&quot;
/* End of Unexpected adverse drug reaction */

/*
HIV.D.DE485
New regimen after switch to second-line regimen
*/

define &quot;New regimen after switch to second-line regimen&quot;:
  [MedicationStatement] MS
    where exists(MS.reasonCode C where C ~ Concepts.&quot;New regimen after switch to second-line regimen&quot;)
    sort by start of effective.toInterval()


/*
HIV.D.DE491
New regimen after switch to third-line regimen
*/

define &quot;New regimen after switch to third-line regimen&quot;:
  [MedicationStatement] MS
    where exists(MS.reasonCode C where C ~ Concepts.&quot;New regimen after switch to third-line regimen&quot;)
    sort by start of effective.toInterval()


/*
HIV.D.DE489	New regimen(s) after substitution within second-line regimen
*/

define &quot;New regimen after substitution within second-line regimen&quot;:
  [MedicationStatement] MS
    where exists(MS.reasonCode C where C ~ Concepts.&quot;New regimen after switch to second-line regimen&quot;)
    sort by start of effective.toInterval()


/*
HIV.D.DE495	New regimen(s) after substitution within third-line regimen
*/

define &quot;New regimen after substitution within third-line regimen&quot;:
  [MedicationStatement] MS
    where exists(MS.reasonCode C where C ~ Concepts.&quot;New regimen after switch to third-line regimen&quot;)
    sort by start of effective.toInterval()

/*
@dataElement: HIV.D.DE487 - Dates of substitution within second-line regimen
@activity: HIV.D21 Determine regimen and treatment options
@description: Date on which ARV drug regimen for client was changed within the second-line regimen (substitution)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Dates of substitution within second-line regimen&quot;:
  [Observation: Concepts.&quot;Dates of substitution within second-line regimen&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Dates of substitution within second-line regimen Value&quot;:
  &quot;Dates of substitution within second-line regimen&quot; O
  return O.value
/* End of Dates of substitution within second-line regimen */

/*
@dataElement: HIV.D.DE493 - Dates of substitution within third-line regimen
@activity: HIV.D21 Determine regimen and treatment options
@description: Date on which ARV drug regimen for client was changed within the third-line (substitution)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Dates of substitution within third-line regimen&quot;:
  [Observation: Concepts.&quot;Dates of substitution within third-line regimen&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Dates of substitution within third-line regimen Value&quot;:
  &quot;Dates of substitution within third-line regimen&quot; O
  return O.value
/* End of Dates of substitution within third-line regimen */

/*
@dataElement: HIV.D.DE496 - Enhanced adherence counselling provided
@activity: HIV.D24 Counsel
@description: Enhanced adherence counselling was provided to the client during the visit
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Enhanced adherence counselling provided&quot;:
  exists &quot;Enhanced adherence counselling provided Observation&quot;
define &quot;Enhanced adherence counselling provided Observation&quot;:
  [Observation: Concepts.&quot;Enhanced adherence counselling provided&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Enhanced adherence counselling provided */

/*
@dataElement: HIV.D.DE507 - Counselling provided on diagnoses
@activity: HIV.D24 Counsel
@description: Counselling provided on diagnoses
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Counselling provided on diagnoses&quot;:
  exists &quot;Counselling provided on diagnoses Observation&quot;
define &quot;Counselling provided on diagnoses Observation&quot;:
  [Observation: Concepts.&quot;Counselling provided on diagnoses&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Counselling provided on diagnoses */

/*
@dataElement: HIV.D.DE510 - Syphilis counselling and treatment
@activity: HIV.D24 Counsel
@description: Whether counselling and treatment was provided to a client who has been diagnosed with syphilis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Syphilis counselling and treatment&quot;:
  exists &quot;Syphilis counselling and treatment Observation&quot;
define &quot;Syphilis counselling and treatment Observation&quot;:
  [Observation: Concepts.&quot;Syphilis counselling and treatment&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Syphilis counselling and treatment */

/*
@dataElement: HIV.D.DE519 - Other support services
@activity: HIV.D28 Offer other services
@description: Offer or refer for other support services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other support services D.DE519&quot;:
  exists &quot;Other support services D.DE519 Observation&quot;
define &quot;Other support services D.DE519 Observation&quot;:
  [Observation: Concepts.&quot;Other support services - HIV.D.DE519&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Other support services D.DE519 */

/*
@dataElement: HIV.D.DE520 - Mental health services
@activity: HIV.D28 Offer other services
@description: Offer or refer for mental health services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Mental health services D.DE520&quot;:
  exists &quot;Mental health services D.DE520 Condition&quot;
    or exists &quot;Mental health services D.DE520 Observation&quot;
define &quot;Mental health services D.DE520 Condition&quot;:
  [Condition: Concepts.&quot;Mental health services - HIV.D.DE520&quot;]
define &quot;Mental health services D.DE520 Observation&quot;:
  &quot;Other support services D.DE519 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Mental health services - HIV.D.DE520&quot;
/* End of Mental health services D.DE520 */

/*
@dataElement: HIV.D.DE521 - Psychosocial counselling, support and treatment adherence counselling
@activity: HIV.D28 Offer other services
@description: Offer or refer for psychosocial counselling, support and treatment adherence counselling
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Psychosocial counselling, support and treatment adherence counselling D.DE521&quot;:
  exists &quot;Psychosocial counselling, support and treatment adherence counselling D.DE521 Condition&quot;
    or exists &quot;Psychosocial counselling, support and treatment adherence counselling D.DE521 Observation&quot;
define &quot;Psychosocial counselling, support and treatment adherence counselling D.DE521 Condition&quot;:
  [Condition: Concepts.&quot;Psychosocial counselling, support and treatment adherence counselling - HIV.D.DE521&quot;]
define &quot;Psychosocial counselling, support and treatment adherence counselling D.DE521 Observation&quot;:
  &quot;Other support services D.DE519 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Psychosocial counselling, support and treatment adherence counselling - HIV.D.DE521&quot;
/* End of Psychosocial counselling, support and treatment adherence counselling D.DE521 */

/*
@dataElement: HIV.D.DE522 - Legal and social services
@activity: HIV.D28 Offer other services
@description: Offer or refer for legal and social services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Legal and social services D.DE522&quot;:
  exists &quot;Legal and social services D.DE522 Condition&quot;
    or exists &quot;Legal and social services D.DE522 Observation&quot;
define &quot;Legal and social services D.DE522 Condition&quot;:
  [Condition: Concepts.&quot;Legal and social services - HIV.D.DE522&quot;]
define &quot;Legal and social services D.DE522 Observation&quot;:
  &quot;Other support services D.DE519 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Legal and social services - HIV.D.DE522&quot;
/* End of Legal and social services D.DE522 */

/*
@dataElement: HIV.D.DE523 - Services for responding to violence against women
@activity: HIV.D28 Offer other services
@description: Offer or refer for services for responding to violence against women, including first-line support and psychosocial support, post-rape care and other support services including shelters, legal services and women and child protection services
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Services for responding to violence against women D.DE523&quot;:
  exists &quot;Services for responding to violence against women D.DE523 Condition&quot;
    or exists &quot;Services for responding to violence against women D.DE523 Observation&quot;
define &quot;Services for responding to violence against women D.DE523 Condition&quot;:
  [Condition: Concepts.&quot;Services for responding to violence against women - HIV.D.DE523&quot;]
define &quot;Services for responding to violence against women D.DE523 Observation&quot;:
  &quot;Other support services D.DE519 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Services for responding to violence against women - HIV.D.DE523&quot;
/* End of Services for responding to violence against women D.DE523 */

/*
@dataElement: HIV.D.DE524 - Date/time of follow-up appointment
@activity: HIV.D29 Schedule follow-up
@description: Date the client is to return for monitoring, re-supply or any other reason
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date/time of follow-up appointment D.DE524&quot;:
  [Observation: Concepts.&quot;Date/time of follow-up appointment - HIV.D.DE524&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date/time of follow-up appointment D.DE524 Value&quot;:
  &quot;Date/time of follow-up appointment D.DE524&quot; O
  return O.value
/* End of Date/time of follow-up appointment D.DE524 */

/*
@dataElement: HIV.D.DE525 - Type of follow-up appointment
@activity: HIV.D29 Schedule follow-up
@description: Whether the visit will be clinical only, ARV drug pick-up or other. Client may have multiple follow-ups scheduled.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Type of follow-up appointment D.DE525&quot;:
  exists &quot;Type of follow-up appointment D.DE525 Observation&quot;
define &quot;Type of follow-up appointment D.DE525 Observation&quot;:
  [Observation: Concepts.&quot;Type of follow-up appointment - HIV.D.DE525&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Type of follow-up appointment D.DE525 */

/*
@dataElement: HIV.D.DE526 - Clinical visit
@activity: HIV.D29 Schedule follow-up
@description: Appointment for clinical care by a provider
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Clinical visit D.DE526&quot;:
  exists &quot;Clinical visit D.DE526 Condition&quot;
    or exists &quot;Clinical visit D.DE526 Observation&quot;
define &quot;Clinical visit D.DE526 Condition&quot;:
  [Condition: Concepts.&quot;Clinical visit - HIV.D.DE526&quot;]
define &quot;Clinical visit D.DE526 Observation&quot;:
  &quot;Type of follow-up appointment D.DE525 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Clinical visit - HIV.D.DE526&quot;
/* End of Clinical visit D.DE526 */

/*
@dataElement: HIV.D.DE527 - Antiretroviral drug pick up
@activity: HIV.D29 Schedule follow-up
@description: Appointment for a drug pick up
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Antiretroviral drug pick up&quot;:
  exists &quot;Antiretroviral drug pick up Condition&quot;
    or exists &quot;Antiretroviral drug pick up Observation&quot;
define &quot;Antiretroviral drug pick up Condition&quot;:
  [Condition: Concepts.&quot;Antiretroviral drug pick up&quot;]
define &quot;Antiretroviral drug pick up Observation&quot;:
  &quot;Type of follow-up appointment D.DE525 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Antiretroviral drug pick up&quot;
/* End of Antiretroviral drug pick up */

/*
@dataElement: HIV.D.DE528 - Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer
@activity: HIV.D29 Schedule follow-up
@description: Appointment for a post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer D.DE528&quot;:
  exists &quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer D.DE528 Condition&quot;
    or exists &quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer D.DE528 Observation&quot;
define &quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer D.DE528 Condition&quot;:
  [Condition: Concepts.&quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer - HIV.D.DE528&quot;]
define &quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer D.DE528 Observation&quot;:
  &quot;Type of follow-up appointment D.DE525 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer - HIV.D.DE528&quot;
/* End of Post-treatment follow-up visit for cervical precancer lesions or invasive cervical cancer D.DE528 */

/*
@dataElement: HIV.D.DE529 - Other
@activity: HIV.D29 Schedule follow-up
@description: Other reason for the follow-up appointment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other D.DE529&quot;:
  exists &quot;Other D.DE529 Condition&quot;
    or exists &quot;Other D.DE529 Observation&quot;
define &quot;Other D.DE529 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.D.DE529&quot;]
define &quot;Other D.DE529 Observation&quot;:
  &quot;Type of follow-up appointment D.DE525 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.D.DE529&quot;
/* End of Other D.DE529 */

/*
@dataElement: HIV.D.DE531 - Follow-up test recommended date
@activity: HIV.D29 Schedule follow-up
@description: A test or screening recommended for the client's care plan at a future date
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Follow-up test recommended date&quot;:
  [Observation: Concepts.&quot;Follow-up test recommended date&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Follow-up test recommended date Value&quot;:
  &quot;Follow-up test recommended date&quot; O
  return O.value
/* End of Follow-up test recommended date */

/*
@dataElement: HIV.D.DE537 - Current medications
@activity: HIV.D8 Capture or update client history
@description: List of all of the medications the client is currently taking
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Current medications&quot;:
  exists &quot;Current medications Observation&quot;
define &quot;Current medications Observation&quot;:
  [Observation: Concepts.&quot;Current medications&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Current medications */

/*
@dataElement: HIV.D.DE538 - No medications
@activity: HIV.D8 Capture or update client history
@description: The client is currently not on any medications
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;No medications&quot;:
  exists &quot;No medications Condition&quot;
    or exists &quot;No medications Observation&quot;
define &quot;No medications Condition&quot;:
  [Condition: Concepts.&quot;No medications&quot;]
define &quot;No medications Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;No medications&quot;
/* End of No medications */

/*
@dataElement: HIV.D.DE539 - Dont know of any current medications
@activity: HIV.D8 Capture or update client history
@description: The client does not know if she is on any medications
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Dont know of any current medications&quot;:
  exists &quot;Dont know of any current medications Condition&quot;
    or exists &quot;Dont know of any current medications Observation&quot;
define &quot;Dont know of any current medications Condition&quot;:
  [Condition: Concepts.&quot;Dont know of any current medications&quot;]
define &quot;Dont know of any current medications Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Dont know of any current medications&quot;
/* End of Dont know of any current medications */

/*
@dataElement: HIV.D.DE540 - Analgesic
@activity: HIV.D8 Capture or update client history
@description: Analgesic medication (painkiller)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Analgesic&quot;:
  exists &quot;Analgesic Condition&quot;
    or exists &quot;Analgesic Observation&quot;
define &quot;Analgesic Condition&quot;:
  [Condition: Concepts.&quot;Analgesic&quot;]
define &quot;Analgesic Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Analgesic&quot;
/* End of Analgesic */

/*
@dataElement: HIV.D.DE541 - Antacids
@activity: HIV.D8 Capture or update client history
@description: Antacids
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Antacids&quot;:
  exists &quot;Antacids Condition&quot;
    or exists &quot;Antacids Observation&quot;
define &quot;Antacids Condition&quot;:
  [Condition: Concepts.&quot;Antacids&quot;]
define &quot;Antacids Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Antacids&quot;
/* End of Antacids */

/*
@dataElement: HIV.D.DE542 - Antibiotics broad-spectrum
@activity: HIV.D8 Capture or update client history
@description: Client is currently taking broad-spectrum antibiotics
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Antibiotics broad-spectrum&quot;:
  exists &quot;Antibiotics broad-spectrum Condition&quot;
    or exists &quot;Antibiotics broad-spectrum Observation&quot;
define &quot;Antibiotics broad-spectrum Condition&quot;:
  [Condition: Concepts.&quot;Antibiotics broad-spectrum&quot;]
define &quot;Antibiotics broad-spectrum Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Antibiotics broad-spectrum&quot;
/* End of Antibiotics broad-spectrum */

/*
@dataElement: HIV.D.DE543 - Anticonvulsive
@activity: HIV.D8 Capture or update client history
@description: Anticonvulsive medication
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Anticonvulsive&quot;:
  exists &quot;Anticonvulsive Condition&quot;
    or exists &quot;Anticonvulsive Observation&quot;
define &quot;Anticonvulsive Condition&quot;:
  [Condition: Concepts.&quot;Anticonvulsive&quot;]
define &quot;Anticonvulsive Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Anticonvulsive&quot;
/* End of Anticonvulsive */

/*
@dataElement: HIV.D.DE544 - Antidiabetic
@activity: HIV.D8 Capture or update client history
@description: Antidiabetic medication
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Antidiabetic&quot;:
  exists &quot;Antidiabetic Condition&quot;
    or exists &quot;Antidiabetic Observation&quot;
define &quot;Antidiabetic Condition&quot;:
  [Condition: Concepts.&quot;Antidiabetic&quot;]
define &quot;Antidiabetic Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Antidiabetic&quot;
/* End of Antidiabetic */

/*
@dataElement: HIV.D.DE545 - Antifungals
@activity: HIV.D8 Capture or update client history
@description: Client is currently taking antifungals
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Antifungals&quot;:
  exists &quot;Antifungals Condition&quot;
    or exists &quot;Antifungals Observation&quot;
define &quot;Antifungals Condition&quot;:
  [Condition: Concepts.&quot;Antifungals&quot;]
define &quot;Antifungals Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Antifungals&quot;
/* End of Antifungals */

/*
@dataElement: HIV.D.DE546 - Antihelmintic
@activity: HIV.D8 Capture or update client history
@description: Antihelmintic or antiparasitic medication
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Antihelmintic&quot;:
  exists &quot;Antihelmintic Condition&quot;
    or exists &quot;Antihelmintic Observation&quot;
define &quot;Antihelmintic Condition&quot;:
  [Condition: Concepts.&quot;Antihelmintic&quot;]
define &quot;Antihelmintic Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Antihelmintic&quot;
/* End of Antihelmintic */

/*
@dataElement: HIV.D.DE547 - Antihypertensive
@activity: HIV.D8 Capture or update client history
@description: Antihypertensive medication
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Antihypertensive&quot;:
  exists &quot;Antihypertensive Condition&quot;
    or exists &quot;Antihypertensive Observation&quot;
define &quot;Antihypertensive Condition&quot;:
  [Condition: Concepts.&quot;Antihypertensive&quot;]
define &quot;Antihypertensive Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Antihypertensive&quot;
/* End of Antihypertensive */

/*
@dataElement: HIV.D.DE548 - Antimalarials
@activity: HIV.D8 Capture or update client history
@description: Antimalarial medication
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Antimalarials&quot;:
  exists &quot;Antimalarials Condition&quot;
    or exists &quot;Antimalarials Observation&quot;
define &quot;Antimalarials Condition&quot;:
  [Condition: Concepts.&quot;Antimalarials&quot;]
define &quot;Antimalarials Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Antimalarials&quot;
/* End of Antimalarials */

/*
@dataElement: HIV.D.DE549 - Antiretrovirals ARVs
@activity: HIV.D8 Capture or update client history
@description: Antiretrovirals (ARVs)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Antiretrovirals ARVs&quot;:
  exists &quot;Antiretrovirals ARVs Condition&quot;
    or exists &quot;Antiretrovirals ARVs Observation&quot;
define &quot;Antiretrovirals ARVs Condition&quot;:
  [Condition: Concepts.&quot;Antiretrovirals ARVs&quot;]
define &quot;Antiretrovirals ARVs Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Antiretrovirals ARVs&quot;
/* End of Antiretrovirals ARVs */

/*
@dataElement: HIV.D.DE550 - Antiparasitics
@activity: HIV.D8 Capture or update client history
@description: Client is currently taking antiparasitics
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Antiparasitics&quot;:
  exists &quot;Antiparasitics Condition&quot;
    or exists &quot;Antiparasitics Observation&quot;
define &quot;Antiparasitics Condition&quot;:
  [Condition: Concepts.&quot;Antiparasitics&quot;]
define &quot;Antiparasitics Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Antiparasitics&quot;
/* End of Antiparasitics */

/*
@dataElement: HIV.D.DE551 - Antivirals
@activity: HIV.D8 Capture or update client history
@description: Antiviral medication
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Antivirals&quot;:
  exists &quot;Antivirals Condition&quot;
    or exists &quot;Antivirals Observation&quot;
define &quot;Antivirals Condition&quot;:
  [Condition: Concepts.&quot;Antivirals&quot;]
define &quot;Antivirals Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Antivirals&quot;
/* End of Antivirals */

/*
@dataElement: HIV.D.DE552 - Buprenorphine
@activity: HIV.D8 Capture or update client history
@description: Opioid substitution to treat opioid dependence
*/
define &quot;buprenorphine_prescribed&quot;:
[MedicationRequest] MR
        where MR.status = 'completed'
        and MR.intent = 'order'
        and MR.medication ~ ConceptsCustom.&quot;buprenorphine&quot;
// TODO: Replace placeholder with relevant CQL logic
define &quot;Buprenorphine D.DE552&quot;:
  exists &quot;Buprenorphine D.DE552 Condition&quot;
    or exists &quot;Buprenorphine D.DE552 Observation&quot;
define &quot;Buprenorphine D.DE552 Condition&quot;:
  [Condition: Concepts.&quot;Buprenorphine - HIV.D.DE552&quot;]
define &quot;Buprenorphine D.DE552 Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Buprenorphine - HIV.D.DE552&quot;
/* End of Buprenorphine D.DE552 */

/*
@dataElement: HIV.D.DE553 - Co-trimoxazole preventive therapy CPT
@activity: HIV.D8 Capture or update client history
@description: Combination of two antimicrobial drugs (sulfamethoxazole and trimethoprim) that covers a variety of bacterial, fungal and protozoan infections
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Co-trimoxazole preventive therapy CPT&quot;:
  exists &quot;Co-trimoxazole preventive therapy CPT Condition&quot;
    or exists &quot;Co-trimoxazole preventive therapy CPT Observation&quot;
define &quot;Co-trimoxazole preventive therapy CPT Condition&quot;:
  [Condition: Concepts.&quot;Co-trimoxazole preventive therapy CPT&quot;]
define &quot;Co-trimoxazole preventive therapy CPT Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Co-trimoxazole preventive therapy CPT&quot;
/* End of Co-trimoxazole preventive therapy CPT */

/*
@dataElement: HIV.D.DE554 - Hormonal family planning method
@activity: HIV.D8 Capture or update client history
@description: Hormonal family planning method
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Hormonal family planning method&quot;:
  exists &quot;Hormonal family planning method Condition&quot;
    or exists &quot;Hormonal family planning method Observation&quot;
define &quot;Hormonal family planning method Condition&quot;:
  [Condition: Concepts.&quot;Hormonal family planning method&quot;]
define &quot;Hormonal family planning method Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Hormonal family planning method&quot;
/* End of Hormonal family planning method */

/*
@dataElement: HIV.D.DE555 - Methadone
@activity: HIV.D8 Capture or update client history
@description: Opioid substitution to treat opioid dependence
*/
define &quot;methadone_prescribed&quot;:
[MedicationRequest] MR
        where MR.status = 'completed'
        and MR.intent = 'order'
        and MR.medication ~ ConceptsCustom.&quot;methadone&quot;

// TODO: Replace placeholder with relevant CQL logic
define &quot;Methadone D.DE555&quot;:
  exists &quot;Methadone D.DE555 Condition&quot;
    or exists &quot;Methadone D.DE555 Observation&quot;
define &quot;Methadone D.DE555 Condition&quot;:
  [Condition: Concepts.&quot;Methadone - HIV.D.DE555&quot;]
define &quot;Methadone D.DE555 Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Methadone - HIV.D.DE555&quot;
/* End of Methadone D.DE555 */

/*
@dataElement: HIV.D.DE556 - PrEP to prevent HIV
@activity: HIV.D8 Capture or update client history
@description: Pre-exposure prophylaxis (PrEP) medication for preventing the acquisition of HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;PrEP to prevent HIV&quot;:
  exists &quot;PrEP to prevent HIV Condition&quot;
    or exists &quot;PrEP to prevent HIV Observation&quot;
define &quot;PrEP to prevent HIV Condition&quot;:
  [Condition: Concepts.&quot;PrEP to prevent HIV&quot;]
define &quot;PrEP to prevent HIV Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;PrEP to prevent HIV&quot;
/* End of PrEP to prevent HIV */

/*
@dataElement: HIV.D.DE557 - Other antibiotics
@activity: HIV.D8 Capture or update client history
@description: Other antibiotics not listed above
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other antibiotics&quot;:
  exists &quot;Other antibiotics Condition&quot;
    or exists &quot;Other antibiotics Observation&quot;
define &quot;Other antibiotics Condition&quot;:
  [Condition: Concepts.&quot;Other antibiotics&quot;]
define &quot;Other antibiotics Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other antibiotics&quot;
/* End of Other antibiotics */

/*
@dataElement: HIV.D.DE558 - Other medications
@activity: HIV.D8 Capture or update client history
@description: Other medications or supplements that are not listed above
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other medications&quot;:
  exists &quot;Other medications Condition&quot;
    or exists &quot;Other medications Observation&quot;
define &quot;Other medications Condition&quot;:
  [Condition: Concepts.&quot;Other medications&quot;]
define &quot;Other medications Observation&quot;:
  &quot;Current medications Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other medications&quot;
/* End of Other medications */

/*
@dataElement: HIV.D.DE656 - Date of cervical cancer screening test
@activity: HIV.D28 Offer other services
@description: Date of cervical cancer screening test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date of cervical cancer screening test&quot;:
  [Observation: Concepts.&quot;Date of cervical cancer screening test&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date of cervical cancer screening test Value&quot;:
  &quot;Date of cervical cancer screening test&quot; O
  return O.value
/* End of Date of cervical cancer screening test */

/*
@dataElement: HIV.D.DE657 - Lifetime screening test number
@activity: HIV.D28 Offer other services
@description: Client's lifetime number of screenings for cervical cancer
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Lifetime screening test number&quot;:
  [Observation: Concepts.&quot;Lifetime screening test number&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Lifetime screening test number Value&quot;:
  &quot;Lifetime screening test number&quot; O
  return O.value
/* End of Lifetime screening test number */

/*
@dataElement: HIV.D.DE658 - Cervical cancer primary screening test type
@activity: HIV.D28 Offer other services
@description: Type of cervical cancer screening test used in primary screening
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cervical cancer primary screening test type&quot;:
  exists &quot;Cervical cancer primary screening test type Observation&quot;
define &quot;Cervical cancer primary screening test type Observation&quot;:
  [Observation: Concepts.&quot;Cervical cancer primary screening test type&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Cervical cancer primary screening test type */

/*
@dataElement: HIV.D.DE659 - HPV-DNA
@activity: HIV.D28 Offer other services
@description: Screened for cervical cancer using HPV-DNA test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HPV-DNA&quot;:
  exists &quot;HPV-DNA Condition&quot;
    or exists &quot;HPV-DNA Observation&quot;
define &quot;HPV-DNA Condition&quot;:
  [Condition: Concepts.&quot;HPV-DNA&quot;]
define &quot;HPV-DNA Observation&quot;:
  &quot;Cervical cancer primary screening test type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HPV-DNA&quot;
/* End of HPV-DNA */

/*
@dataElement: HIV.D.DE660 - VIA
@activity: HIV.D28 Offer other services
@description: Screened for cervical cancer using visual inspection with acetic acid (VIA)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;VIA&quot;:
  exists &quot;VIA Condition&quot;
    or exists &quot;VIA Observation&quot;
define &quot;VIA Condition&quot;:
  [Condition: Concepts.&quot;VIA&quot;]
define &quot;VIA Observation&quot;:
  &quot;Cervical cancer primary screening test type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;VIA&quot;
/* End of VIA */

/*
@dataElement: HIV.D.DE661 - Cervical cytology
@activity: HIV.D28 Offer other services
@description: Screened for cervical cancer using cervical cytology
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cervical cytology&quot;:
  exists &quot;Cervical cytology Condition&quot;
    or exists &quot;Cervical cytology Observation&quot;
define &quot;Cervical cytology Condition&quot;:
  [Condition: Concepts.&quot;Cervical cytology&quot;]
define &quot;Cervical cytology Observation&quot;:
  &quot;Cervical cancer primary screening test type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Cervical cytology&quot;
/* End of Cervical cytology */

/*
@dataElement: HIV.D.DE662 - Other
@activity: HIV.D28 Offer other services
@description: Screened for cervical cancer using other method
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other D.DE662&quot;:
  exists &quot;Other D.DE662 Condition&quot;
    or exists &quot;Other D.DE662 Observation&quot;
define &quot;Other D.DE662 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.D.DE662&quot;]
define &quot;Other D.DE662 Observation&quot;:
  &quot;Cervical cancer primary screening test type Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.D.DE662&quot;
/* End of Other D.DE662 */

/*
@dataElement: HIV.D.DE705 - Date of diagnosis of cervical precancer lesions or invasive cervical cancer
@activity: HIV.D28 Offer other services
@description: Date of diagnosis of cervical precancer lesions or invasive cervical cancer
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date of diagnosis of cervical precancer lesions or invasive cervical cancer&quot;:
  [Observation: Concepts.&quot;Date of diagnosis of cervical precancer lesions or invasive cervical cancer&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date of diagnosis of cervical precancer lesions or invasive cervical cancer Value&quot;:
  &quot;Date of diagnosis of cervical precancer lesions or invasive cervical cancer&quot; O
  return O.value
/* End of Date of diagnosis of cervical precancer lesions or invasive cervical cancer */

/*
@dataElement: HIV.D.DE706 - Cervical cancer screening outcome
@activity: HIV.D28 Offer other services
@description: Client's screening outcome for cervical cancer
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cervical cancer screening outcome&quot;:
  exists &quot;Cervical cancer screening outcome Observation&quot;
define &quot;Cervical cancer screening outcome Observation&quot;:
  [Observation: Concepts.&quot;Cervical cancer screening outcome&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Cervical cancer screening outcome */

/*
@dataElement: HIV.D.DE707 - Positive for cervical precancer lesions
@activity: HIV.D28 Offer other services
@description: Screening outcome for cervical precancer lesions is positive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Positive for cervical precancer lesions&quot;:
  exists &quot;Positive for cervical precancer lesions Condition&quot;
    or exists &quot;Positive for cervical precancer lesions Observation&quot;
define &quot;Positive for cervical precancer lesions Condition&quot;:
  [Condition: Concepts.&quot;Positive for cervical precancer lesions&quot;]
define &quot;Positive for cervical precancer lesions Observation&quot;:
  &quot;Cervical cancer screening outcome Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Positive for cervical precancer lesions&quot;
/* End of Positive for cervical precancer lesions */

/*
@dataElement: HIV.D.DE708 - Negative for cervical precancer lesions
@activity: HIV.D28 Offer other services
@description: Screening outcome for cervical precancer lesions is negative
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Negative for cervical precancer lesions&quot;:
  exists &quot;Negative for cervical precancer lesions Condition&quot;
    or exists &quot;Negative for cervical precancer lesions Observation&quot;
define &quot;Negative for cervical precancer lesions Condition&quot;:
  [Condition: Concepts.&quot;Negative for cervical precancer lesions&quot;]
define &quot;Negative for cervical precancer lesions Observation&quot;:
  &quot;Cervical cancer screening outcome Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Negative for cervical precancer lesions&quot;
/* End of Negative for cervical precancer lesions */

/*
@dataElement: HIV.D.DE709 - Cervical cancer diagnosis
@activity: HIV.D28 Offer other services
@description: Type of cervical cancer diagnosis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cervical cancer diagnosis&quot;:
  exists &quot;Cervical cancer diagnosis Observation&quot;
define &quot;Cervical cancer diagnosis Observation&quot;:
  [Observation: Concepts.&quot;Cervical cancer diagnosis&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Cervical cancer diagnosis */

/*
@dataElement: HIV.D.DE710 - Cervical precancer lesions
@activity: HIV.D28 Offer other services
@description: Client is diagnosed with cervical precancer lesions
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cervical precancer lesions&quot;:
  exists &quot;Cervical precancer lesions Condition&quot;
    or exists &quot;Cervical precancer lesions Observation&quot;
define &quot;Cervical precancer lesions Condition&quot;:
  [Condition: Concepts.&quot;Cervical precancer lesions&quot;]
define &quot;Cervical precancer lesions Observation&quot;:
  &quot;Cervical cancer diagnosis Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Cervical precancer lesions&quot;
/* End of Cervical precancer lesions */

/*
@dataElement: HIV.D.DE711 - Invasive cervical cancer
@activity: HIV.D28 Offer other services
@description: Client is diagnosed with invasive cervical cancer disease
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invasive cervical cancer&quot;:
  exists &quot;Invasive cervical cancer Condition&quot;
    or exists &quot;Invasive cervical cancer Observation&quot;
define &quot;Invasive cervical cancer Condition&quot;:
  [Condition: Concepts.&quot;Invasive cervical cancer&quot;]
define &quot;Invasive cervical cancer Observation&quot;:
  &quot;Cervical cancer diagnosis Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Invasive cervical cancer&quot;
/* End of Invasive cervical cancer */

/*
@dataElement: HIV.D.DE712 - Cervical cancer stage at diagnosis
@activity: HIV.D28 Offer other services
@description: Cervical cancer stage at diagnosis of cervical cancer
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cervical cancer stage at diagnosis&quot;:
  exists &quot;Cervical cancer stage at diagnosis Observation&quot;
define &quot;Cervical cancer stage at diagnosis Observation&quot;:
  [Observation: Concepts.&quot;Cervical cancer stage at diagnosis&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Cervical cancer stage at diagnosis */

/*
@dataElement: HIV.D.DE713 - Stage 0
@activity: HIV.D28 Offer other services
@description: Stage 0 cervical cancer at diagnosis of cervical cancer
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Stage 0&quot;:
  exists &quot;Stage 0 Condition&quot;
    or exists &quot;Stage 0 Observation&quot;
define &quot;Stage 0 Condition&quot;:
  [Condition: Concepts.&quot;Stage 0&quot;]
define &quot;Stage 0 Observation&quot;:
  &quot;Cervical cancer stage at diagnosis Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Stage 0&quot;
/* End of Stage 0 */

/*
@dataElement: HIV.D.DE714 - Stage I
@activity: HIV.D28 Offer other services
@description: Stage I cervical cancer at diagnosis of cervical cancer
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Stage I&quot;:
  exists &quot;Stage I Condition&quot;
    or exists &quot;Stage I Observation&quot;
define &quot;Stage I Condition&quot;:
  [Condition: Concepts.&quot;Stage I&quot;]
define &quot;Stage I Observation&quot;:
  &quot;Cervical cancer stage at diagnosis Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Stage I&quot;
/* End of Stage I */

/*
@dataElement: HIV.D.DE715 - Stage II
@activity: HIV.D28 Offer other services
@description: Stage II cervical cancer at diagnosis of cervical cancer
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Stage II&quot;:
  exists &quot;Stage II Condition&quot;
    or exists &quot;Stage II Observation&quot;
define &quot;Stage II Condition&quot;:
  [Condition: Concepts.&quot;Stage II&quot;]
define &quot;Stage II Observation&quot;:
  &quot;Cervical cancer stage at diagnosis Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Stage II&quot;
/* End of Stage II */

/*
@dataElement: HIV.D.DE716 - Stage III
@activity: HIV.D28 Offer other services
@description: Stage III cervical cancer at diagnosis of cervical cancer
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Stage III&quot;:
  exists &quot;Stage III Condition&quot;
    or exists &quot;Stage III Observation&quot;
define &quot;Stage III Condition&quot;:
  [Condition: Concepts.&quot;Stage III&quot;]
define &quot;Stage III Observation&quot;:
  &quot;Cervical cancer stage at diagnosis Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Stage III&quot;
/* End of Stage III */

/*
@dataElement: HIV.D.DE717 - Stage IV
@activity: HIV.D28 Offer other services
@description: Stage IV cervical cancer at diagnosis of cervical cancer
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Stage IV&quot;:
  exists &quot;Stage IV Condition&quot;
    or exists &quot;Stage IV Observation&quot;
define &quot;Stage IV Condition&quot;:
  [Condition: Concepts.&quot;Stage IV&quot;]
define &quot;Stage IV Observation&quot;:
  &quot;Cervical cancer stage at diagnosis Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Stage IV&quot;
/* End of Stage IV */

/*
@dataElement: HIV.D.DE718 - Date of treatment for cervical precancer lesions
@activity: HIV.D28 Offer other services
@description: Date of treatment for cervical precancer lesions
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date of treatment for cervical precancer lesions&quot;:
  [Observation: Concepts.&quot;Date of treatment for cervical precancer lesions&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date of treatment for cervical precancer lesions Value&quot;:
  &quot;Date of treatment for cervical precancer lesions&quot; O
  return O.value
/* End of Date of treatment for cervical precancer lesions */

/*
@dataElement: HIV.D.DE730 - Invasive cervical cancer treatment episode
@activity: HIV.D28 Offer other services
@description: Client's lifetime number of treatments for invasive cervical cancer
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invasive cervical cancer treatment episode&quot;:
  [Observation: Concepts.&quot;Invasive cervical cancer treatment episode&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Invasive cervical cancer treatment episode Value&quot;:
  &quot;Invasive cervical cancer treatment episode&quot; O
  return O.value
/* End of Invasive cervical cancer treatment episode */

/*
@dataElement: HIV.D.DE731 - Invasive cervical cancer treatment method
@activity: HIV.D28 Offer other services
@description: Invasive cervical cancer treatment method
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invasive cervical cancer treatment method&quot;:
  exists &quot;Invasive cervical cancer treatment method Observation&quot;
define &quot;Invasive cervical cancer treatment method Observation&quot;:
  [Observation: Concepts.&quot;Invasive cervical cancer treatment method&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Invasive cervical cancer treatment method */

/*
@dataElement: HIV.D.DE732 - Conization
@activity: HIV.D28 Offer other services
@description: Invasive cervical cancer treatment method is a conization
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Conization&quot;:
  exists &quot;Conization Condition&quot;
    or exists &quot;Conization Observation&quot;
define &quot;Conization Condition&quot;:
  [Condition: Concepts.&quot;Conization&quot;]
define &quot;Conization Observation&quot;:
  &quot;Invasive cervical cancer treatment method Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Conization&quot;
/* End of Conization */

/*
@dataElement: HIV.D.DE733 - Trachelectomy
@activity: HIV.D28 Offer other services
@description: Invasive cervical cancer treatment method is a trachelectomy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Trachelectomy&quot;:
  exists &quot;Trachelectomy Condition&quot;
    or exists &quot;Trachelectomy Observation&quot;
define &quot;Trachelectomy Condition&quot;:
  [Condition: Concepts.&quot;Trachelectomy&quot;]
define &quot;Trachelectomy Observation&quot;:
  &quot;Invasive cervical cancer treatment method Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Trachelectomy&quot;
/* End of Trachelectomy */

/*
@dataElement: HIV.D.DE734 - Hysterectomy
@activity: HIV.D28 Offer other services
@description: Invasive cervical cancer treatment method is a hysterectomy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Hysterectomy&quot;:
  exists &quot;Hysterectomy Condition&quot;
    or exists &quot;Hysterectomy Observation&quot;
define &quot;Hysterectomy Condition&quot;:
  [Condition: Concepts.&quot;Hysterectomy&quot;]
define &quot;Hysterectomy Observation&quot;:
  &quot;Invasive cervical cancer treatment method Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Hysterectomy&quot;
/* End of Hysterectomy */

/*
@dataElement: HIV.D.DE735 - Management of invasive cervical cancer
@activity: HIV.D28 Offer other services
@description: Invasive cervical cancer treatment method is management of invasive cervical cancer
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Management of invasive cervical cancer&quot;:
  exists &quot;Management of invasive cervical cancer Condition&quot;
    or exists &quot;Management of invasive cervical cancer Observation&quot;
define &quot;Management of invasive cervical cancer Condition&quot;:
  [Condition: Concepts.&quot;Management of invasive cervical cancer&quot;]
define &quot;Management of invasive cervical cancer Observation&quot;:
  &quot;Invasive cervical cancer treatment method Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Management of invasive cervical cancer&quot;
/* End of Management of invasive cervical cancer */

/*
@dataElement: HIV.D.DE736 - Radiotherapy
@activity: HIV.D28 Offer other services
@description: Invasive cervical cancer treatment method is a radiotherapy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Radiotherapy&quot;:
  exists &quot;Radiotherapy Condition&quot;
    or exists &quot;Radiotherapy Observation&quot;
define &quot;Radiotherapy Condition&quot;:
  [Condition: Concepts.&quot;Radiotherapy&quot;]
define &quot;Radiotherapy Observation&quot;:
  &quot;Invasive cervical cancer treatment method Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Radiotherapy&quot;
/* End of Radiotherapy */

/*
@dataElement: HIV.D.DE737 - Chemotherapy
@activity: HIV.D28 Offer other services
@description: Invasive cervical cancer treatment method is a chemotherapy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Chemotherapy&quot;:
  exists &quot;Chemotherapy Condition&quot;
    or exists &quot;Chemotherapy Observation&quot;
define &quot;Chemotherapy Condition&quot;:
  [Condition: Concepts.&quot;Chemotherapy&quot;]
define &quot;Chemotherapy Observation&quot;:
  &quot;Invasive cervical cancer treatment method Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Chemotherapy&quot;
/* End of Chemotherapy */

/*
@dataElement: HIV.D.DE738 - Chemoradiation
@activity: HIV.D28 Offer other services
@description: Invasive cervical cancer treatment method is a chemoradiation
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Chemoradiation&quot;:
  exists &quot;Chemoradiation Condition&quot;
    or exists &quot;Chemoradiation Observation&quot;
define &quot;Chemoradiation Condition&quot;:
  [Condition: Concepts.&quot;Chemoradiation&quot;]
define &quot;Chemoradiation Observation&quot;:
  &quot;Invasive cervical cancer treatment method Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Chemoradiation&quot;
/* End of Chemoradiation */

/*
@dataElement: HIV.D.DE739 - Other
@activity: HIV.D28 Offer other services
@description: Invasive cervical cancer treatment method is a not in list
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other D.DE739&quot;:
  exists &quot;Other D.DE739 Condition&quot;
    or exists &quot;Other D.DE739 Observation&quot;
define &quot;Other D.DE739 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.D.DE739&quot;]
define &quot;Other D.DE739 Observation&quot;:
  &quot;Invasive cervical cancer treatment method Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.D.DE739&quot;
/* End of Other D.DE739 */

/*
@dataElement: HIV.D.DE745 - Cervical cancer screening interval amongst WLHIV
@activity: HIV.D28 Offer other services
@description: Country-specific interval between cancer screenings amongst women living with HIV (typically 3 or 5 years)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cervical cancer screening interval amongst WLHIV&quot;:
  [Observation: Concepts.&quot;Cervical cancer screening interval amongst WLHIV&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Cervical cancer screening interval amongst WLHIV Value&quot;:
  &quot;Cervical cancer screening interval amongst WLHIV&quot; O
  return O.value
/* End of Cervical cancer screening interval amongst WLHIV */

/*
@dataElement: HIV.D.DE753 - Offer other clinical services
@activity: HIV.D28 Offer other services
@description: Other clinical services offered or referrals given to the client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Offer other clinical services D.DE753&quot;:
  exists &quot;Offer other clinical services D.DE753 Observation&quot;
define &quot;Offer other clinical services D.DE753 Observation&quot;:
  [Observation: Concepts.&quot;Offer other clinical services - HIV.D.DE753&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Offer other clinical services D.DE753 */

/*
@dataElement: HIV.D.DE754 - Assessment and provision of vaccinations
@activity: HIV.D28 Offer other services
@description: Assessment and provision of vaccinations, such as for people from Key population member type, pregnant women and infants; and, where appropriate, tetanus vaccination for adolescent boys and men receiving VMMC
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assessment and provision of vaccinations D.DE754&quot;:
  exists &quot;Assessment and provision of vaccinations D.DE754 Condition&quot;
    or exists &quot;Assessment and provision of vaccinations D.DE754 Observation&quot;
define &quot;Assessment and provision of vaccinations D.DE754 Condition&quot;:
  [Condition: Concepts.&quot;Assessment and provision of vaccinations - HIV.D.DE754&quot;]
define &quot;Assessment and provision of vaccinations D.DE754 Observation&quot;:
  &quot;Offer other clinical services D.DE753 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Assessment and provision of vaccinations - HIV.D.DE754&quot;
/* End of Assessment and provision of vaccinations D.DE754 */

/*
@dataElement: HIV.D.DE755 - Hepatitis B HBV and hepatitis C virus HCV testing and treatment
@activity: HIV.D28 Offer other services
@description: Offer or refer for HBV and/or HCV testing and treatment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment&quot;:
  exists &quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment Condition&quot;
    or exists &quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment Observation&quot;
define &quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment Condition&quot;:
  [Condition: Concepts.&quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment&quot;]
define &quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment Observation&quot;:
  &quot;Offer other clinical services D.DE753 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Hepatitis B HBV and hepatitis C virus HCV testing and treatment&quot;
/* End of Hepatitis B HBV and hepatitis C virus HCV testing and treatment */

/*
@dataElement: HIV.D.DE756 - Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia
@activity: HIV.D28 Offer other services
@description: Offer or refer for co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia D.DE756&quot;:
  exists &quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia D.DE756 Condition&quot;
    or exists &quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia D.DE756 Observation&quot;
define &quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia D.DE756 Condition&quot;:
  [Condition: Concepts.&quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia - HIV.D.DE756&quot;]
define &quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia D.DE756 Observation&quot;:
  &quot;Offer other clinical services D.DE753 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia - HIV.D.DE756&quot;
/* End of Co-trimoxazole chemoprophylaxis to prevent pneumocystis carinii pneumonia D.DE756 */

/*
@dataElement: HIV.D.DE757 - Intensified TB case finding and linkage to TB treatment
@activity: HIV.D28 Offer other services
@description: Offer or refer for intensified TB case finding and linkage to TB treatment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Intensified TB case finding and linkage to TB treatment D.DE757&quot;:
  exists &quot;Intensified TB case finding and linkage to TB treatment D.DE757 Condition&quot;
    or exists &quot;Intensified TB case finding and linkage to TB treatment D.DE757 Observation&quot;
define &quot;Intensified TB case finding and linkage to TB treatment D.DE757 Condition&quot;:
  [Condition: Concepts.&quot;Intensified TB case finding and linkage to TB treatment - HIV.D.DE757&quot;]
define &quot;Intensified TB case finding and linkage to TB treatment D.DE757 Observation&quot;:
  &quot;Offer other clinical services D.DE753 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Intensified TB case finding and linkage to TB treatment - HIV.D.DE757&quot;
/* End of Intensified TB case finding and linkage to TB treatment D.DE757 */

/*
@dataElement: HIV.D.DE758 - Provision of isoniazid preventive therapy if person does not have TB
@activity: HIV.D28 Offer other services
@description: Offer or refer for provision of isoniazid preventive therapy if person does not have TB
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Provision of isoniazid preventive therapy if person does not have TB D.DE758&quot;:
  exists &quot;Provision of isoniazid preventive therapy if person does not have TB D.DE758 Condition&quot;
    or exists &quot;Provision of isoniazid preventive therapy if person does not have TB D.DE758 Observation&quot;
define &quot;Provision of isoniazid preventive therapy if person does not have TB D.DE758 Condition&quot;:
  [Condition: Concepts.&quot;Provision of isoniazid preventive therapy if person does not have TB - HIV.D.DE758&quot;]
define &quot;Provision of isoniazid preventive therapy if person does not have TB D.DE758 Observation&quot;:
  &quot;Offer other clinical services D.DE753 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Provision of isoniazid preventive therapy if person does not have TB - HIV.D.DE758&quot;
/* End of Provision of isoniazid preventive therapy if person does not have TB D.DE758 */

/*
@dataElement: HIV.D.DE759 - Malaria prevention such as bed nets and prophylaxis, depending on epidemiology
@activity: HIV.D28 Offer other services
@description: Offer or refer for malaria prevention (such as bed nets and prophylaxis), depending on epidemiology
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology D.DE759&quot;:
  exists &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology D.DE759 Condition&quot;
    or exists &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology D.DE759 Observation&quot;
define &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology D.DE759 Condition&quot;:
  [Condition: Concepts.&quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology - HIV.D.DE759&quot;]
define &quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology D.DE759 Observation&quot;:
  &quot;Offer other clinical services D.DE753 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Malaria prevention such as bed nets and prophylaxis, depending on epidemiology - HIV.D.DE759&quot;
/* End of Malaria prevention such as bed nets and prophylaxis, depending on epidemiology D.DE759 */

/*
@dataElement: HIV.D.DE760 - Eligible for DSD ART
@activity: HIV.D21 Determine regimen and treatment options
@description: Client is eligible for differentiated service delivery (DSD) for ART
*/

define &quot;Eligible for DSD ART&quot;:
  [Observation: Concepts.&quot;Eligible for DSD ART&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Eligible for DSD ART */

/*
@dataElement: HIV.D.DE761 - Date DSD ART eligibility assessed
@activity: HIV.D21 Determine regimen and treatment options
@description: Date client was assessed for eligibility for differentiated service delivery (DSD) for ART
*/

define &quot;Date DSD ART eligibility assessed&quot;:
  [Procedure: CustomConcepts.&quot;DSD ART eligibility assessed&quot;] P
    where P.status in { 'completed' }
  return P.performed.toInterval()
/* End of Date DSD ART eligibility assessed */

/*
@dataElement: HIV.D.DE762 - Currently enrolled in DSD ART model
@activity: HIV.D21 Determine regimen and treatment options
@description: Client currently enrolled in differentiated service delivery (DSD) ART model
*/

define &quot;Currently enrolled in DSD ART model&quot;:
  [EpisodeOfCare] EOC
    where exists(EOC.type T where T ~ Concepts.&quot;Currently enrolled in DSD ART model&quot;)
  
/* End of Currently enrolled in DSD ART model */

/*
@dataElement: HIV.D.DE763 - DSD ART start date
@activity: HIV.D21 Determine regimen and treatment options
@description: Date client started on differentiated service delivery (DSD) for ART
*/

define &quot;DSD ART start date&quot;:
  flatten{&quot;DSD ART status&quot;,&quot;DSD ART statusHistory&quot;.statusHistory.period}

define &quot;DSD ART status&quot;:
    [EpisodeOfCare] EOC
    where exists(EOC.type T where T ~ Concepts.&quot;Currently enrolled in DSD ART model&quot;)
      and EOC.status = 'finished'
    return EOC.period

define &quot;DSD ART statusHistory&quot;:
    [EpisodeOfCare] EOC
    where exists(EOC.type T where T ~ Concepts.&quot;Currently enrolled in DSD ART model&quot;) 
    and (exists (
      EOC.statusHistory H
      where H.status = 'finished'
      and H.period is not null))
/* End of DSD ART start date */

/*
@dataElement: HIV.D.DE764 - DSD ART models
@activity: HIV.D21 Determine regimen and treatment options
@description: Type of DSD ART model client is enrolled in (country-specific)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;DSD ART models&quot;:
  exists &quot;DSD ART models Observation&quot;
define &quot;DSD ART models Observation&quot;:
  [Observation: Concepts.&quot;DSD ART models&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of DSD ART models */

/*
@dataElement: HIV.D.DE765 - Fast track ART refill
@activity: HIV.D21 Determine regimen and treatment options
@description: Client is enrolled in fast track ART refill (DSD ART model)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Fast track ART refill&quot;:
  exists &quot;Fast track ART refill Condition&quot;
    or exists &quot;Fast track ART refill Observation&quot;
define &quot;Fast track ART refill Condition&quot;:
  [Condition: Concepts.&quot;Fast track ART refill&quot;]
define &quot;Fast track ART refill Observation&quot;:
  &quot;DSD ART models Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Fast track ART refill&quot;
/* End of Fast track ART refill */

/*
@dataElement: HIV.D.DE766 - Facility adherence club
@activity: HIV.D21 Determine regimen and treatment options
@description: Client is enrolled in facility adherence club (DSD ART model)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Facility adherence club&quot;:
  exists &quot;Facility adherence club Condition&quot;
    or exists &quot;Facility adherence club Observation&quot;
define &quot;Facility adherence club Condition&quot;:
  [Condition: Concepts.&quot;Facility adherence club&quot;]
define &quot;Facility adherence club Observation&quot;:
  &quot;DSD ART models Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Facility adherence club&quot;
/* End of Facility adherence club */

/*
@dataElement: HIV.D.DE767 - Community ART distribution point
@activity: HIV.D21 Determine regimen and treatment options
@description: Client is enrolled in community ART distribution point (DSD ART model)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Community ART distribution point&quot;:
  exists &quot;Community ART distribution point Condition&quot;
    or exists &quot;Community ART distribution point Observation&quot;
define &quot;Community ART distribution point Condition&quot;:
  [Condition: Concepts.&quot;Community ART distribution point&quot;]
define &quot;Community ART distribution point Observation&quot;:
  &quot;DSD ART models Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Community ART distribution point&quot;
/* End of Community ART distribution point */

/*
@dataElement: HIV.D.DE768 - CHW/peer educator community ART group
@activity: HIV.D21 Determine regimen and treatment options
@description: Client is enrolled in community health worker/peer educator community ART group (DSD ART model)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;CHW/peer educator community ART group&quot;:
  exists &quot;CHW/peer educator community ART group Condition&quot;
    or exists &quot;CHW/peer educator community ART group Observation&quot;
define &quot;CHW/peer educator community ART group Condition&quot;:
  [Condition: Concepts.&quot;CHW/peer educator community ART group&quot;]
define &quot;CHW/peer educator community ART group Observation&quot;:
  &quot;DSD ART models Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;CHW/peer educator community ART group&quot;
/* End of CHW/peer educator community ART group */

/*
@dataElement: HIV.D.DE769 - Patient/client community ART group
@activity: HIV.D21 Determine regimen and treatment options
@description: Client is enrolled in patient/client community ART group (DSD ART model)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Patient/client community ART group&quot;:
  exists &quot;Patient/client community ART group Condition&quot;
    or exists &quot;Patient/client community ART group Observation&quot;
define &quot;Patient/client community ART group Condition&quot;:
  [Condition: Concepts.&quot;Patient/client community ART group&quot;]
define &quot;Patient/client community ART group Observation&quot;:
  &quot;DSD ART models Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Patient/client community ART group&quot;
/* End of Patient/client community ART group */

/*
@dataElement: HIV.D.DE770 - Other DSD ART model
@activity: HIV.D21 Determine regimen and treatment options
@description: Client is enrolled in another DSD ART model
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other DSD ART model&quot;:
  exists &quot;Other DSD ART model Condition&quot;
    or exists &quot;Other DSD ART model Observation&quot;
define &quot;Other DSD ART model Condition&quot;:
  [Condition: Concepts.&quot;Other DSD ART model&quot;]
define &quot;Other DSD ART model Observation&quot;:
  &quot;DSD ART models Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other DSD ART model&quot;
/* End of Other DSD ART model */

/*
@dataElement: HIV.D.DE778 - Syndrome/STI diagnosed
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Syndrome or STI for which client is diagnosed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Syndrome/STI diagnosed D.DE778&quot;:
  exists &quot;Syndrome/STI diagnosed D.DE778 Observation&quot;
define &quot;Syndrome/STI diagnosed D.DE778 Observation&quot;:
  [Observation: Concepts.&quot;Syndrome/STI diagnosed - HIV.D.DE778&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Syndrome/STI diagnosed D.DE778 */

/*
@dataElement: HIV.D.DE779 - Urethral discharge syndrome
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Client diagnosed with urethral discharge syndrome
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Urethral discharge syndrome D.DE779&quot;:
  exists &quot;Urethral discharge syndrome D.DE779 Condition&quot;
    or exists &quot;Urethral discharge syndrome D.DE779 Observation&quot;
define &quot;Urethral discharge syndrome D.DE779 Condition&quot;:
  [Condition: Concepts.&quot;Urethral discharge syndrome - HIV.D.DE779&quot;]
define &quot;Urethral discharge syndrome D.DE779 Observation&quot;:
  &quot;Syndrome/STI diagnosed D.DE778 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Urethral discharge syndrome - HIV.D.DE779&quot;
/* End of Urethral discharge syndrome D.DE779 */

/*
@dataElement: HIV.D.DE780 - Vaginal discharge syndrome
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Client diagnosed with vaginal discharge syndrome
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Vaginal discharge syndrome D.DE780&quot;:
  exists &quot;Vaginal discharge syndrome D.DE780 Condition&quot;
    or exists &quot;Vaginal discharge syndrome D.DE780 Observation&quot;
define &quot;Vaginal discharge syndrome D.DE780 Condition&quot;:
  [Condition: Concepts.&quot;Vaginal discharge syndrome - HIV.D.DE780&quot;]
define &quot;Vaginal discharge syndrome D.DE780 Observation&quot;:
  &quot;Syndrome/STI diagnosed D.DE778 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Vaginal discharge syndrome - HIV.D.DE780&quot;
/* End of Vaginal discharge syndrome D.DE780 */

/*
@dataElement: HIV.D.DE781 - Lower Abdominal pain 
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Client diagnosed with lower abdominal pain
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Lower Abdominal pain  D.DE781&quot;:
  exists &quot;Lower Abdominal pain  D.DE781 Condition&quot;
    or exists &quot;Lower Abdominal pain  D.DE781 Observation&quot;
define &quot;Lower Abdominal pain  D.DE781 Condition&quot;:
  [Condition: Concepts.&quot;Lower Abdominal pain  - HIV.D.DE781&quot;]
define &quot;Lower Abdominal pain  D.DE781 Observation&quot;:
  &quot;Syndrome/STI diagnosed D.DE778 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Lower Abdominal pain  - HIV.D.DE781&quot;
/* End of Lower Abdominal pain  D.DE781 */

/*
@dataElement: HIV.D.DE782 - Genital ulcer disease syndrome
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Client diagnosed with genital ulcer disease syndrome
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Genital ulcer disease syndrome D.DE782&quot;:
  exists &quot;Genital ulcer disease syndrome D.DE782 Condition&quot;
    or exists &quot;Genital ulcer disease syndrome D.DE782 Observation&quot;
define &quot;Genital ulcer disease syndrome D.DE782 Condition&quot;:
  [Condition: Concepts.&quot;Genital ulcer disease syndrome - HIV.D.DE782&quot;]
define &quot;Genital ulcer disease syndrome D.DE782 Observation&quot;:
  &quot;Syndrome/STI diagnosed D.DE778 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Genital ulcer disease syndrome - HIV.D.DE782&quot;
/* End of Genital ulcer disease syndrome D.DE782 */

/*
@dataElement: HIV.D.DE783 - Anorectal discharge
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Client diagnosed with anorectal discharge
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Anorectal discharge D.DE783&quot;:
  exists &quot;Anorectal discharge D.DE783 Condition&quot;
    or exists &quot;Anorectal discharge D.DE783 Observation&quot;
define &quot;Anorectal discharge D.DE783 Condition&quot;:
  [Condition: Concepts.&quot;Anorectal discharge - HIV.D.DE783&quot;]
define &quot;Anorectal discharge D.DE783 Observation&quot;:
  &quot;Syndrome/STI diagnosed D.DE778 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Anorectal discharge - HIV.D.DE783&quot;
/* End of Anorectal discharge D.DE783 */

/*
@dataElement: HIV.D.DE784 - Sent for testing
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Specimen sent for testing
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sent for testing D.DE784&quot;:
  exists &quot;Sent for testing D.DE784 Condition&quot;
    or exists &quot;Sent for testing D.DE784 Observation&quot;
define &quot;Sent for testing D.DE784 Condition&quot;:
  [Condition: Concepts.&quot;Sent for testing - HIV.D.DE784&quot;]
define &quot;Sent for testing D.DE784 Observation&quot;:
  &quot;Syndrome/STI diagnosed D.DE778 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Sent for testing - HIV.D.DE784&quot;
/* End of Sent for testing D.DE784 */

/*
@dataElement: HIV.D.DE785 - Other
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Other syndrome/STI diagnosed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other D.DE785&quot;:
  exists &quot;Other D.DE785 Condition&quot;
    or exists &quot;Other D.DE785 Observation&quot;
define &quot;Other D.DE785 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.D.DE785&quot;]
define &quot;Other D.DE785 Observation&quot;:
  &quot;Syndrome/STI diagnosed D.DE778 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.D.DE785&quot;
/* End of Other D.DE785 */

/*
@dataElement: HIV.D.DE787 - Any STI syndrome diagnosed
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Was the client diagnosed with any of the five STI syndromes during this visit?
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Any STI syndrome diagnosed D.DE787&quot;:
  exists &quot;Any STI syndrome diagnosed D.DE787 Observation&quot;
define &quot;Any STI syndrome diagnosed D.DE787 Observation&quot;:
  [Observation: Concepts.&quot;Any STI syndrome diagnosed - HIV.D.DE787&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Any STI syndrome diagnosed D.DE787 */

/*
@dataElement: HIV.D.DE801 - Syphilis test date
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Date of syphilis test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Syphilis test date D.DE801&quot;:
  [Observation: Concepts.&quot;Syphilis test date - HIV.D.DE801&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Syphilis test date D.DE801 Value&quot;:
  &quot;Syphilis test date D.DE801&quot; O
  return O.value
/* End of Syphilis test date D.DE801 */

/*
@dataElement: HIV.D.DE802 - Syphilis test result
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Result from syphilis test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Syphilis test result D.DE802&quot;:
  exists &quot;Syphilis test result D.DE802 Observation&quot;
define &quot;Syphilis test result D.DE802 Observation&quot;:
  [Observation: Concepts.&quot;Syphilis test result - HIV.D.DE802&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Syphilis test result D.DE802 */

/*
@dataElement: HIV.D.DE803 - Positive
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Test result is positive for syphilis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Positive D.DE803&quot;:
  exists &quot;Positive D.DE803 Condition&quot;
    or exists &quot;Positive D.DE803 Observation&quot;
define &quot;Positive D.DE803 Condition&quot;:
  [Condition: Concepts.&quot;Positive - HIV.D.DE803&quot;]
define &quot;Positive D.DE803 Observation&quot;:
  &quot;Syphilis test result D.DE802 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Positive - HIV.D.DE803&quot;
/* End of Positive D.DE803 */

/*
@dataElement: HIV.D.DE804 - Negative
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Test result is negative for syphilis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Negative D.DE804&quot;:
  exists &quot;Negative D.DE804 Condition&quot;
    or exists &quot;Negative D.DE804 Observation&quot;
define &quot;Negative D.DE804 Condition&quot;:
  [Condition: Concepts.&quot;Negative - HIV.D.DE804&quot;]
define &quot;Negative D.DE804 Observation&quot;:
  &quot;Syphilis test result D.DE802 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Negative - HIV.D.DE804&quot;
/* End of Negative D.DE804 */

/*
@dataElement: HIV.D.DE805 - Inconclusive
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Test result is inconclusive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Inconclusive D.DE805&quot;:
  exists &quot;Inconclusive D.DE805 Condition&quot;
    or exists &quot;Inconclusive D.DE805 Observation&quot;
define &quot;Inconclusive D.DE805 Condition&quot;:
  [Condition: Concepts.&quot;Inconclusive - HIV.D.DE805&quot;]
define &quot;Inconclusive D.DE805 Observation&quot;:
  &quot;Syphilis test result D.DE802 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Inconclusive - HIV.D.DE805&quot;
/* End of Inconclusive D.DE805 */

/*
@dataElement: HIV.D.DE806 - Syphilis treatment start date
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Date of initiation of syphilis treatment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Syphilis treatment start date D.DE806&quot;:
  [Observation: Concepts.&quot;Syphilis treatment start date - HIV.D.DE806&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Syphilis treatment start date D.DE806 Value&quot;:
  &quot;Syphilis treatment start date D.DE806&quot; O
  return O.value
/* End of Syphilis treatment start date D.DE806 */

/*
@dataElement: HIV.D.DE807 - Gonorrhoea test date
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Date of Gonorrhoea test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Gonorrhoea test date D.DE807&quot;:
  [Observation: Concepts.&quot;Gonorrhoea test date - HIV.D.DE807&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Gonorrhoea test date D.DE807 Value&quot;:
  &quot;Gonorrhoea test date D.DE807&quot; O
  return O.value
/* End of Gonorrhoea test date D.DE807 */

/*
@dataElement: HIV.D.DE808 - Gonorrhoea test result
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Result from Gonorrhoea test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Gonorrhoea test result D.DE808&quot;:
  exists &quot;Gonorrhoea test result D.DE808 Observation&quot;
define &quot;Gonorrhoea test result D.DE808 Observation&quot;:
  [Observation: Concepts.&quot;Gonorrhoea test result - HIV.D.DE808&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Gonorrhoea test result D.DE808 */

/*
@dataElement: HIV.D.DE809 - Positive
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Test result is positive for Neisseria gonorrhoeae
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Positive D.DE809&quot;:
  exists &quot;Positive D.DE809 Condition&quot;
    or exists &quot;Positive D.DE809 Observation&quot;
define &quot;Positive D.DE809 Condition&quot;:
  [Condition: Concepts.&quot;Positive - HIV.D.DE809&quot;]
define &quot;Positive D.DE809 Observation&quot;:
  &quot;Gonorrhoea test result D.DE808 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Positive - HIV.D.DE809&quot;
/* End of Positive D.DE809 */

/*
@dataElement: HIV.D.DE810 - Negative
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Test result is negative for Neisseria gonorrhoeae
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Negative D.DE810&quot;:
  exists &quot;Negative D.DE810 Condition&quot;
    or exists &quot;Negative D.DE810 Observation&quot;
define &quot;Negative D.DE810 Condition&quot;:
  [Condition: Concepts.&quot;Negative - HIV.D.DE810&quot;]
define &quot;Negative D.DE810 Observation&quot;:
  &quot;Gonorrhoea test result D.DE808 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Negative - HIV.D.DE810&quot;
/* End of Negative D.DE810 */

/*
@dataElement: HIV.D.DE811 - Inconclusive
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Test result is inconclusive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Inconclusive D.DE811&quot;:
  exists &quot;Inconclusive D.DE811 Condition&quot;
    or exists &quot;Inconclusive D.DE811 Observation&quot;
define &quot;Inconclusive D.DE811 Condition&quot;:
  [Condition: Concepts.&quot;Inconclusive - HIV.D.DE811&quot;]
define &quot;Inconclusive D.DE811 Observation&quot;:
  &quot;Gonorrhoea test result D.DE808 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Inconclusive - HIV.D.DE811&quot;
/* End of Inconclusive D.DE811 */

/*
@dataElement: HIV.D.DE812 - Gonorrhoea treatment start date
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Date of initiation of Gonorrhoea treatment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Gonorrhoea treatment start date D.DE812&quot;:
  [Observation: Concepts.&quot;Gonorrhoea treatment start date - HIV.D.DE812&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Gonorrhoea treatment start date D.DE812 Value&quot;:
  &quot;Gonorrhoea treatment start date D.DE812&quot; O
  return O.value
/* End of Gonorrhoea treatment start date D.DE812 */

/*
@dataElement: HIV.D.DE813 - Type of specimen
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Type of specimen to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Type of specimen D.DE813&quot;:
  exists &quot;Type of specimen D.DE813 Observation&quot;
define &quot;Type of specimen D.DE813 Observation&quot;:
  [Observation: Concepts.&quot;Type of specimen - HIV.D.DE813&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Type of specimen D.DE813 */

/*
@dataElement: HIV.D.DE814 - Blood
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Blood specimen to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Blood D.DE814&quot;:
  exists &quot;Blood D.DE814 Condition&quot;
    or exists &quot;Blood D.DE814 Observation&quot;
define &quot;Blood D.DE814 Condition&quot;:
  [Condition: Concepts.&quot;Blood - HIV.D.DE814&quot;]
define &quot;Blood D.DE814 Observation&quot;:
  &quot;Type of specimen D.DE813 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Blood - HIV.D.DE814&quot;
/* End of Blood D.DE814 */

/*
@dataElement: HIV.D.DE815 - Urine
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Urine specimen to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Urine D.DE815&quot;:
  exists &quot;Urine D.DE815 Condition&quot;
    or exists &quot;Urine D.DE815 Observation&quot;
define &quot;Urine D.DE815 Condition&quot;:
  [Condition: Concepts.&quot;Urine - HIV.D.DE815&quot;]
define &quot;Urine D.DE815 Observation&quot;:
  &quot;Type of specimen D.DE813 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Urine - HIV.D.DE815&quot;
/* End of Urine D.DE815 */

/*
@dataElement: HIV.D.DE816 - Cervical or vaginal swab
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Cervical or vaginal swab to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cervical or vaginal swab D.DE816&quot;:
  exists &quot;Cervical or vaginal swab D.DE816 Condition&quot;
    or exists &quot;Cervical or vaginal swab D.DE816 Observation&quot;
define &quot;Cervical or vaginal swab D.DE816 Condition&quot;:
  [Condition: Concepts.&quot;Cervical or vaginal swab - HIV.D.DE816&quot;]
define &quot;Cervical or vaginal swab D.DE816 Observation&quot;:
  &quot;Type of specimen D.DE813 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Cervical or vaginal swab - HIV.D.DE816&quot;
/* End of Cervical or vaginal swab D.DE816 */

/*
@dataElement: HIV.D.DE817 - Urethral or penile swab
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Urethral or penile swab to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Urethral or penile swab D.DE817&quot;:
  exists &quot;Urethral or penile swab D.DE817 Condition&quot;
    or exists &quot;Urethral or penile swab D.DE817 Observation&quot;
define &quot;Urethral or penile swab D.DE817 Condition&quot;:
  [Condition: Concepts.&quot;Urethral or penile swab - HIV.D.DE817&quot;]
define &quot;Urethral or penile swab D.DE817 Observation&quot;:
  &quot;Type of specimen D.DE813 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Urethral or penile swab - HIV.D.DE817&quot;
/* End of Urethral or penile swab D.DE817 */

/*
@dataElement: HIV.D.DE818 - Rectal swab
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Rectal swab to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Rectal swab D.DE818&quot;:
  exists &quot;Rectal swab D.DE818 Condition&quot;
    or exists &quot;Rectal swab D.DE818 Observation&quot;
define &quot;Rectal swab D.DE818 Condition&quot;:
  [Condition: Concepts.&quot;Rectal swab - HIV.D.DE818&quot;]
define &quot;Rectal swab D.DE818 Observation&quot;:
  &quot;Type of specimen D.DE813 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Rectal swab - HIV.D.DE818&quot;
/* End of Rectal swab D.DE818 */

/*
@dataElement: HIV.D.DE819 - Other
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Other specimen type to be collected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other D.DE819&quot;:
  exists &quot;Other D.DE819 Condition&quot;
    or exists &quot;Other D.DE819 Observation&quot;
define &quot;Other D.DE819 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.D.DE819&quot;]
define &quot;Other D.DE819 Observation&quot;:
  &quot;Type of specimen D.DE813 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.D.DE819&quot;
/* End of Other D.DE819 */

/*
@dataElement: HIV.D.DE828 - Neisseria gonorrhoeae test type
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Type of diagnostic test used for Neisseria gonorrhoeae
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Neisseria gonorrhoeae test type D.DE828&quot;:
  exists &quot;Neisseria gonorrhoeae test type D.DE828 Observation&quot;
define &quot;Neisseria gonorrhoeae test type D.DE828 Observation&quot;:
  [Observation: Concepts.&quot;Neisseria gonorrhoeae test type - HIV.D.DE828&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Neisseria gonorrhoeae test type D.DE828 */

/*
@dataElement: HIV.D.DE829 - NAAT
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Nucleic Acid Amplification Test (NAAT) used
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;NAAT D.DE829&quot;:
  exists &quot;NAAT D.DE829 Condition&quot;
    or exists &quot;NAAT D.DE829 Observation&quot;
define &quot;NAAT D.DE829 Condition&quot;:
  [Condition: Concepts.&quot;NAAT - HIV.D.DE829&quot;]
define &quot;NAAT D.DE829 Observation&quot;:
  &quot;Neisseria gonorrhoeae test type D.DE828 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;NAAT - HIV.D.DE829&quot;
/* End of NAAT D.DE829 */

/*
@dataElement: HIV.D.DE830 - POC Test
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Point-of-care (POC) test used
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;POC Test D.DE830&quot;:
  exists &quot;POC Test D.DE830 Condition&quot;
    or exists &quot;POC Test D.DE830 Observation&quot;
define &quot;POC Test D.DE830 Condition&quot;:
  [Condition: Concepts.&quot;POC Test - HIV.D.DE830&quot;]
define &quot;POC Test D.DE830 Observation&quot;:
  &quot;Neisseria gonorrhoeae test type D.DE828 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;POC Test - HIV.D.DE830&quot;
/* End of POC Test D.DE830 */

/*
@dataElement: HIV.D.DE831 - Culture
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Culture test used
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Culture D.DE831&quot;:
  exists &quot;Culture D.DE831 Condition&quot;
    or exists &quot;Culture D.DE831 Observation&quot;
define &quot;Culture D.DE831 Condition&quot;:
  [Condition: Concepts.&quot;Culture - HIV.D.DE831&quot;]
define &quot;Culture D.DE831 Observation&quot;:
  &quot;Neisseria gonorrhoeae test type D.DE828 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Culture - HIV.D.DE831&quot;
/* End of Culture D.DE831 */

/*
@dataElement: HIV.D.DE832 - Microscopy
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Microscopy test used
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Microscopy D.DE832&quot;:
  exists &quot;Microscopy D.DE832 Condition&quot;
    or exists &quot;Microscopy D.DE832 Observation&quot;
define &quot;Microscopy D.DE832 Condition&quot;:
  [Condition: Concepts.&quot;Microscopy - HIV.D.DE832&quot;]
define &quot;Microscopy D.DE832 Observation&quot;:
  &quot;Neisseria gonorrhoeae test type D.DE828 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Microscopy - HIV.D.DE832&quot;
/* End of Microscopy D.DE832 */

/*
@dataElement: HIV.D.DE833 - Other
@activity: HIV.D26 Offer sexual and reproductive health services
@description: Other type of test used
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other D.DE833&quot;:
  exists &quot;Other D.DE833 Condition&quot;
    or exists &quot;Other D.DE833 Observation&quot;
define &quot;Other D.DE833 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.D.DE833&quot;]
define &quot;Other D.DE833 Observation&quot;:
  &quot;Neisseria gonorrhoeae test type D.DE828 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.D.DE833&quot;
/* End of Other D.DE833 */

/*
@dataElement: HIV.D.DE903 - Medication/drug
@activity: HIV.D21 Determine regimen and treatment options
@description: Current or considered medication/drug, for the purpose of determining drug interactions
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Medication/drug&quot;:
  exists &quot;Medication/drug Observation&quot;
define &quot;Medication/drug Observation&quot;:
  [Observation: Concepts.&quot;Medication/drug&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Medication/drug */

/*
@dataElement: HIV.D.DE904 - Rifampicin
@activity: HIV.D21 Determine regimen and treatment options
@description: Rifampicin currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Rifampicin&quot;:
  exists &quot;Rifampicin Condition&quot;
    or exists &quot;Rifampicin Observation&quot;
define &quot;Rifampicin Condition&quot;:
  [Condition: Concepts.&quot;Rifampicin&quot;]
define &quot;Rifampicin Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Rifampicin&quot;
/* End of Rifampicin */

/*
@dataElement: HIV.D.DE905 - Halofantrine
@activity: HIV.D21 Determine regimen and treatment options
@description: Halofantrine currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Halofantrine&quot;:
  exists &quot;Halofantrine Condition&quot;
    or exists &quot;Halofantrine Observation&quot;
define &quot;Halofantrine Condition&quot;:
  [Condition: Concepts.&quot;Halofantrine&quot;]
define &quot;Halofantrine Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Halofantrine&quot;
/* End of Halofantrine */

/*
@dataElement: HIV.D.DE906 - Lovastatin
@activity: HIV.D21 Determine regimen and treatment options
@description: Lovastatin currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Lovastatin&quot;:
  exists &quot;Lovastatin Condition&quot;
    or exists &quot;Lovastatin Observation&quot;
define &quot;Lovastatin Condition&quot;:
  [Condition: Concepts.&quot;Lovastatin&quot;]
define &quot;Lovastatin Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Lovastatin&quot;
/* End of Lovastatin */

/*
@dataElement: HIV.D.DE907 - Simvastatin
@activity: HIV.D21 Determine regimen and treatment options
@description: Simvastatin currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Simvastatin&quot;:
  exists &quot;Simvastatin Condition&quot;
    or exists &quot;Simvastatin Observation&quot;
define &quot;Simvastatin Condition&quot;:
  [Condition: Concepts.&quot;Simvastatin&quot;]
define &quot;Simvastatin Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Simvastatin&quot;
/* End of Simvastatin */

/*
@dataElement: HIV.D.DE908 - Hormonal contraception
@activity: HIV.D21 Determine regimen and treatment options
@description: Hormonal contraception currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Hormonal contraception&quot;:
  exists &quot;Hormonal contraception Condition&quot;
    or exists &quot;Hormonal contraception Observation&quot;
define &quot;Hormonal contraception Condition&quot;:
  [Condition: Concepts.&quot;Hormonal contraception&quot;]
define &quot;Hormonal contraception Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Hormonal contraception&quot;
/* End of Hormonal contraception */

/*
@dataElement: HIV.D.DE909 - Metformin
@activity: HIV.D21 Determine regimen and treatment options
@description: Metformin currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Metformin&quot;:
  exists &quot;Metformin Condition&quot;
    or exists &quot;Metformin Observation&quot;
define &quot;Metformin Condition&quot;:
  [Condition: Concepts.&quot;Metformin&quot;]
define &quot;Metformin Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Metformin&quot;
/* End of Metformin */

/*
@dataElement: HIV.D.DE910 - Astemizole
@activity: HIV.D21 Determine regimen and treatment options
@description: Astemizole currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Astemizole&quot;:
  exists &quot;Astemizole Condition&quot;
    or exists &quot;Astemizole Observation&quot;
define &quot;Astemizole Condition&quot;:
  [Condition: Concepts.&quot;Astemizole&quot;]
define &quot;Astemizole Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Astemizole&quot;
/* End of Astemizole */

/*
@dataElement: HIV.D.DE911 - Terfenadine
@activity: HIV.D21 Determine regimen and treatment options
@description: Terfenadine currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Terfenadine&quot;:
  exists &quot;Terfenadine Condition&quot;
    or exists &quot;Terfenadine Observation&quot;
define &quot;Terfenadine Condition&quot;:
  [Condition: Concepts.&quot;Terfenadine&quot;]
define &quot;Terfenadine Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Terfenadine&quot;
/* End of Terfenadine */

/*
@dataElement: HIV.D.DE912 - TDF
@activity: HIV.D21 Determine regimen and treatment options
@description: TDF currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TDF D.DE912&quot;:
  exists &quot;TDF D.DE912 Condition&quot;
    or exists &quot;TDF D.DE912 Observation&quot;
define &quot;TDF D.DE912 Condition&quot;:
  [Condition: Concepts.&quot;TDF - HIV.D.DE912&quot;]
define &quot;TDF D.DE912 Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;TDF - HIV.D.DE912&quot;
/* End of TDF D.DE912 */

/*
@dataElement: HIV.D.DE913 - Simeprevir
@activity: HIV.D21 Determine regimen and treatment options
@description: Simeprevir currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Simeprevir&quot;:
  exists &quot;Simeprevir Condition&quot;
    or exists &quot;Simeprevir Observation&quot;
define &quot;Simeprevir Condition&quot;:
  [Condition: Concepts.&quot;Simeprevir&quot;]
define &quot;Simeprevir Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Simeprevir&quot;
/* End of Simeprevir */

/*
@dataElement: HIV.D.DE914 - Ombitasvir + paritaprevir/ritonavir + dasabuvir
@activity: HIV.D21 Determine regimen and treatment options
@description: Ombitasvir + paritaprevir/ritonavir + dasabuvir currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Ombitasvir + paritaprevir/ritonavir + dasabuvir&quot;:
  exists &quot;Ombitasvir + paritaprevir/ritonavir + dasabuvir Condition&quot;
    or exists &quot;Ombitasvir + paritaprevir/ritonavir + dasabuvir Observation&quot;
define &quot;Ombitasvir + paritaprevir/ritonavir + dasabuvir Condition&quot;:
  [Condition: Concepts.&quot;Ombitasvir + paritaprevir/ritonavir + dasabuvir&quot;]
define &quot;Ombitasvir + paritaprevir/ritonavir + dasabuvir Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Ombitasvir + paritaprevir/ritonavir + dasabuvir&quot;
/* End of Ombitasvir + paritaprevir/ritonavir + dasabuvir */

/*
@dataElement: HIV.D.DE915 - Methadone
@activity: HIV.D21 Determine regimen and treatment options
@description: Methadone currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Methadone D.DE915&quot;:
  exists &quot;Methadone D.DE915 Condition&quot;
    or exists &quot;Methadone D.DE915 Observation&quot;
define &quot;Methadone D.DE915 Condition&quot;:
  [Condition: Concepts.&quot;Methadone - HIV.D.DE915&quot;]
define &quot;Methadone D.DE915 Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Methadone - HIV.D.DE915&quot;
/* End of Methadone D.DE915 */

/*
@dataElement: HIV.D.DE916 - Buprenorphine
@activity: HIV.D21 Determine regimen and treatment options
@description: Buprenorphine currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Buprenorphine D.DE916&quot;:
  exists &quot;Buprenorphine D.DE916 Condition&quot;
    or exists &quot;Buprenorphine D.DE916 Observation&quot;
define &quot;Buprenorphine D.DE916 Condition&quot;:
  [Condition: Concepts.&quot;Buprenorphine - HIV.D.DE916&quot;]
define &quot;Buprenorphine D.DE916 Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Buprenorphine - HIV.D.DE916&quot;
/* End of Buprenorphine D.DE916 */

/*
@dataElement: HIV.D.DE917 - Dofetilide
@activity: HIV.D21 Determine regimen and treatment options
@description: Dofetilide currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Dofetilide&quot;:
  exists &quot;Dofetilide Condition&quot;
    or exists &quot;Dofetilide Observation&quot;
define &quot;Dofetilide Condition&quot;:
  [Condition: Concepts.&quot;Dofetilide&quot;]
define &quot;Dofetilide Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Dofetilide&quot;
/* End of Dofetilide */

/*
@dataElement: HIV.D.DE918 - Carbamazepine
@activity: HIV.D21 Determine regimen and treatment options
@description: Carbamazepine currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Carbamazepine&quot;:
  exists &quot;Carbamazepine Condition&quot;
    or exists &quot;Carbamazepine Observation&quot;
define &quot;Carbamazepine Condition&quot;:
  [Condition: Concepts.&quot;Carbamazepine&quot;]
define &quot;Carbamazepine Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Carbamazepine&quot;
/* End of Carbamazepine */

/*
@dataElement: HIV.D.DE919 - Phenobarbital
@activity: HIV.D21 Determine regimen and treatment options
@description: Phenobarbital currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Phenobarbital&quot;:
  exists &quot;Phenobarbital Condition&quot;
    or exists &quot;Phenobarbital Observation&quot;
define &quot;Phenobarbital Condition&quot;:
  [Condition: Concepts.&quot;Phenobarbital&quot;]
define &quot;Phenobarbital Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Phenobarbital&quot;
/* End of Phenobarbital */

/*
@dataElement: HIV.D.DE920 - Phenytoin
@activity: HIV.D21 Determine regimen and treatment options
@description: Phenytoin currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Phenytoin&quot;:
  exists &quot;Phenytoin Condition&quot;
    or exists &quot;Phenytoin Observation&quot;
define &quot;Phenytoin Condition&quot;:
  [Condition: Concepts.&quot;Phenytoin&quot;]
define &quot;Phenytoin Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Phenytoin&quot;
/* End of Phenytoin */

/*
@dataElement: HIV.D.DE921 - Polyvalent cation products containing Mg, Al, Fe, Ca and Zn
@activity: HIV.D21 Determine regimen and treatment options
@description: Polyvalent cation products containing Mg, Al, Fe, Ca and Zn currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Polyvalent cation products containing Mg, Al, Fe, Ca and Zn&quot;:
  exists &quot;Polyvalent cation products containing Mg, Al, Fe, Ca and Zn Condition&quot;
    or exists &quot;Polyvalent cation products containing Mg, Al, Fe, Ca and Zn Observation&quot;
define &quot;Polyvalent cation products containing Mg, Al, Fe, Ca and Zn Condition&quot;:
  [Condition: Concepts.&quot;Polyvalent cation products containing Mg, Al, Fe, Ca and Zn&quot;]
define &quot;Polyvalent cation products containing Mg, Al, Fe, Ca and Zn Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Polyvalent cation products containing Mg, Al, Fe, Ca and Zn&quot;
/* End of Polyvalent cation products containing Mg, Al, Fe, Ca and Zn */

/*
@dataElement: HIV.D.DE922 - Amodiaquine
@activity: HIV.D21 Determine regimen and treatment options
@description: Amodiaquine currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Amodiaquine&quot;:
  exists &quot;Amodiaquine Condition&quot;
    or exists &quot;Amodiaquine Observation&quot;
define &quot;Amodiaquine Condition&quot;:
  [Condition: Concepts.&quot;Amodiaquine&quot;]
define &quot;Amodiaquine Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Amodiaquine&quot;
/* End of Amodiaquine */

/*
@dataElement: HIV.D.DE923 - Cisapride
@activity: HIV.D21 Determine regimen and treatment options
@description: Cisapride currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Cisapride&quot;:
  exists &quot;Cisapride Condition&quot;
    or exists &quot;Cisapride Observation&quot;
define &quot;Cisapride Condition&quot;:
  [Condition: Concepts.&quot;Cisapride&quot;]
define &quot;Cisapride Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Cisapride&quot;
/* End of Cisapride */

/*
@dataElement: HIV.D.DE924 - Ergotamine
@activity: HIV.D21 Determine regimen and treatment options
@description: Ergotamine currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Ergotamine&quot;:
  exists &quot;Ergotamine Condition&quot;
    or exists &quot;Ergotamine Observation&quot;
define &quot;Ergotamine Condition&quot;:
  [Condition: Concepts.&quot;Ergotamine&quot;]
define &quot;Ergotamine Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Ergotamine&quot;
/* End of Ergotamine */

/*
@dataElement: HIV.D.DE925 - Dihydroergotamine
@activity: HIV.D21 Determine regimen and treatment options
@description: Dihydroergotamine currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Dihydroergotamine&quot;:
  exists &quot;Dihydroergotamine Condition&quot;
    or exists &quot;Dihydroergotamine Observation&quot;
define &quot;Dihydroergotamine Condition&quot;:
  [Condition: Concepts.&quot;Dihydroergotamine&quot;]
define &quot;Dihydroergotamine Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Dihydroergotamine&quot;
/* End of Dihydroergotamine */

/*
@dataElement: HIV.D.DE926 - Midazolam
@activity: HIV.D21 Determine regimen and treatment options
@description: Midazolam currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Midazolam&quot;:
  exists &quot;Midazolam Condition&quot;
    or exists &quot;Midazolam Observation&quot;
define &quot;Midazolam Condition&quot;:
  [Condition: Concepts.&quot;Midazolam&quot;]
define &quot;Midazolam Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Midazolam&quot;
/* End of Midazolam */

/*
@dataElement: HIV.D.DE927 - Triazolam
@activity: HIV.D21 Determine regimen and treatment options
@description: Triazolam currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Triazolam&quot;:
  exists &quot;Triazolam Condition&quot;
    or exists &quot;Triazolam Observation&quot;
define &quot;Triazolam Condition&quot;:
  [Condition: Concepts.&quot;Triazolam&quot;]
define &quot;Triazolam Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Triazolam&quot;
/* End of Triazolam */

/*
@dataElement: HIV.D.DE928 - Estrogen-based hormonal contraception
@activity: HIV.D21 Determine regimen and treatment options
@description: Estrogen-based hormonal contraception currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Estrogen-based hormonal contraception&quot;:
  exists &quot;Estrogen-based hormonal contraception Condition&quot;
    or exists &quot;Estrogen-based hormonal contraception Observation&quot;
define &quot;Estrogen-based hormonal contraception Condition&quot;:
  [Condition: Concepts.&quot;Estrogen-based hormonal contraception&quot;]
define &quot;Estrogen-based hormonal contraception Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Estrogen-based hormonal contraception&quot;
/* End of Estrogen-based hormonal contraception */

/*
@dataElement: HIV.D.DE929 - Ribavirin
@activity: HIV.D21 Determine regimen and treatment options
@description: Ribavirin currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Ribavirin&quot;:
  exists &quot;Ribavirin Condition&quot;
    or exists &quot;Ribavirin Observation&quot;
define &quot;Ribavirin Condition&quot;:
  [Condition: Concepts.&quot;Ribavirin&quot;]
define &quot;Ribavirin Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Ribavirin&quot;
/* End of Ribavirin */

/*
@dataElement: HIV.D.DE930 - Peginterferon alfa-2a
@activity: HIV.D21 Determine regimen and treatment options
@description: Peginterferon alfa-2a currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Peginterferon alfa-2a&quot;:
  exists &quot;Peginterferon alfa-2a Condition&quot;
    or exists &quot;Peginterferon alfa-2a Observation&quot;
define &quot;Peginterferon alfa-2a Condition&quot;:
  [Condition: Concepts.&quot;Peginterferon alfa-2a&quot;]
define &quot;Peginterferon alfa-2a Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Peginterferon alfa-2a&quot;
/* End of Peginterferon alfa-2a */

/*
@dataElement: HIV.D.DE931 - Other
@activity: HIV.D21 Determine regimen and treatment options
@description: Other medication currently being taken by, or considered for, client
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other D.DE931&quot;:
  exists &quot;Other D.DE931 Condition&quot;
    or exists &quot;Other D.DE931 Observation&quot;
define &quot;Other D.DE931 Condition&quot;:
  [Condition: Concepts.&quot;Other - HIV.D.DE931&quot;]
define &quot;Other D.DE931 Observation&quot;:
  &quot;Medication/drug Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other - HIV.D.DE931&quot;
/* End of Other D.DE931 */

/*
@dataElement: HIV.D.DE933 - Medication change recommended
@activity: HIV.D21 Determine regimen and treatment options
@description: A medication change is recommended for the client based upon current or considered medications
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Medication change recommended&quot;:
  exists &quot;Medication change recommended Observation&quot;
define &quot;Medication change recommended Observation&quot;:
  [Observation: Concepts.&quot;Medication change recommended&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Medication change recommended */

/*
@dataElement: HIV.D.DE934 - WHO HIV clinical stage condition or symptom
@activity: HIV.D15 Determine clinical stage of HIV
@description: New or recurrent clinical events used to categorize HIV disease severity based at baseline and follow up
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;WHO HIV clinical stage condition or symptom D.DE934&quot;:
  exists &quot;WHO HIV clinical stage condition or symptom D.DE934 Observation&quot;
define &quot;WHO HIV clinical stage condition or symptom D.DE934 Observation&quot;:
  [Observation: Concepts.&quot;WHO HIV clinical stage condition or symptom - HIV.D.DE934&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of WHO HIV clinical stage condition or symptom D.DE934 */

/*
@dataElement: HIV.D.DE935 - Pulmonary TB
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include pulmonary TB
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Pulmonary TB D.DE935&quot;:
  exists &quot;Pulmonary TB D.DE935 Condition&quot;
    or exists &quot;Pulmonary TB D.DE935 Observation&quot;
define &quot;Pulmonary TB D.DE935 Condition&quot;:
  [Condition: Concepts.&quot;Pulmonary TB - HIV.D.DE935&quot;]
define &quot;Pulmonary TB D.DE935 Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE934 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Pulmonary TB - HIV.D.DE935&quot;
/* End of Pulmonary TB D.DE935 */

/*
@dataElement: HIV.D.DE936 - Lymph node TB
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include lymph node TB
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Lymph node TB D.DE936&quot;:
  exists &quot;Lymph node TB D.DE936 Condition&quot;
    or exists &quot;Lymph node TB D.DE936 Observation&quot;
define &quot;Lymph node TB D.DE936 Condition&quot;:
  [Condition: Concepts.&quot;Lymph node TB - HIV.D.DE936&quot;]
define &quot;Lymph node TB D.DE936 Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE934 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Lymph node TB - HIV.D.DE936&quot;
/* End of Lymph node TB D.DE936 */

/*
@dataElement: HIV.D.DE937 - Extrapulmonary TB
@activity: HIV.D15 Determine clinical stage of HIV
@description: Client's symptoms include extrapulmonary tuberculosis (TB)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Extrapulmonary TB D.DE937&quot;:
  exists &quot;Extrapulmonary TB D.DE937 Condition&quot;
    or exists &quot;Extrapulmonary TB D.DE937 Observation&quot;
define &quot;Extrapulmonary TB D.DE937 Condition&quot;:
  [Condition: Concepts.&quot;Extrapulmonary TB - HIV.D.DE937&quot;]
define &quot;Extrapulmonary TB D.DE937 Observation&quot;:
  &quot;WHO HIV clinical stage condition or symptom D.DE934 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Extrapulmonary TB - HIV.D.DE937&quot;
/* End of Extrapulmonary TB D.DE937 */

/*
@dataElement: HIV.D.DE939 - TB diagnosis result
@activity: HIV.D8 Capture or update client history
@description: Final result of the TB investigation (bacteriological and/or clinical)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TB diagnosis result&quot;:
  exists &quot;TB diagnosis result Observation&quot;
define &quot;TB diagnosis result Observation&quot;:
  [Observation: Concepts.&quot;TB diagnosis result&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of TB diagnosis result */

/*
@dataElement: HIV.D.DE940 - Diagnosed TB
@activity: HIV.D8 Capture or update client history
@description: Client is diagnosed with TB disease
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Diagnosed TB&quot;:
  exists &quot;Diagnosed TB Condition&quot;
    or exists &quot;Diagnosed TB Observation&quot;
define &quot;Diagnosed TB Condition&quot;:
  [Condition: Concepts.&quot;Diagnosed TB&quot;]
define &quot;Diagnosed TB Observation&quot;:
  &quot;TB diagnosis result Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Diagnosed TB&quot;
/* End of Diagnosed TB */

/*
@dataElement: HIV.D.DE941 - TB excluded
@activity: HIV.D8 Capture or update client history
@description: Client is not diagnosed with TB
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TB excluded&quot;:
  exists &quot;TB excluded Condition&quot;
    or exists &quot;TB excluded Observation&quot;
define &quot;TB excluded Condition&quot;:
  [Condition: Concepts.&quot;TB excluded&quot;]
define &quot;TB excluded Observation&quot;:
  &quot;TB diagnosis result Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;TB excluded&quot;
/* End of TB excluded */

/*
@dataElement: HIV.D.DE945 - Presumptive TB
@activity: HIV.D8 Capture or update client history
@description: Client has signs or symptoms of tuberculosis (TB) without laboratory confirmation
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Presumptive TB D.DE945&quot;:
  exists &quot;Presumptive TB D.DE945 Observation&quot;
define &quot;Presumptive TB D.DE945 Observation&quot;:
  [Observation: Concepts.&quot;Presumptive TB - HIV.D.DE945&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Presumptive TB D.DE945 */

/*
@dataElement: HIV.D.DE952 - Date of TB diagnosis
@activity: HIV.D8 Capture or update client history
@description: The date when the diagnosis was established
*/

define &quot;Date of TB diagnosis&quot;:
  [Condition: Concepts.&quot;Diagnosed TB&quot;] C
  return C.prevalenceInterval()
/* End of Date of TB diagnosis */

/*
@dataElement: HIV.D.DE954 - TB preventive treatment TPT start date
@activity: HIV.D8 Capture or update client history
@description: The date on which the client began taking TPT
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TB preventive treatment TPT start date&quot;:
  &quot;TPT regimen&quot; MS
  return start of MS.effective.toInterval()
  
/* End of TB preventive treatment TPT start date */

/*
@dataElement: HIV.D.DE956 - TB screening algorithm
@activity: HIV.D4 Screen for TB
@description: Screening algorithm selected for screening activities
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TB screening algorithm&quot;:
  exists &quot;TB screening algorithm Observation&quot;
define &quot;TB screening algorithm Observation&quot;:
  [Observation: Concepts.&quot;TB screening algorithm&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of TB screening algorithm */

/*
@dataElement: HIV.D.DE957 - Screening with cough
@activity: HIV.D4 Screen for TB
@description: Client screened for TB based on cough symptom
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Screening with cough&quot;:
  exists &quot;Screening with cough Condition&quot;
    or exists &quot;Screening with cough Observation&quot;
define &quot;Screening with cough Condition&quot;:
  [Condition: Concepts.&quot;Screening with cough&quot;]
define &quot;Screening with cough Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Screening with cough&quot;
/* End of Screening with cough */

/*
@dataElement: HIV.D.DE958 - Screening with any TB symptom
@activity: HIV.D4 Screen for TB
@description: Client screened for TB based on any TB symptom
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Screening with any TB symptom&quot;:
  exists &quot;Screening with any TB symptom Condition&quot;
    or exists &quot;Screening with any TB symptom Observation&quot;
define &quot;Screening with any TB symptom Condition&quot;:
  [Condition: Concepts.&quot;Screening with any TB symptom&quot;]
define &quot;Screening with any TB symptom Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Screening with any TB symptom&quot;
/* End of Screening with any TB symptom */

/*
@dataElement: HIV.D.DE959 - W4SS single screening algorithm
@activity: HIV.D4 Screen for TB
@description: Client screened for TB based on the WHO-recommended four-symptom screen
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;W4SS single screening algorithm&quot;:
  exists &quot;W4SS single screening algorithm Condition&quot;
    or exists &quot;W4SS single screening algorithm Observation&quot;
define &quot;W4SS single screening algorithm Condition&quot;:
  [Condition: Concepts.&quot;W4SS single screening algorithm&quot;]
define &quot;W4SS single screening algorithm Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;W4SS single screening algorithm&quot;
/* End of W4SS single screening algorithm */

/*
@dataElement: HIV.D.DE960 - CRP single screening algorithm
@activity: HIV.D4 Screen for TB
@description: Client screened for TB based on C-reactive protein (CRP) testing
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;CRP single screening algorithm&quot;:
  exists &quot;CRP single screening algorithm Condition&quot;
    or exists &quot;CRP single screening algorithm Observation&quot;
define &quot;CRP single screening algorithm Condition&quot;:
  [Condition: Concepts.&quot;CRP single screening algorithm&quot;]
define &quot;CRP single screening algorithm Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;CRP single screening algorithm&quot;
/* End of CRP single screening algorithm */

/*
@dataElement: HIV.D.DE961 - CXR single screening algorithm
@activity: HIV.D4 Screen for TB
@description: Client screened for TB with a chest radiography (CXR)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;CXR single screening algorithm&quot;:
  exists &quot;CXR single screening algorithm Condition&quot;
    or exists &quot;CXR single screening algorithm Observation&quot;
define &quot;CXR single screening algorithm Condition&quot;:
  [Condition: Concepts.&quot;CXR single screening algorithm&quot;]
define &quot;CXR single screening algorithm Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;CXR single screening algorithm&quot;
/* End of CXR single screening algorithm */

/*
@dataElement: HIV.D.DE962 - Parallel screening algorithm with W4SS and CRP
@activity: HIV.D4 Screen for TB
@description: Client screened for TB using parallel screening with WHO-recommended four-symptom screen and C-reactive protein (CRP) testing
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Parallel screening algorithm with W4SS and CRP&quot;:
  exists &quot;Parallel screening algorithm with W4SS and CRP Condition&quot;
    or exists &quot;Parallel screening algorithm with W4SS and CRP Observation&quot;
define &quot;Parallel screening algorithm with W4SS and CRP Condition&quot;:
  [Condition: Concepts.&quot;Parallel screening algorithm with W4SS and CRP&quot;]
define &quot;Parallel screening algorithm with W4SS and CRP Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Parallel screening algorithm with W4SS and CRP&quot;
/* End of Parallel screening algorithm with W4SS and CRP */

/*
@dataElement: HIV.D.DE963 - Sequential positive screening algorithm with W4SS and CRP
@activity: HIV.D4 Screen for TB
@description: Client screened for TB using sequential positive screening with WHO-recommended four-symptom screen and C-reactive protein (CRP) testing.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sequential positive screening algorithm with W4SS and CRP&quot;:
  exists &quot;Sequential positive screening algorithm with W4SS and CRP Condition&quot;
    or exists &quot;Sequential positive screening algorithm with W4SS and CRP Observation&quot;
define &quot;Sequential positive screening algorithm with W4SS and CRP Condition&quot;:
  [Condition: Concepts.&quot;Sequential positive screening algorithm with W4SS and CRP&quot;]
define &quot;Sequential positive screening algorithm with W4SS and CRP Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Sequential positive screening algorithm with W4SS and CRP&quot;
/* End of Sequential positive screening algorithm with W4SS and CRP */

/*
@dataElement: HIV.D.DE964 - Sequential negative screening algorithm with W4SS and CRP
@activity: HIV.D4 Screen for TB
@description: Client screened for TB using sequential negative screening with WHO-recommended four-symptom screen and C-reactive protein (CRP) testing
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sequential negative screening algorithm with W4SS and CRP&quot;:
  exists &quot;Sequential negative screening algorithm with W4SS and CRP Condition&quot;
    or exists &quot;Sequential negative screening algorithm with W4SS and CRP Observation&quot;
define &quot;Sequential negative screening algorithm with W4SS and CRP Condition&quot;:
  [Condition: Concepts.&quot;Sequential negative screening algorithm with W4SS and CRP&quot;]
define &quot;Sequential negative screening algorithm with W4SS and CRP Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Sequential negative screening algorithm with W4SS and CRP&quot;
/* End of Sequential negative screening algorithm with W4SS and CRP */

/*
@dataElement: HIV.D.DE965 - Parallel screening algorithm with W4SS and CXR
@activity: HIV.D4 Screen for TB
@description: Client screened for TB using the parallel screening algorithm with W4SS and CXR
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Parallel screening algorithm with W4SS and CXR&quot;:
  exists &quot;Parallel screening algorithm with W4SS and CXR Condition&quot;
    or exists &quot;Parallel screening algorithm with W4SS and CXR Observation&quot;
define &quot;Parallel screening algorithm with W4SS and CXR Condition&quot;:
  [Condition: Concepts.&quot;Parallel screening algorithm with W4SS and CXR&quot;]
define &quot;Parallel screening algorithm with W4SS and CXR Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Parallel screening algorithm with W4SS and CXR&quot;
/* End of Parallel screening algorithm with W4SS and CXR */

/*
@dataElement: HIV.D.DE966 - Sequential positive screening algorithm with W4SS and CXR
@activity: HIV.D4 Screen for TB
@description: Client screened for TB using sequential positive screening with WHO-recommended four-symptom screen and chest radiography
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sequential positive screening algorithm with W4SS and CXR&quot;:
  exists &quot;Sequential positive screening algorithm with W4SS and CXR Condition&quot;
    or exists &quot;Sequential positive screening algorithm with W4SS and CXR Observation&quot;
define &quot;Sequential positive screening algorithm with W4SS and CXR Condition&quot;:
  [Condition: Concepts.&quot;Sequential positive screening algorithm with W4SS and CXR&quot;]
define &quot;Sequential positive screening algorithm with W4SS and CXR Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Sequential positive screening algorithm with W4SS and CXR&quot;
/* End of Sequential positive screening algorithm with W4SS and CXR */

/*
@dataElement: HIV.D.DE967 - Sequential negative screening algorithm with W4SS and CXR
@activity: HIV.D4 Screen for TB
@description: Client screened for TB using sequential negative screening with WHO-recommended four-symptom screen and chest radiography
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Sequential negative screening algorithm with W4SS and CXR&quot;:
  exists &quot;Sequential negative screening algorithm with W4SS and CXR Condition&quot;
    or exists &quot;Sequential negative screening algorithm with W4SS and CXR Observation&quot;
define &quot;Sequential negative screening algorithm with W4SS and CXR Condition&quot;:
  [Condition: Concepts.&quot;Sequential negative screening algorithm with W4SS and CXR&quot;]
define &quot;Sequential negative screening algorithm with W4SS and CXR Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Sequential negative screening algorithm with W4SS and CXR&quot;
/* End of Sequential negative screening algorithm with W4SS and CXR */

/*
@dataElement: HIV.D.DE968 - Screening with mWRD
@activity: HIV.D4 Screen for TB
@description: Client screened for TB with a molecular WHO-recommended rapid diagnostic test (mWRD), such as an Xpert MTB/RIF test to detect Mycobacterium tuberculosis (MTB)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Screening with mWRD&quot;:
  exists &quot;Screening with mWRD Condition&quot;
    or exists &quot;Screening with mWRD Observation&quot;
define &quot;Screening with mWRD Condition&quot;:
  [Condition: Concepts.&quot;Screening with mWRD&quot;]
define &quot;Screening with mWRD Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Screening with mWRD&quot;
/* End of Screening with mWRD */

/*
@dataElement: HIV.D.DE969 - Clinical assessment
@activity: HIV.D4 Screen for TB
@description: Client screened for with a clinical evaluation for tuberculosis (TB) based on national guidelines. Clinical assessment may be used as an eligibility evaluation for testing with LF-LAM or for empiric TB treatment.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Clinical assessment&quot;:
  exists &quot;Clinical assessment Condition&quot;
    or exists &quot;Clinical assessment Observation&quot;
define &quot;Clinical assessment Condition&quot;:
  [Condition: Concepts.&quot;Clinical assessment&quot;]
define &quot;Clinical assessment Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Clinical assessment&quot;
/* End of Clinical assessment */

/*
@dataElement: HIV.D.DE970 - Other TB screening algorithm
@activity: HIV.D4 Screen for TB
@description: Client screened for tuberculosis (TB) with a different screening method not listed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other TB screening algorithm&quot;:
  exists &quot;Other TB screening algorithm Condition&quot;
    or exists &quot;Other TB screening algorithm Observation&quot;
define &quot;Other TB screening algorithm Condition&quot;:
  [Condition: Concepts.&quot;Other TB screening algorithm&quot;]
define &quot;Other TB screening algorithm Observation&quot;:
  &quot;TB screening algorithm Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other TB screening algorithm&quot;
/* End of Other TB screening algorithm */

/*
@dataElement: HIV.D.DE973 - Symptoms of TB
@activity: HIV.D4 Screen for TB
@description: Symptoms that may indicate TB disease in clients living with HIV, based on a clinical algorithm
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Symptoms of TB&quot;:
  exists &quot;Symptoms of TB Observation&quot;
define &quot;Symptoms of TB Observation&quot;:
  [Observation: Concepts.&quot;Symptoms of TB&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Symptoms of TB */

/*
@dataElement: HIV.D.DE974 - Current cough
@activity: HIV.D4 Screen for TB
@description: Client has a cough regardless of duration
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Current cough&quot;:
  exists &quot;Current cough Condition&quot;
    or exists &quot;Current cough Observation&quot;
define &quot;Current cough Condition&quot;:
  [Condition: Concepts.&quot;Current cough&quot;]
define &quot;Current cough Observation&quot;:
  &quot;Symptoms of TB Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Current cough&quot;
/* End of Current cough */

/*
@dataElement: HIV.D.DE975 - Prolonged cough &gt;=2w
@activity: HIV.D4 Screen for TB
@description: Client has a prolonged cough of 2 weeks or more
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Prolonged cough &gt;=2w&quot;:
  exists &quot;Prolonged cough &gt;=2w Condition&quot;
    or exists &quot;Prolonged cough &gt;=2w Observation&quot;
define &quot;Prolonged cough &gt;=2w Condition&quot;:
  [Condition: Concepts.&quot;Prolonged cough &gt;=2w&quot;]
define &quot;Prolonged cough &gt;=2w Observation&quot;:
  &quot;Symptoms of TB Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Prolonged cough &gt;=2w&quot;
/* End of Prolonged cough &gt;=2w */

/*
@dataElement: HIV.D.DE976 - Fever of 39 °C or greater
@activity: HIV.D4 Screen for TB
@description: Client has a fever with a measured temperature of 102.2 °F/39 °C or greater
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Fever of 39 °C or greater&quot;:
  exists &quot;Fever of 39 °C or greater Condition&quot;
    or exists &quot;Fever of 39 °C or greater Observation&quot;
define &quot;Fever of 39 °C or greater Condition&quot;:
  [Condition: Concepts.&quot;Fever of 39 °C or greater&quot;]
define &quot;Fever of 39 °C or greater Observation&quot;:
  &quot;Symptoms of TB Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Fever of 39 °C or greater&quot;
/* End of Fever of 39 °C or greater */

/*
@dataElement: HIV.D.DE977 - Weight loss reported
@activity: HIV.D4 Screen for TB
@description: Unexplained weight loss
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Weight loss reported&quot;:
  exists &quot;Weight loss reported Condition&quot;
    or exists &quot;Weight loss reported Observation&quot;
define &quot;Weight loss reported Condition&quot;:
  [Condition: Concepts.&quot;Weight loss reported&quot;]
define &quot;Weight loss reported Observation&quot;:
  &quot;Symptoms of TB Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Weight loss reported&quot;
/* End of Weight loss reported */

/*
@dataElement: HIV.D.DE978 - Night sweats
@activity: HIV.D4 Screen for TB
@description: Client reports experiencing night sweats
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Night sweats&quot;:
  exists &quot;Night sweats Condition&quot;
    or exists &quot;Night sweats Observation&quot;
define &quot;Night sweats Condition&quot;:
  [Condition: Concepts.&quot;Night sweats&quot;]
define &quot;Night sweats Observation&quot;:
  &quot;Symptoms of TB Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Night sweats&quot;
/* End of Night sweats */

/*
@dataElement: HIV.D.DE979 - Poor weight gain
@activity: HIV.D4 Screen for TB
@description: Client reports poor weight gain of child or infant or growth curve flattening or weight for age &lt;-2 Z-scores.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Poor weight gain&quot;:
  exists &quot;Poor weight gain Condition&quot;
    or exists &quot;Poor weight gain Observation&quot;
define &quot;Poor weight gain Condition&quot;:
  [Condition: Concepts.&quot;Poor weight gain&quot;]
define &quot;Poor weight gain Observation&quot;:
  &quot;Symptoms of TB Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Poor weight gain&quot;
/* End of Poor weight gain */

/*
@dataElement: HIV.D.DE980 - Reduced playfulness
@activity: HIV.D4 Screen for TB
@description: Client reports reduced playfulness of child
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reduced playfulness&quot;:
  exists &quot;Reduced playfulness Condition&quot;
    or exists &quot;Reduced playfulness Observation&quot;
define &quot;Reduced playfulness Condition&quot;:
  [Condition: Concepts.&quot;Reduced playfulness&quot;]
define &quot;Reduced playfulness Observation&quot;:
  &quot;Symptoms of TB Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Reduced playfulness&quot;
/* End of Reduced playfulness */

/*
@dataElement: HIV.D.DE981 - Chest pain
@activity: HIV.D4 Screen for TB
@description: Client reports chest pain
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Chest pain&quot;:
  exists &quot;Chest pain Condition&quot;
    or exists &quot;Chest pain Observation&quot;
define &quot;Chest pain Condition&quot;:
  [Condition: Concepts.&quot;Chest pain&quot;]
define &quot;Chest pain Observation&quot;:
  &quot;Symptoms of TB Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Chest pain&quot;
/* End of Chest pain */

/*
@dataElement: HIV.D.DE982 - Haemoptysis
@activity: HIV.D4 Screen for TB
@description: Client reports experiencing haemoptysis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Haemoptysis&quot;:
  exists &quot;Haemoptysis Condition&quot;
    or exists &quot;Haemoptysis Observation&quot;
define &quot;Haemoptysis Condition&quot;:
  [Condition: Concepts.&quot;Haemoptysis&quot;]
define &quot;Haemoptysis Observation&quot;:
  &quot;Symptoms of TB Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Haemoptysis&quot;
/* End of Haemoptysis */

/*
@dataElement: HIV.D.DE983 - Lethargy
@activity: HIV.D4 Screen for TB
@description: Client reports lethargy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Lethargy D.DE983&quot;:
  exists &quot;Lethargy D.DE983 Condition&quot;
    or exists &quot;Lethargy D.DE983 Observation&quot;
define &quot;Lethargy D.DE983 Condition&quot;:
  [Condition: Concepts.&quot;Lethargy - HIV.D.DE983&quot;]
define &quot;Lethargy D.DE983 Observation&quot;:
  &quot;Symptoms of TB Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Lethargy - HIV.D.DE983&quot;
/* End of Lethargy D.DE983 */

/*
@dataElement: HIV.D.DE984 - None
@activity: HIV.D4 Screen for TB
@description: No symptoms of TB identified
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;None&quot;:
  exists &quot;None Condition&quot;
    or exists &quot;None Observation&quot;
define &quot;None Condition&quot;:
  [Condition: Concepts.&quot;None&quot;]
define &quot;None Observation&quot;:
  &quot;Symptoms of TB Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;None&quot;
/* End of None */

/*
@dataElement: HIV.D.DE985 - History of contact with a person with TB
@activity: HIV.D4 Screen for TB
@description: Client had a history of a contact with a person with TB
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;History of contact with a person with TB&quot;:
  exists &quot;History of contact with a person with TB Observation&quot;
define &quot;History of contact with a person with TB Observation&quot;:
  [Observation: Concepts.&quot;History of contact with a person with TB&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of History of contact with a person with TB */

/*
@dataElement: HIV.D.DE986 - TB screening result
@activity: HIV.D4 Screen for TB
@description: Record the result of the tuberculosis (TB) screening
*/

define &quot;TB screening result&quot;:
  [Observation: Concepts.&quot;TB screening result&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of TB screening result */

/*
@dataElement: HIV.D.DE987 - Screen positive for TB
@activity: HIV.D4 Screen for TB
@description: Screening result was positive for tuberculosis (TB)
*/

define &quot;Screen positive for TB&quot;:
  &quot;TB screening result&quot; O
  where O.value ~ Concepts.&quot;Screen positive for TB&quot;
/* End of Screen positive for TB */

/*
@dataElement: HIV.D.DE988 - Screen negative for TB
@activity: HIV.D4 Screen for TB
@description: Screening result was negative for tuberculosis (TB)
*/

define &quot;Screen negative for TB&quot;:
  &quot;TB screening result&quot; O
  where O.value ~ Concepts.&quot;Screen negative for TB&quot;
/* End of Screen negative for TB */

/*
@dataElement: HIV.D.DE989 - Inconclusive
@activity: HIV.D4 Screen for TB
@description: Screening result was inconclusive for tuberculosis (TB)
*/

define &quot;Inconclusive D.DE989&quot;:
  &quot;TB screening result&quot; O
  where O.value ~ Concepts.&quot;Inconclusive - HIV.D.DE989&quot;
/* End of Inconclusive D.DE989 */

/*
@dataElement: HIV.D.DE990 - TB screening date
@activity: HIV.D4 Screen for TB
@description: Date the TB screening was conducted
*/

define &quot;TB screening date&quot;:
  [Procedure] P
  where P.status = 'completed'
  and P.category ~ Concepts.&quot;TB diagnostic test category&quot;
/* End of TB screening date */

/*
@dataElement: HIV.D.DE992 - TB diagnostic test category
@activity: HIV.D4 Screen for TB
@description: The type of diagnostic test performed to detect tuberculosis (TB) disease
*/

define &quot;TB diagnostic test category&quot;:
  [Procedure] P
  where P.status = 'completed'
  and P.category ~ Concepts.&quot;TB diagnostic test category&quot;
/* End of TB diagnostic test category */

/*
@dataElement: HIV.D.DE993 - LF-LAM
@activity: HIV.D4 Screen for TB
@description: Client tested for tuberculosis with a lateral flow urine lipoarabinomannan assay
*/

define &quot;LF-LAM&quot;:
  &quot;TB diagnostic test category&quot; P
  where P.code ~ Concepts.&quot;LF-LAM&quot;
/* End of LF-LAM */

/*
@dataElement: HIV.D.DE994 - mWRD test for TB
@activity: HIV.D4 Screen for TB
@description: Client tested with a WHO-recommended molecular diagnostic test to detect Mycobacterium tuberculosis (MTB)
*/

define &quot;mWRD test for TB&quot;:
  &quot;TB diagnostic test category&quot; P
  where P.code ~ Concepts.&quot;mWRD test for TB&quot;
/* End of mWRD test for TB */

/*
@dataElement: HIV.D.DE995 - Microscopy - Sputum acid-fast bacilli AFB
@activity: HIV.D4 Screen for TB
@description: Client tested for tuberculosis with a sputum acid-fast bacilli (AFB)
*/

define &quot;Microscopy - Sputum acid-fast bacilli AFB&quot;:
  &quot;TB diagnostic test category&quot; P
  where P.code ~ Concepts.&quot;Microscopy - Sputum acid-fast bacilli AFB&quot;
/* End of Microscopy - Sputum acid-fast bacilli AFB */

/*
@dataElement: HIV.D.DE996 - TB Culture
@activity: HIV.D4 Screen for TB
@description: Client tested for tuberculosis (TB) with a culture
*/

define &quot;TB Culture&quot;:
  &quot;TB diagnostic test category&quot; P
  where P.code ~ Concepts.&quot;TB Culture&quot;
/* End of TB Culture */

/*
@dataElement: HIV.D.DE997 - TB diagnostic test date
@activity: HIV.D4 Screen for TB
@description: The date when TB diagnostic test was performed
*/

define &quot;TB diagnostic test date&quot;:
  &quot;TB diagnostic test category&quot; P
     return (start of P.performed.toInterval())
/* End of TB diagnostic test date */

/*
@dataElement: HIV.D.DE1001 - TB treatment start date
@activity: HIV.D8 Capture or update client history
@description: The date on which the client start or restarted tuberculosis (TB) treatment
*/

define &quot;TB treatment start date&quot;:
  [MedicationStatement] MS
    where exists(MS.reasonCode C where C ~ CustomConcepts.&quot;tb treatment&quot;)
    return (start of MS.effective.toInterval())
/* End of TB treatment start date */

/*
@dataElement: HIV.D.DE1017 - Eligible for TB preventive treatment
@activity: HIV.D14 Prevent, screen, and manage comorbidities and coinfections
@description: Client is eligible for tuberculosis preventive treatment (TPT)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Eligible for TB preventive treatment&quot;:
  exists &quot;Eligible for TB preventive treatment Observation&quot;
define &quot;Eligible for TB preventive treatment Observation&quot;:
  [Observation: Concepts.&quot;Eligible for TB preventive treatment&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Eligible for TB preventive treatment */

/*
@dataElement: HIV.D.DE1023 - TB prevention services accepted
@activity: HIV.D21 Determine regimen and treatment options
@description: Indicates if the client accepts to be evaluated for TB infection and to take the treatment in case he/she is eligible
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TB prevention services accepted&quot;:
  exists &quot;TB prevention services accepted Observation&quot;
define &quot;TB prevention services accepted Observation&quot;:
  [Observation: Concepts.&quot;TB prevention services accepted&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of TB prevention services accepted */

/*
@dataElement: HIV.D.DE1026 - C reactive protein test result
@activity: HIV.D4 Screen for TB
@description: Test result of the client's C reactive protein test result in mg/L
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;C reactive protein test result&quot;:
  [Observation: Concepts.&quot;C reactive protein test result&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;C reactive protein test result Value&quot;:
  &quot;C reactive protein test result&quot; O
  return O.value
/* End of C reactive protein test result */

/*
@dataElement: HIV.D.DE1028 - TPT regimen type
@activity: HIV.D4 Screen for TB
@description: Type of TPT regimen the client is currently on
*/
define &quot;TPT regimen&quot;:
  [MedicationStatement: Concepts.&quot;TPT regimen type Choices&quot;] MS
    where MS.status in { 'active', 'completed' }

define &quot;TPT regimen type&quot;:
  &quot;TPT regimen&quot; MS
  return Common.ExtractMedicationCode(MS.medication)
/* End of TPT regimen type */

/*
@dataElement: HIV.D.DE1034 - TB preventive treatment TPT status
@activity: HIV.D4 Screen for TB
@description: Indicates the current status of TB preventive treatment (TPT)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;TB preventive treatment TPT status&quot;:
  exists &quot;TB preventive treatment TPT status Observation&quot;
define &quot;TB preventive treatment TPT status Observation&quot;:
  [Observation: Concepts.&quot;TB preventive treatment TPT status&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of TB preventive treatment TPT status */

/*
@dataElement: HIV.D.DE1035 - Not started
@activity: HIV.D4 Screen for TB
@description: The client did not start the TB preventive treatment (TPT)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Not started&quot;:
  exists &quot;Not started Condition&quot;
    or exists &quot;Not started Observation&quot;
define &quot;Not started Condition&quot;:
  [Condition: Concepts.&quot;Not started&quot;]
define &quot;Not started Observation&quot;:
  &quot;TB preventive treatment TPT status Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Not started&quot;
/* End of Not started */

/*
@dataElement: HIV.D.DE1036 - On TPT
@activity: HIV.D4 Screen for TB
@description: The client started the TB preventive treatment (TPT) and is currently taking the medication, without treatment interruptions
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;On TPT&quot;:
  exists &quot;On TPT Condition&quot;
    or exists &quot;On TPT Observation&quot;
define &quot;On TPT Condition&quot;:
  [Condition: Concepts.&quot;On TPT&quot;]
define &quot;On TPT Observation&quot;:
  &quot;TB preventive treatment TPT status Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;On TPT&quot;
/* End of On TPT */

/*
@dataElement: HIV.D.DE1037 - On TPT with interruptions
@activity: HIV.D4 Screen for TB
@description: The client started the TB preventive treatment (TPT) and is currently taking the medication, with treatment interruptions
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;On TPT with interruptions&quot;:
  exists &quot;On TPT with interruptions Condition&quot;
    or exists &quot;On TPT with interruptions Observation&quot;
define &quot;On TPT with interruptions Condition&quot;:
  [Condition: Concepts.&quot;On TPT with interruptions&quot;]
define &quot;On TPT with interruptions Observation&quot;:
  &quot;TB preventive treatment TPT status Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;On TPT with interruptions&quot;
/* End of On TPT with interruptions */

/*
@dataElement: HIV.D.DE1038 - On hold
@activity: HIV.D4 Screen for TB
@description: The health care worker has temporarily stopped the TB preventive treatment (TPT), but TPT is expected to continue again later. May also be called 'suspended'.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;On hold&quot;:
  exists &quot;On hold Condition&quot;
    or exists &quot;On hold Observation&quot;
define &quot;On hold Condition&quot;:
  [Condition: Concepts.&quot;On hold&quot;]
define &quot;On hold Observation&quot;:
  &quot;TB preventive treatment TPT status Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;On hold&quot;
/* End of On hold */

/*
@dataElement: HIV.D.DE1039 - Completed
@activity: HIV.D4 Screen for TB
@description: TB preventive treatment (TPT) was completed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Completed&quot;:
  exists &quot;Completed Condition&quot;
    or exists &quot;Completed Observation&quot;
define &quot;Completed Condition&quot;:
  [Condition: Concepts.&quot;Completed&quot;]
define &quot;Completed Observation&quot;:
  &quot;TB preventive treatment TPT status Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Completed&quot;
/* End of Completed */

/*
@dataElement: HIV.E.DE41 - Timing of ART initiation
@activity: HIV.E1 Capture or update mother's history
@description: When the pregnant woman or mother initiated ART, for women living with HIV.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Timing of ART initiation&quot;:
  exists &quot;Timing of ART initiation Observation&quot;
define &quot;Timing of ART initiation Observation&quot;:
  [Observation: Concepts.&quot;Timing of ART initiation&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Timing of ART initiation */

/*
@dataElement: HIV.E.DE42 - Already on ART at first antenatal care visit
@activity: HIV.E1 Capture or update mother's history
@description: The pregnant woman was already on antiretroviral therapy (ART) at first antenatal care visit
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Already on ART at first antenatal care visit&quot;:
  exists &quot;Already on ART at first antenatal care visit Condition&quot;
    or exists &quot;Already on ART at first antenatal care visit Observation&quot;
define &quot;Already on ART at first antenatal care visit Condition&quot;:
  [Condition: Concepts.&quot;Already on ART at first antenatal care visit&quot;]
define &quot;Already on ART at first antenatal care visit Observation&quot;:
  &quot;Timing of ART initiation Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Already on ART at first antenatal care visit&quot;
/* End of Already on ART at first antenatal care visit */

/*
@dataElement: HIV.E.DE43 - Newly on ART during pregnancy
@activity: HIV.E1 Capture or update mother's history
@description: The pregnant woman started ART during her pregnancy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Newly on ART during pregnancy&quot;:
  exists &quot;Newly on ART during pregnancy Condition&quot;
    or exists &quot;Newly on ART during pregnancy Observation&quot;
define &quot;Newly on ART during pregnancy Condition&quot;:
  [Condition: Concepts.&quot;Newly on ART during pregnancy&quot;]
define &quot;Newly on ART during pregnancy Observation&quot;:
  &quot;Timing of ART initiation Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Newly on ART during pregnancy&quot;
/* End of Newly on ART during pregnancy */

/*
@dataElement: HIV.E.DE44 - Newly on ART during labour and delivery
@activity: HIV.E1 Capture or update mother's history
@description: The woman started ART during labour and delivery
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Newly on ART during labour and delivery&quot;:
  exists &quot;Newly on ART during labour and delivery Condition&quot;
    or exists &quot;Newly on ART during labour and delivery Observation&quot;
define &quot;Newly on ART during labour and delivery Condition&quot;:
  [Condition: Concepts.&quot;Newly on ART during labour and delivery&quot;]
define &quot;Newly on ART during labour and delivery Observation&quot;:
  &quot;Timing of ART initiation Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Newly on ART during labour and delivery&quot;
/* End of Newly on ART during labour and delivery */

/*
@dataElement: HIV.E.DE46 - Delivery date
@activity: HIV.E1 Capture or update mother's history
@description: Date on which the woman delivered
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Delivery date&quot;:
  [Observation: Concepts.&quot;Delivery date&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Delivery date Value&quot;:
  &quot;Delivery date&quot; O
  return O.value
/* End of Delivery date */

/*
@dataElement: HIV.E.DE67 - Place of delivery
@activity: HIV.E1 Capture or update mother's history
@description: The type of place where the woman delivered
*/

define &quot;Place of delivery&quot;:
  [Procedure: ConceptsCustom.&quot;delivery&quot;]

/* End of Place of delivery */

/*
@dataElement: HIV.E.DE68 - Health facility
@activity: HIV.E1 Capture or update mother's history
@description: The woman delivered at a health facility
*/

define &quot;Health facility&quot;:
  &quot;Place of delivery&quot; P
  with [Location] L
      such that P.location.references(L) 
      and L.physicalType ~ Concepts.&quot;Health facility&quot;
      
/* End of Health facility */

/*
@dataElement: HIV.E.DE69 - Home
@activity: HIV.E1 Capture or update mother's history
@description: The woman delivered at home
*/

define &quot;Home&quot;:
  &quot;Place of delivery&quot; P
  with [Location] L
      such that P.location.references(L) 
      and L.physicalType ~ Concepts.&quot;Home&quot;
      
/* End of Home */

/*
@dataElement: HIV.E.DE70 - Other
@activity: HIV.E1 Capture or update mother's history
@description: The woman delivered at another location that is not at home or at a health facility
*/

define &quot;Other E.DE70&quot;:
  &quot;Place of delivery&quot; P
  with [Location] L
      such that P.location.references(L) 
      and L.physicalType ~ Concepts.&quot;Other - HIV.E.DE70&quot;
/* End of Other E.DE70 */

/*
@dataElement: HIV.E.DE85 - ANC contact date
@activity: HIV.E1 Capture or update mother's history
@description: The date and time of the client's ANC contact (in the ANC DAK this is called 'Contact date')
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;ANC contact date E.DE85&quot;:
  [Observation: Concepts.&quot;ANC contact date - HIV.E.DE85&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;ANC contact date E.DE85 Value&quot;:
  &quot;ANC contact date E.DE85&quot; O
  return O.value
/* End of ANC contact date E.DE85 */

/*
@dataElement: HIV.E.DE87 - Infant date of birth
@activity: HIV.E1 Capture or update mother's history
@description: The infant's date of birth (DOB) if known
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Infant date of birth&quot;:
  [Observation: Concepts.&quot;Infant date of birth&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Infant date of birth Value&quot;:
  &quot;Infant date of birth&quot; O
  return O.value
/* End of Infant date of birth */

/*
@dataElement: HIV.E.DE90 - Age of infant
@activity: HIV.E1 Capture or update mother's history
@description: Infant age calculated using date of birth
*/
define &quot;Age of infant in days&quot;:
  &quot;Infant date of birth&quot; O
    return CalculateAgeInDays(O.value)

define &quot;Age of infant in hours&quot;:
  &quot;Infant date of birth&quot; O
    return CalculateAgeInHours(O.value)

define &quot;Age of infant in weeks&quot;:
  &quot;Infant date of birth&quot; O
    return CalculateAgeInWeeks(O.value)

define &quot;Age of infant in years&quot;:
  &quot;Infant date of birth&quot; O
    return CalculateAgeInYears(O.value)
    
/* End of Age of infant */

/*
@dataElement: HIV.E.DE112 - HIV-exposed infant or child
@activity: HIV.F6 Check whether infant/child had HIV exposure
@description: Whether the infant or child was determined to have had HIV exposure
*/

define &quot;HIV-exposed infant or child E.DE112&quot;:
  [Observation: Concepts.&quot;HIV-exposed infant or child - HIV.E.DE112&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }

/* End of HIV-exposed infant or child E.DE112 */

/*
@dataElement: HIV.E.DE113 - Key population member
@activity: HIV.E1 Capture or update mother's history
@description: Mother is a member of a key population which has an increased risk of HIV
*/
define &quot;RelatedPersonMother&quot;:
  [RelatedPerson] R
    where ConceptsCustom.&quot;Mother&quot; in R.relationship.coding

define &quot;Mother&quot;: singleton from &quot;RelatedPersonMother&quot;

define &quot;Is Key population member E.DE113&quot;:
  exists &quot;Key population member E.DE113 Observation&quot;

define &quot;Key population member E.DE113 Observation&quot;:
  [Observation: Concepts.&quot;Key population member - HIV.E.DE113&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Key population member E.DE113 */

/*
@dataElement: HIV.E.DE114 - Key population member type
@activity: HIV.E1 Capture or update mother's history
@description: The type of key population that the infant's mother is included in
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Key population member type E.DE114&quot;:
  exists &quot;Key population member type E.DE114 Observation&quot;
define &quot;Key population member type E.DE114 Observation&quot;:
  [Observation: Concepts.&quot;Key population member type - HIV.E.DE114&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Key population member type E.DE114 */

/*
@dataElement: HIV.E.DE115 - Sex worker
@activity: HIV.E1 Capture or update mother's history
@description: Infant's mother is a sex worker
*/

define &quot;Sex worker E.DE115&quot;:
  [Observation: Concepts.&quot;Key population member - HIV.E.DE113&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.value ~ Concepts.&quot;Sex worker - HIV.E.DE115&quot;
/* End of Sex worker E.DE115 */

/*
@dataElement: HIV.E.DE116 - People who inject drugs
@activity: HIV.E1 Capture or update mother's history
@description: Infant's mother is a person who injects drugs
*/

define &quot;People who inject drugs E.DE116&quot;:
  [Observation: Concepts.&quot;Key population member - HIV.E.DE113&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.value ~ Concepts.&quot;People who inject drugs - HIV.E.DE116&quot;
/* End of People who inject drugs E.DE116 */

/*
@dataElement: HIV.E.DE117 - Trans and gender-diverse people
@activity: HIV.E1 Capture or update mother's history
@description: Infant's mother identifies as trans and gender-diverse
*/

define &quot;Trans and gender-diverse people E.DE117&quot;:
  [Observation: Concepts.&quot;Key population member - HIV.E.DE113&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.value ~ Concepts.&quot;Trans and gender-diverse people - HIV.E.DE117&quot;
/* End of Trans and gender-diverse people E.DE117 */

/*
@dataElement: HIV.E.DE118 - People living in prisons and other closed setting
@activity: HIV.E1 Capture or update mother's history
@description: Infant's mother is in a prison or closed setting
*/
define &quot;People living in prisons and other closed setting&quot;:
  [Observation: Concepts.&quot;Key population member - HIV.E.DE113&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.value ~ Concepts.&quot;People living in prisons and other closed setting&quot;
/* End of People living in prisons and other closed setting */

/*
@dataElement: HIV.E.DE155 - Signs of substantial risk of HIV infection
@activity: HIV.E1 Capture or update mother's history
@description: Signs the client is at a substantial risk of HIV infection
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Signs of substantial risk of HIV infection E.DE155&quot;:
  exists &quot;Signs of substantial risk of HIV infection E.DE155 Observation&quot;
define &quot;Signs of substantial risk of HIV infection E.DE155 Observation&quot;:
  [Observation: Concepts.&quot;Signs of substantial risk of HIV infection - HIV.E.DE155&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Signs of substantial risk of HIV infection E.DE155 */

/*
@dataElement: HIV.E.DE156 - No condom use during sex with more than one partner in the past 6 months
@activity: HIV.E1 Capture or update mother's history
@description: Recent vaginal or anal sexual intercourse without a condom with more than one partner
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;No condom use during sex with more than one partner in the past 6 months E.DE156&quot;:
  exists &quot;No condom use during sex with more than one partner in the past 6 months E.DE156 Condition&quot;
    or exists &quot;No condom use during sex with more than one partner in the past 6 months E.DE156 Observation&quot;
define &quot;No condom use during sex with more than one partner in the past 6 months E.DE156 Condition&quot;:
  [Condition: Concepts.&quot;No condom use during sex with more than one partner in the past 6 months - HIV.E.DE156&quot;]
define &quot;No condom use during sex with more than one partner in the past 6 months E.DE156 Observation&quot;:
  &quot;Signs of substantial risk of HIV infection E.DE155 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;No condom use during sex with more than one partner in the past 6 months - HIV.E.DE156&quot;
/* End of No condom use during sex with more than one partner in the past 6 months E.DE156 */

/*
@dataElement: HIV.E.DE157 - STI in the past 6 months
@activity: HIV.E1 Capture or update mother's history
@description: A recent history (in the last 6 months) of a sexually transmitted infection (STI) by laboratory testing or self-report of syndromic STI treatment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;STI in the past 6 months E.DE157&quot;:
  exists &quot;STI in the past 6 months E.DE157 Condition&quot;
    or exists &quot;STI in the past 6 months E.DE157 Observation&quot;
define &quot;STI in the past 6 months E.DE157 Condition&quot;:
  [Condition: Concepts.&quot;STI in the past 6 months - HIV.E.DE157&quot;]
define &quot;STI in the past 6 months E.DE157 Observation&quot;:
  &quot;Signs of substantial risk of HIV infection E.DE155 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;STI in the past 6 months - HIV.E.DE157&quot;
/* End of STI in the past 6 months E.DE157 */

/*
@dataElement: HIV.E.DE158 - A sexual partner in the past 6 months had one or more HIV risk factors
@activity: HIV.E1 Capture or update mother's history
@description: A recent sex partner of the client had HIV risk factors
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;A sexual partner in the past 6 months had one or more HIV risk factors E.DE158&quot;:
  exists &quot;A sexual partner in the past 6 months had one or more HIV risk factors E.DE158 Condition&quot;
    or exists &quot;A sexual partner in the past 6 months had one or more HIV risk factors E.DE158 Observation&quot;
define &quot;A sexual partner in the past 6 months had one or more HIV risk factors E.DE158 Condition&quot;:
  [Condition: Concepts.&quot;A sexual partner in the past 6 months had one or more HIV risk factors - HIV.E.DE158&quot;]
define &quot;A sexual partner in the past 6 months had one or more HIV risk factors E.DE158 Observation&quot;:
  &quot;Signs of substantial risk of HIV infection E.DE155 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;A sexual partner in the past 6 months had one or more HIV risk factors - HIV.E.DE158&quot;
/* End of A sexual partner in the past 6 months had one or more HIV risk factors E.DE158 */

/*
@dataElement: HIV.E.DE159 - PrEP requested by client
@activity: HIV.E1 Capture or update mother's history
@description: Client is requesting PrEP, reflecting a decision-making process has already taken place and suggesting of substantial risk of HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;PrEP requested by client E.DE159&quot;:
  exists &quot;PrEP requested by client E.DE159 Condition&quot;
    or exists &quot;PrEP requested by client E.DE159 Observation&quot;
define &quot;PrEP requested by client E.DE159 Condition&quot;:
  [Condition: Concepts.&quot;PrEP requested by client - HIV.E.DE159&quot;]
define &quot;PrEP requested by client E.DE159 Observation&quot;:
  &quot;Signs of substantial risk of HIV infection E.DE155 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;PrEP requested by client - HIV.E.DE159&quot;
/* End of PrEP requested by client E.DE159 */

/*
@dataElement: HIV.E.DE160 - Serodiscordant partner
@activity: HIV.E1 Capture or update mother's history
@description: Mother's HIV status is different from a current partner's HIV status
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Serodiscordant partner E.DE160&quot;:
  exists &quot;Serodiscordant partner E.DE160 Observation&quot;
define &quot;Serodiscordant partner E.DE160 Observation&quot;:
  [Observation: Concepts.&quot;Serodiscordant partner - HIV.E.DE160&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Serodiscordant partner E.DE160 */

/*
@dataElement: HIV.E.DE168 - HIV test type
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: Type of HIV test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV test type E.DE168&quot;:
  exists &quot;HIV test type E.DE168 Observation&quot;
define &quot;HIV test type E.DE168 Observation&quot;:
  [Observation: Concepts.&quot;HIV test type - HIV.E.DE168&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HIV test type E.DE168 */

/*
@dataElement: HIV.E.DE169 - Rapid diagnostic test for HIV
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: Antibody test for HIV performed with a rapid diagnostic (RDT)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Rapid diagnostic test for HIV E.DE169&quot;:
  exists &quot;Rapid diagnostic test for HIV E.DE169 Condition&quot;
    or exists &quot;Rapid diagnostic test for HIV E.DE169 Observation&quot;
define &quot;Rapid diagnostic test for HIV E.DE169 Condition&quot;:
  [Condition: Concepts.&quot;Rapid diagnostic test for HIV - HIV.E.DE169&quot;]
define &quot;Rapid diagnostic test for HIV E.DE169 Observation&quot;:
  &quot;HIV test type E.DE168 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Rapid diagnostic test for HIV - HIV.E.DE169&quot;
/* End of Rapid diagnostic test for HIV E.DE169 */

/*
@dataElement: HIV.E.DE170 - Enzyme immunoassay for HIV
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: Antibody test for HIV performed with an enzyme immunoassay (EIA)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Enzyme immunoassay for HIV E.DE170&quot;:
  exists &quot;Enzyme immunoassay for HIV E.DE170 Condition&quot;
    or exists &quot;Enzyme immunoassay for HIV E.DE170 Observation&quot;
define &quot;Enzyme immunoassay for HIV E.DE170 Condition&quot;:
  [Condition: Concepts.&quot;Enzyme immunoassay for HIV - HIV.E.DE170&quot;]
define &quot;Enzyme immunoassay for HIV E.DE170 Observation&quot;:
  &quot;HIV test type E.DE168 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Enzyme immunoassay for HIV - HIV.E.DE170&quot;
/* End of Enzyme immunoassay for HIV E.DE170 */

/*
@dataElement: HIV.E.DE171 - Nucleic acid test for HIV
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: Virological test, which includes testing for early infant diagnosis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Nucleic acid test for HIV E.DE171&quot;:
  exists &quot;Nucleic acid test for HIV E.DE171 Condition&quot;
    or exists &quot;Nucleic acid test for HIV E.DE171 Observation&quot;
define &quot;Nucleic acid test for HIV E.DE171 Condition&quot;:
  [Condition: Concepts.&quot;Nucleic acid test for HIV - HIV.E.DE171&quot;]
define &quot;Nucleic acid test for HIV E.DE171 Observation&quot;:
  &quot;HIV test type E.DE168 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Nucleic acid test for HIV - HIV.E.DE171&quot;
/* End of Nucleic acid test for HIV E.DE171 */

/*
@dataElement: HIV.E.DE172 - Dual HIV/syphilis rapid diagnostic test
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: Antibody test for HIV and syphilis performed with a rapid diagnostic
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Dual HIV/syphilis rapid diagnostic test E.DE172&quot;:
  exists &quot;Dual HIV/syphilis rapid diagnostic test E.DE172 Condition&quot;
    or exists &quot;Dual HIV/syphilis rapid diagnostic test E.DE172 Observation&quot;
define &quot;Dual HIV/syphilis rapid diagnostic test E.DE172 Condition&quot;:
  [Condition: Concepts.&quot;Dual HIV/syphilis rapid diagnostic test - HIV.E.DE172&quot;]
define &quot;Dual HIV/syphilis rapid diagnostic test E.DE172 Observation&quot;:
  &quot;HIV test type E.DE168 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Dual HIV/syphilis rapid diagnostic test - HIV.E.DE172&quot;
/* End of Dual HIV/syphilis rapid diagnostic test E.DE172 */

/*
@dataElement: HIV.E.DE173 - Maternal and child health service visit
@activity: HIV.E1 Capture or update mother's history
@description: Maternal and child health service visit attended by an HIV-exposed infant
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Maternal and child health service visit&quot;:
  exists &quot;Maternal and child health service visit Observation&quot;
define &quot;Maternal and child health service visit Observation&quot;:
  [Observation: Concepts.&quot;Maternal and child health service visit&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Maternal and child health service visit */

/*
@dataElement: HIV.E.DE174 - 12-month visit
@activity: HIV.E1 Capture or update mother's history
@description: HIV-exposed infant attending MCH services for a 12-month visit
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;12-month visit&quot;:
  exists &quot;12-month visit Condition&quot;
    or exists &quot;12-month visit Observation&quot;
define &quot;12-month visit Condition&quot;:
  [Condition: Concepts.&quot;12-month visit&quot;]
define &quot;12-month visit Observation&quot;:
  &quot;Maternal and child health service visit Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;12-month visit&quot;
/* End of 12-month visit */

/*
@dataElement: HIV.E.DE175 - 24-month visit
@activity: HIV.E1 Capture or update mother's history
@description: HIV-exposed infants attending MCH services for a 24-month visit
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;24-month visit&quot;:
  exists &quot;24-month visit Condition&quot;
    or exists &quot;24-month visit Observation&quot;
define &quot;24-month visit Condition&quot;:
  [Condition: Concepts.&quot;24-month visit&quot;]
define &quot;24-month visit Observation&quot;:
  &quot;Maternal and child health service visit Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;24-month visit&quot;
/* End of 24-month visit */

/*
@dataElement: HIV.E.DE176 - First visit after the end of breastfeeding
@activity: HIV.E1 Capture or update mother's history
@description: HIV-exposed infant attending MCH services for a first visit after the end of breastfeeding
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;First visit after the end of breastfeeding&quot;:
  exists &quot;First visit after the end of breastfeeding Condition&quot;
    or exists &quot;First visit after the end of breastfeeding Observation&quot;
define &quot;First visit after the end of breastfeeding Condition&quot;:
  [Condition: Concepts.&quot;First visit after the end of breastfeeding&quot;]
define &quot;First visit after the end of breastfeeding Observation&quot;:
  &quot;Maternal and child health service visit Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;First visit after the end of breastfeeding&quot;
/* End of First visit after the end of breastfeeding */

/*
@dataElement: HIV.E.DE179 - Registered in birth cohort
@activity: HIV.F3 Capture or update infant's/child's history
@description: Whether the infant has been registered in a birth cohort
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Registered in birth cohort&quot;:
  exists &quot;Registered in birth cohort Observation&quot;
define &quot;Registered in birth cohort Observation&quot;:
  [Observation: Concepts.&quot;Registered in birth cohort&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Registered in birth cohort */

/*
@dataElement: HIV.E.DE180 - EID sample number
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Early infant diagnosis (EID) sample number
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;EID sample number&quot;:
  exists &quot;EID sample number Observation&quot;
define &quot;EID sample number Observation&quot;:
  [Observation: Concepts.&quot;EID sample number&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of EID sample number */

/*
@dataElement: HIV.E.DE181 - EID sample 1
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: First sample used to test an infant for HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;EID sample 1&quot;:
  exists &quot;EID sample 1 Condition&quot;
    or exists &quot;EID sample 1 Observation&quot;
define &quot;EID sample 1 Condition&quot;:
  [Condition: Concepts.&quot;EID sample 1&quot;]
define &quot;EID sample 1 Observation&quot;:
  &quot;EID sample number Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;EID sample 1&quot;
/* End of EID sample 1 */

/*
@dataElement: HIV.E.DE182 - EID sample 2
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Second sample used to test an infant for HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;EID sample 2&quot;:
  exists &quot;EID sample 2 Condition&quot;
    or exists &quot;EID sample 2 Observation&quot;
define &quot;EID sample 2 Condition&quot;:
  [Condition: Concepts.&quot;EID sample 2&quot;]
define &quot;EID sample 2 Observation&quot;:
  &quot;EID sample number Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;EID sample 2&quot;
/* End of EID sample 2 */

/*
@dataElement: HIV.E.DE183 - EID test number
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Early infant diagnosis (EID) HIV test number using the same sample
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;EID test number&quot;:
  exists &quot;EID test number Observation&quot;
define &quot;EID test number Observation&quot;:
  [Observation: Concepts.&quot;EID test number&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of EID test number */

/*
@dataElement: HIV.E.DE184 - EID test number 1
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: First test on a sample to test an infant for HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;EID test number 1&quot;:
  exists &quot;EID test number 1 Condition&quot;
    or exists &quot;EID test number 1 Observation&quot;
define &quot;EID test number 1 Condition&quot;:
  [Condition: Concepts.&quot;EID test number 1&quot;]
define &quot;EID test number 1 Observation&quot;:
  &quot;EID test number Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;EID test number 1&quot;
/* End of EID test number 1 */

/*
@dataElement: HIV.E.DE185 - EID test number 2
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Second test on a sample to test an infant for HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;EID test number 2&quot;:
  exists &quot;EID test number 2 Condition&quot;
    or exists &quot;EID test number 2 Observation&quot;
define &quot;EID test number 2 Condition&quot;:
  [Condition: Concepts.&quot;EID test number 2&quot;]
define &quot;EID test number 2 Observation&quot;:
  &quot;EID test number Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;EID test number 2&quot;
/* End of EID test number 2 */

/*
@dataElement: HIV.E.DE186 - EID test number 1 test result
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Early infant diagnosis test number 1 test result
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;EID test number 1 test result&quot;:
  exists &quot;EID test number 1 test result Observation&quot;
define &quot;EID test number 1 test result Observation&quot;:
  [Observation: Concepts.&quot;EID test number 1 test result&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of EID test number 1 test result */

/*
@dataElement: HIV.E.DE187 - Positive
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Positive HIV test result from the nucleic acid test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Positive E.DE187&quot;:
  exists &quot;Positive E.DE187 Condition&quot;
    or exists &quot;Positive E.DE187 Observation&quot;
define &quot;Positive E.DE187 Condition&quot;:
  [Condition: Concepts.&quot;Positive - HIV.E.DE187&quot;]
define &quot;Positive E.DE187 Observation&quot;:
  &quot;EID test number 1 test result Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Positive - HIV.E.DE187&quot;
/* End of Positive E.DE187 */

/*
@dataElement: HIV.E.DE188 - Negative
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Negative HIV test result from the nucleic acid test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Negative E.DE188&quot;:
  exists &quot;Negative E.DE188 Condition&quot;
    or exists &quot;Negative E.DE188 Observation&quot;
define &quot;Negative E.DE188 Condition&quot;:
  [Condition: Concepts.&quot;Negative - HIV.E.DE188&quot;]
define &quot;Negative E.DE188 Observation&quot;:
  &quot;EID test number 1 test result Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Negative - HIV.E.DE188&quot;
/* End of Negative E.DE188 */

/*
@dataElement: HIV.E.DE189 - Indeterminate
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Indeterminate HIV test result from the nucleic acid test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Indeterminate E.DE189&quot;:
  exists &quot;Indeterminate E.DE189 Condition&quot;
    or exists &quot;Indeterminate E.DE189 Observation&quot;
define &quot;Indeterminate E.DE189 Condition&quot;:
  [Condition: Concepts.&quot;Indeterminate - HIV.E.DE189&quot;]
define &quot;Indeterminate E.DE189 Observation&quot;:
  &quot;EID test number 1 test result Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Indeterminate - HIV.E.DE189&quot;
/* End of Indeterminate E.DE189 */

/*
@dataElement: HIV.E.DE190 - EID test number 2 test result
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Early infant diagnosis test number 2 test result
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;EID test number 2 test result&quot;:
  exists &quot;EID test number 2 test result Observation&quot;
define &quot;EID test number 2 test result Observation&quot;:
  [Observation: Concepts.&quot;EID test number 2 test result&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of EID test number 2 test result */

/*
@dataElement: HIV.E.DE191 - Positive
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Positive HIV test result from the nucleic acid test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Positive E.DE191&quot;:
  exists &quot;Positive E.DE191 Condition&quot;
    or exists &quot;Positive E.DE191 Observation&quot;
define &quot;Positive E.DE191 Condition&quot;:
  [Condition: Concepts.&quot;Positive - HIV.E.DE191&quot;]
define &quot;Positive E.DE191 Observation&quot;:
  &quot;EID test number 2 test result Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Positive - HIV.E.DE191&quot;
/* End of Positive E.DE191 */

/*
@dataElement: HIV.E.DE192 - Negative
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Negative HIV test result from the nucleic acid test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Negative E.DE192&quot;:
  exists &quot;Negative E.DE192 Condition&quot;
    or exists &quot;Negative E.DE192 Observation&quot;
define &quot;Negative E.DE192 Condition&quot;:
  [Condition: Concepts.&quot;Negative - HIV.E.DE192&quot;]
define &quot;Negative E.DE192 Observation&quot;:
  &quot;EID test number 2 test result Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Negative - HIV.E.DE192&quot;
/* End of Negative E.DE192 */

/*
@dataElement: HIV.E.DE193 - Indeterminate
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Indeterminate HIV test result from the nucleic acid test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Indeterminate E.DE193&quot;:
  exists &quot;Indeterminate E.DE193 Condition&quot;
    or exists &quot;Indeterminate E.DE193 Observation&quot;
define &quot;Indeterminate E.DE193 Condition&quot;:
  [Condition: Concepts.&quot;Indeterminate - HIV.E.DE193&quot;]
define &quot;Indeterminate E.DE193 Observation&quot;:
  &quot;EID test number 2 test result Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Indeterminate - HIV.E.DE193&quot;
/* End of Indeterminate E.DE193 */

/*
@dataElement: HIV.E.DE194 - Assay number in testing strategy
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The number of the assay (test kit) in the HIV testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assay number in testing strategy E.DE194&quot;:
  exists &quot;Assay number in testing strategy E.DE194 Observation&quot;
define &quot;Assay number in testing strategy E.DE194 Observation&quot;:
  [Observation: Concepts.&quot;Assay number in testing strategy - HIV.E.DE194&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Assay number in testing strategy E.DE194 */

/*
@dataElement: HIV.E.DE195 - Assay 0
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: A community outreach test-for-triage or self-test which is not included in the HIV testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assay 0 E.DE195&quot;:
  exists &quot;Assay 0 E.DE195 Condition&quot;
    or exists &quot;Assay 0 E.DE195 Observation&quot;
define &quot;Assay 0 E.DE195 Condition&quot;:
  [Condition: Concepts.&quot;Assay 0 - HIV.E.DE195&quot;]
define &quot;Assay 0 E.DE195 Observation&quot;:
  &quot;Assay number in testing strategy E.DE194 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Assay 0 - HIV.E.DE195&quot;
/* End of Assay 0 E.DE195 */

/*
@dataElement: HIV.E.DE196 - Assay 1
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The first test in the HIV testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assay 1 E.DE196&quot;:
  exists &quot;Assay 1 E.DE196 Condition&quot;
    or exists &quot;Assay 1 E.DE196 Observation&quot;
define &quot;Assay 1 E.DE196 Condition&quot;:
  [Condition: Concepts.&quot;Assay 1 - HIV.E.DE196&quot;]
define &quot;Assay 1 E.DE196 Observation&quot;:
  &quot;Assay number in testing strategy E.DE194 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Assay 1 - HIV.E.DE196&quot;
/* End of Assay 1 E.DE196 */

/*
@dataElement: HIV.E.DE197 - Assay 2
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The second test in the HIV testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assay 2 E.DE197&quot;:
  exists &quot;Assay 2 E.DE197 Condition&quot;
    or exists &quot;Assay 2 E.DE197 Observation&quot;
define &quot;Assay 2 E.DE197 Condition&quot;:
  [Condition: Concepts.&quot;Assay 2 - HIV.E.DE197&quot;]
define &quot;Assay 2 E.DE197 Observation&quot;:
  &quot;Assay number in testing strategy E.DE194 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Assay 2 - HIV.E.DE197&quot;
/* End of Assay 2 E.DE197 */

/*
@dataElement: HIV.E.DE198 - Assay 3
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The third test in the HIV testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assay 3 E.DE198&quot;:
  exists &quot;Assay 3 E.DE198 Condition&quot;
    or exists &quot;Assay 3 E.DE198 Observation&quot;
define &quot;Assay 3 E.DE198 Condition&quot;:
  [Condition: Concepts.&quot;Assay 3 - HIV.E.DE198&quot;]
define &quot;Assay 3 E.DE198 Observation&quot;:
  &quot;Assay number in testing strategy E.DE194 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Assay 3 - HIV.E.DE198&quot;
/* End of Assay 3 E.DE198 */

/*
@dataElement: HIV.E.DE199 - Assay 1 repeated
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The first test in the HIV testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Assay 1 repeated E.DE199&quot;:
  exists &quot;Assay 1 repeated E.DE199 Condition&quot;
    or exists &quot;Assay 1 repeated E.DE199 Observation&quot;
define &quot;Assay 1 repeated E.DE199 Condition&quot;:
  [Condition: Concepts.&quot;Assay 1 repeated - HIV.E.DE199&quot;]
define &quot;Assay 1 repeated E.DE199 Observation&quot;:
  &quot;Assay number in testing strategy E.DE194 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Assay 1 repeated - HIV.E.DE199&quot;
/* End of Assay 1 repeated E.DE199 */

/*
@dataElement: HIV.E.DE200 - Test result of HIV assay 1
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the first HIV assay in the testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Test result of HIV assay 1 E.DE200&quot;:
  exists &quot;Test result of HIV assay 1 E.DE200 Observation&quot;
define &quot;Test result of HIV assay 1 E.DE200 Observation&quot;:
  [Observation: Concepts.&quot;Test result of HIV assay 1 - HIV.E.DE200&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Test result of HIV assay 1 E.DE200 */

/*
@dataElement: HIV.E.DE201 - Reactive
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reactive E.DE201&quot;:
  exists &quot;Reactive E.DE201 Condition&quot;
    or exists &quot;Reactive E.DE201 Observation&quot;
define &quot;Reactive E.DE201 Condition&quot;:
  [Condition: Concepts.&quot;Reactive - HIV.E.DE201&quot;]
define &quot;Reactive E.DE201 Observation&quot;:
  &quot;Test result of HIV assay 1 E.DE200 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Reactive - HIV.E.DE201&quot;
/* End of Reactive E.DE201 */

/*
@dataElement: HIV.E.DE202 - Non-reactive
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was non-reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Non-reactive E.DE202&quot;:
  exists &quot;Non-reactive E.DE202 Condition&quot;
    or exists &quot;Non-reactive E.DE202 Observation&quot;
define &quot;Non-reactive E.DE202 Condition&quot;:
  [Condition: Concepts.&quot;Non-reactive - HIV.E.DE202&quot;]
define &quot;Non-reactive E.DE202 Observation&quot;:
  &quot;Test result of HIV assay 1 E.DE200 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Non-reactive - HIV.E.DE202&quot;
/* End of Non-reactive E.DE202 */

/*
@dataElement: HIV.E.DE203 - Invalid
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was invalid
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invalid E.DE203&quot;:
  exists &quot;Invalid E.DE203 Condition&quot;
    or exists &quot;Invalid E.DE203 Observation&quot;
define &quot;Invalid E.DE203 Condition&quot;:
  [Condition: Concepts.&quot;Invalid - HIV.E.DE203&quot;]
define &quot;Invalid E.DE203 Observation&quot;:
  &quot;Test result of HIV assay 1 E.DE200 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Invalid - HIV.E.DE203&quot;
/* End of Invalid E.DE203 */

/*
@dataElement: HIV.E.DE204 - Test result of HIV assay 2
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the second HIV assay in the testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Test result of HIV assay 2 E.DE204&quot;:
  exists &quot;Test result of HIV assay 2 E.DE204 Observation&quot;
define &quot;Test result of HIV assay 2 E.DE204 Observation&quot;:
  [Observation: Concepts.&quot;Test result of HIV assay 2 - HIV.E.DE204&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Test result of HIV assay 2 E.DE204 */

/*
@dataElement: HIV.E.DE205 - Reactive
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reactive E.DE205&quot;:
  exists &quot;Reactive E.DE205 Condition&quot;
    or exists &quot;Reactive E.DE205 Observation&quot;
define &quot;Reactive E.DE205 Condition&quot;:
  [Condition: Concepts.&quot;Reactive - HIV.E.DE205&quot;]
define &quot;Reactive E.DE205 Observation&quot;:
  &quot;Test result of HIV assay 2 E.DE204 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Reactive - HIV.E.DE205&quot;
/* End of Reactive E.DE205 */

/*
@dataElement: HIV.E.DE206 - Non-reactive
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was non-reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Non-reactive E.DE206&quot;:
  exists &quot;Non-reactive E.DE206 Condition&quot;
    or exists &quot;Non-reactive E.DE206 Observation&quot;
define &quot;Non-reactive E.DE206 Condition&quot;:
  [Condition: Concepts.&quot;Non-reactive - HIV.E.DE206&quot;]
define &quot;Non-reactive E.DE206 Observation&quot;:
  &quot;Test result of HIV assay 2 E.DE204 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Non-reactive - HIV.E.DE206&quot;
/* End of Non-reactive E.DE206 */

/*
@dataElement: HIV.E.DE207 - Invalid
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was invalid
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invalid E.DE207&quot;:
  exists &quot;Invalid E.DE207 Condition&quot;
    or exists &quot;Invalid E.DE207 Observation&quot;
define &quot;Invalid E.DE207 Condition&quot;:
  [Condition: Concepts.&quot;Invalid - HIV.E.DE207&quot;]
define &quot;Invalid E.DE207 Observation&quot;:
  &quot;Test result of HIV assay 2 E.DE204 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Invalid - HIV.E.DE207&quot;
/* End of Invalid E.DE207 */

/*
@dataElement: HIV.E.DE208 - Test result of HIV assay 3
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the third HIV assay in the testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Test result of HIV assay 3 E.DE208&quot;:
  exists &quot;Test result of HIV assay 3 E.DE208 Observation&quot;
define &quot;Test result of HIV assay 3 E.DE208 Observation&quot;:
  [Observation: Concepts.&quot;Test result of HIV assay 3 - HIV.E.DE208&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Test result of HIV assay 3 E.DE208 */

/*
@dataElement: HIV.E.DE209 - Reactive
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reactive E.DE209&quot;:
  exists &quot;Reactive E.DE209 Condition&quot;
    or exists &quot;Reactive E.DE209 Observation&quot;
define &quot;Reactive E.DE209 Condition&quot;:
  [Condition: Concepts.&quot;Reactive - HIV.E.DE209&quot;]
define &quot;Reactive E.DE209 Observation&quot;:
  &quot;Test result of HIV assay 3 E.DE208 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Reactive - HIV.E.DE209&quot;
/* End of Reactive E.DE209 */

/*
@dataElement: HIV.E.DE210 - Non-reactive
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was non-reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Non-reactive E.DE210&quot;:
  exists &quot;Non-reactive E.DE210 Condition&quot;
    or exists &quot;Non-reactive E.DE210 Observation&quot;
define &quot;Non-reactive E.DE210 Condition&quot;:
  [Condition: Concepts.&quot;Non-reactive - HIV.E.DE210&quot;]
define &quot;Non-reactive E.DE210 Observation&quot;:
  &quot;Test result of HIV assay 3 E.DE208 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Non-reactive - HIV.E.DE210&quot;
/* End of Non-reactive E.DE210 */

/*
@dataElement: HIV.E.DE211 - Invalid
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was invalid
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invalid E.DE211&quot;:
  exists &quot;Invalid E.DE211 Condition&quot;
    or exists &quot;Invalid E.DE211 Observation&quot;
define &quot;Invalid E.DE211 Condition&quot;:
  [Condition: Concepts.&quot;Invalid - HIV.E.DE211&quot;]
define &quot;Invalid E.DE211 Observation&quot;:
  &quot;Test result of HIV assay 3 E.DE208 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Invalid - HIV.E.DE211&quot;
/* End of Invalid E.DE211 */

/*
@dataElement: HIV.E.DE212 - Test result of HIV assay 1 repeated
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the repeated first HIV assay in the testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Test result of HIV assay 1 repeated E.DE212&quot;:
  exists &quot;Test result of HIV assay 1 repeated E.DE212 Observation&quot;
define &quot;Test result of HIV assay 1 repeated E.DE212 Observation&quot;:
  [Observation: Concepts.&quot;Test result of HIV assay 1 repeated - HIV.E.DE212&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Test result of HIV assay 1 repeated E.DE212 */

/*
@dataElement: HIV.E.DE213 - Reactive
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reactive E.DE213&quot;:
  exists &quot;Reactive E.DE213 Condition&quot;
    or exists &quot;Reactive E.DE213 Observation&quot;
define &quot;Reactive E.DE213 Condition&quot;:
  [Condition: Concepts.&quot;Reactive - HIV.E.DE213&quot;]
define &quot;Reactive E.DE213 Observation&quot;:
  &quot;Test result of HIV assay 1 repeated E.DE212 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Reactive - HIV.E.DE213&quot;
/* End of Reactive E.DE213 */

/*
@dataElement: HIV.E.DE214 - Non-reactive
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was non-reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Non-reactive E.DE214&quot;:
  exists &quot;Non-reactive E.DE214 Condition&quot;
    or exists &quot;Non-reactive E.DE214 Observation&quot;
define &quot;Non-reactive E.DE214 Condition&quot;:
  [Condition: Concepts.&quot;Non-reactive - HIV.E.DE214&quot;]
define &quot;Non-reactive E.DE214 Observation&quot;:
  &quot;Test result of HIV assay 1 repeated E.DE212 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Non-reactive - HIV.E.DE214&quot;
/* End of Non-reactive E.DE214 */

/*
@dataElement: HIV.E.DE215 - Invalid
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was invalid
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invalid E.DE215&quot;:
  exists &quot;Invalid E.DE215 Condition&quot;
    or exists &quot;Invalid E.DE215 Observation&quot;
define &quot;Invalid E.DE215 Condition&quot;:
  [Condition: Concepts.&quot;Invalid - HIV.E.DE215&quot;]
define &quot;Invalid E.DE215 Observation&quot;:
  &quot;Test result of HIV assay 1 repeated E.DE212 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Invalid - HIV.E.DE215&quot;
/* End of Invalid E.DE215 */

/*
@dataElement: HIV.E.DE216 - Test result of syphilis assay 1
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the first syphilis assay in the testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Test result of syphilis assay 1&quot;:
  exists &quot;Test result of syphilis assay 1 Observation&quot;
define &quot;Test result of syphilis assay 1 Observation&quot;:
  [Observation: Concepts.&quot;Test result of syphilis assay 1&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Test result of syphilis assay 1 */

/*
@dataElement: HIV.E.DE217 - Reactive
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the first syphilis assay in the testing strategy was reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reactive E.DE217&quot;:
  exists &quot;Reactive E.DE217 Condition&quot;
    or exists &quot;Reactive E.DE217 Observation&quot;
define &quot;Reactive E.DE217 Condition&quot;:
  [Condition: Concepts.&quot;Reactive - HIV.E.DE217&quot;]
define &quot;Reactive E.DE217 Observation&quot;:
  &quot;Test result of syphilis assay 1 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Reactive - HIV.E.DE217&quot;
/* End of Reactive E.DE217 */

/*
@dataElement: HIV.E.DE218 - Non-reactive
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the first syphilis assay in the testing strategy was non-reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Non-reactive E.DE218&quot;:
  exists &quot;Non-reactive E.DE218 Condition&quot;
    or exists &quot;Non-reactive E.DE218 Observation&quot;
define &quot;Non-reactive E.DE218 Condition&quot;:
  [Condition: Concepts.&quot;Non-reactive - HIV.E.DE218&quot;]
define &quot;Non-reactive E.DE218 Observation&quot;:
  &quot;Test result of syphilis assay 1 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Non-reactive - HIV.E.DE218&quot;
/* End of Non-reactive E.DE218 */

/*
@dataElement: HIV.E.DE219 - Invalid
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the HIV assay in the testing strategy was invalid
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invalid E.DE219&quot;:
  exists &quot;Invalid E.DE219 Condition&quot;
    or exists &quot;Invalid E.DE219 Observation&quot;
define &quot;Invalid E.DE219 Condition&quot;:
  [Condition: Concepts.&quot;Invalid - HIV.E.DE219&quot;]
define &quot;Invalid E.DE219 Observation&quot;:
  &quot;Test result of syphilis assay 1 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Invalid - HIV.E.DE219&quot;
/* End of Invalid E.DE219 */

/*
@dataElement: HIV.E.DE220 - Test result of syphilis assay 1 repeated
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the first syphilis assay repeated in the testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Test result of syphilis assay 1 repeated&quot;:
  exists &quot;Test result of syphilis assay 1 repeated Observation&quot;
define &quot;Test result of syphilis assay 1 repeated Observation&quot;:
  [Observation: Concepts.&quot;Test result of syphilis assay 1 repeated&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Test result of syphilis assay 1 repeated */

/*
@dataElement: HIV.E.DE221 - Reactive
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the first syphilis assay repeated in the testing strategy was reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reactive E.DE221&quot;:
  exists &quot;Reactive E.DE221 Condition&quot;
    or exists &quot;Reactive E.DE221 Observation&quot;
define &quot;Reactive E.DE221 Condition&quot;:
  [Condition: Concepts.&quot;Reactive - HIV.E.DE221&quot;]
define &quot;Reactive E.DE221 Observation&quot;:
  &quot;Test result of syphilis assay 1 repeated Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Reactive - HIV.E.DE221&quot;
/* End of Reactive E.DE221 */

/*
@dataElement: HIV.E.DE222 - Non-reactive
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the first syphilis assay repeated in the testing strategy was non-reactive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Non-reactive E.DE222&quot;:
  exists &quot;Non-reactive E.DE222 Condition&quot;
    or exists &quot;Non-reactive E.DE222 Observation&quot;
define &quot;Non-reactive E.DE222 Condition&quot;:
  [Condition: Concepts.&quot;Non-reactive - HIV.E.DE222&quot;]
define &quot;Non-reactive E.DE222 Observation&quot;:
  &quot;Test result of syphilis assay 1 repeated Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Non-reactive - HIV.E.DE222&quot;
/* End of Non-reactive E.DE222 */

/*
@dataElement: HIV.E.DE223 - Invalid
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the first syphilis assay repeated in the testing strategy was invalid
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Invalid E.DE223&quot;:
  exists &quot;Invalid E.DE223 Condition&quot;
    or exists &quot;Invalid E.DE223 Observation&quot;
define &quot;Invalid E.DE223 Condition&quot;:
  [Condition: Concepts.&quot;Invalid - HIV.E.DE223&quot;]
define &quot;Invalid E.DE223 Observation&quot;:
  &quot;Test result of syphilis assay 1 repeated Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Invalid - HIV.E.DE223&quot;
/* End of Invalid E.DE223 */

/*
@dataElement: HIV.E.DE224 - HIV test date
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Date of the HIV test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV test date E.DE224&quot;:
  [Observation: Concepts.&quot;HIV test date - HIV.E.DE224&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;HIV test date E.DE224 Value&quot;:
  &quot;HIV test date E.DE224&quot; O
  return O.value
/* End of HIV test date E.DE224 */

/*
@dataElement: HIV.E.DE225 - Infant HIV status
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: HIV status reported after applying the HIV testing algorithm. No single HIV test can provide an HIV-positive diagnosis.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Infant HIV status&quot;:
  exists &quot;Infant HIV status Observation&quot;
define &quot;Infant HIV status Observation&quot;:
  [Observation: Concepts.&quot;Infant HIV status&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Infant HIV status */

/*
@dataElement: HIV.E.DE226 - HIV-positive
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Infant is HIV-positive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV-positive E.DE226&quot;:
  exists &quot;HIV-positive E.DE226 Condition&quot;
    or exists &quot;HIV-positive E.DE226 Observation&quot;
define &quot;HIV-positive E.DE226 Condition&quot;:
  [Condition: Concepts.&quot;HIV-positive - HIV.E.DE226&quot;]
define &quot;HIV-positive E.DE226 Observation&quot;:
  &quot;Infant HIV status Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV-positive - HIV.E.DE226&quot;
/* End of HIV-positive E.DE226 */

/*
@dataElement: HIV.E.DE227 - HIV-negative
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Infant is HIV-negative
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV-negative E.DE227&quot;:
  exists &quot;HIV-negative E.DE227 Condition&quot;
    or exists &quot;HIV-negative E.DE227 Observation&quot;
define &quot;HIV-negative E.DE227 Condition&quot;:
  [Condition: Concepts.&quot;HIV-negative - HIV.E.DE227&quot;]
define &quot;HIV-negative E.DE227 Observation&quot;:
  &quot;Infant HIV status Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV-negative - HIV.E.DE227&quot;
/* End of HIV-negative E.DE227 */

/*
@dataElement: HIV.E.DE228 - Unknown
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Infant has unknown HIV status
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unknown E.DE228&quot;:
  exists &quot;Unknown E.DE228 Condition&quot;
    or exists &quot;Unknown E.DE228 Observation&quot;
define &quot;Unknown E.DE228 Condition&quot;:
  [Condition: Concepts.&quot;Unknown - HIV.E.DE228&quot;]
define &quot;Unknown E.DE228 Observation&quot;:
  &quot;Infant HIV status Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unknown - HIV.E.DE228&quot;
/* End of Unknown E.DE228 */

/*
@dataElement: HIV.E.DE229 - Infant ART start date
@activity: HIV.F16 Immediately start infant on ART
@description: The date on which the infant was started or restarted on antiretroviral therapy (ART)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Infant ART start date&quot;:
  [Observation: Concepts.&quot;Infant ART start date&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Infant ART start date Value&quot;:
  &quot;Infant ART start date&quot; O
  return O.value
/* End of Infant ART start date */

/*
@dataElement: HIV.E.DE230 - Final diagnosis of HIV-exposed infant
@activity: HIV.F20 Record infant's/child's final HIV diagnosis
@description: HIV-exposed infant final status at 18 months or 3 months after cessation of breastfeeding (whichever is later).
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Final diagnosis of HIV-exposed infant E.DE230&quot;:
  exists &quot;Final diagnosis of HIV-exposed infant E.DE230 Observation&quot;
define &quot;Final diagnosis of HIV-exposed infant E.DE230 Observation&quot;:
  [Observation: Concepts.&quot;Final diagnosis of HIV-exposed infant - HIV.E.DE230&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Final diagnosis of HIV-exposed infant E.DE230 */

/*
@dataElement: HIV.E.DE231 - HIV-positive
@activity: HIV.F20 Record infant's/child's final HIV diagnosis
@description: The infant is HIV-positive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV-positive E.DE231&quot;:
  exists &quot;HIV-positive E.DE231 Condition&quot;
    or exists &quot;HIV-positive E.DE231 Observation&quot;
define &quot;HIV-positive E.DE231 Condition&quot;:
  [Condition: Concepts.&quot;HIV-positive - HIV.E.DE231&quot;]
define &quot;HIV-positive E.DE231 Observation&quot;:
  &quot;Final diagnosis of HIV-exposed infant E.DE230 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV-positive - HIV.E.DE231&quot;
/* End of HIV-positive E.DE231 */

/*
@dataElement: HIV.E.DE232 - HIV-negative and no longer breastfeeding
@activity: HIV.F20 Record infant's/child's final HIV diagnosis
@description: The infant is HIV-negative and the mother has quit breastfeeding
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV-negative and no longer breastfeeding&quot;:
  exists &quot;HIV-negative and no longer breastfeeding Condition&quot;
    or exists &quot;HIV-negative and no longer breastfeeding Observation&quot;
define &quot;HIV-negative and no longer breastfeeding Condition&quot;:
  [Condition: Concepts.&quot;HIV-negative and no longer breastfeeding&quot;]
define &quot;HIV-negative and no longer breastfeeding Observation&quot;:
  &quot;Final diagnosis of HIV-exposed infant E.DE230 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV-negative and no longer breastfeeding&quot;
/* End of HIV-negative and no longer breastfeeding */

/*
@dataElement: HIV.E.DE233 - HIV status unknown
@activity: HIV.F20 Record infant's/child's final HIV diagnosis
@description: The final HIV status of the child is unknown because the infant died, was lost to follow-up or transferred out without ever having an HIV-positive diagnosis or is active in care but was not tested at 18 months
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV status unknown&quot;:
  exists &quot;HIV status unknown Condition&quot;
    or exists &quot;HIV status unknown Observation&quot;
define &quot;HIV status unknown Condition&quot;:
  [Condition: Concepts.&quot;HIV status unknown&quot;]
define &quot;HIV status unknown Observation&quot;:
  &quot;Final diagnosis of HIV-exposed infant E.DE230 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV status unknown&quot;
/* End of HIV status unknown */

/*
@dataElement: HIV.G.DE1 - CD4 count
@activity: HIV.D20 Diagnostics
@description: CD4 cell count in cells/mm^3
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;CD4 count G.DE1&quot;:
  [Observation: Concepts.&quot;CD4 count - HIV.G.DE1&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;CD4 count G.DE1 Value&quot;:
  &quot;CD4 count G.DE1&quot; O
  return O.value
/* End of CD4 count G.DE1 */

/*
@dataElement: HIV.G.DE3 - Baseline CD4 count
@activity: HIV.D20 Diagnostics
@description: CD4 count performed at HIV diagnosis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Baseline CD4 count G.DE3&quot;:
  [Observation: Concepts.&quot;Baseline CD4 count - HIV.G.DE3&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Baseline CD4 count G.DE3 Value&quot;:
  &quot;Baseline CD4 count G.DE3&quot; O
  return O.value
/* End of Baseline CD4 count G.DE3 */

/*
@dataElement: HIV.G.DE8 - Date of viral load sample collection
@activity: HIV.D20 Diagnostics
@description: Date and time when the sample was collected to test the client's HIV viral load
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date of viral load sample collection G.DE8&quot;:
  [Observation: Concepts.&quot;Date of viral load sample collection - HIV.G.DE8&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date of viral load sample collection G.DE8 Value&quot;:
  &quot;Date of viral load sample collection G.DE8&quot; O
  return O.value
/* End of Date of viral load sample collection G.DE8 */

/*
@dataElement: HIV.G.DE12 - Viral load test result
@activity: HIV.D20 Diagnostics
@description: Result from the viral load test in number of copies/mL
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Viral load test result G.DE12&quot;:
  [Observation: Concepts.&quot;Viral load test result - HIV.G.DE12&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Viral load test result G.DE12 Value&quot;:
  &quot;Viral load test result G.DE12&quot; O
  return O.value
/* End of Viral load test result G.DE12 */

/*
@dataElement: HIV.G.DE17 - HBsAg test date
@activity: HIV.D20 Diagnostics
@description: Date client was tested for hepatitis B virus (HBV)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HBsAg test date G.DE17&quot;:
  [Observation: Concepts.&quot;HBsAg test date - HIV.G.DE17&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;HBsAg test date G.DE17 Value&quot;:
  &quot;HBsAg test date G.DE17&quot; O
  return O.value
/* End of HBsAg test date G.DE17 */

/*
@dataElement: HIV.G.DE18 - HBsAg test result
@activity: HIV.D20 Diagnostics
@description: Hepatitis B virus test result (HBsAg)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HBsAg test result G.DE18&quot;:
  exists &quot;HBsAg test result G.DE18 Observation&quot;
define &quot;HBsAg test result G.DE18 Observation&quot;:
  [Observation: Concepts.&quot;HBsAg test result - HIV.G.DE18&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HBsAg test result G.DE18 */

/*
@dataElement: HIV.G.DE19 - Positive
@activity: HIV.D20 Diagnostics
@description: HBsAg test result was positive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Positive G.DE19&quot;:
  exists &quot;Positive G.DE19 Condition&quot;
    or exists &quot;Positive G.DE19 Observation&quot;
define &quot;Positive G.DE19 Condition&quot;:
  [Condition: Concepts.&quot;Positive - HIV.G.DE19&quot;]
define &quot;Positive G.DE19 Observation&quot;:
  &quot;HBsAg test result G.DE18 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Positive - HIV.G.DE19&quot;
/* End of Positive G.DE19 */

/*
@dataElement: HIV.G.DE20 - Negative
@activity: HIV.D20 Diagnostics
@description: HBsAg test result was negative
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Negative G.DE20&quot;:
  exists &quot;Negative G.DE20 Condition&quot;
    or exists &quot;Negative G.DE20 Observation&quot;
define &quot;Negative G.DE20 Condition&quot;:
  [Condition: Concepts.&quot;Negative - HIV.G.DE20&quot;]
define &quot;Negative G.DE20 Observation&quot;:
  &quot;HBsAg test result G.DE18 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Negative - HIV.G.DE20&quot;
/* End of Negative G.DE20 */

/*
@dataElement: HIV.G.DE21 - Indeterminate
@activity: HIV.D20 Diagnostics
@description: HBsAg test result was indeterminate
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Indeterminate G.DE21&quot;:
  exists &quot;Indeterminate G.DE21 Condition&quot;
    or exists &quot;Indeterminate G.DE21 Observation&quot;
define &quot;Indeterminate G.DE21 Condition&quot;:
  [Condition: Concepts.&quot;Indeterminate - HIV.G.DE21&quot;]
define &quot;Indeterminate G.DE21 Observation&quot;:
  &quot;HBsAg test result G.DE18 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Indeterminate - HIV.G.DE21&quot;
/* End of Indeterminate G.DE21 */

/*
@dataElement: HIV.G.DE42 - HCV test date
@activity: HIV.D20 Diagnostics
@description: Date client was tested for hepatitis C virus (HCV antibody, HCV RNA or HCV core antigen)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HCV test date G.DE42&quot;:
  [Observation: Concepts.&quot;HCV test date - HIV.G.DE42&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;HCV test date G.DE42 Value&quot;:
  &quot;HCV test date G.DE42&quot; O
  return O.value
/* End of HCV test date G.DE42 */

/*
@dataElement: HIV.G.DE43 - HCV test result
@activity: HIV.D20 Diagnostics
@description: Hepatitis C virus test result (HCV antibody, HCV RNA or HCV core antigen)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HCV test result G.DE43&quot;:
  exists &quot;HCV test result G.DE43 Observation&quot;
define &quot;HCV test result G.DE43 Observation&quot;:
  [Observation: Concepts.&quot;HCV test result - HIV.G.DE43&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HCV test result G.DE43 */

/*
@dataElement: HIV.G.DE44 - Positive
@activity: HIV.D20 Diagnostics
@description: HCV test result was positive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Positive G.DE44&quot;:
  exists &quot;Positive G.DE44 Condition&quot;
    or exists &quot;Positive G.DE44 Observation&quot;
define &quot;Positive G.DE44 Condition&quot;:
  [Condition: Concepts.&quot;Positive - HIV.G.DE44&quot;]
define &quot;Positive G.DE44 Observation&quot;:
  &quot;HCV test result G.DE43 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Positive - HIV.G.DE44&quot;
/* End of Positive G.DE44 */

/*
@dataElement: HIV.G.DE45 - Negative
@activity: HIV.D20 Diagnostics
@description: HCV test result was negative
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Negative G.DE45&quot;:
  exists &quot;Negative G.DE45 Condition&quot;
    or exists &quot;Negative G.DE45 Observation&quot;
define &quot;Negative G.DE45 Condition&quot;:
  [Condition: Concepts.&quot;Negative - HIV.G.DE45&quot;]
define &quot;Negative G.DE45 Observation&quot;:
  &quot;HCV test result G.DE43 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Negative - HIV.G.DE45&quot;
/* End of Negative G.DE45 */

/*
@dataElement: HIV.G.DE46 - Indeterminate
@activity: HIV.D20 Diagnostics
@description: HCV test result was indeterminate
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Indeterminate G.DE46&quot;:
  exists &quot;Indeterminate G.DE46 Condition&quot;
    or exists &quot;Indeterminate G.DE46 Observation&quot;
define &quot;Indeterminate G.DE46 Condition&quot;:
  [Condition: Concepts.&quot;Indeterminate - HIV.G.DE46&quot;]
define &quot;Indeterminate G.DE46 Observation&quot;:
  &quot;HCV test result G.DE43 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Indeterminate - HIV.G.DE46&quot;
/* End of Indeterminate G.DE46 */

/*
@dataElement: HIV.G.DE47 - HCV viral load test date
@activity: HIV.D20 Diagnostics
@description: Hepatitis C viral load test date
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HCV viral load test date G.DE47&quot;:
  [Observation: Concepts.&quot;HCV viral load test date - HIV.G.DE47&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;HCV viral load test date G.DE47 Value&quot;:
  &quot;HCV viral load test date G.DE47&quot; O
  return O.value
/* End of HCV viral load test date G.DE47 */

/*
@dataElement: HIV.G.DE48 - HCV viral load test result
@activity: HIV.D20 Diagnostics
@description: Hepatitis C viral load test result (qualitative)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HCV viral load test result G.DE48&quot;:
  exists &quot;HCV viral load test result G.DE48 Observation&quot;
define &quot;HCV viral load test result G.DE48 Observation&quot;:
  [Observation: Concepts.&quot;HCV viral load test result - HIV.G.DE48&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HCV viral load test result G.DE48 */

/*
@dataElement: HIV.G.DE49 - Detected
@activity: HIV.D20 Diagnostics
@description: HCV was detected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Detected G.DE49&quot;:
  exists &quot;Detected G.DE49 Condition&quot;
    or exists &quot;Detected G.DE49 Observation&quot;
define &quot;Detected G.DE49 Condition&quot;:
  [Condition: Concepts.&quot;Detected - HIV.G.DE49&quot;]
define &quot;Detected G.DE49 Observation&quot;:
  &quot;HCV viral load test result G.DE48 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Detected - HIV.G.DE49&quot;
/* End of Detected G.DE49 */

/*
@dataElement: HIV.G.DE50 - Not detected
@activity: HIV.D20 Diagnostics
@description: HCV was not detected
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Not detected G.DE50&quot;:
  exists &quot;Not detected G.DE50 Condition&quot;
    or exists &quot;Not detected G.DE50 Observation&quot;
define &quot;Not detected G.DE50 Condition&quot;:
  [Condition: Concepts.&quot;Not detected - HIV.G.DE50&quot;]
define &quot;Not detected G.DE50 Observation&quot;:
  &quot;HCV viral load test result G.DE48 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Not detected - HIV.G.DE50&quot;
/* End of Not detected G.DE50 */

/*
@dataElement: HIV.G.DE69 - Syphilis test date
@activity: HIV.D20 Diagnostics
@description: Date of syphilis test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Syphilis test date G.DE69&quot;:
  [Observation: Concepts.&quot;Syphilis test date - HIV.G.DE69&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Syphilis test date G.DE69 Value&quot;:
  &quot;Syphilis test date G.DE69&quot; O
  return O.value
/* End of Syphilis test date G.DE69 */

/*
@dataElement: HIV.G.DE70 - Syphilis test result
@activity: HIV.D20 Diagnostics
@description: Result from syphilis test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Syphilis test result G.DE70&quot;:
  exists &quot;Syphilis test result G.DE70 Observation&quot;
define &quot;Syphilis test result G.DE70 Observation&quot;:
  [Observation: Concepts.&quot;Syphilis test result - HIV.G.DE70&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Syphilis test result G.DE70 */

/*
@dataElement: HIV.G.DE71 - Positive
@activity: HIV.D20 Diagnostics
@description: Test result is positive for syphilis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Positive G.DE71&quot;:
  exists &quot;Positive G.DE71 Condition&quot;
    or exists &quot;Positive G.DE71 Observation&quot;
define &quot;Positive G.DE71 Condition&quot;:
  [Condition: Concepts.&quot;Positive - HIV.G.DE71&quot;]
define &quot;Positive G.DE71 Observation&quot;:
  &quot;Syphilis test result G.DE70 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Positive - HIV.G.DE71&quot;
/* End of Positive G.DE71 */

/*
@dataElement: HIV.G.DE72 - Negative
@activity: HIV.D20 Diagnostics
@description: Test result is negative for syphilis
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Negative G.DE72&quot;:
  exists &quot;Negative G.DE72 Condition&quot;
    or exists &quot;Negative G.DE72 Observation&quot;
define &quot;Negative G.DE72 Condition&quot;:
  [Condition: Concepts.&quot;Negative - HIV.G.DE72&quot;]
define &quot;Negative G.DE72 Observation&quot;:
  &quot;Syphilis test result G.DE70 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Negative - HIV.G.DE72&quot;
/* End of Negative G.DE72 */

/*
@dataElement: HIV.G.DE73 - Inconclusive
@activity: HIV.D20 Diagnostics
@description: Test result is inconclusive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Inconclusive G.DE73&quot;:
  exists &quot;Inconclusive G.DE73 Condition&quot;
    or exists &quot;Inconclusive G.DE73 Observation&quot;
define &quot;Inconclusive G.DE73 Condition&quot;:
  [Condition: Concepts.&quot;Inconclusive - HIV.G.DE73&quot;]
define &quot;Inconclusive G.DE73 Observation&quot;:
  &quot;Syphilis test result G.DE70 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Inconclusive - HIV.G.DE73&quot;
/* End of Inconclusive G.DE73 */

/*
@dataElement: HIV.H.DE34 - HIV status of partner or contact
@activity: HIV.B6 Capture or update client history
@description: HIV status of the partner or contact given by the index case
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV status of partner or contact&quot;:
  exists &quot;HIV status of partner or contact Observation&quot;
define &quot;HIV status of partner or contact Observation&quot;:
  [Observation: Concepts.&quot;HIV status of partner or contact&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HIV status of partner or contact */

/*
@dataElement: HIV.H.DE35 - Already knew positive
@activity: HIV.B6 Capture or update client history
@description: The partner or contact of the index case already knew they are HIV-positive
*/

define &quot;Already knew positive&quot;:
  [Observation: Concepts.&quot;HIV status of partner or contact&quot;] O 
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.code ~ Concepts.&quot;Already knew positive&quot;
/* End of Already knew positive */

/*
@dataElement: HIV.H.DE36 - Newly diagnosed
@activity: HIV.B6 Capture or update client history
@description: The partner or contact of the index case is newly diagnosed as HIV-positive
*/

define &quot;Newly diagnosed&quot;:
  [Observation: Concepts.&quot;HIV status of partner or contact&quot;] O 
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.code ~ Concepts.&quot;Newly diagnosed&quot;
/* End of Newly diagnosed */

/*
@dataElement: HIV.H.DE37 - Negative
@activity: HIV.B6 Capture or update client history
@description: The partner or contact of the index case is newly diagnosed is HIV-negative
*/

define &quot;Negative H.DE37&quot;:
  [Observation: Concepts.&quot;HIV status of partner or contact&quot;] O 
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.code ~ Concepts.&quot;Negative - HIV.H.DE37&quot;
/* End of Negative H.DE37 */

/*
@dataElement: HIV.H.DE41 - HIV treatment outcome
@activity: HIV.H3 Record outreach and result
@description: The outcome for the client which is used for reporting retention/attrition.
*/

define &quot;HIV treatment outcome&quot;:
  [Observation: Concepts.&quot;HIV treatment outcome&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HIV treatment outcome */

/*
@dataElement: HIV.H.DE42 - Lost to follow-up
@activity: HIV.H3 Record outreach and result
@description: Twenty-eight days or more since last missed appointment 
*/
   
/* End of Lost to follow-up */

/*
@dataElement: HIV.H.DE43 - Transferred out
@activity: HIV.H3 Record outreach and result
@description: The client transferred to another facility
*/
define &quot;Has transferred out&quot;:
  exists &quot;Transferred out&quot;

define &quot;Transferred out&quot;:
  flatten{&quot;Transferred out status&quot;,&quot;Transferred out statusHistory&quot;.statusHistory.period}

define &quot;Transferred out status&quot;:
    [EpisodeOfCare] EOC
    where exists(EOC.type T where T ~ Concepts.&quot;On ART - HIV.H.DE47&quot;)
      and EOC.status = 'finished'
    return EOC.period

define &quot;Transferred out statusHistory&quot;:
    [EpisodeOfCare] EOC
    where exists(EOC.type T where T ~ Concepts.&quot;On ART - HIV.H.DE47&quot;) 
    and (exists (
      EOC.statusHistory H
      where H.status = 'finished'
      and H.period is not null))
      


/* End of Transferred out */

/*
@dataElement: HIV.H.DE44 - Death documented
@activity: HIV.H3 Record outreach and result
@description: People living with HIV previously on ART who are confirmed to have died from any cause
*/
define &quot;Death documented&quot;:
  case 
    when Patient.deceased is FHIR.boolean and Patient.deceased ~ true then Patient.meta.lastUpdated.value
    when Patient.deceased is FHIR.dateTime then Patient.deceased as FHIR.dateTime
    else null
  end

define &quot;Has death documented&quot;:
  &quot;Death documented&quot; is not null
/* End of Death documented */

/*
@dataElement: HIV.H.DE45 - Refused stopped treatment
@activity: HIV.H3 Record outreach and result
@description: Client was contacted and confirmed to have stopped ART (reasons may include stigma and discrimination, faith healing, etc.)
*/

define &quot;Refused stopped treatment&quot;:
  [MedicationStatement] MS
    where MS.status in {'stopped'}
    and exists(MS.reasonCode C where C ~ Concepts.&quot;On ART - HIV.H.DE47&quot;)
    and exists(MS.statusReason R where R ~ Concepts.&quot;Refused stopped treatment&quot;)
    sort by start of effective.toInterval()
/* End of Refused stopped treatment */

/*
@dataElement: HIV.H.DE47 - On ART
@activity: HIV.H3 Record outreach and result
@description: Client is currently taking ART 
*/

define &quot;On ART H.DE47&quot;:
    [MedicationStatement] MS
    where exists(MS.reasonCode C where C ~ Concepts.&quot;On ART - HIV.H.DE47&quot;)
    sort by start of effective.toInterval()
/* End of On ART H.DE47 */

/*
@dataElement: HIV.H.DE73 - Date ART stopped
@activity: HIV.H3 Record outreach and result
@description: Date on which client stopped ART
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date ART stopped H.DE73&quot;:
  [Observation: Concepts.&quot;Date ART stopped - HIV.H.DE73&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date ART stopped H.DE73 Value&quot;:
  &quot;Date ART stopped H.DE73&quot; O
  return O.value
/* End of Date ART stopped H.DE73 */

/*
@dataElement: HIV.H.DE74 - Reason ART stopped
@activity: HIV.H3 Record outreach and result
@description: Reason why client intentionally stopped ART
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reason ART stopped H.DE74&quot;:
  exists &quot;Reason ART stopped H.DE74 Observation&quot;
define &quot;Reason ART stopped H.DE74 Observation&quot;:
  [Observation: Concepts.&quot;Reason ART stopped - HIV.H.DE74&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Reason ART stopped H.DE74 */

/*
@dataElement: HIV.H.DE75 - Toxicity/side effects
@activity: HIV.H3 Record outreach and result
@description: Client stopped ART because of toxicity/side effects
*/

define &quot;Toxicity/side effects H.DE75&quot;:
  [MedicationStatement] MS
    where MS.status in {'stopped'}
    and exists(MS.reasonCode C where C ~ Concepts.&quot;On ART - HIV.H.DE47&quot;)
    and exists(MS.statusReason R where R ~ Concepts.&quot;Toxicity/side effects - HIV.H.DE75&quot;)
    sort by start of effective.toInterval()
/* End of Toxicity/side effects H.DE75 */

/*
@dataElement: HIV.H.DE76 - Severe illness, hospitalization
@activity: HIV.H3 Record outreach and result
@description: Client stopped ART because of severe illness, hospitalization
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Severe illness, hospitalization H.DE76&quot;:
  exists &quot;Severe illness, hospitalization H.DE76 Condition&quot;
    or exists &quot;Severe illness, hospitalization H.DE76 Observation&quot;
define &quot;Severe illness, hospitalization H.DE76 Condition&quot;:
  [Condition: Concepts.&quot;Severe illness, hospitalization - HIV.H.DE76&quot;]
define &quot;Severe illness, hospitalization H.DE76 Observation&quot;:
  &quot;Reason ART stopped H.DE74 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Severe illness, hospitalization - HIV.H.DE76&quot;
/* End of Severe illness, hospitalization H.DE76 */

/*
@dataElement: HIV.H.DE77 - Drugs out of stock 
@activity: HIV.H3 Record outreach and result
@description: Client stopped ART because of drugs being out of stock 
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Drugs out of stock &quot;:
  exists &quot;Drugs out of stock  Condition&quot;
    or exists &quot;Drugs out of stock  Observation&quot;
define &quot;Drugs out of stock  Condition&quot;:
  [Condition: Concepts.&quot;Drugs out of stock &quot;]
define &quot;Drugs out of stock  Observation&quot;:
  &quot;Reason ART stopped H.DE74 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Drugs out of stock &quot;
/* End of Drugs out of stock  */

/*
@dataElement: HIV.H.DE78 - Client lacks finances 
@activity: HIV.H3 Record outreach and result
@description: Client stopped ART because client lacked finances 
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Client lacks finances &quot;:
  exists &quot;Client lacks finances  Condition&quot;
    or exists &quot;Client lacks finances  Observation&quot;
define &quot;Client lacks finances  Condition&quot;:
  [Condition: Concepts.&quot;Client lacks finances &quot;]
define &quot;Client lacks finances  Observation&quot;:
  &quot;Reason ART stopped H.DE74 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Client lacks finances &quot;
/* End of Client lacks finances  */

/*
@dataElement: HIV.H.DE79 - Excluded HIV infection in infant
@activity: HIV.H3 Record outreach and result
@description: Client stopped ART because the infant was determined to not have HIV
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Excluded HIV infection in infant H.DE79&quot;:
  exists &quot;Excluded HIV infection in infant H.DE79 Condition&quot;
    or exists &quot;Excluded HIV infection in infant H.DE79 Observation&quot;
define &quot;Excluded HIV infection in infant H.DE79 Condition&quot;:
  [Condition: Concepts.&quot;Excluded HIV infection in infant - HIV.H.DE79&quot;]
define &quot;Excluded HIV infection in infant H.DE79 Observation&quot;:
  &quot;Reason ART stopped H.DE74 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Excluded HIV infection in infant - HIV.H.DE79&quot;
/* End of Excluded HIV infection in infant H.DE79 */

/*
@dataElement: HIV.H.DE80 - Other reason for stopping ART
@activity: HIV.H3 Record outreach and result
@description: Client stopped ART for other reason
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other reason for stopping ART H.DE80&quot;:
  exists &quot;Other reason for stopping ART H.DE80 Condition&quot;
    or exists &quot;Other reason for stopping ART H.DE80 Observation&quot;
define &quot;Other reason for stopping ART H.DE80 Condition&quot;:
  [Condition: Concepts.&quot;Other reason for stopping ART - HIV.H.DE80&quot;]
define &quot;Other reason for stopping ART H.DE80 Observation&quot;:
  &quot;Reason ART stopped H.DE74 Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Other reason for stopping ART - HIV.H.DE80&quot;
/* End of Other reason for stopping ART H.DE80 */

/*
@dataElement: HIV.PRV.DE1 - At elevated risk for HIV acquisition
@activity: HIV.B6 Capture or update client history
@description: Client is at elevated risk for HIV acquisition, defined according to country/programme context
*/

define &quot;At elevated risk for HIV acquisition PRV.DE1&quot;:
  [Observation] O
    where O.status in { 'final', 'amended', 'corrected' }
    and exists(O.category OC where OC ~ ConceptsCustom.&quot;social-history&quot;)
    and O.code ~ Concepts.&quot;At elevated risk for HIV acquisition - HIV.PRV.DE1&quot;
/* End of At elevated risk for HIV acquisition PRV.DE1 */

/*
@dataElement: HIV.PRV.DE2 - HIV prevention intervention
@activity: HIV.B6 Capture or update client history
@description: HIV prevention intervention that client accessed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV prevention intervention&quot;:
  exists &quot;HIV prevention intervention Observation&quot;
define &quot;HIV prevention intervention Observation&quot;:
  [Observation: Concepts.&quot;HIV prevention intervention&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HIV prevention intervention */

/*
@dataElement: HIV.PRV.DE3 - PrEP service
@activity: HIV.B6 Capture or update client history
@description: Client accessed PrEP services
*/

define &quot;PrEP service&quot;:
  [MedicationStatement] MS
    where exists(MS.reasonCode C where C ~ Concepts.&quot;PrEP for HIV prevention&quot;)
    sort by start of effective.toInterval()
/* End of PrEP service */

/*
@dataElement: HIV.PRV.DE4 - OAMT
@activity: HIV.B6 Capture or update client history
@description: Client accessed opioid agonist maintenance treatment (OAMT) services
*/

define &quot;OAMT&quot;:
  flatten{&quot;OAMT status&quot;,&quot;OAMT statusHistory&quot;.statusHistory.period}

define &quot;OAMT status&quot;:
    [EpisodeOfCare] EOC
    where exists(EOC.type T where T ~ Concepts.&quot;OAMT&quot;)
    return EOC.period

define &quot;OAMT statusHistory&quot;:
    [EpisodeOfCare] EOC
    where exists(EOC.type T where T ~ Concepts.&quot;OAMT&quot;) 
    and (exists (
      EOC.statusHistory H
      where H.period is not null))




/* End of OAMT */

/*
@dataElement: HIV.PRV.DE5 - NSP
@activity: HIV.B6 Capture or update client history
@description: Client accessed needle-syringe programme (NSP) services
*/

define &quot;NSP&quot;:
  [DeviceUseStatement] DUS
  with [Device: ConceptsCustom.&quot;needle-syringe&quot;] D
      such that DUS.reasonReference.references(D) 
        and D.status in { 'active' }
  where DUS.status = 'completed'
/* End of NSP */

/*
@dataElement: HIV.PRV.DE6 - STI services
@activity: HIV.B6 Capture or update client history
@description: Client accessed sexually transmitted infection (STI) services
*/

define &quot;STI services&quot;:
  [Procedure] P
  where P.status = 'completed'
  and P.code ~ Concepts.&quot;STI testing and treatment services&quot;
/* End of STI services */

/*
@dataElement: HIV.PRV.DE7 - VMMC
@activity: HIV.B6 Capture or update client history
@description: Client accessed voluntary medical male circumcision (VMMC) services
*/
// define &quot;VMMC_done&quot;:
// [Procedure] P
//   where P.status = 'completed'
//   and P.code ~ Concepts.&quot;Voluntary medical male circumcision VMMC&quot;


define &quot;VMMC&quot;:
  [Procedure] P
  where P.status = 'completed'
  and P.code ~ Concepts.&quot;Voluntary medical male circumcision VMMC&quot;
/* End of VMMC */

/*
@dataElement: HIV.PRV.DE8 - Other
@activity: HIV.B6 Capture or update client history
@description: Client accessed other HIV prevention services
*/

define &quot;Other PRV.DE8&quot;:
  [Observation] O
    where O.status in {'final', 'amended'}
    and O.code ~ Concepts.&quot;HIV prevention intervention&quot;
    and O.value ~ Concepts.&quot;Other - HIV.PRV.DE8&quot;
    sort by start of effective.toInterval()
  
/* End of Other PRV.DE8 */

/*
@dataElement: HIV.PRV.DE10 - Date accessed HIV prevention intervention
@activity: HIV.B6 Capture or update client history
@description: Date the client accessed HIV prevention intervention
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date accessed HIV prevention intervention&quot;:
  [Observation: Concepts.&quot;Date accessed HIV prevention intervention&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date accessed HIV prevention intervention Value&quot;:
  &quot;Date accessed HIV prevention intervention&quot; O
  return O.value
/* End of Date accessed HIV prevention intervention */

/*
@dataElement: HIV.PRV.DE11 - HIV status of contact
@activity: HIV.B6 Capture or update client history
@description: The HIV status of the client's contact
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV status of contact&quot;:
  exists &quot;HIV status of contact Observation&quot;
define &quot;HIV status of contact Observation&quot;:
  [Observation: Concepts.&quot;HIV status of contact&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HIV status of contact */

/*
@dataElement: HIV.PRV.DE12 - HIV-positive
@activity: HIV.B6 Capture or update client history
@description: Client's contact is HIV-positive
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV-positive PRV.DE12&quot;:
  exists &quot;HIV-positive PRV.DE12 Condition&quot;
    or exists &quot;HIV-positive PRV.DE12 Observation&quot;
define &quot;HIV-positive PRV.DE12 Condition&quot;:
  [Condition: Concepts.&quot;HIV-positive - HIV.PRV.DE12&quot;]
define &quot;HIV-positive PRV.DE12 Observation&quot;:
  &quot;HIV status of contact Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV-positive - HIV.PRV.DE12&quot;
/* End of HIV-positive PRV.DE12 */

/*
@dataElement: HIV.PRV.DE13 - HIV-negative
@activity: HIV.B6 Capture or update client history
@description: Client's contact is HIV-negative
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV-negative PRV.DE13&quot;:
  exists &quot;HIV-negative PRV.DE13 Condition&quot;
    or exists &quot;HIV-negative PRV.DE13 Observation&quot;
define &quot;HIV-negative PRV.DE13 Condition&quot;:
  [Condition: Concepts.&quot;HIV-negative - HIV.PRV.DE13&quot;]
define &quot;HIV-negative PRV.DE13 Observation&quot;:
  &quot;HIV status of contact Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;HIV-negative - HIV.PRV.DE13&quot;
/* End of HIV-negative PRV.DE13 */

/*
@dataElement: HIV.PRV.DE14 - Unknown
@activity: HIV.B6 Capture or update client history
@description: Client does not know contact's HIV status
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Unknown PRV.DE14&quot;:
  exists &quot;Unknown PRV.DE14 Condition&quot;
    or exists &quot;Unknown PRV.DE14 Observation&quot;
define &quot;Unknown PRV.DE14 Condition&quot;:
  [Condition: Concepts.&quot;Unknown - HIV.PRV.DE14&quot;]
define &quot;Unknown PRV.DE14 Observation&quot;:
  &quot;HIV status of contact Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Unknown - HIV.PRV.DE14&quot;
/* End of Unknown PRV.DE14 */

/*
@dataElement: HIV.PRV.DE15 - Date injecting equipment provided
@activity: HIV.B21 Offer prevention options
@description: Date client was provided with injecting equipment
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date injecting equipment provided&quot;:
  [Observation: Concepts.&quot;Date injecting equipment provided&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date injecting equipment provided Value&quot;:
  &quot;Date injecting equipment provided&quot; O
  return O.value
/* End of Date injecting equipment provided */

/*
@dataElement: HIV.PRV.DE17 - Date OAMT initiated
@activity: HIV.B21 Offer prevention options
@description: Date client initiated opioid agonist maintenance treatment (OAMT)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date OAMT initiated&quot;:
  [Observation: Concepts.&quot;Date OAMT initiated&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date OAMT initiated Value&quot;:
  &quot;Date OAMT initiated&quot; O
  return O.value
/* End of Date OAMT initiated */

/*
@dataElement: HIV.PRV.DE20 - Currently on OAMT
@activity: HIV.B6 Capture or update client history
@description: Client is currently on opioid agonist maintenance treatment (OAMT) at reporting date, defined according to country/program to account for medication dispensed and LTFU criterion
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Currently on OAMT&quot;:
  exists &quot;Currently on OAMT Observation&quot;
define &quot;Currently on OAMT Observation&quot;:
  [Observation: Concepts.&quot;Currently on OAMT&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Currently on OAMT */

/*
@dataElement: HIV.PRV.DE21 - Retained on OAMT
@activity: HIV.B6 Capture or update client history
@description: Client is retained on opioid agonist maintenance treatment (OAMT) at reporting date, defined according to country/program to account for medication dispensed and LTFU criterion
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Retained on OAMT&quot;:
  exists &quot;Retained on OAMT Observation&quot;
define &quot;Retained on OAMT Observation&quot;:
  [Observation: Concepts.&quot;Retained on OAMT&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Retained on OAMT */

/*
@dataElement: HIV.PRV.DE25 - Date of loss to follow-up or OAMT stopped
@activity: HIV.B6 Capture or update client history
@description: Date of loss to follow-up or opioid agonist maintenance treatment (OAMT) stopped
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date of loss to follow-up or OAMT stopped&quot;:
  [Observation: Concepts.&quot;Date of loss to follow-up or OAMT stopped&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date of loss to follow-up or OAMT stopped Value&quot;:
  &quot;Date of loss to follow-up or OAMT stopped&quot; O
  return O.value
/* End of Date of loss to follow-up or OAMT stopped */

/*
@dataElement: HIV.PRV.DE27 - Date medications prescribed
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Date the client was prescribed medications
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date medications prescribed PRV.DE27&quot;:
  [Observation: Concepts.&quot;Date medications prescribed - HIV.PRV.DE27&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date medications prescribed PRV.DE27 Value&quot;:
  &quot;Date medications prescribed PRV.DE27&quot; O
  return O.value
/* End of Date medications prescribed PRV.DE27 */

/*
@dataElement: HIV.PRV.DE28 - Number of days prescribed
@activity: HIV.C23 Prescribe or administer PrEP or PEP
@description: Days of medication client has been prescribed
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Number of days prescribed PRV.DE28&quot;:
  [Observation: Concepts.&quot;Number of days prescribed - HIV.PRV.DE28&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Number of days prescribed PRV.DE28 Value&quot;:
  &quot;Number of days prescribed PRV.DE28&quot; O
  return O.value
/* End of Number of days prescribed PRV.DE28 */

/*
@dataElement: HIV.SRV.DE1 - HIV test date
@activity: HIV.F8 Test infant/child for HIV using testing algorithm
@description: Date of the HIV test
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV test date SRV.DE1&quot;:
  [Observation: Concepts.&quot;HIV test date - HIV.SRV.DE1&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;HIV test date SRV.DE1 Value&quot;:
  &quot;HIV test date SRV.DE1&quot; O
  return O.value
/* End of HIV test date SRV.DE1 */

/*
@dataElement: HIV.SRV.DE2 - HIV test result
@activity: HIV.B7 Test for HIV using testing algorithm
@description: The result from HIV testing after applying the testing algorithm
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV test result SRV.DE2&quot;:
  exists &quot;HIV test result SRV.DE2 Observation&quot;
define &quot;HIV test result SRV.DE2 Observation&quot;:
  [Observation: Concepts.&quot;HIV test result - HIV.SRV.DE2&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HIV test result SRV.DE2 */

/*
@dataElement: HIV.SRV.DE3 - Baseline CD4 count
@activity: HIV.D20 Diagnostics
@description: CD4 count performed at HIV diagnosis
*/

define &quot;Baseline CD4 count SRV.DE3&quot;:
  [Observation: Concepts.&quot;Baseline CD4 count - HIV.SRV.DE3&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Baseline CD4 count SRV.DE3 Value&quot;:
  &quot;Baseline CD4 count SRV.DE3&quot; O
  return O.value
/* End of Baseline CD4 count SRV.DE3 */

/*
@dataElement: HIV.SRV.DE4 - Date of baseline CD4 count test
@activity: HIV.D20 Diagnostics
@description: Date and time when baseline CD4 count test was conducted
*/

define &quot;Date of baseline CD4 count test SRV.DE4&quot;:
  &quot;Baseline CD4 count SRV.DE3&quot; O
  return O.effective.toInterval()
/* End of Date of baseline CD4 count test SRV.DE4 */

/*
@dataElement: HIV.SRV.DE5 - HIV clinical stage
@activity: HIV.D8 Capture or update client history
@description: WHO clinical stage of client based on signs and symptoms. WHO clinical staging is a way to categorize HIV disease severity based on new or recurrent clinical events. There are 4 WHO clinical stages that range from mild symptoms (WHO clinical stage 1) to severe symptoms (WHO clinical stage 4).
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV clinical stage SRV.DE5&quot;:
  exists &quot;HIV clinical stage SRV.DE5 Observation&quot;
define &quot;HIV clinical stage SRV.DE5 Observation&quot;:
  [Observation: Concepts.&quot;HIV clinical stage - HIV.SRV.DE5&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HIV clinical stage SRV.DE5 */

/*
@dataElement: HIV.SRV.DE6 - ART start date
@activity: HIV.B8 Provide post-test counselling
@description: The date on which the client started or restarted antiretroviral therapy (ART)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;ART start date SRV.DE6&quot;:
  [Observation: Concepts.&quot;ART start date - HIV.SRV.DE6&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;ART start date SRV.DE6 Value&quot;:
  &quot;ART start date SRV.DE6&quot; O
  return O.value
/* End of ART start date SRV.DE6 */

/*
@dataElement: HIV.SRV.DE7 - Currently pregnant
@activity: HIV.B6 Capture or update client history
@description: Client is currently pregnant
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Currently pregnant SRV.DE7&quot;:
  exists &quot;Currently pregnant SRV.DE7 Observation&quot;
define &quot;Currently pregnant SRV.DE7 Observation&quot;:
  [Observation: Concepts.&quot;Currently pregnant - HIV.SRV.DE7&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Currently pregnant SRV.DE7 */

/*
@dataElement: HIV.SRV.DE8 - CD4 count
@activity: HIV.D20 Diagnostics
@description: CD4 cell count in cells/mm^3
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;CD4 count SRV.DE8&quot;:
  [Observation: Concepts.&quot;CD4 count - HIV.SRV.DE8&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;CD4 count SRV.DE8 Value&quot;:
  &quot;CD4 count SRV.DE8&quot; O
  return O.value
/* End of CD4 count SRV.DE8 */

/*
@dataElement: HIV.SRV.DE12 - Date of viral load sample collection
@activity: HIV.D10 Counsel returning client
@description: Date and time when the sample was collected to test the client's HIV viral load
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Date of viral load sample collection SRV.DE12&quot;:
  [Observation: Concepts.&quot;Date of viral load sample collection - HIV.SRV.DE12&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Date of viral load sample collection SRV.DE12 Value&quot;:
  &quot;Date of viral load sample collection SRV.DE12&quot; O
  return O.value
/* End of Date of viral load sample collection SRV.DE12 */

/*
@dataElement: HIV.SRV.DE13 - Viral load test result
@activity: HIV.D20 Diagnostics
@description: Result from the viral load test in number of copies/mL
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Viral load test result SRV.DE13&quot;:
  [Observation: Concepts.&quot;Viral load test result - HIV.SRV.DE13&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Viral load test result SRV.DE13 Value&quot;:
  &quot;Viral load test result SRV.DE13&quot; O
  return O.value
/* End of Viral load test result SRV.DE13 */

/*
@dataElement: HIV.SRV.DE15 - Visit date
@activity: HIV.A2 Gather client details
@description: The date and time of the client's visit
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Visit date SRV.DE15&quot;:
  [Observation: Concepts.&quot;Visit date - HIV.SRV.DE15&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Visit date SRV.DE15 Value&quot;:
  &quot;Visit date SRV.DE15&quot; O
  return O.value
/* End of Visit date SRV.DE15 */

/*
@dataElement: HIV.SRV.DE18 - ANC contact date
@activity: HIV.E1 Capture or update mother's history
@description: The date and time of the client's ANC contact (in the ANC DAK this is called 'Contact date')
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;ANC contact date SRV.DE18&quot;:
  [Observation: Concepts.&quot;ANC contact date - HIV.SRV.DE18&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;ANC contact date SRV.DE18 Value&quot;:
  &quot;ANC contact date SRV.DE18&quot; O
  return O.value
/* End of ANC contact date SRV.DE18 */

/*
@dataElement: HIV.SRV.DE20 - HIV-exposed infant or child
@activity: HIV.F6 Check whether infant/child had HIV exposure
@description: Whether the infant or child was determined to have had HIV exposure
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV-exposed infant or child SRV.DE20&quot;:
  exists &quot;HIV-exposed infant or child SRV.DE20 Observation&quot;
define &quot;HIV-exposed infant or child SRV.DE20 Observation&quot;:
  [Observation: Concepts.&quot;HIV-exposed infant or child - HIV.SRV.DE20&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of HIV-exposed infant or child SRV.DE20 */

/*
@dataElement: HIV.SRV.DE21 - Test result of HIV assay 1
@activity: HIV.E4 Test mother for HIV using testing algorithm
@description: The result of the first HIV assay in the testing strategy
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Test result of HIV assay 1 SRV.DE21&quot;:
  exists &quot;Test result of HIV assay 1 SRV.DE21 Observation&quot;
define &quot;Test result of HIV assay 1 SRV.DE21 Observation&quot;:
  [Observation: Concepts.&quot;Test result of HIV assay 1 - HIV.SRV.DE21&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Test result of HIV assay 1 SRV.DE21 */

/*
@dataElement: HIV.SRV.DE22 - Final diagnosis of HIV-exposed infant
@activity: HIV.F20 Record infant's/child's final HIV diagnosis
@description: HIV-exposed infant final status at 18 months or 3 months after cessation of breastfeeding (whichever is later).
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Final diagnosis of HIV-exposed infant SRV.DE22&quot;:
  exists &quot;Final diagnosis of HIV-exposed infant SRV.DE22 Observation&quot;
define &quot;Final diagnosis of HIV-exposed infant SRV.DE22 Observation&quot;:
  [Observation: Concepts.&quot;Final diagnosis of HIV-exposed infant - HIV.SRV.DE22&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Final diagnosis of HIV-exposed infant SRV.DE22 */

/*
@dataElement: HIV.Config.DE6 - Malaria-endemic setting
@activity: HIV.Configuration
@description: Whether the setting is a malaria-endemic setting
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Malaria-endemic setting&quot;:
  exists &quot;Malaria-endemic setting Observation&quot;
define &quot;Malaria-endemic setting Observation&quot;:
  [Observation: Concepts.&quot;Malaria-endemic setting&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of Malaria-endemic setting */

/*
@dataElement: HIV.Config.DE12 - HIV burden of the setting
@activity: HIV.Configuration
@description: HIV burden of the setting (high or low) based on the national HIV prevalence or where the HIV prevalence and/or incidence in a geographical setting is higher than national prevalence and, therefore, needs priority in the HIV response
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HIV burden of the setting&quot;:
  exists &quot;HIV burden of the setting Observation&quot;
define &quot;HIV burden of the setting Observation&quot;:
  [Observation: Concepts.&quot;HIV burden of the setting&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of HIV burden of the setting */

/*
@dataElement: HIV.Config.DE13 - High HIV burden setting
@activity: HIV.Configuration
@description: Settings with &gt;5% national HIV prevalence and subpopulations and geographic settings where HIV prevalence and/or incidence is higher than nationally.
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;High HIV burden setting&quot;:
  exists &quot;High HIV burden setting Condition&quot;
    or exists &quot;High HIV burden setting Observation&quot;
define &quot;High HIV burden setting Condition&quot;:
  [Condition: Concepts.&quot;High HIV burden setting&quot;]
define &quot;High HIV burden setting Observation&quot;:
  &quot;HIV burden of the setting Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;High HIV burden setting&quot;
/* End of High HIV burden setting */

/*
@dataElement: HIV.Config.DE14 - Low HIV burden setting
@activity: HIV.Configuration
@description: Settings with &lt;5% HIV national prevalence but where certain populations (primarily key populations and their partners) and geographic settings may have higher HIV prevalence and/or incidence than nationally and, therefore, need priority in the HIV response
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Low HIV burden setting&quot;:
  exists &quot;Low HIV burden setting Condition&quot;
    or exists &quot;Low HIV burden setting Observation&quot;
define &quot;Low HIV burden setting Condition&quot;:
  [Condition: Concepts.&quot;Low HIV burden setting&quot;]
define &quot;Low HIV burden setting Observation&quot;:
  &quot;HIV burden of the setting Observation&quot; O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value ~ Concepts.&quot;Low HIV burden setting&quot;
/* End of Low HIV burden setting */

/*
@dataElement: HIV.Config.DE15 - HPV DNA testing operational at the health facility
@activity: HIV.Configuration
@description: Is HPV DNA testing operational at the health facility for cervical cancer screening?
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;HPV DNA testing operational at the health facility&quot;:
  exists &quot;HPV DNA testing operational at the health facility Observation&quot;
define &quot;HPV DNA testing operational at the health facility Observation&quot;:
  [Observation: Concepts.&quot;HPV DNA testing operational at the health facility&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
      and O.value is true
/* End of HPV DNA testing operational at the health facility */

/*
@dataElement: HIV.Config.DE19 - Other priority populations
@activity: HIV.Configuration
@description: Other populations of priority of HIV prevention and care in local context (provided during adaptation)
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Other priority populations&quot;:
  exists &quot;Other priority populations Observation&quot;
define &quot;Other priority populations Observation&quot;:
  [Observation: Concepts.&quot;Other priority populations&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
/* End of Other priority populations */

/*
@dataElement: HIV.Config.DE20 - Reporting period end date
@activity: HIV.Configuration
@description: End date of the reporting period
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reporting period end date&quot;:
  [Observation: Concepts.&quot;Reporting period end date&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Reporting period end date Value&quot;:
  &quot;Reporting period end date&quot; O
  return O.value
/* End of Reporting period end date */

/*
@dataElement: HIV.Config.DE21 - Reporting period start date
@activity: HIV.Configuration
@description: Start date of the reporting period
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reporting period start date&quot;:
  [Observation: Concepts.&quot;Reporting period start date&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Reporting period start date Value&quot;:
  &quot;Reporting period start date&quot; O
  return O.value
/* End of Reporting period start date */

/*
@dataElement: HIV.Config.DE22 - Reporting date
@activity: HIV.Configuration
@description: Reporting date, for surveys performed on a specific date
*/
// TODO: Replace placeholder with relevant CQL logic
define &quot;Reporting date&quot;:
  [Observation: Concepts.&quot;Reporting date&quot;] O
    where O.status in { 'final', 'amended', 'corrected' }
define &quot;Reporting date Value&quot;:
  &quot;Reporting date&quot; O
  return O.value
/* End of Reporting date */


/*
 * Custom elements and logic for use DT and IND CQL Libraries
 */

define &quot;First On ART&quot;:
  (First(&quot;On ART D.DE38&quot;))</code></pre><p><code>No Content</code> (<code>application/elm+xml</code>)</p></div>
  </text>
  <extension url="http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability">
    <valueCode value="computable"/>
  </extension>
  <url value="http://smart.who.int/hiv/Library/HIVElements"/>
  <version value="0.2.0"/>
  <name value="HIVElements"/>
  <title value="HIVElements"/>
  <status value="draft"/>
  <experimental value="true"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2024-08-14T10:49:52+00:00"/>
  <publisher value="WHO"/>
  <contact>
    <name value="WHO"/>
    <telecom>
      <system value="url"/>
      <value value="http://who.int"/>
    </telecom>
  </contact>
  <description value="Description not yet available for HIVElements."/>
  <content>
    <contentType value="text/cql"/>
    <data value="bGlicmFyeSBISVZFbGVtZW50cwoKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKCi8vaW5jbHVkZSBmaGlyLmNxZi5jb21tb24uRkhJUkNvbW1vbiBjYWxsZWQgRkMKaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScKCmluY2x1ZGUgV0hPQ29uY2VwdHMKaW5jbHVkZSBXSE9Db21tb24gY2FsbGVkIFdDCmluY2x1ZGUgV0hPRWxlbWVudHMgY2FsbGVkIFdFCgppbmNsdWRlIEhJVkNvbmNlcHRzIGNhbGxlZCBDb25jZXB0cwppbmNsdWRlIEhJVkNvbmNlcHRzQ3VzdG9tIGNhbGxlZCBDb25jZXB0c0N1c3RvbQppbmNsdWRlIEhJVkNvbW1vbiBjYWxsZWQgQ29tbW9uCgpjb250ZXh0IFBhdGllbnQKCi8qKgogKiBISVYgRWxlbWVudHMKICovCgovKiBHZW5lcmFsIEVsZW1lbnQgRGVmaW5pdGlvbnMgKi8KCi8vIEZyb20gQ29tbW9uCgovLyBFeHBvc3VyZSB0byBISVYKZGVmaW5lIEV4cG9zdXJlX09jY3VwYXRpb25hbDoKICBleGlzdHMgKAogICAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSElWIGV4cG9zdXJlIHR5cGUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgYW5kIGV4aXN0cyhPLmNhdGVnb3J5IE9DIHdoZXJlIE9DIH4gQ29uY2VwdHNDdXN0b20uInNvY2lhbC1oaXN0b3J5IikKICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk9jY3VwYXRpb25hbCIKICApCgpkZWZpbmUgRXhwb3N1cmVfTm9uX09jY3VwYXRpb25hbF92aW9sZW50OgogIGV4aXN0cyAoCiAgICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJISVYgZXhwb3N1cmUgdHlwZSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICBhbmQgZXhpc3RzKE8uY2F0ZWdvcnkgT0Mgd2hlcmUgT0MgfiBDb25jZXB0c0N1c3RvbS4ic29jaWFsLWhpc3RvcnkiKQogICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTm9uLW9jY3VwYXRpb25hbCB2aW9sZW50IgogICkKCmRlZmluZSBFeHBvc3VyZV9Ob25fT2NjdXBhdGlvbmFsX2NvbnNlbnN1YWxfc2V4OgogIGV4aXN0cyAoCiAgICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJISVYgZXhwb3N1cmUgdHlwZSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICBhbmQgZXhpc3RzKE8uY2F0ZWdvcnkgT0Mgd2hlcmUgT0MgfiBDb25jZXB0c0N1c3RvbS4ic29jaWFsLWhpc3RvcnkiKQogICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTm9uLW9jY3VwYXRpb25hbCBjb25zZW5zdWFsIHNleCIKICApCgovLyBOZWVkbGUgU3lyaW5nZSBEaXNwZW5zZWQKZGVmaW5lICJOZWVkbGUgU3lyaW5nZSBEaXNwZW5zZWQiOiAgCiAgW0RldmljZVVzZVN0YXRlbWVudF0gRFVTCiAgd2l0aCBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJLZXkgcG9wdWxhdGlvbiBtZW1iZXIgLSBISVYuRS5ERTExMyJdIE8KICAgICAgc3VjaCB0aGF0IERVUy5yZWFzb25SZWZlcmVuY2UucmVmZXJlbmNlcyhPKSAKICAgICAgICBhbmQgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgICBhbmQgZXhpc3RzKE8uY2F0ZWdvcnkgT0Mgd2hlcmUgT0MgfiBDb25jZXB0c0N1c3RvbS4ic29jaWFsLWhpc3RvcnkiKQogICAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIC0gSElWLkIuREU1NCIKICB3aGVyZSBEVVMuc3RhdHVzID0gJ2NvbXBsZXRlZCcKCmRlZmluZSAiSElWIFBSRVAgQWN0aXZlIjoKW01lZGljYXRpb25TdGF0ZW1lbnRdIE1TCiAgICB3aGVyZSBNUy5zdGF0dXMgPSAnY29tcGxldGVkJwogICAgYW5kIGV4aXN0cyhNUy5yZWFzb25Db2RlIEMgd2hlcmUgQyB+IENvbmNlcHRzLiJQckVQIGZvciBISVYgcHJldmVudGlvbiIpCgogZGVmaW5lICJDbGllbnQgaXMgYXQgZWxldmF0ZWQgcmlzayBmb3IgSElWIGFjcXVpc2l0aW9uIjoKICAgIFtPYnNlcnZhdGlvbl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgIGFuZCBleGlzdHMoTy5jYXRlZ29yeSBPQyB3aGVyZSBPQyB+IENvbmNlcHRzQ3VzdG9tLiJzb2NpYWwtaGlzdG9yeSIpCiAgICBhbmQgTy5jb2RlIH4gQ29uY2VwdHMuIkF0IGVsZXZhdGVkIHJpc2sgZm9yIEhJViBhY3F1aXNpdGlvbiAtIEhJVi5CLkRFMjI1IgoKZGVmaW5lICJQUkVQIFByZXNjcmlwdGlvbiI6CiAgW01lZGljYXRpb25SZXF1ZXN0XSBNUgogICAgd2hlcmUgTVIuc3RhdHVzID0gJ2NvbXBsZXRlZCcKICAgIGFuZCBNUi5pbnRlbnQgPSAnb3JkZXInCiAgICBhbmQgTVIubWVkaWNhdGlvbiB+IENvbmNlcHRzLiJQckVQIGZvciBISVYgcHJldmVudGlvbiIKCmRlZmluZSAiUEVQIFByZXNjcmlwdGlvbiI6CiAgW01lZGljYXRpb25SZXF1ZXN0XSBNUgogICAgICB3aGVyZSBNUi5zdGF0dXMgPSAnY29tcGxldGVkJwogICAgICBhbmQgTVIuaW50ZW50ID0gJ29yZGVyJwogICAgICBhbmQgTVIubWVkaWNhdGlvbiB+IENvbmNlcHRzLiJQRVAgZm9yIEhJViBwcmV2ZW50aW9uIgoKZGVmaW5lICJyb3V0aW5lIHZpcmFsIGxvYWQgc2FtcGxlIGNvbGxlY3Rpb24iOgogIFtQcm9jZWR1cmVdIFAKICB3aGVyZSBQLnN0YXR1cyA9ICdjb21wbGV0ZWQnCiAgYW5kIFAuY29kZSB+IENvbmNlcHRzQ3VzdG9tLiJ2aXJhbCBsb2FkIHRlc3QiCiAgYW5kIGV4aXN0cyhQLnJlYXNvbkNvZGUgUkMgd2hlcmUgUkMgfiBDb25jZXB0cy4iUm91dGluZSB2aXJhbCBsb2FkIHRlc3QiKQoKZGVmaW5lICJ2aXJhbCBsb2FkIHNhbXBsZSBjb2xsZWN0aW9uIjoKICBbUHJvY2VkdXJlXSBQCiAgd2hlcmUgUC5zdGF0dXMgPSAnY29tcGxldGVkJwogIGFuZCBQLmNvZGUgfiBDb25jZXB0c0N1c3RvbS4idmlyYWwgbG9hZCB0ZXN0IgoKZGVmaW5lICJISVYgUG9zaXRpdmUgQ29uZGl0aW9uIjoKW0NvbmRpdGlvbl0gQwogICAgd2hlcmUgQy5jbGluaWNhbFN0YXR1cyB+IENvbmNlcHRzQ3VzdG9tLiJhY3RpdmUiCiAgICBhbmQgZXhpc3RzKEMuY2F0ZWdvcnkgQ0Mgd2hlcmUgQ0MgfiBDb25jZXB0c0N1c3RvbS4iZW5jb3VudGVyLWRpYWdub3NpcyIpCiAgICBhbmQgQy5jb2RlIH4gQ29uY2VwdHMuIkhJVi1wb3NpdGl2ZSAtIEhJVi5CLkRFMTE2IgogICAgc29ydCBieSBzdGFydCBvZiBvbnNldC50b0ludGVydmFsKCkKCmRlZmluZSAiRmlyc3QgSElWIFRyZWF0bWVudCI6CiAgRmlyc3QoIk9uIEFSVCBILkRFNDciKQoKZGVmaW5lICJGaXJzdCBISVYgUG9zaXRpdmUgQ29uZGl0aW9uIjoKICBGaXJzdCgiSElWIFBvc2l0aXZlIENvbmRpdGlvbiIpCiAgCgovKiBPbiBBUlQgLSBpbmNsdWRlcyAiT24gQVJUIC0gSElWLkIuREU0NyIgYW5kICJPbiBBUlQgLSBISVYuQi5ERTQ4IiAqLwpkZWZpbmUgIkFSVCBNZWRpY2F0aW9uIFN0YXRlbWVudCI6CiAgW01lZGljYXRpb25TdGF0ZW1lbnQ6IENvbmNlcHRzLiJBUlQgcmVnaW1lbiBDaG9pY2VzIl0gTVMKICBzb3J0IGJ5IHN0YXJ0IG9mIGVmZmVjdGl2ZS50b0ludGVydmFsKCkKCmRlZmluZSAiT24gQVJUIjoKICBleGlzdHMgIkFSVCBNZWRpY2F0aW9uIFN0YXRlbWVudCIKCmRlZmluZSAiQVJUIHN0YXJ0IGRhdGUiOgogICJBUlQgTWVkaWNhdGlvbiBTdGF0ZW1lbnQiIE1TCiAgcmV0dXJuIHN0YXJ0IG9mIE1TLmVmZmVjdGl2ZS50b0ludGVydmFsKCkKCmRlZmluZSAiRmlyc3QgT24gQVJUIjoKICAoRmlyc3QoIk9uIEFSVCBELkRFMzgiKSkKCmRlZmluZSAiVmlyYWwgbG9hZCB0ZXN0cyByZWNlaXZlZCBhZnRlciBBUlQgaW50aXRpYXRpb24iOgogICJWaXJhbCBsb2FkIHRlc3QgcmVzdWx0IEQuREUzODciIE8KICB3aGVyZSBzdGFydCBvZiBPLmlzc3VlZC50b0ludGVydmFsKCkgYWZ0ZXIgc3RhcnQgb2YgIkZpcnN0IE9uIEFSVCIuZWZmZWN0aXZlLnRvSW50ZXJ2YWwoKQogIHNvcnQgYnkgc3RhcnQgb2YgaXNzdWVkLnRvSW50ZXJ2YWwoKQoKLy8gRW50cmllcyBiYXNlZCBvbiBEQUsgRGF0YSBEaWN0aW9uYXJ5IGZvciBEYXRhIEVsZW1lbnRzIG1hcmtlZCBhcyB1c2VkCi8vIGluIGF0IGxlYXN0IG9uZSBEZWNpc2lvbiBTdXBwb3J0IFRhYmxlIG9yIEFnZ3JlZ2F0ZSBJbmRpY2F0b3IKCi8qCkBkYXRhRWxlbWVudDogSElWLkEuREUzIC0gVmlzaXQgZGF0ZQpAYWN0aXZpdHk6IEhJVi5BMiBHYXRoZXIgY2xpZW50IGRldGFpbHMKQGRlc2NyaXB0aW9uOiBUaGUgZGF0ZSBhbmQgdGltZSBvZiB0aGUgY2xpZW50J3MgdmlzaXQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlZpc2l0IGRhdGUgQS5ERTMiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlZpc2l0IGRhdGUgLSBISVYuQS5ERTMiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIlZpc2l0IGRhdGUgQS5ERTMgVmFsdWUiOgogICJWaXNpdCBkYXRlIEEuREUzIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIFZpc2l0IGRhdGUgQS5ERTMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkEuREUxNiAtIEVzdGltYXRlZCBhZ2UKQGFjdGl2aXR5OiBISVYuQTYuMSBSZXZpZXcgc29jaW9kZW1vZ3JhcGhpYyBkYXRhIHdpdGggY2xpZW50IHwgSElWLkE1IENyZWF0ZSBuZXcgY2xpZW50IHJlY29yZApAZGVzY3JpcHRpb246IElmIERPQiBpcyB1bmtub3duLCBlbnRlciB0aGUgY2xpZW50J3MgZXN0aW1hdGVkIGFnZS4gRGlzcGxheSBjbGllbnQncyBhZ2UgaW4gbnVtYmVyIG9mIHllYXJzLgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRXN0aW1hdGVkIGFnZSI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iRXN0aW1hdGVkIGFnZSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRXN0aW1hdGVkIGFnZSBWYWx1ZSI6CiAgIkVzdGltYXRlZCBhZ2UiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgRXN0aW1hdGVkIGFnZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQS5ERTE3IC0gQWdlCkBhY3Rpdml0eTogSElWLkE2LjEgUmV2aWV3IHNvY2lvZGVtb2dyYXBoaWMgZGF0YSB3aXRoIGNsaWVudCB8IEhJVi5BNSBDcmVhdGUgbmV3IGNsaWVudCByZWNvcmQKQGRlc2NyaXB0aW9uOiBDYWxjdWxhdGVkIGFnZSAobnVtYmVyIG9mIHllYXJzKSBvZiB0aGUgY2xpZW50IGJhc2VkIG9uIGRhdGUgb2YgYmlydGgKKi8KLyoqIAogKiBAZGF0YUVsZW1lbnQgUGF0aWVudCBhZ2UgaW4geWVhcnMKICovCmRlZmluZSAiQ3VycmVudCBQYXRpZW50IEFnZSBJbiBZZWFycyI6CiAgQWdlSW5ZZWFyc0F0KFRvZGF5KCkpCgovKiogCiAqIEBkYXRhRWxlbWVudCBQYXRpZW50IGFnZSBpbiB3ZWVrcwogKi8KZGVmaW5lICJDdXJyZW50IFBhdGllbnQgQWdlIEluIFdlZWtzIjoKICBBZ2VJbldlZWtzQXQoVG9kYXkoKSkKCi8qKiAKICogQGRhdGFFbGVtZW50IFBhdGllbnQgYWdlIGluIG1vbnRocwogKi8KZGVmaW5lICJDdXJyZW50IFBhdGllbnQgQWdlIEluIE1vbnRocyI6CiAgQWdlSW5Nb250aHNBdChUb2RheSgpKQovKiBFbmQgb2YgQWdlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5BLkRFMTggLSBHZW5kZXIKQGFjdGl2aXR5OiBISVYuQTYuMSBSZXZpZXcgc29jaW9kZW1vZ3JhcGhpYyBkYXRhIHdpdGggY2xpZW50IHwgSElWLkE1IENyZWF0ZSBuZXcgY2xpZW50IHJlY29yZApAZGVzY3JpcHRpb246IEdlbmRlciBvZiB0aGUgY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJHZW5kZXIiOgogIGV4aXN0cyAiR2VuZGVyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkdlbmRlciBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iR2VuZGVyIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEdlbmRlciAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQS5ERTE5IC0gRmVtYWxlCkBhY3Rpdml0eTogSElWLkE2LjEgUmV2aWV3IHNvY2lvZGVtb2dyYXBoaWMgZGF0YSB3aXRoIGNsaWVudCB8IEhJVi5BNSBDcmVhdGUgbmV3IGNsaWVudCByZWNvcmQKQGRlc2NyaXB0aW9uOiBDbGllbnQgaWRlbnRpZmllcyBhcyBmZW1hbGUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkZlbWFsZSI6CiAgZXhpc3RzICJGZW1hbGUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJGZW1hbGUgT2JzZXJ2YXRpb24iCmRlZmluZSAiRmVtYWxlIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkZlbWFsZSJdCmRlZmluZSAiRmVtYWxlIE9ic2VydmF0aW9uIjoKICAiR2VuZGVyIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJGZW1hbGUiCi8qIEVuZCBvZiBGZW1hbGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkEuREUyMCAtIE1hbGUKQGFjdGl2aXR5OiBISVYuQTYuMSBSZXZpZXcgc29jaW9kZW1vZ3JhcGhpYyBkYXRhIHdpdGggY2xpZW50IHwgSElWLkE1IENyZWF0ZSBuZXcgY2xpZW50IHJlY29yZApAZGVzY3JpcHRpb246IENsaWVudCBpZGVudGlmaWVzIGFzIG1hbGUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk1hbGUiOgogIGV4aXN0cyAiTWFsZSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk1hbGUgT2JzZXJ2YXRpb24iCmRlZmluZSAiTWFsZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJNYWxlIl0KZGVmaW5lICJNYWxlIE9ic2VydmF0aW9uIjoKICAiR2VuZGVyIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJNYWxlIgovKiBFbmQgb2YgTWFsZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQS5ERTIxIC0gVHJhbnNnZW5kZXIgbWFsZQpAYWN0aXZpdHk6IEhJVi5BNi4xIFJldmlldyBzb2Npb2RlbW9ncmFwaGljIGRhdGEgd2l0aCBjbGllbnQgfCBISVYuQTUgQ3JlYXRlIG5ldyBjbGllbnQgcmVjb3JkCkBkZXNjcmlwdGlvbjogQ2xpZW50IGlkZW50aWZpZXMgYXMgdHJhbnNnZW5kZXIgbWFsZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVHJhbnNnZW5kZXIgbWFsZSI6CiAgZXhpc3RzICJUcmFuc2dlbmRlciBtYWxlIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVHJhbnNnZW5kZXIgbWFsZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJUcmFuc2dlbmRlciBtYWxlIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlRyYW5zZ2VuZGVyIG1hbGUiXQpkZWZpbmUgIlRyYW5zZ2VuZGVyIG1hbGUgT2JzZXJ2YXRpb24iOgogICJHZW5kZXIgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlRyYW5zZ2VuZGVyIG1hbGUiCi8qIEVuZCBvZiBUcmFuc2dlbmRlciBtYWxlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5BLkRFMjIgLSBUcmFuc2dlbmRlciBmZW1hbGUKQGFjdGl2aXR5OiBISVYuQTYuMSBSZXZpZXcgc29jaW9kZW1vZ3JhcGhpYyBkYXRhIHdpdGggY2xpZW50IHwgSElWLkE1IENyZWF0ZSBuZXcgY2xpZW50IHJlY29yZApAZGVzY3JpcHRpb246IENsaWVudCBpZGVudGlmaWVzIGFzIHRyYW5zZ2VuZGVyIGZlbWFsZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVHJhbnNnZW5kZXIgZmVtYWxlIjoKICBleGlzdHMgIlRyYW5zZ2VuZGVyIGZlbWFsZSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlRyYW5zZ2VuZGVyIGZlbWFsZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJUcmFuc2dlbmRlciBmZW1hbGUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVHJhbnNnZW5kZXIgZmVtYWxlIl0KZGVmaW5lICJUcmFuc2dlbmRlciBmZW1hbGUgT2JzZXJ2YXRpb24iOgogICJHZW5kZXIgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlRyYW5zZ2VuZGVyIGZlbWFsZSIKLyogRW5kIG9mIFRyYW5zZ2VuZGVyIGZlbWFsZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQS5ERTIzIC0gT3RoZXIKQGFjdGl2aXR5OiBISVYuQTYuMSBSZXZpZXcgc29jaW9kZW1vZ3JhcGhpYyBkYXRhIHdpdGggY2xpZW50IHwgSElWLkE1IENyZWF0ZSBuZXcgY2xpZW50IHJlY29yZApAZGVzY3JpcHRpb246IEFkZGl0aW9uYWwgY2F0ZWdvcnkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk90aGVyIEEuREUyMyI6CiAgZXhpc3RzICJPdGhlciBBLkRFMjMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPdGhlciBBLkRFMjMgT2JzZXJ2YXRpb24iCmRlZmluZSAiT3RoZXIgQS5ERTIzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk90aGVyIC0gSElWLkEuREUyMyJdCmRlZmluZSAiT3RoZXIgQS5ERTIzIE9ic2VydmF0aW9uIjoKICAiR2VuZGVyIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJPdGhlciAtIEhJVi5BLkRFMjMiCi8qIEVuZCBvZiBPdGhlciBBLkRFMjMgKi8KCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CIEhUUyBWaXNpdCBFbm91bnRlcgpAYWN0aXZpdHk6IEhJVi5CMSBEZXRlcm1pbmUgcmVhc29uIGZvciB2aXNpdApAZGVzY3JpcHRpb246IEVuY291bnRlciBmb3IgSElWIHRlc3Rpbmcgc2VydmljZXMgdmlzaXQKKi8KZGVmaW5lICJIVFMgVmlzaXQgRW5jb3VudGVyIjoKICBbRW5jb3VudGVyXSBFCiAgICB3aGVyZSBFLnR5cGUuY29kaW5nLmNvZGUgY29udGFpbnMgQ29uY2VwdHNDdXN0b20uIkhUUyBWaXNpdCIuY29kZQoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTEgLSBSZWFzb24gZm9yIHZpc2l0CkBhY3Rpdml0eTogSElWLkIxIERldGVybWluZSByZWFzb24gZm9yIHZpc2l0CkBkZXNjcmlwdGlvbjogUmVhc29uIGZvciBISVYgdGVzdGluZyBzZXJ2aWNlcyB2aXNpdAoqLwpkZWZpbmUgIlJlYXNvbiBmb3IgdmlzaXQgQi5ERTEiOgogICJIVFMgVmlzaXQgRW5jb3VudGVyIiBFCiAgcmV0dXJuIEUucmVhc29uQ29kZSAKLyogRW5kIG9mIFJlYXNvbiBmb3IgdmlzaXQgQi5ERTEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyIC0gRmlyc3QtdGltZSBISVYgdGVzdApAYWN0aXZpdHk6IEhJVi5CMSBEZXRlcm1pbmUgcmVhc29uIGZvciB2aXNpdApAZGVzY3JpcHRpb246IEZpcnN0IGVuY291bnRlciBmb3Igc2NyZWVuaW5nIGZvciBodW1hbiBpbW11bm9kZWZpY2llbmN5IHZpcnVzCiovCmRlZmluZSAiRmlyc3QtdGltZSBISVYgdGVzdCBFbmNvdW50ZXIiOgogICJIVFMgVmlzaXQgRW5jb3VudGVyIiBFCiAgd2hlcmUgRS5yZWFzb25Db2RlLmNvZGluZy5jb2RlIGNvbnRhaW5zIENvbmNlcHRzLiJGaXJzdC10aW1lIEhJViB0ZXN0Ii5jb2RlCi8qIEVuZCBvZiBGaXJzdC10aW1lIEhJViB0ZXN0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMyAtIFJldGVzdGluZyBmb3IgSElWCkBhY3Rpdml0eTogSElWLkIxIERldGVybWluZSByZWFzb24gZm9yIHZpc2l0CkBkZXNjcmlwdGlvbjogUmV0ZXN0aW5nIGZvciBodW1hbiBpbW11bm9kZWZpY2llbmN5IHZpcnVzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZXRlc3RpbmcgZm9yIEhJViBCLkRFMyBFbmNvdW50ZXIiOgogICJIVFMgVmlzaXQgRW5jb3VudGVyIiBFCiAgd2hlcmUgRS5yZWFzb25Db2RlLmNvZGluZy5jb2RlIGNvbnRhaW5zIENvbmNlcHRzLiJSZXRlc3RpbmcgZm9yIEhJViAtIEhJVi5CLkRFMyIuY29kZQovKiBFbmQgb2YgUmV0ZXN0aW5nIGZvciBISVYgQi5ERTMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU0IC0gSElWIHRlc3Rpbmcgc2VydmljZXMgdmlzaXQKQGFjdGl2aXR5OiBISVYuQjEgRGV0ZXJtaW5lIHJlYXNvbiBmb3IgdmlzaXQKQGRlc2NyaXB0aW9uOiBDbGllbnQgYXR0ZW5kaW5nIGZhY2lsaXR5IGZvciBISVYgdGVzdGluZyBzZXJ2aWNlcyB2aXNpdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSElWIHRlc3Rpbmcgc2VydmljZXMgdmlzaXQgRW5jb3VudGVyIjoKICAiSFRTIFZpc2l0IEVuY291bnRlciIgRQogIHdoZXJlIEUucmVhc29uQ29kZS5jb2RpbmcuY29kZSBjb250YWlucyBDb25jZXB0cy4iSElWIHRlc3Rpbmcgc2VydmljZXMgdmlzaXQiLmNvZGUKLyogRW5kIG9mIEhJViB0ZXN0aW5nIHNlcnZpY2VzIHZpc2l0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFNSAtIFJlZmVycmVkIHRocm91Z2ggcGFydG5lciBzZXJ2aWNlcwpAYWN0aXZpdHk6IEhJVi5CMSBEZXRlcm1pbmUgcmVhc29uIGZvciB2aXNpdApAZGVzY3JpcHRpb246IENsaWVudCByZXBvcnRlZCBjb21pbmcgdG8gdGhlIGZhY2lsaXR5IGFmdGVyIHJlY2VpdmluZyBhIHByb3ZpZGVyLWFzc2lzdGVkIHJlZmVycmFsIG9yIHBhdGllbnQgcmVmZXJyYWwgZnJvbSBhIGNvbnRhY3Qgb3IgcGFydG5lcgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmVmZXJyZWQgdGhyb3VnaCBwYXJ0bmVyIHNlcnZpY2VzIjoKICBleGlzdHMgIlJlZmVycmVkIHRocm91Z2ggcGFydG5lciBzZXJ2aWNlcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJSZWZlcnJlZCB0aHJvdWdoIHBhcnRuZXIgc2VydmljZXMgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlJlZmVycmVkIHRocm91Z2ggcGFydG5lciBzZXJ2aWNlcyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBSZWZlcnJlZCB0aHJvdWdoIHBhcnRuZXIgc2VydmljZXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU2IC0gUGFydG5lciBvciBjb250YWN0IG9mIGFuIGluZGV4IGNhc2UKQGFjdGl2aXR5OiBISVYuQjEgRGV0ZXJtaW5lIHJlYXNvbiBmb3IgdmlzaXQKQGRlc2NyaXB0aW9uOiBUaGUgY2xpZW50IGlzIGEgY29udGFjdCBvciBwYXJ0bmVyIG9mIGEgcGVyc29uIGRpYWdub3NlZCB3aXRoIEhJViAoYW4gaW5kZXggY2FzZSkKKi8KCmRlZmluZSAiUGFydG5lciBvciBjb250YWN0IG9mIGFuIGluZGV4IGNhc2UiOgogICAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iUmVmZXJyZWQgdGhyb3VnaCBwYXJ0bmVyIHNlcnZpY2VzIl0gTyAKICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICBhbmQgZXhpc3RzKE8uY2F0ZWdvcnkgT0Mgd2hlcmUgT0MgfiBDb25jZXB0c0N1c3RvbS4ic29jaWFsLWhpc3RvcnkiKQogICAgYW5kIE8uY29kZSB+IENvbmNlcHRzLiJQYXJ0bmVyIG9yIGNvbnRhY3Qgb2YgYW4gaW5kZXggY2FzZSIKICAKZGVmaW5lICJEcnVnLWluamVjdGluZyBwYXJ0bmVyIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJUeXBlIG9mIGNvbnRhY3Qgb3IgcGFydG5lciBmb3IgcGFydG5lciBzZXJ2aWNlcyJdIE8gCiAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICBhbmQgZXhpc3RzKE8uY2F0ZWdvcnkgT0Mgd2hlcmUgT0MgfiBDb25jZXB0c0N1c3RvbS4ic29jaWFsLWhpc3RvcnkiKQogIGFuZCBPLmNvZGUgfiBDb25jZXB0cy4iRHJ1Zy1pbmplY3RpbmcgcGFydG5lciAtIEhJVi5CLkRFMTAiCgpkZWZpbmUgIlNleHVhbCBwYXJ0bmVyIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJUeXBlIG9mIGNvbnRhY3Qgb3IgcGFydG5lciBmb3IgcGFydG5lciBzZXJ2aWNlcyJdIE8gCiAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICBhbmQgZXhpc3RzKE8uY2F0ZWdvcnkgT0Mgd2hlcmUgT0MgfiBDb25jZXB0c0N1c3RvbS4ic29jaWFsLWhpc3RvcnkiKQogIGFuZCBPLmNvZGUgfiBDb25jZXB0cy4iU2V4dWFsIHBhcnRuZXIgLSBISVYuQi5ERTExIiAKCi8vSElWIHN0YXR1cyBvZiBwYXJ0bmVyIG9yIGNvbnRhY3QgKGFscmVhZHkga25vd24gcG9zaXRpdmUsIG5ld2x5IGRpYWdub3NlZCBwb3NpdGl2ZSwgbmVnYXRpdmUpIAoKZGVmaW5lICJhbHJlYWR5IGtub3duIHBvc2l0aXZlIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJISVYgc3RhdHVzIG9mIHBhcnRuZXIgb3IgY29udGFjdCJdIE8gCiAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICBhbmQgZXhpc3RzKE8uY2F0ZWdvcnkgT0Mgd2hlcmUgT0MgfiBDb25jZXB0c0N1c3RvbS4ic29jaWFsLWhpc3RvcnkiKQogIGFuZCBPLmNvZGUgfiBDb25jZXB0cy4iQWxyZWFkeSBrbmV3IHBvc2l0aXZlIgoKZGVmaW5lICJOZWdhdGl2ZSAtIEhJVi5ILkRFMzciOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhJViBzdGF0dXMgb2YgcGFydG5lciBvciBjb250YWN0Il0gTyAKICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogIGFuZCBleGlzdHMoTy5jYXRlZ29yeSBPQyB3aGVyZSBPQyB+IENvbmNlcHRzQ3VzdG9tLiJzb2NpYWwtaGlzdG9yeSIpCiAgYW5kIE8uY29kZSB+IENvbmNlcHRzLiJOZWdhdGl2ZSAtIEhJVi5ILkRFMzciCgovKiBFbmQgb2YgUGFydG5lciBvciBjb250YWN0IG9mIGFuIGluZGV4IGNhc2UgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU3IC0gUGFydG5lciBvciBjb250YWN0IG9mIGFuIEhJViB0ZXN0aW5nIGNsaWVudCBub24taW5kZXggY2FzZQpAYWN0aXZpdHk6IEhJVi5CMSBEZXRlcm1pbmUgcmVhc29uIGZvciB2aXNpdApAZGVzY3JpcHRpb246IFRoZSBjbGllbnQgaXMgYSBjb250YWN0IG9yIHBhcnRuZXIgaWRlbnRpZmllZCB0aHJvdWdoIHBhcnRuZXIgb3Igc29jaWFsIG5ldHdvcmsgc2VydmljZXMsIGJ1dCBpcyBub3Qga25vd24gdG8gYmUgYSBwYXJ0bmVyIG9mIGFuIGluZGV4LWNhc2UKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBhcnRuZXIgb3IgY29udGFjdCBvZiBhbiBISVYgdGVzdGluZyBjbGllbnQgbm9uLWluZGV4IGNhc2UiOgogIGV4aXN0cyAiUGFydG5lciBvciBjb250YWN0IG9mIGFuIEhJViB0ZXN0aW5nIGNsaWVudCBub24taW5kZXggY2FzZSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlBhcnRuZXIgb3IgY29udGFjdCBvZiBhbiBISVYgdGVzdGluZyBjbGllbnQgbm9uLWluZGV4IGNhc2UgT2JzZXJ2YXRpb24iCmRlZmluZSAiUGFydG5lciBvciBjb250YWN0IG9mIGFuIEhJViB0ZXN0aW5nIGNsaWVudCBub24taW5kZXggY2FzZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQYXJ0bmVyIG9yIGNvbnRhY3Qgb2YgYW4gSElWIHRlc3RpbmcgY2xpZW50IG5vbi1pbmRleCBjYXNlIl0KZGVmaW5lICJQYXJ0bmVyIG9yIGNvbnRhY3Qgb2YgYW4gSElWIHRlc3RpbmcgY2xpZW50IG5vbi1pbmRleCBjYXNlIE9ic2VydmF0aW9uIjoKICAiUmVmZXJyZWQgdGhyb3VnaCBwYXJ0bmVyIHNlcnZpY2VzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQYXJ0bmVyIG9yIGNvbnRhY3Qgb2YgYW4gSElWIHRlc3RpbmcgY2xpZW50IG5vbi1pbmRleCBjYXNlIgovKiBFbmQgb2YgUGFydG5lciBvciBjb250YWN0IG9mIGFuIEhJViB0ZXN0aW5nIGNsaWVudCBub24taW5kZXggY2FzZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTggLSBUeXBlIG9mIGNvbnRhY3Qgb3IgcGFydG5lciBmb3IgcGFydG5lciBzZXJ2aWNlcwpAYWN0aXZpdHk6IEhJVi5CMSBEZXRlcm1pbmUgcmVhc29uIGZvciB2aXNpdApAZGVzY3JpcHRpb246IENsaWVudCdzIHJlbGF0aW9uc2hpcCB0byB0aGUgcGVyc29uIHRoYXQgcmVmZXJyZWQgdGhlIGNsaWVudCBmb3IgcGFydG5lciBzZXJ2aWNlcyBvciBmYW1pbHkgc2VydmljZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlR5cGUgb2YgY29udGFjdCBvciBwYXJ0bmVyIGZvciBwYXJ0bmVyIHNlcnZpY2VzIjoKICBleGlzdHMgIlR5cGUgb2YgY29udGFjdCBvciBwYXJ0bmVyIGZvciBwYXJ0bmVyIHNlcnZpY2VzIE9ic2VydmF0aW9uIgpkZWZpbmUgIlR5cGUgb2YgY29udGFjdCBvciBwYXJ0bmVyIGZvciBwYXJ0bmVyIHNlcnZpY2VzIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJUeXBlIG9mIGNvbnRhY3Qgb3IgcGFydG5lciBmb3IgcGFydG5lciBzZXJ2aWNlcyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBUeXBlIG9mIGNvbnRhY3Qgb3IgcGFydG5lciBmb3IgcGFydG5lciBzZXJ2aWNlcyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTkgLSBCaW9sb2dpY2FsIGNoaWxkCkBhY3Rpdml0eTogSElWLkIxIERldGVybWluZSByZWFzb24gZm9yIHZpc2l0CkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIHRoZSBiaW9sb2dpY2FsIGNoaWxkIG9mIHRoZSBwZXJzb24gdGhhdCByZWZlcnJlZCB0aGUgY2xpZW50IGZvciBmYW1pbHkgc2VydmljZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkJpb2xvZ2ljYWwgY2hpbGQiOgogIGV4aXN0cyAiQmlvbG9naWNhbCBjaGlsZCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkJpb2xvZ2ljYWwgY2hpbGQgT2JzZXJ2YXRpb24iCmRlZmluZSAiQmlvbG9naWNhbCBjaGlsZCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJCaW9sb2dpY2FsIGNoaWxkIl0KZGVmaW5lICJCaW9sb2dpY2FsIGNoaWxkIE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiBjb250YWN0IG9yIHBhcnRuZXIgZm9yIHBhcnRuZXIgc2VydmljZXMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkJpb2xvZ2ljYWwgY2hpbGQiCi8qIEVuZCBvZiBCaW9sb2dpY2FsIGNoaWxkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTAgLSBEcnVnLWluamVjdGluZyBwYXJ0bmVyCkBhY3Rpdml0eTogSElWLkIxIERldGVybWluZSByZWFzb24gZm9yIHZpc2l0CkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGEgZHJ1Zy1pbmplY3RpbmcgcGFydG5lciBvZiB0aGUgcGVyc29uIHRoYXQgcmVmZXJyZWQgdGhlIGNsaWVudCBmb3IgcGFydG5lciBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRHJ1Zy1pbmplY3RpbmcgcGFydG5lciBCLkRFMTAiOgogIGV4aXN0cyAiRHJ1Zy1pbmplY3RpbmcgcGFydG5lciBCLkRFMTAgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJEcnVnLWluamVjdGluZyBwYXJ0bmVyIEIuREUxMCBPYnNlcnZhdGlvbiIKZGVmaW5lICJEcnVnLWluamVjdGluZyBwYXJ0bmVyIEIuREUxMCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJEcnVnLWluamVjdGluZyBwYXJ0bmVyIC0gSElWLkIuREUxMCJdCmRlZmluZSAiRHJ1Zy1pbmplY3RpbmcgcGFydG5lciBCLkRFMTAgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGNvbnRhY3Qgb3IgcGFydG5lciBmb3IgcGFydG5lciBzZXJ2aWNlcyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRHJ1Zy1pbmplY3RpbmcgcGFydG5lciAtIEhJVi5CLkRFMTAiCi8qIEVuZCBvZiBEcnVnLWluamVjdGluZyBwYXJ0bmVyIEIuREUxMCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTExIC0gU2V4dWFsIHBhcnRuZXIKQGFjdGl2aXR5OiBISVYuQjEgRGV0ZXJtaW5lIHJlYXNvbiBmb3IgdmlzaXQKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgYSBzZXh1YWwgcGFydG5lciBvZiB0aGUgcGVyc29uIHRoYXQgcmVmZXJyZWQgdGhlIGNsaWVudCBmb3IgcGFydG5lciBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU2V4dWFsIHBhcnRuZXIgQi5ERTExIjoKICBleGlzdHMgIlNleHVhbCBwYXJ0bmVyIEIuREUxMSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlNleHVhbCBwYXJ0bmVyIEIuREUxMSBPYnNlcnZhdGlvbiIKZGVmaW5lICJTZXh1YWwgcGFydG5lciBCLkRFMTEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU2V4dWFsIHBhcnRuZXIgLSBISVYuQi5ERTExIl0KZGVmaW5lICJTZXh1YWwgcGFydG5lciBCLkRFMTEgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGNvbnRhY3Qgb3IgcGFydG5lciBmb3IgcGFydG5lciBzZXJ2aWNlcyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU2V4dWFsIHBhcnRuZXIgLSBISVYuQi5ERTExIgovKiBFbmQgb2YgU2V4dWFsIHBhcnRuZXIgQi5ERTExICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTIgLSBTb2NpYWwgY29udGFjdApAYWN0aXZpdHk6IEhJVi5CMSBEZXRlcm1pbmUgcmVhc29uIGZvciB2aXNpdApAZGVzY3JpcHRpb246IENsaWVudCBpcyBhIHNvY2lhbCBjb250YWN0IG9mIHRoZSBwZXJzb24gdGhhdCByZWZlcnJlZCB0aGUgY2xpZW50IGZvciBzb2NpYWwtbmV0d29yayBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU29jaWFsIGNvbnRhY3QgQi5ERTEyIjoKICBleGlzdHMgIlNvY2lhbCBjb250YWN0IEIuREUxMiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlNvY2lhbCBjb250YWN0IEIuREUxMiBPYnNlcnZhdGlvbiIKZGVmaW5lICJTb2NpYWwgY29udGFjdCBCLkRFMTIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU29jaWFsIGNvbnRhY3QgLSBISVYuQi5ERTEyIl0KZGVmaW5lICJTb2NpYWwgY29udGFjdCBCLkRFMTIgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGNvbnRhY3Qgb3IgcGFydG5lciBmb3IgcGFydG5lciBzZXJ2aWNlcyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU29jaWFsIGNvbnRhY3QgLSBISVYuQi5ERTEyIgovKiBFbmQgb2YgU29jaWFsIGNvbnRhY3QgQi5ERTEyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTQgLSBEYXRlL3RpbWUgb2Ygc3VzcGVjdGVkIGV4cG9zdXJlIHRvIEhJVgpAYWN0aXZpdHk6IEhJVi5CMSBEZXRlcm1pbmUgcmVhc29uIGZvciB2aXNpdApAZGVzY3JpcHRpb246IERhdGUgYW5kIHRpbWUgd2hlbiB0aGUgY2xpZW50IGhhZCBzdXNwZWN0ZWQgZXhwb3N1cmUgdG8gSElWCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEYXRlL3RpbWUgb2Ygc3VzcGVjdGVkIGV4cG9zdXJlIHRvIEhJViBCLkRFMTQiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkRhdGUvdGltZSBvZiBzdXNwZWN0ZWQgZXhwb3N1cmUgdG8gSElWIC0gSElWLkIuREUxNCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRGF0ZS90aW1lIG9mIHN1c3BlY3RlZCBleHBvc3VyZSB0byBISVYgQi5ERTE0IFZhbHVlIjoKICAiRGF0ZS90aW1lIG9mIHN1c3BlY3RlZCBleHBvc3VyZSB0byBISVYgQi5ERTE0IiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIERhdGUvdGltZSBvZiBzdXNwZWN0ZWQgZXhwb3N1cmUgdG8gSElWIEIuREUxNCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE1IC0gVGVzdGluZyBlbnRyeSBwb2ludApAYWN0aXZpdHk6IEhJVi5CMSBEZXRlcm1pbmUgcmVhc29uIGZvciB2aXNpdApAZGVzY3JpcHRpb246IFdoZXRoZXIgdGVzdGluZyBpcyBoYXBwZW5pbmcgaW4gdGhlIGNvbW11bml0eSBvciBhdCBhIGZhY2lsaXR5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUZXN0aW5nIGVudHJ5IHBvaW50IjoKICBleGlzdHMgIlRlc3RpbmcgZW50cnkgcG9pbnQgT2JzZXJ2YXRpb24iCmRlZmluZSAiVGVzdGluZyBlbnRyeSBwb2ludCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iVGVzdGluZyBlbnRyeSBwb2ludCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBUZXN0aW5nIGVudHJ5IHBvaW50ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTYgLSBDb21tdW5pdHktbGV2ZWwgdGVzdGluZwpAYWN0aXZpdHk6IEhJVi5CMSBEZXRlcm1pbmUgcmVhc29uIGZvciB2aXNpdApAZGVzY3JpcHRpb246IFRlc3RpbmcgaXMgaGFwcGVuaW5nIGluIHRoZSBjb21tdW5pdHksIHdoaWNoIGluY2x1ZGVzIG1vYmlsZSB0ZXN0aW5nCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDb21tdW5pdHktbGV2ZWwgdGVzdGluZyI6CiAgZXhpc3RzICJDb21tdW5pdHktbGV2ZWwgdGVzdGluZyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNvbW11bml0eS1sZXZlbCB0ZXN0aW5nIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNvbW11bml0eS1sZXZlbCB0ZXN0aW5nIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNvbW11bml0eS1sZXZlbCB0ZXN0aW5nIl0KZGVmaW5lICJDb21tdW5pdHktbGV2ZWwgdGVzdGluZyBPYnNlcnZhdGlvbiI6CiAgIlRlc3RpbmcgZW50cnkgcG9pbnQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNvbW11bml0eS1sZXZlbCB0ZXN0aW5nIgovKiBFbmQgb2YgQ29tbXVuaXR5LWxldmVsIHRlc3RpbmcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUxNyAtIEZhY2lsaXR5LWxldmVsIHRlc3RpbmcKQGFjdGl2aXR5OiBISVYuQjEgRGV0ZXJtaW5lIHJlYXNvbiBmb3IgdmlzaXQKQGRlc2NyaXB0aW9uOiBUZXN0aW5nIGlzIGhhcHBlbmluZyBhdCBhIGZhY2lsaXR5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJGYWNpbGl0eS1sZXZlbCB0ZXN0aW5nIjoKICBleGlzdHMgIkZhY2lsaXR5LWxldmVsIHRlc3RpbmcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJGYWNpbGl0eS1sZXZlbCB0ZXN0aW5nIE9ic2VydmF0aW9uIgpkZWZpbmUgIkZhY2lsaXR5LWxldmVsIHRlc3RpbmcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRmFjaWxpdHktbGV2ZWwgdGVzdGluZyJdCmRlZmluZSAiRmFjaWxpdHktbGV2ZWwgdGVzdGluZyBPYnNlcnZhdGlvbiI6CiAgIlRlc3RpbmcgZW50cnkgcG9pbnQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkZhY2lsaXR5LWxldmVsIHRlc3RpbmciCi8qIEVuZCBvZiBGYWNpbGl0eS1sZXZlbCB0ZXN0aW5nICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjkgLSBDdXJyZW50bHkgcHJlZ25hbnQKQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgY3VycmVudGx5IHByZWduYW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDdXJyZW50bHkgcHJlZ25hbnQgQi5ERTI5IjoKICBleGlzdHMgIkN1cnJlbnRseSBwcmVnbmFudCBCLkRFMjkgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ3VycmVudGx5IHByZWduYW50IEIuREUyOSBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQ3VycmVudGx5IHByZWduYW50IC0gSElWLkIuREUyOSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIEN1cnJlbnRseSBwcmVnbmFudCBCLkRFMjkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUzMiAtIEJyZWFzdGZlZWRpbmcKQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBJbmZhbnQgaXMgYmVpbmcgYnJlYXN0ZmVkIGJ5IG1vdGhlcgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQnJlYXN0ZmVlZGluZyBCLkRFMzIiOgogIGV4aXN0cyAiQnJlYXN0ZmVlZGluZyBCLkRFMzIgT2JzZXJ2YXRpb24iCmRlZmluZSAiQnJlYXN0ZmVlZGluZyBCLkRFMzIgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkJyZWFzdGZlZWRpbmcgLSBISVYuQi5ERTMyIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgaXMgdHJ1ZQovKiBFbmQgb2YgQnJlYXN0ZmVlZGluZyBCLkRFMzIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUzMyAtIFBhcnRuZXIgSElWIHN0YXR1cyByZXBvcnRlZApAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRoZSBISVYgc3RhdHVzIG9mIHRoZSBjbGllbnQncyBwYXJ0bmVyLgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUGFydG5lciBISVYgc3RhdHVzIHJlcG9ydGVkIjoKICBleGlzdHMgIlBhcnRuZXIgSElWIHN0YXR1cyByZXBvcnRlZCBPYnNlcnZhdGlvbiIKZGVmaW5lICJQYXJ0bmVyIEhJViBzdGF0dXMgcmVwb3J0ZWQgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlBhcnRuZXIgSElWIHN0YXR1cyByZXBvcnRlZCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBQYXJ0bmVyIEhJViBzdGF0dXMgcmVwb3J0ZWQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUzNCAtIEhJVi1wb3NpdGl2ZQpAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCdzIHBhcnRuZXIgaXMgSElWLXBvc2l0aXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYtcG9zaXRpdmUgQi5ERTM0IjoKICBleGlzdHMgIkhJVi1wb3NpdGl2ZSBCLkRFMzQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJISVYtcG9zaXRpdmUgQi5ERTM0IE9ic2VydmF0aW9uIgpkZWZpbmUgIkhJVi1wb3NpdGl2ZSBCLkRFMzQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSElWLXBvc2l0aXZlIl0KZGVmaW5lICJISVYtcG9zaXRpdmUgQi5ERTM0IE9ic2VydmF0aW9uIjoKICAiUGFydG5lciBISVYgc3RhdHVzIHJlcG9ydGVkIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJISVYtcG9zaXRpdmUiCi8qIEVuZCBvZiBISVYtcG9zaXRpdmUgQi5ERTM0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMzUgLSBISVYtbmVnYXRpdmUKQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBwYXJ0bmVyIGlzIEhJVi1uZWdhdGl2ZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSElWLW5lZ2F0aXZlIEIuREUzNSI6CiAgZXhpc3RzICJISVYtbmVnYXRpdmUgQi5ERTM1IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSElWLW5lZ2F0aXZlIEIuREUzNSBPYnNlcnZhdGlvbiIKZGVmaW5lICJISVYtbmVnYXRpdmUgQi5ERTM1IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhJVi1uZWdhdGl2ZSJdCmRlZmluZSAiSElWLW5lZ2F0aXZlIEIuREUzNSBPYnNlcnZhdGlvbiI6CiAgIlBhcnRuZXIgSElWIHN0YXR1cyByZXBvcnRlZCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSElWLW5lZ2F0aXZlIgovKiBFbmQgb2YgSElWLW5lZ2F0aXZlIEIuREUzNSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTM2IC0gVW5rbm93bgpAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IERvbid0IGtub3cgSElWIHN0YXR1cyAtIGNsaWVudCBkb2VzIG5vdCBrbm93IHBhcnRuZXIncyBISVYgc3RhdHVzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJVbmtub3duIEIuREUzNiI6CiAgZXhpc3RzICJVbmtub3duIEIuREUzNiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlVua25vd24gQi5ERTM2IE9ic2VydmF0aW9uIgpkZWZpbmUgIlVua25vd24gQi5ERTM2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlVua25vd24iXQpkZWZpbmUgIlVua25vd24gQi5ERTM2IE9ic2VydmF0aW9uIjoKICAiUGFydG5lciBISVYgc3RhdHVzIHJlcG9ydGVkIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJVbmtub3duIgovKiBFbmQgb2YgVW5rbm93biBCLkRFMzYgKi8KCi8qCiAqIEtleSBwb3B1bGF0aW9ucyAobWVuIHdobyBoYXZlIHNleCB3aXRoIG1lbiwgcGVvcGxlIGxpdmluZyBpbiBwcmlzb25zIGFuZCBvdGhlciBjbG9zZWQgc2V0dGluZ3MsIHBlb3BsZSB3aG8gaW5qZWN0IGRydWdzLCBzZXggd29ya2VycywgdHJhbnMgYW5kIGdlbmRlciBkaXZlcnNlIHBlb3BsZSkKICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFNDkgLSBLZXkgcG9wdWxhdGlvbiBtZW1iZXIKQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgYSBtZW1iZXIgb2YgYSBrZXkgcG9wdWxhdGlvbiB0aGF0IGhhcyBhbiBpbmNyZWFzZWQgcmlzayBvZiBISVYKKi8KZGVmaW5lICJJcyBLZXkgcG9wdWxhdGlvbiBtZW1iZXIiOgogIGV4aXN0cyAiS2V5IHBvcHVsYXRpb24gbWVtYmVyIHR5cGUgT2JzZXJ2YXRpb24iCi8qIEVuZCBvZiBLZXkgcG9wdWxhdGlvbiBtZW1iZXIgQi5ERTQ5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFNTAgLSBLZXkgcG9wdWxhdGlvbiBtZW1iZXIgdHlwZQpAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRoZSB0eXBlIG9mIGtleSBwb3B1bGF0aW9uIHRoYXQgdGhlIGNsaWVudCBpcyBpbmNsdWRlZCBpbgoqLwpkZWZpbmUgIktleSBwb3B1bGF0aW9uIG1lbWJlciB0eXBlIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJLZXkgcG9wdWxhdGlvbiBtZW1iZXIgLSBISVYuQi5ERTQ5Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgIGFuZCBleGlzdHMoTy5jYXRlZ29yeSBPQyB3aGVyZSBPQyB+IENvbmNlcHRzQ3VzdG9tLiJzb2NpYWwtaGlzdG9yeSIpCi8qIEVuZCBvZiBLZXkgcG9wdWxhdGlvbiBtZW1iZXIgdHlwZSBCLkRFNTAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU1MSAtIFNleCB3b3JrZXIKQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgYSBzZXggd29ya2VyCiovCmRlZmluZSAiU2V4IHdvcmtlciI6CiAgIktleSBwb3B1bGF0aW9uIG1lbWJlciB0eXBlIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnZhbHVlIH4gQ29uY2VwdHMuIlNleCB3b3JrZXIgLSBISVYuQi5ERTUxIgovKiBFbmQgb2YgU2V4IHdvcmtlciBCLkRFNTEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU1MiAtIE1lbiB3aG8gaGF2ZSBzZXggd2l0aCBtZW4KQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgYSBtYW4gd2hvIGhhcyBzZXggd2l0aCBtZW4KKi8KZGVmaW5lICJNZW4gd2hvIGhhdmUgc2V4IHdpdGggbWVuIjoKICAiS2V5IHBvcHVsYXRpb24gbWVtYmVyIHR5cGUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8udmFsdWUgfiBDb25jZXB0cy4iTWVuIHdobyBoYXZlIHNleCB3aXRoIG1lbiIKICAKLyogRW5kIG9mIE1lbiB3aG8gaGF2ZSBzZXggd2l0aCBtZW4gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU1MyAtIFRyYW5zIGFuZCBnZW5kZXItZGl2ZXJzZSBwZW9wbGUKQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgaWRlbnRpZmllcyBhcyB0cmFucyBhbmQgZ2VuZGVyLWRpdmVyc2UKKi8KZGVmaW5lICJUcmFucyBhbmQgZ2VuZGVyLWRpdmVyc2UgcGVvcGxlIjoKICAiS2V5IHBvcHVsYXRpb24gbWVtYmVyIHR5cGUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8udmFsdWUgfiBDb25jZXB0cy4iVHJhbnMgYW5kIGdlbmRlci1kaXZlcnNlIHBlb3BsZSAtIEhJVi5CLkRFNTMiCiAgCi8qIEVuZCBvZiBUcmFucyBhbmQgZ2VuZGVyLWRpdmVyc2UgcGVvcGxlIEIuREU1MyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTU0IC0gUGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MKQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgYSBwZXJzb24gd2hvIGluamVjdHMgZHJ1Z3MKKi8KZGVmaW5lICJQZW9wbGUgd2hvIGluamVjdCBkcnVncyI6CiAgIktleSBwb3B1bGF0aW9uIG1lbWJlciB0eXBlIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnZhbHVlIH4gQ29uY2VwdHMuIlBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIC0gSElWLkIuREU1NCIKICAKLyogRW5kIG9mIFBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIEIuREU1NCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTU1IC0gUGVvcGxlIGxpdmluZyBpbiBwcmlzb25zIGFuZCBvdGhlciBjbG9zZWQgc2V0dGluZ3MKQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgbGl2ZXMgaW4gYSBwcmlzb24gb3IgYW5vdGhlciBjbG9zZWQgc2V0dGluZwoqLwpkZWZpbmUgIlBlb3BsZSBsaXZpbmcgaW4gcHJpc29ucyBhbmQgb3RoZXIgY2xvc2VkIHNldHRpbmdzIjoKICAiS2V5IHBvcHVsYXRpb24gbWVtYmVyIHR5cGUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8udmFsdWUgfiBDb25jZXB0cy4iUGVvcGxlIGxpdmluZyBpbiBwcmlzb25zIGFuZCBvdGhlciBjbG9zZWQgc2V0dGluZ3MiCi8qIEVuZCBvZiBQZW9wbGUgbGl2aW5nIGluIHByaXNvbnMgYW5kIG90aGVyIGNsb3NlZCBzZXR0aW5ncyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTYwIC0gRGF0ZSBISVYgdGVzdCByZXN1bHRzIHJldHVybmVkCkBhY3Rpdml0eTogSElWLkI2IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogRGF0ZSBISVYgdGVzdCByZXN1bHQgcmV0dXJuZWQgdG8gY2xpZW50CiovCmRlZmluZSAiRGF0ZSBISVYgdGVzdCByZXN1bHRzIHJldHVybmVkIjoKICAiSElWIHRlc3QiIE8KICByZXR1cm4gTy5pc3N1ZWQKLyogRW5kIG9mIERhdGUgSElWIHRlc3QgcmVzdWx0cyByZXR1cm5lZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTYxIC0gSElWIGV4cG9zdXJlIHR5cGUKQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBXYXlzIGluIHdoaWNoIHRoZSBjbGllbnQgd2FzIGV4cG9zZWQgdG8gSElWCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYgZXhwb3N1cmUgdHlwZSI6CiAgZXhpc3RzICJISVYgZXhwb3N1cmUgdHlwZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJISVYgZXhwb3N1cmUgdHlwZSBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSElWIGV4cG9zdXJlIHR5cGUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgSElWIGV4cG9zdXJlIHR5cGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU2MiAtIE9jY3VwYXRpb25hbApAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IE9jY3VwYXRpb25hbCBleHBvc3VyZSB0byBISVYKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk9jY3VwYXRpb25hbCI6CiAgZXhpc3RzICJPY2N1cGF0aW9uYWwgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPY2N1cGF0aW9uYWwgT2JzZXJ2YXRpb24iCmRlZmluZSAiT2NjdXBhdGlvbmFsIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk9jY3VwYXRpb25hbCJdCmRlZmluZSAiT2NjdXBhdGlvbmFsIE9ic2VydmF0aW9uIjoKICAiSElWIGV4cG9zdXJlIHR5cGUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk9jY3VwYXRpb25hbCIKLyogRW5kIG9mIE9jY3VwYXRpb25hbCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTYzIC0gTm9uLW9jY3VwYXRpb25hbCB2aW9sZW50CkBhY3Rpdml0eTogSElWLkI2IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogTm9uLW9jY3VwYXRpb25hbCB2aW9sZW50IGV4cG9zdXJlIHRvIEhJVgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTm9uLW9jY3VwYXRpb25hbCB2aW9sZW50IjoKICBleGlzdHMgIk5vbi1vY2N1cGF0aW9uYWwgdmlvbGVudCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk5vbi1vY2N1cGF0aW9uYWwgdmlvbGVudCBPYnNlcnZhdGlvbiIKZGVmaW5lICJOb24tb2NjdXBhdGlvbmFsIHZpb2xlbnQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTm9uLW9jY3VwYXRpb25hbCB2aW9sZW50Il0KZGVmaW5lICJOb24tb2NjdXBhdGlvbmFsIHZpb2xlbnQgT2JzZXJ2YXRpb24iOgogICJISVYgZXhwb3N1cmUgdHlwZSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTm9uLW9jY3VwYXRpb25hbCB2aW9sZW50IgovKiBFbmQgb2YgTm9uLW9jY3VwYXRpb25hbCB2aW9sZW50ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFNjQgLSBOb24tb2NjdXBhdGlvbmFsIGNvbnNlbnN1YWwgc2V4CkBhY3Rpdml0eTogSElWLkI2IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogRXhwb3N1cmUgdG8gSElWIHRocm91Z2ggbm9uLW9jY3VwYXRpb25hbCBjb25zZW5zdWFsIHNleAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTm9uLW9jY3VwYXRpb25hbCBjb25zZW5zdWFsIHNleCI6CiAgZXhpc3RzICJOb24tb2NjdXBhdGlvbmFsIGNvbnNlbnN1YWwgc2V4IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTm9uLW9jY3VwYXRpb25hbCBjb25zZW5zdWFsIHNleCBPYnNlcnZhdGlvbiIKZGVmaW5lICJOb24tb2NjdXBhdGlvbmFsIGNvbnNlbnN1YWwgc2V4IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5vbi1vY2N1cGF0aW9uYWwgY29uc2Vuc3VhbCBzZXgiXQpkZWZpbmUgIk5vbi1vY2N1cGF0aW9uYWwgY29uc2Vuc3VhbCBzZXggT2JzZXJ2YXRpb24iOgogICJISVYgZXhwb3N1cmUgdHlwZSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTm9uLW9jY3VwYXRpb25hbCBjb25zZW5zdWFsIHNleCIKLyogRW5kIG9mIE5vbi1vY2N1cGF0aW9uYWwgY29uc2Vuc3VhbCBzZXggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU2NSAtIERhdGUgaW5mb3JtZWQgb2YgSElWLXBvc2l0aXZlIGRpYWdub3NpcwpAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRoZSBkYXRlIG9uIHdoaWNoIHRoZSBjbGllbnQgd2FzIGRpYWdub3NlZCB3aXRoIEhJVgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGF0ZSBpbmZvcm1lZCBvZiBISVYtcG9zaXRpdmUgZGlhZ25vc2lzIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJEYXRlIGluZm9ybWVkIG9mIEhJVi1wb3NpdGl2ZSBkaWFnbm9zaXMiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkRhdGUgaW5mb3JtZWQgb2YgSElWLXBvc2l0aXZlIGRpYWdub3NpcyBWYWx1ZSI6CiAgIkRhdGUgaW5mb3JtZWQgb2YgSElWLXBvc2l0aXZlIGRpYWdub3NpcyIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBEYXRlIGluZm9ybWVkIG9mIEhJVi1wb3NpdGl2ZSBkaWFnbm9zaXMgKi8KCi8qCkBhY3Rpdml0eTogSElWLkI3IFRlc3QgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQoqLwpkZWZpbmUgIkhJViB0ZXN0IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJISVYgdGVzdCB0eXBlIC0gSElWLkIuREU4MSBDaG9pY2VzIl0gTwogIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CgpkZWZpbmUgIk5vbi1TZWxmIEhJViB0ZXN0IjoKICAiSElWIHRlc3QiIE8KICB3aGVyZSBPLmNvZGUgIX4gQ29uY2VwdHMuIkhJViBzZWxmLXRlc3QiCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFNzEgLSBISVYgZGlhZ25vc2lzIGRhdGUKQGFjdGl2aXR5OiBISVYuQjggUHJvdmlkZSBwb3N0LXRlc3QgY291bnNlbGxpbmcKQGRlc2NyaXB0aW9uOiBEYXRlIGRpYWdub3NpcyB3YXMgcmV0dXJuZWQgdG8gY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYgZGlhZ25vc2lzIGRhdGUiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhJViBkaWFnbm9zaXMgZGF0ZSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiSElWIGRpYWdub3NpcyBkYXRlIFZhbHVlIjoKICAiSElWIGRpYWdub3NpcyBkYXRlIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIEhJViBkaWFnbm9zaXMgZGF0ZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTcyIC0gQVJUIHN0YXJ0IGRhdGUKQGFjdGl2aXR5OiBISVYuQjggUHJvdmlkZSBwb3N0LXRlc3QgY291bnNlbGxpbmcKQGRlc2NyaXB0aW9uOiBUaGUgZGF0ZSBvbiB3aGljaCB0aGUgY2xpZW50IHN0YXJ0ZWQgb3IgcmVzdGFydGVkIGFudGlyZXRyb3ZpcmFsIHRoZXJhcHkgKEFSVCkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFSVCBzdGFydCBkYXRlIEIuREU3MiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQVJUIHN0YXJ0IGRhdGUgLSBISVYuQi5ERTcyIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJBUlQgc3RhcnQgZGF0ZSBCLkRFNzIgVmFsdWUiOgogICJBUlQgc3RhcnQgZGF0ZSBCLkRFNzIiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgQVJUIHN0YXJ0IGRhdGUgQi5ERTcyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFODAgLSBISVYgdGVzdCBjb25kdWN0ZWQKQGFjdGl2aXR5OiBISVYuQjcgVGVzdCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogQW4gSElWIHRlc3Qgd2FzIHBlcmZvcm1lZCBvbiB0aGUgY2xpZW50IGR1cmluZyB0aGUgdmlzaXQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhJViB0ZXN0IGNvbmR1Y3RlZCI6CiAgZXhpc3RzICJISVYgdGVzdCBjb25kdWN0ZWQgT2JzZXJ2YXRpb24iCmRlZmluZSAiSElWIHRlc3QgY29uZHVjdGVkIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJISVYgdGVzdCBjb25kdWN0ZWQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBISVYgdGVzdCBjb25kdWN0ZWQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU4MSAtIEhJViB0ZXN0IHR5cGUKQGFjdGl2aXR5OiBISVYuQjcgVGVzdCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVHlwZSBvZiBISVYgdGVzdAoqLwpkZWZpbmUgIkhJViB0ZXN0IHR5cGUgQi5ERTgxIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJISVYgdGVzdCB0eXBlIC0gSElWLkIuREU4MSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiSElWIHRlc3QgdHlwZSBCLkRFODEgVmFsdWUiOgogICJISVYgdGVzdCB0eXBlIEIuREU4MSIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBISVYgdGVzdCB0eXBlIEIuREU4MSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTgyIC0gUmFwaWQgZGlhZ25vc3RpYyB0ZXN0IGZvciBISVYKQGFjdGl2aXR5OiBISVYuQjcgVGVzdCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogQW50aWJvZHkgdGVzdCBmb3IgSElWIHBlcmZvcm1lZCB3aXRoIGEgcmFwaWQgZGlhZ25vc3RpYwoqLwoKZGVmaW5lICJSYXBpZCBkaWFnbm9zdGljIHRlc3QgZm9yIEhJViBCLkRFODIiOgogICJISVYgdGVzdCB0eXBlIEIuREU4MSIgTwogICAgICB3aGVyZSBPLnZhbHVlIH4gQ29uY2VwdHMuIlJhcGlkIGRpYWdub3N0aWMgdGVzdCBmb3IgSElWIC0gSElWLkIuREU4MiIKLyogRW5kIG9mIFJhcGlkIGRpYWdub3N0aWMgdGVzdCBmb3IgSElWIEIuREU4MiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTgzIC0gRW56eW1lIGltbXVub2Fzc2F5IGZvciBISVYKQGFjdGl2aXR5OiBISVYuQjcgVGVzdCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogQW50aWJvZHkgdGVzdCBmb3IgSElWIHBlcmZvcm1lZCB3aXRoIGFuIGVuenltZSBpbW11bm9hc3NheQoqLwoKZGVmaW5lICJFbnp5bWUgaW1tdW5vYXNzYXkgZm9yIEhJViBCLkRFODMiOgogICJISVYgdGVzdCB0eXBlIEIuREU4MSIgTwogICAgICB3aGVyZSBPLnZhbHVlIH4gQ29uY2VwdHMuIkVuenltZSBpbW11bm9hc3NheSBmb3IgSElWIC0gSElWLkIuREU4MyIKLyogRW5kIG9mIEVuenltZSBpbW11bm9hc3NheSBmb3IgSElWIEIuREU4MyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTg0IC0gTnVjbGVpYyBhY2lkIHRlc3QgZm9yIEhJVgpAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBWaXJvbG9naWNhbCB0ZXN0LCB3aGljaCBpbmNsdWRlcyB0ZXN0aW5nIGZvciBlYXJseSBpbmZhbnQgZGlhZ25vc2lzCiovCmRlZmluZSAiTnVjbGVpYyBhY2lkIHRlc3QgZm9yIEhJViBCLkRFODQiOgogICJISVYgdGVzdCB0eXBlIEIuREU4MSIgTwogICAgICB3aGVyZSBPLnZhbHVlIH4gQ29uY2VwdHMuIk51Y2xlaWMgYWNpZCB0ZXN0IGZvciBISVYgLSBISVYuQi5ERTg0IgovKiBFbmQgb2YgTnVjbGVpYyBhY2lkIHRlc3QgZm9yIEhJViBCLkRFODQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU4NSAtIER1YWwgSElWL3N5cGhpbGlzIHJhcGlkIGRpYWdub3N0aWMgdGVzdApAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBBbnRpYm9keSB0ZXN0IGZvciBISVYgYW5kIHN5cGhpbGlzIHBlcmZvcm1lZCB3aXRoIGEgcmFwaWQgZGlhZ25vc3RpYwoqLwoKZGVmaW5lICJEdWFsIEhJVi9zeXBoaWxpcyByYXBpZCBkaWFnbm9zdGljIHRlc3QgQi5ERTg1IjoKICAiSElWIHRlc3QgdHlwZSBCLkRFODEiIE8KICAgICAgd2hlcmUgTy52YWx1ZSB+IENvbmNlcHRzLiJEdWFsIEhJVi9zeXBoaWxpcyByYXBpZCBkaWFnbm9zdGljIHRlc3QgLSBISVYuQi5ERTg1IgovKiBFbmQgb2YgRHVhbCBISVYvc3lwaGlsaXMgcmFwaWQgZGlhZ25vc3RpYyB0ZXN0IEIuREU4NSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTg2IC0gSElWIHNlbGYtdGVzdApAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBBbnRpYm9keSB0ZXN0IGZvciBISVYgcGVyZm9ybWVkIGJ5IHNlbGYtdGVzdGVyIHVzaW5nIGEgcmFwaWQgZGlhZ25vc3RpYwoqLwoKZGVmaW5lICJISVYgc2VsZi10ZXN0IjoKICAiSElWIHRlc3QgdHlwZSBCLkRFODEiIE8KICAgICAgd2hlcmUgTy52YWx1ZSB+IENvbmNlcHRzLiJISVYgc2VsZi10ZXN0IgovKiBFbmQgb2YgSElWIHNlbGYtdGVzdCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTg4IC0gQXNzYXkgbnVtYmVyIGluIHRlc3Rpbmcgc3RyYXRlZ3kKQGFjdGl2aXR5OiBISVYuQjcgVGVzdCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVGhlIG51bWJlciBvZiB0aGUgYXNzYXkgKHRlc3Qga2l0KSBpbiB0aGUgSElWIHRlc3Rpbmcgc3RyYXRlZ3kKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFzc2F5IG51bWJlciBpbiB0ZXN0aW5nIHN0cmF0ZWd5IEIuREU4OCI6CiAgZXhpc3RzICJBc3NheSBudW1iZXIgaW4gdGVzdGluZyBzdHJhdGVneSBCLkRFODggT2JzZXJ2YXRpb24iCmRlZmluZSAiQXNzYXkgbnVtYmVyIGluIHRlc3Rpbmcgc3RyYXRlZ3kgQi5ERTg4IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJBc3NheSBudW1iZXIgaW4gdGVzdGluZyBzdHJhdGVneSAtIEhJVi5CLkRFODgiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgQXNzYXkgbnVtYmVyIGluIHRlc3Rpbmcgc3RyYXRlZ3kgQi5ERTg4ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFODkgLSBBc3NheSAwCkBhY3Rpdml0eTogSElWLkI3IFRlc3QgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IEEgY29tbXVuaXR5IG91dHJlYWNoIHRlc3QtZm9yLXRyaWFnZSBvciBzZWxmLXRlc3Qgd2hpY2ggaXMgbm90IGluY2x1ZGVkIGluIHRoZSBISVYgdGVzdGluZyBzdHJhdGVneQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQXNzYXkgMCBCLkRFODkiOgogIGV4aXN0cyAiQXNzYXkgMCBCLkRFODkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBc3NheSAwIEIuREU4OSBPYnNlcnZhdGlvbiIKZGVmaW5lICJBc3NheSAwIEIuREU4OSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBc3NheSAwIC0gSElWLkIuREU4OSJdCmRlZmluZSAiQXNzYXkgMCBCLkRFODkgT2JzZXJ2YXRpb24iOgogICJBc3NheSBudW1iZXIgaW4gdGVzdGluZyBzdHJhdGVneSBCLkRFODggT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkFzc2F5IDAgLSBISVYuQi5ERTg5IgovKiBFbmQgb2YgQXNzYXkgMCBCLkRFODkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU5MCAtIEFzc2F5IDEKQGFjdGl2aXR5OiBISVYuQjcgVGVzdCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVGhlIGZpcnN0IHRlc3QgaW4gdGhlIEhJViB0ZXN0aW5nIHN0cmF0ZWd5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBc3NheSAxIEIuREU5MCI6CiAgZXhpc3RzICJBc3NheSAxIEIuREU5MCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkFzc2F5IDEgQi5ERTkwIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFzc2F5IDEgQi5ERTkwIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFzc2F5IDEgLSBISVYuQi5ERTkwIl0KZGVmaW5lICJBc3NheSAxIEIuREU5MCBPYnNlcnZhdGlvbiI6CiAgIkFzc2F5IG51bWJlciBpbiB0ZXN0aW5nIHN0cmF0ZWd5IEIuREU4OCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQXNzYXkgMSAtIEhJVi5CLkRFOTAiCi8qIEVuZCBvZiBBc3NheSAxIEIuREU5MCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTkxIC0gQXNzYXkgMgpAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgc2Vjb25kIHRlc3QgaW4gdGhlIEhJViB0ZXN0aW5nIHN0cmF0ZWd5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBc3NheSAyIEIuREU5MSI6CiAgZXhpc3RzICJBc3NheSAyIEIuREU5MSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkFzc2F5IDIgQi5ERTkxIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFzc2F5IDIgQi5ERTkxIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFzc2F5IDIgLSBISVYuQi5ERTkxIl0KZGVmaW5lICJBc3NheSAyIEIuREU5MSBPYnNlcnZhdGlvbiI6CiAgIkFzc2F5IG51bWJlciBpbiB0ZXN0aW5nIHN0cmF0ZWd5IEIuREU4OCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQXNzYXkgMiAtIEhJVi5CLkRFOTEiCi8qIEVuZCBvZiBBc3NheSAyIEIuREU5MSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTkyIC0gQXNzYXkgMwpAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgdGhpcmQgdGVzdCBpbiB0aGUgSElWIHRlc3Rpbmcgc3RyYXRlZ3kKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFzc2F5IDMgQi5ERTkyIjoKICBleGlzdHMgIkFzc2F5IDMgQi5ERTkyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQXNzYXkgMyBCLkRFOTIgT2JzZXJ2YXRpb24iCmRlZmluZSAiQXNzYXkgMyBCLkRFOTIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQXNzYXkgMyAtIEhJVi5CLkRFOTIiXQpkZWZpbmUgIkFzc2F5IDMgQi5ERTkyIE9ic2VydmF0aW9uIjoKICAiQXNzYXkgbnVtYmVyIGluIHRlc3Rpbmcgc3RyYXRlZ3kgQi5ERTg4IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBc3NheSAzIC0gSElWLkIuREU5MiIKLyogRW5kIG9mIEFzc2F5IDMgQi5ERTkyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFOTMgLSBBc3NheSAxIHJlcGVhdGVkCkBhY3Rpdml0eTogSElWLkI3IFRlc3QgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSBmaXJzdCB0ZXN0IGluIHRoZSBISVYgdGVzdGluZyBzdHJhdGVneQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQXNzYXkgMSByZXBlYXRlZCBCLkRFOTMiOgogIGV4aXN0cyAiQXNzYXkgMSByZXBlYXRlZCBCLkRFOTMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBc3NheSAxIHJlcGVhdGVkIEIuREU5MyBPYnNlcnZhdGlvbiIKZGVmaW5lICJBc3NheSAxIHJlcGVhdGVkIEIuREU5MyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBc3NheSAxIHJlcGVhdGVkIC0gSElWLkIuREU5MyJdCmRlZmluZSAiQXNzYXkgMSByZXBlYXRlZCBCLkRFOTMgT2JzZXJ2YXRpb24iOgogICJBc3NheSBudW1iZXIgaW4gdGVzdGluZyBzdHJhdGVneSBCLkRFODggT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkFzc2F5IDEgcmVwZWF0ZWQgLSBISVYuQi5ERTkzIgovKiBFbmQgb2YgQXNzYXkgMSByZXBlYXRlZCBCLkRFOTMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU5NCAtIFRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAxCkBhY3Rpdml0eTogSElWLkI3IFRlc3QgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIGZpcnN0IEhJViBhc3NheSBpbiB0aGUgdGVzdGluZyBzdHJhdGVneQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDEgQi5ERTk0IjoKICBleGlzdHMgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAxIEIuREU5NCBPYnNlcnZhdGlvbiIKZGVmaW5lICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSBCLkRFOTQgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAxIC0gSElWLkIuREU5NCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSBCLkRFOTQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU5NSAtIFJlYWN0aXZlCkBhY3Rpdml0eTogSElWLkI3IFRlc3QgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIEhJViBhc3NheSBpbiB0aGUgdGVzdGluZyBzdHJhdGVneSB3YXMgcmVhY3RpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlJlYWN0aXZlIEIuREU5NSI6CiAgZXhpc3RzICJSZWFjdGl2ZSBCLkRFOTUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSZWFjdGl2ZSBCLkRFOTUgT2JzZXJ2YXRpb24iCmRlZmluZSAiUmVhY3RpdmUgQi5ERTk1IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlJlYWN0aXZlIC0gSElWLkIuREU5NSJdCmRlZmluZSAiUmVhY3RpdmUgQi5ERTk1IE9ic2VydmF0aW9uIjoKICAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDEgQi5ERTk0IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJSZWFjdGl2ZSAtIEhJVi5CLkRFOTUiCi8qIEVuZCBvZiBSZWFjdGl2ZSBCLkRFOTUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU5NiAtIE5vbi1yZWFjdGl2ZQpAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBISVYgYXNzYXkgaW4gdGhlIHRlc3Rpbmcgc3RyYXRlZ3kgd2FzIG5vbi1yZWFjdGl2ZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTm9uLXJlYWN0aXZlIEIuREU5NiI6CiAgZXhpc3RzICJOb24tcmVhY3RpdmUgQi5ERTk2IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTm9uLXJlYWN0aXZlIEIuREU5NiBPYnNlcnZhdGlvbiIKZGVmaW5lICJOb24tcmVhY3RpdmUgQi5ERTk2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5vbi1yZWFjdGl2ZSAtIEhJVi5CLkRFOTYiXQpkZWZpbmUgIk5vbi1yZWFjdGl2ZSBCLkRFOTYgT2JzZXJ2YXRpb24iOgogICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSBCLkRFOTQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5vbi1yZWFjdGl2ZSAtIEhJVi5CLkRFOTYiCi8qIEVuZCBvZiBOb24tcmVhY3RpdmUgQi5ERTk2ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFOTcgLSBJbnZhbGlkCkBhY3Rpdml0eTogSElWLkI3IFRlc3QgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIEhJViBhc3NheSBpbiB0aGUgdGVzdGluZyBzdHJhdGVneSB3YXMgaW52YWxpZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW52YWxpZCBCLkRFOTciOgogIGV4aXN0cyAiSW52YWxpZCBCLkRFOTcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJJbnZhbGlkIEIuREU5NyBPYnNlcnZhdGlvbiIKZGVmaW5lICJJbnZhbGlkIEIuREU5NyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJJbnZhbGlkIC0gSElWLkIuREU5NyJdCmRlZmluZSAiSW52YWxpZCBCLkRFOTcgT2JzZXJ2YXRpb24iOgogICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSBCLkRFOTQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkludmFsaWQgLSBISVYuQi5ERTk3IgovKiBFbmQgb2YgSW52YWxpZCBCLkRFOTcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREU5OCAtIFRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAyCkBhY3Rpdml0eTogSElWLkI3IFRlc3QgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIHNlY29uZCBISVYgYXNzYXkgaW4gdGhlIHRlc3Rpbmcgc3RyYXRlZ3kKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAyIEIuREU5OCI6CiAgZXhpc3RzICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMiBCLkRFOTggT2JzZXJ2YXRpb24iCmRlZmluZSAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDIgQi5ERTk4IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMiAtIEhJVi5CLkRFOTgiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDIgQi5ERTk4ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFOTkgLSBSZWFjdGl2ZQpAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBISVYgYXNzYXkgaW4gdGhlIHRlc3Rpbmcgc3RyYXRlZ3kgd2FzIHJlYWN0aXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZWFjdGl2ZSBCLkRFOTkiOgogIGV4aXN0cyAiUmVhY3RpdmUgQi5ERTk5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUmVhY3RpdmUgQi5ERTk5IE9ic2VydmF0aW9uIgpkZWZpbmUgIlJlYWN0aXZlIEIuREU5OSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJSZWFjdGl2ZSAtIEhJVi5CLkRFOTkiXQpkZWZpbmUgIlJlYWN0aXZlIEIuREU5OSBPYnNlcnZhdGlvbiI6CiAgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAyIEIuREU5OCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUmVhY3RpdmUgLSBISVYuQi5ERTk5IgovKiBFbmQgb2YgUmVhY3RpdmUgQi5ERTk5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTAwIC0gTm9uLXJlYWN0aXZlCkBhY3Rpdml0eTogSElWLkI3IFRlc3QgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIEhJViBhc3NheSBpbiB0aGUgdGVzdGluZyBzdHJhdGVneSB3YXMgbm9uLXJlYWN0aXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOb24tcmVhY3RpdmUgQi5ERTEwMCI6CiAgZXhpc3RzICJOb24tcmVhY3RpdmUgQi5ERTEwMCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk5vbi1yZWFjdGl2ZSBCLkRFMTAwIE9ic2VydmF0aW9uIgpkZWZpbmUgIk5vbi1yZWFjdGl2ZSBCLkRFMTAwIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5vbi1yZWFjdGl2ZSAtIEhJVi5CLkRFMTAwIl0KZGVmaW5lICJOb24tcmVhY3RpdmUgQi5ERTEwMCBPYnNlcnZhdGlvbiI6CiAgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAyIEIuREU5OCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTm9uLXJlYWN0aXZlIC0gSElWLkIuREUxMDAiCi8qIEVuZCBvZiBOb24tcmVhY3RpdmUgQi5ERTEwMCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTEwMSAtIEludmFsaWQKQGFjdGl2aXR5OiBISVYuQjcgVGVzdCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVGhlIHJlc3VsdCBvZiB0aGUgSElWIGFzc2F5IGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5IHdhcyBpbnZhbGlkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJJbnZhbGlkIEIuREUxMDEiOgogIGV4aXN0cyAiSW52YWxpZCBCLkRFMTAxIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW52YWxpZCBCLkRFMTAxIE9ic2VydmF0aW9uIgpkZWZpbmUgIkludmFsaWQgQi5ERTEwMSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJJbnZhbGlkIC0gSElWLkIuREUxMDEiXQpkZWZpbmUgIkludmFsaWQgQi5ERTEwMSBPYnNlcnZhdGlvbiI6CiAgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAyIEIuREU5OCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW52YWxpZCAtIEhJVi5CLkRFMTAxIgovKiBFbmQgb2YgSW52YWxpZCBCLkRFMTAxICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTAyIC0gVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDMKQGFjdGl2aXR5OiBISVYuQjcgVGVzdCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVGhlIHJlc3VsdCBvZiB0aGUgdGhpcmQgSElWIGFzc2F5IGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMyBCLkRFMTAyIjoKICBleGlzdHMgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAzIEIuREUxMDIgT2JzZXJ2YXRpb24iCmRlZmluZSAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDMgQi5ERTEwMiBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDMgLSBISVYuQi5ERTEwMiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMyBCLkRFMTAyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTAzIC0gUmVhY3RpdmUKQGFjdGl2aXR5OiBISVYuQjcgVGVzdCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVGhlIHJlc3VsdCBvZiB0aGUgSElWIGFzc2F5IGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5IHdhcyByZWFjdGl2ZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmVhY3RpdmUgQi5ERTEwMyI6CiAgZXhpc3RzICJSZWFjdGl2ZSBCLkRFMTAzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUmVhY3RpdmUgQi5ERTEwMyBPYnNlcnZhdGlvbiIKZGVmaW5lICJSZWFjdGl2ZSBCLkRFMTAzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlJlYWN0aXZlIC0gSElWLkIuREUxMDMiXQpkZWZpbmUgIlJlYWN0aXZlIEIuREUxMDMgT2JzZXJ2YXRpb24iOgogICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMyBCLkRFMTAyIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJSZWFjdGl2ZSAtIEhJVi5CLkRFMTAzIgovKiBFbmQgb2YgUmVhY3RpdmUgQi5ERTEwMyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTEwNCAtIE5vbi1yZWFjdGl2ZQpAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBISVYgYXNzYXkgaW4gdGhlIHRlc3Rpbmcgc3RyYXRlZ3kgd2FzIG5vbi1yZWFjdGl2ZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTm9uLXJlYWN0aXZlIEIuREUxMDQiOgogIGV4aXN0cyAiTm9uLXJlYWN0aXZlIEIuREUxMDQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJOb24tcmVhY3RpdmUgQi5ERTEwNCBPYnNlcnZhdGlvbiIKZGVmaW5lICJOb24tcmVhY3RpdmUgQi5ERTEwNCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOb24tcmVhY3RpdmUgLSBISVYuQi5ERTEwNCJdCmRlZmluZSAiTm9uLXJlYWN0aXZlIEIuREUxMDQgT2JzZXJ2YXRpb24iOgogICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMyBCLkRFMTAyIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJOb24tcmVhY3RpdmUgLSBISVYuQi5ERTEwNCIKLyogRW5kIG9mIE5vbi1yZWFjdGl2ZSBCLkRFMTA0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTA1IC0gSW52YWxpZApAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBISVYgYXNzYXkgaW4gdGhlIHRlc3Rpbmcgc3RyYXRlZ3kgd2FzIGludmFsaWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkludmFsaWQgQi5ERTEwNSI6CiAgZXhpc3RzICJJbnZhbGlkIEIuREUxMDUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJJbnZhbGlkIEIuREUxMDUgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW52YWxpZCBCLkRFMTA1IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkludmFsaWQgLSBISVYuQi5ERTEwNSJdCmRlZmluZSAiSW52YWxpZCBCLkRFMTA1IE9ic2VydmF0aW9uIjoKICAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDMgQi5ERTEwMiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW52YWxpZCAtIEhJVi5CLkRFMTA1IgovKiBFbmQgb2YgSW52YWxpZCBCLkRFMTA1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTA2IC0gVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDEgcmVwZWF0ZWQKQGFjdGl2aXR5OiBISVYuQjcgVGVzdCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVGhlIHJlc3VsdCBvZiB0aGUgcmVwZWF0ZWQgZmlyc3QgSElWIGFzc2F5IGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSByZXBlYXRlZCBCLkRFMTA2IjoKICBleGlzdHMgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAxIHJlcGVhdGVkIEIuREUxMDYgT2JzZXJ2YXRpb24iCmRlZmluZSAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDEgcmVwZWF0ZWQgQi5ERTEwNiBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDEgcmVwZWF0ZWQgLSBISVYuQi5ERTEwNiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSByZXBlYXRlZCBCLkRFMTA2ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTA3IC0gUmVhY3RpdmUKQGFjdGl2aXR5OiBISVYuQjcgVGVzdCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVGhlIHJlc3VsdCBvZiB0aGUgSElWIGFzc2F5IGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5IHdhcyByZWFjdGl2ZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmVhY3RpdmUgQi5ERTEwNyI6CiAgZXhpc3RzICJSZWFjdGl2ZSBCLkRFMTA3IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUmVhY3RpdmUgQi5ERTEwNyBPYnNlcnZhdGlvbiIKZGVmaW5lICJSZWFjdGl2ZSBCLkRFMTA3IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlJlYWN0aXZlIC0gSElWLkIuREUxMDciXQpkZWZpbmUgIlJlYWN0aXZlIEIuREUxMDcgT2JzZXJ2YXRpb24iOgogICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSByZXBlYXRlZCBCLkRFMTA2IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJSZWFjdGl2ZSAtIEhJVi5CLkRFMTA3IgovKiBFbmQgb2YgUmVhY3RpdmUgQi5ERTEwNyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTEwOCAtIE5vbi1yZWFjdGl2ZQpAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBISVYgYXNzYXkgaW4gdGhlIHRlc3Rpbmcgc3RyYXRlZ3kgd2FzIG5vbi1yZWFjdGl2ZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTm9uLXJlYWN0aXZlIEIuREUxMDgiOgogIGV4aXN0cyAiTm9uLXJlYWN0aXZlIEIuREUxMDggQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJOb24tcmVhY3RpdmUgQi5ERTEwOCBPYnNlcnZhdGlvbiIKZGVmaW5lICJOb24tcmVhY3RpdmUgQi5ERTEwOCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOb24tcmVhY3RpdmUgLSBISVYuQi5ERTEwOCJdCmRlZmluZSAiTm9uLXJlYWN0aXZlIEIuREUxMDggT2JzZXJ2YXRpb24iOgogICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSByZXBlYXRlZCBCLkRFMTA2IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJOb24tcmVhY3RpdmUgLSBISVYuQi5ERTEwOCIKLyogRW5kIG9mIE5vbi1yZWFjdGl2ZSBCLkRFMTA4ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTA5IC0gSW52YWxpZApAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBISVYgYXNzYXkgaW4gdGhlIHRlc3Rpbmcgc3RyYXRlZ3kgd2FzIGludmFsaWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkludmFsaWQgQi5ERTEwOSI6CiAgZXhpc3RzICJJbnZhbGlkIEIuREUxMDkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJJbnZhbGlkIEIuREUxMDkgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW52YWxpZCBCLkRFMTA5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkludmFsaWQgLSBISVYuQi5ERTEwOSJdCmRlZmluZSAiSW52YWxpZCBCLkRFMTA5IE9ic2VydmF0aW9uIjoKICAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDEgcmVwZWF0ZWQgQi5ERTEwNiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW52YWxpZCAtIEhJVi5CLkRFMTA5IgovKiBFbmQgb2YgSW52YWxpZCBCLkRFMTA5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTEwIC0gSElWIHRlc3QgZGF0ZQpAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBEYXRlIG9mIHRoZSBISVYgdGVzdAoqLwpkZWZpbmUgIkhJViB0ZXN0IGRhdGUgQi5ERTExMCI6CiAgIkhJViB0ZXN0IiBPCiAgcmV0dXJuIHN0YXJ0IG9mIE8uZWZmZWN0aXZlLnRvSW50ZXJ2YWwoKQovKiBFbmQgb2YgSElWIHRlc3QgZGF0ZSBCLkRFMTEwICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTExIC0gSElWIHRlc3QgcmVzdWx0CkBhY3Rpdml0eTogSElWLkI3IFRlc3QgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgZnJvbSBISVYgdGVzdGluZyBhZnRlciBhcHBseWluZyB0aGUgdGVzdGluZyBhbGdvcml0aG0KKi8KLy8gU2FtZSBhcyB0ZXN0IC0gc2VlIHByb2ZpbGUKZGVmaW5lICJISVYgdGVzdCByZXN1bHQgT2JzZXJ2YXRpb24iOgogICJISVYgdGVzdCIgTwoKZGVmaW5lICJISVYgdGVzdCByZXN1bHQgVmFsdWUiOgogICJISVYgdGVzdCIgTwogIHJldHVybiBPLnZhbHVlCgovLyBNb3ZlZCBhbmQgUmVkZWZpbmVkIGluIEhJRQovLyBkZWZpbmUgIkhJViB0ZXN0IHJlc3VsdGVkIjoKLy8gICBbT2JzZXJ2YXRpb25dIE8KLy8gICAgIHdoZXJlIE8uc3RhdHVzIGluIHsnZmluYWwnLCAnYW1lbmRlZCd9Ci8vICAgICBhbmQgTy5jb2RlIH4gQ29uY2VwdHMuIlJhcGlkIGRpYWdub3N0aWMgdGVzdCBmb3IgSElWIC0gSElWLkIuREU4MiIKCi8qIEVuZCBvZiBISVYgdGVzdCByZXN1bHQgQi5ERTExMSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTExMiAtIEhJVi1wb3NpdGl2ZQpAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUZXN0IHJlc3VsdCBpcyBISVYtcG9zaXRpdmUKKi8KZGVmaW5lICJISVYtcG9zaXRpdmUgdGVzdCByZXN1bHQiOgogICJISVYgdGVzdCByZXN1bHQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8udmFsdWUgfiBDb25jZXB0cy4iSElWLXBvc2l0aXZlIC0gSElWLkIuREUxMTIiCi8qIEVuZCBvZiBISVYtcG9zaXRpdmUgQi5ERTExMiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTExMyAtIEhJVi1uZWdhdGl2ZQpAYWN0aXZpdHk6IEhJVi5CNyBUZXN0IGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUZXN0IHJlc3VsdCBpcyBISVYtbmVnYXRpdmUKKi8KZGVmaW5lICJISVYtbmVnYXRpdmUgdGVzdCByZXN1bHQiOgogICJISVYgdGVzdCByZXN1bHQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8udmFsdWUgfiBDb25jZXB0cy4iSElWLW5lZ2F0aXZlIC0gSElWLkIuREUxMTMiCi8qIEVuZCBvZiBISVYtbmVnYXRpdmUgQi5ERTExMyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTExNCAtIEhJVi1pbmNvbmNsdXNpdmUKQGFjdGl2aXR5OiBISVYuQjcgVGVzdCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVGVzdCByZXN1bHQgaXMgSElWLWluY29uY2x1c2l2ZQoqLwpkZWZpbmUgIkhJVi1pbmNvbmNsdXNpdmUgdGVzdCByZXN1bHQiOgogICJISVYgdGVzdCByZXN1bHQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8udmFsdWUgfiBDb25jZXB0cy4iSElWLWluY29uY2x1c2l2ZSIKLyogRW5kIG9mIEhJVi1pbmNvbmNsdXNpdmUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUxMTUgLSBISVYgc3RhdHVzCkBhY3Rpdml0eTogSElWLkI3IFRlc3QgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IEhJViBzdGF0dXMgcmVwb3J0ZWQgYWZ0ZXIgYXBwbHlpbmcgdGhlIG5hdGlvbmFsIEhJViB0ZXN0aW5nIGFsZ29yaXRobS4gTm8gc2luZ2xlIEhJViB0ZXN0IGNhbiBwcm92aWRlIGFuIEhJVi1wb3NpdGl2ZSBkaWFnbm9zaXMuCiovCmRlZmluZSAiSElWIFN0YXR1cyBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSElWIHN0YXR1cyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTE2IC0gSElWLXBvc2l0aXZlCkBhY3Rpdml0eTogSElWLkI3IFRlc3QgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IENsaWVudCBpcyBISVYtcG9zaXRpdmUKKi8KZGVmaW5lICJEYXRlIEhJViBTdGF0dXMgUG9zaXRpdmUiOgogIE1pbigiSElWIFN0YXR1cyBQb3NpdGl2ZSBPYnNlcnZhdGlvbiBEYXRlIiB1bmlvbiAiSElWIFN0YXR1cyBQb3NpdGl2ZSBDb25kaXRpb24gRGF0ZSIpCgpkZWZpbmUgIkhJViBTdGF0dXMgUG9zaXRpdmUgT2JzZXJ2YXRpb24iOgoiSElWIFN0YXR1cyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy52YWx1ZSB+IENvbmNlcHRzLiJISVYtcG9zaXRpdmUgLSBISVYuQi5ERTExNiIKICAgICAgc29ydCBieSBzdGFydCBvZiBlZmZlY3RpdmUudG9JbnRlcnZhbCgpCgpkZWZpbmUgIkhJViBTdGF0dXMgUG9zaXRpdmUgT2JzZXJ2YXRpb24gRGF0ZSI6CiAgIkhJViBTdGF0dXMgUG9zaXRpdmUgT2JzZXJ2YXRpb24iIE8KICByZXR1cm4gc3RhcnQgb2YgTy5lZmZlY3RpdmUudG9JbnRlcnZhbCgpCgogCmRlZmluZSAiSElWIFN0YXR1cyBQb3NpdGl2ZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJISVYtcG9zaXRpdmUgLSBISVYuQi5ERTExNiJdIEMKICAgIHdoZXJlIEMuY2xpbmljYWxTdGF0dXMgfiBDb25jZXB0c0N1c3RvbS4iYWN0aXZlIgogICAgICBhbmQgZXhpc3RzKEMuY2F0ZWdvcnkgQ0Mgd2hlcmUgQ0MgfiBDb25jZXB0c0N1c3RvbS4iZW5jb3VudGVyLWRpYWdub3NpcyIpCiAgICBzb3J0IGJ5IHN0YXJ0IG9mIG9uc2V0LnRvSW50ZXJ2YWwoKQoKZGVmaW5lICJISVYgU3RhdHVzIFBvc2l0aXZlIENvbmRpdGlvbiBEYXRlIjoKICAiSElWIFN0YXR1cyBQb3NpdGl2ZSBDb25kaXRpb24iIEMKICByZXR1cm4gc3RhcnQgb2YgQy5vbnNldC50b0ludGVydmFsKCkKICAKZGVmaW5lICJISVYgU3RhdHVzIE5lZ2F0aXZlIE9ic2VydmF0aW9uIjoKICAiSElWIFN0YXR1cyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy52YWx1ZSB+IENvbmNlcHRzLiJISVYtbmVnYXRpdmUgLSBISVYuQi5ERTExNyIKICAgIHNvcnQgYnkgc3RhcnQgb2YgZWZmZWN0aXZlLnRvSW50ZXJ2YWwoKQoKZGVmaW5lICJISVYgU3RhdHVzIE5lZ2F0aXZlIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhJVi1uZWdhdGl2ZSAtIEhJVi5CLkRFMTE3Il0gQwogIHdoZXJlIEMuY2xpbmljYWxTdGF0dXMgfiBDb25jZXB0c0N1c3RvbS4iYWN0aXZlIgogIGFuZCBleGlzdHMoQy5jYXRlZ29yeSBDQyB3aGVyZSBDQyB+IENvbmNlcHRzQ3VzdG9tLiJlbmNvdW50ZXItZGlhZ25vc2lzIikKICBzb3J0IGJ5IHN0YXJ0IG9mIG9uc2V0LnRvSW50ZXJ2YWwoKQovKiBFbmQgb2YgSElWIHN0YXR1cyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTEyMSAtIFByb2JhYmxlIHJvdXRlIG9mIHRyYW5zbWlzc2lvbgpAYWN0aXZpdHk6IEhJVi5COCBQcm92aWRlIHBvc3QtdGVzdCBjb3Vuc2VsbGluZwpAZGVzY3JpcHRpb246IFByb2JhYmxlIHJvdXRlKHMpIG9mIHRyYW5zbWlzc2lvbiBvZiBISVYgdG8gY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQcm9iYWJsZSByb3V0ZSBvZiB0cmFuc21pc3Npb24iOgogIGV4aXN0cyAiUHJvYmFibGUgcm91dGUgb2YgdHJhbnNtaXNzaW9uIE9ic2VydmF0aW9uIgpkZWZpbmUgIlByb2JhYmxlIHJvdXRlIG9mIHRyYW5zbWlzc2lvbiBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iUHJvYmFibGUgcm91dGUgb2YgdHJhbnNtaXNzaW9uIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFByb2JhYmxlIHJvdXRlIG9mIHRyYW5zbWlzc2lvbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTEyMiAtIEhldGVyb3NleHVhbCBzZXgKQGFjdGl2aXR5OiBISVYuQjggUHJvdmlkZSBwb3N0LXRlc3QgY291bnNlbGxpbmcKQGRlc2NyaXB0aW9uOiBQcm9iYWJsZSByb3V0ZSBvZiBISVYgdHJhbnNtaXNzaW9uIHdhcyB0aHJvdWdoIGhldGVyb3NleHVhbCBzZXgKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhldGVyb3NleHVhbCBzZXgiOgogIGV4aXN0cyAiSGV0ZXJvc2V4dWFsIHNleCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhldGVyb3NleHVhbCBzZXggT2JzZXJ2YXRpb24iCmRlZmluZSAiSGV0ZXJvc2V4dWFsIHNleCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIZXRlcm9zZXh1YWwgc2V4Il0KZGVmaW5lICJIZXRlcm9zZXh1YWwgc2V4IE9ic2VydmF0aW9uIjoKICAiUHJvYmFibGUgcm91dGUgb2YgdHJhbnNtaXNzaW9uIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJIZXRlcm9zZXh1YWwgc2V4IgovKiBFbmQgb2YgSGV0ZXJvc2V4dWFsIHNleCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTEyMyAtIFNleCBiZXR3ZWVuIG1lbgpAYWN0aXZpdHk6IEhJVi5COCBQcm92aWRlIHBvc3QtdGVzdCBjb3Vuc2VsbGluZwpAZGVzY3JpcHRpb246IFByb2JhYmxlIHJvdXRlIG9mIEhJViB0cmFuc21pc3Npb24gd2FzIHRocm91Z2ggc2V4IGJldHdlZW4gbWVuCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZXggYmV0d2VlbiBtZW4iOgogIGV4aXN0cyAiU2V4IGJldHdlZW4gbWVuIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2V4IGJldHdlZW4gbWVuIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNleCBiZXR3ZWVuIG1lbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTZXggYmV0d2VlbiBtZW4iXQpkZWZpbmUgIlNleCBiZXR3ZWVuIG1lbiBPYnNlcnZhdGlvbiI6CiAgIlByb2JhYmxlIHJvdXRlIG9mIHRyYW5zbWlzc2lvbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU2V4IGJldHdlZW4gbWVuIgovKiBFbmQgb2YgU2V4IGJldHdlZW4gbWVuICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTI0IC0gVW5wcm90ZWN0ZWQgaW50ZXJjb3Vyc2UgZHVyaW5nIHNleCB3b3JrCkBhY3Rpdml0eTogSElWLkI4IFByb3ZpZGUgcG9zdC10ZXN0IGNvdW5zZWxsaW5nCkBkZXNjcmlwdGlvbjogUHJvYmFibGUgcm91dGUgb2YgSElWIHRyYW5zbWlzc2lvbiB3YXMgdGhyb3VnaCB1bnByb3RlY3RlZCBpbnRlcmNvdXJzZSBkdXJpbmcgc2V4IHdvcmsKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlVucHJvdGVjdGVkIGludGVyY291cnNlIGR1cmluZyBzZXggd29yayI6CiAgZXhpc3RzICJVbnByb3RlY3RlZCBpbnRlcmNvdXJzZSBkdXJpbmcgc2V4IHdvcmsgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVbnByb3RlY3RlZCBpbnRlcmNvdXJzZSBkdXJpbmcgc2V4IHdvcmsgT2JzZXJ2YXRpb24iCmRlZmluZSAiVW5wcm90ZWN0ZWQgaW50ZXJjb3Vyc2UgZHVyaW5nIHNleCB3b3JrIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlVucHJvdGVjdGVkIGludGVyY291cnNlIGR1cmluZyBzZXggd29yayJdCmRlZmluZSAiVW5wcm90ZWN0ZWQgaW50ZXJjb3Vyc2UgZHVyaW5nIHNleCB3b3JrIE9ic2VydmF0aW9uIjoKICAiUHJvYmFibGUgcm91dGUgb2YgdHJhbnNtaXNzaW9uIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJVbnByb3RlY3RlZCBpbnRlcmNvdXJzZSBkdXJpbmcgc2V4IHdvcmsiCi8qIEVuZCBvZiBVbnByb3RlY3RlZCBpbnRlcmNvdXJzZSBkdXJpbmcgc2V4IHdvcmsgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUxMjUgLSBJbmplY3RpbmcgZHJ1ZyB1c2Ugd2l0aCB1bnN0ZXJpbGUgZXF1aXBtZW50CkBhY3Rpdml0eTogSElWLkI4IFByb3ZpZGUgcG9zdC10ZXN0IGNvdW5zZWxsaW5nCkBkZXNjcmlwdGlvbjogUHJvYmFibGUgcm91dGUgb2YgSElWIHRyYW5zbWlzc2lvbiB3YXMgdGhyb3VnaCBpbmplY3RpbmcgZHJ1ZyB1c2Ugd2l0aCB1bnN0ZXJpbGUgZXF1aXBtZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJJbmplY3RpbmcgZHJ1ZyB1c2Ugd2l0aCB1bnN0ZXJpbGUgZXF1aXBtZW50IjoKICBleGlzdHMgIkluamVjdGluZyBkcnVnIHVzZSB3aXRoIHVuc3RlcmlsZSBlcXVpcG1lbnQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJJbmplY3RpbmcgZHJ1ZyB1c2Ugd2l0aCB1bnN0ZXJpbGUgZXF1aXBtZW50IE9ic2VydmF0aW9uIgpkZWZpbmUgIkluamVjdGluZyBkcnVnIHVzZSB3aXRoIHVuc3RlcmlsZSBlcXVpcG1lbnQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW5qZWN0aW5nIGRydWcgdXNlIHdpdGggdW5zdGVyaWxlIGVxdWlwbWVudCJdCmRlZmluZSAiSW5qZWN0aW5nIGRydWcgdXNlIHdpdGggdW5zdGVyaWxlIGVxdWlwbWVudCBPYnNlcnZhdGlvbiI6CiAgIlByb2JhYmxlIHJvdXRlIG9mIHRyYW5zbWlzc2lvbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW5qZWN0aW5nIGRydWcgdXNlIHdpdGggdW5zdGVyaWxlIGVxdWlwbWVudCIKLyogRW5kIG9mIEluamVjdGluZyBkcnVnIHVzZSB3aXRoIHVuc3RlcmlsZSBlcXVpcG1lbnQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUxMjYgLSBOb3NvY29taWFsCkBhY3Rpdml0eTogSElWLkI4IFByb3ZpZGUgcG9zdC10ZXN0IGNvdW5zZWxsaW5nCkBkZXNjcmlwdGlvbjogUHJvYmFibGUgcm91dGUgb2YgSElWIHRyYW5zbWlzc2lvbiB3YXMgbm9zb2NvbWlhbAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTm9zb2NvbWlhbCI6CiAgZXhpc3RzICJOb3NvY29taWFsIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTm9zb2NvbWlhbCBPYnNlcnZhdGlvbiIKZGVmaW5lICJOb3NvY29taWFsIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5vc29jb21pYWwiXQpkZWZpbmUgIk5vc29jb21pYWwgT2JzZXJ2YXRpb24iOgogICJQcm9iYWJsZSByb3V0ZSBvZiB0cmFuc21pc3Npb24gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5vc29jb21pYWwiCi8qIEVuZCBvZiBOb3NvY29taWFsICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTI3IC0gVmVydGljYWwKQGFjdGl2aXR5OiBISVYuQjggUHJvdmlkZSBwb3N0LXRlc3QgY291bnNlbGxpbmcKQGRlc2NyaXB0aW9uOiBQcm9iYWJsZSByb3V0ZSBvZiBISVYgdHJhbnNtaXNzaW9uIHRvIGFuIGluZmFudCB3YXMgZHVyaW5nIHByZWduYW5jeSwgbGFib3VyLCBkZWxpdmVyeSBhbmQgYnJlYXN0ZmVlZGluZyAodmVydGljYWwgdHJhbnNtaXNzaW9uKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVmVydGljYWwiOgogIGV4aXN0cyAiVmVydGljYWwgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJWZXJ0aWNhbCBPYnNlcnZhdGlvbiIKZGVmaW5lICJWZXJ0aWNhbCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJWZXJ0aWNhbCJdCmRlZmluZSAiVmVydGljYWwgT2JzZXJ2YXRpb24iOgogICJQcm9iYWJsZSByb3V0ZSBvZiB0cmFuc21pc3Npb24gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlZlcnRpY2FsIgovKiBFbmQgb2YgVmVydGljYWwgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUxMjggLSBPdGhlcgpAYWN0aXZpdHk6IEhJVi5COCBQcm92aWRlIHBvc3QtdGVzdCBjb3Vuc2VsbGluZwpAZGVzY3JpcHRpb246IFByb2JhYmxlIHJvdXRlIG9mIEhJViB0cmFuc21pc3Npb24gd2FzIG90aGVyIGFuZCBtYXkgaW5jbHVkZSBuZWVkbGUgYWNjaWRlbnRzLCBibG9vZCB0cmFuc2Z1c2lvbiwgYmxvb2QgcHJvZHVjdHMgb3Igb3JnYW4vdGlzc3VlIGRvbmF0aW9ucywgdGF0dG9vcywgcGllcmNpbmdzLCBjaXJjdW1jaXNpb24sIG9yIGFjdXB1bmN0dXJlLgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT3RoZXIgQi5ERTEyOCI6CiAgZXhpc3RzICJPdGhlciBCLkRFMTI4IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiT3RoZXIgQi5ERTEyOCBPYnNlcnZhdGlvbiIKZGVmaW5lICJPdGhlciBCLkRFMTI4IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk90aGVyIC0gSElWLkIuREUxMjgiXQpkZWZpbmUgIk90aGVyIEIuREUxMjggT2JzZXJ2YXRpb24iOgogICJQcm9iYWJsZSByb3V0ZSBvZiB0cmFuc21pc3Npb24gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk90aGVyIC0gSElWLkIuREUxMjgiCi8qIEVuZCBvZiBPdGhlciBCLkRFMTI4ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTQxIC0gUGFydG5lciB2aXJhbGx5IHN1cHByZXNzZWQgb24gQVJUCkBhY3Rpdml0eTogSElWLkI2IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQVJUIGFuZCB2aXJhbGx5IHN1cHByZXNzaW9uIHN0YXR1cyBvZiBhIHBhcnRuZXIgb2YgdGhlIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUGFydG5lciB2aXJhbGx5IHN1cHByZXNzZWQgb24gQVJUIjoKICBleGlzdHMgIlBhcnRuZXIgdmlyYWxseSBzdXBwcmVzc2VkIG9uIEFSVCBPYnNlcnZhdGlvbiIKZGVmaW5lICJQYXJ0bmVyIHZpcmFsbHkgc3VwcHJlc3NlZCBvbiBBUlQgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlBhcnRuZXIgdmlyYWxseSBzdXBwcmVzc2VkIG9uIEFSVCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIFBhcnRuZXIgdmlyYWxseSBzdXBwcmVzc2VkIG9uIEFSVCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE0MiAtIENvdW5zZWxsaW5nIHByb3ZpZGVkCkBhY3Rpdml0eTogSElWLkI4IFByb3ZpZGUgcG9zdC10ZXN0IGNvdW5zZWxsaW5nCkBkZXNjcmlwdGlvbjogV2hldGhlciBjb3Vuc2VsbGluZyB3YXMgcHJvdmlkZWQgdG8gYSBjbGllbnQgZHVyaW5nIHRoZSB2aXNpdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ291bnNlbGxpbmcgcHJvdmlkZWQiOgogIGV4aXN0cyAiQ291bnNlbGxpbmcgcHJvdmlkZWQgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ291bnNlbGxpbmcgcHJvdmlkZWQgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkNvdW5zZWxsaW5nIHByb3ZpZGVkIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIENvdW5zZWxsaW5nIHByb3ZpZGVkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTQzIC0gSElWLXBvc2l0aXZlIGNvdW5zZWxsaW5nIGNvbmR1Y3RlZApAYWN0aXZpdHk6IEhJVi5COCBQcm92aWRlIHBvc3QtdGVzdCBjb3Vuc2VsbGluZwpAZGVzY3JpcHRpb246IFdoZXRoZXIgY291bnNlbGxpbmcgd2FzIHByb3ZpZGVkIHRvIGEgY2xpZW50IHdobyBoYXMgYmVlbiBkaWFnbm9zZWQgd2l0aCBISVYKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhJVi1wb3NpdGl2ZSBjb3Vuc2VsbGluZyBjb25kdWN0ZWQiOgogIGV4aXN0cyAiSElWLXBvc2l0aXZlIGNvdW5zZWxsaW5nIGNvbmR1Y3RlZCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhJVi1wb3NpdGl2ZSBjb3Vuc2VsbGluZyBjb25kdWN0ZWQgT2JzZXJ2YXRpb24iCmRlZmluZSAiSElWLXBvc2l0aXZlIGNvdW5zZWxsaW5nIGNvbmR1Y3RlZCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJISVYtcG9zaXRpdmUgY291bnNlbGxpbmcgY29uZHVjdGVkIl0KZGVmaW5lICJISVYtcG9zaXRpdmUgY291bnNlbGxpbmcgY29uZHVjdGVkIE9ic2VydmF0aW9uIjoKICAiQ291bnNlbGxpbmcgcHJvdmlkZWQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkhJVi1wb3NpdGl2ZSBjb3Vuc2VsbGluZyBjb25kdWN0ZWQiCi8qIEVuZCBvZiBISVYtcG9zaXRpdmUgY291bnNlbGxpbmcgY29uZHVjdGVkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTQ0IC0gSGVwYXRpdGlzIEIgcG9zaXRpdmUgY291bnNlbGxpbmcgY29uZHVjdGVkCkBhY3Rpdml0eTogSElWLkI4IFByb3ZpZGUgcG9zdC10ZXN0IGNvdW5zZWxsaW5nCkBkZXNjcmlwdGlvbjogV2hldGhlciBjb3Vuc2VsbGluZyB3YXMgcHJvdmlkZWQgdG8gYSBjbGllbnQgd2hvIGhhcyBiZWVuIGRpYWdub3NlZCB3aXRoIGhlcGF0aXRpcyBCCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIZXBhdGl0aXMgQiBwb3NpdGl2ZSBjb3Vuc2VsbGluZyBjb25kdWN0ZWQiOgogIGV4aXN0cyAiSGVwYXRpdGlzIEIgcG9zaXRpdmUgY291bnNlbGxpbmcgY29uZHVjdGVkIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSGVwYXRpdGlzIEIgcG9zaXRpdmUgY291bnNlbGxpbmcgY29uZHVjdGVkIE9ic2VydmF0aW9uIgpkZWZpbmUgIkhlcGF0aXRpcyBCIHBvc2l0aXZlIGNvdW5zZWxsaW5nIGNvbmR1Y3RlZCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIZXBhdGl0aXMgQiBwb3NpdGl2ZSBjb3Vuc2VsbGluZyBjb25kdWN0ZWQiXQpkZWZpbmUgIkhlcGF0aXRpcyBCIHBvc2l0aXZlIGNvdW5zZWxsaW5nIGNvbmR1Y3RlZCBPYnNlcnZhdGlvbiI6CiAgIkNvdW5zZWxsaW5nIHByb3ZpZGVkIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJIZXBhdGl0aXMgQiBwb3NpdGl2ZSBjb3Vuc2VsbGluZyBjb25kdWN0ZWQiCi8qIEVuZCBvZiBIZXBhdGl0aXMgQiBwb3NpdGl2ZSBjb3Vuc2VsbGluZyBjb25kdWN0ZWQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUxNDUgLSBIZXBhdGl0aXMgQyBwb3NpdGl2ZSBjb3Vuc2VsbGluZyBjb25kdWN0ZWQKQGFjdGl2aXR5OiBISVYuQjggUHJvdmlkZSBwb3N0LXRlc3QgY291bnNlbGxpbmcKQGRlc2NyaXB0aW9uOiBXaGV0aGVyIGNvdW5zZWxsaW5nIHdhcyBwcm92aWRlZCB0byBhIGNsaWVudCB3aG8gaGFzIGJlZW4gZGlhZ25vc2VkIHdpdGggaGVwYXRpdGlzIEMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhlcGF0aXRpcyBDIHBvc2l0aXZlIGNvdW5zZWxsaW5nIGNvbmR1Y3RlZCI6CiAgZXhpc3RzICJIZXBhdGl0aXMgQyBwb3NpdGl2ZSBjb3Vuc2VsbGluZyBjb25kdWN0ZWQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJIZXBhdGl0aXMgQyBwb3NpdGl2ZSBjb3Vuc2VsbGluZyBjb25kdWN0ZWQgT2JzZXJ2YXRpb24iCmRlZmluZSAiSGVwYXRpdGlzIEMgcG9zaXRpdmUgY291bnNlbGxpbmcgY29uZHVjdGVkIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhlcGF0aXRpcyBDIHBvc2l0aXZlIGNvdW5zZWxsaW5nIGNvbmR1Y3RlZCJdCmRlZmluZSAiSGVwYXRpdGlzIEMgcG9zaXRpdmUgY291bnNlbGxpbmcgY29uZHVjdGVkIE9ic2VydmF0aW9uIjoKICAiQ291bnNlbGxpbmcgcHJvdmlkZWQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkhlcGF0aXRpcyBDIHBvc2l0aXZlIGNvdW5zZWxsaW5nIGNvbmR1Y3RlZCIKLyogRW5kIG9mIEhlcGF0aXRpcyBDIHBvc2l0aXZlIGNvdW5zZWxsaW5nIGNvbmR1Y3RlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE0NiAtIFN5cGhpbGlzIGNvdW5zZWxsaW5nLCB0cmVhdG1lbnQgYW5kIGZ1cnRoZXIgdGVzdGluZwpAYWN0aXZpdHk6IEhJVi5COCBQcm92aWRlIHBvc3QtdGVzdCBjb3Vuc2VsbGluZwpAZGVzY3JpcHRpb246IFdoZXRoZXIgY291bnNlbGxpbmcgYW5kIHRyZWF0bWVudCB3YXMgcHJvdmlkZWQgdG8gYSBjbGllbnQgd2hvIGhhcyBiZWVuIGRpYWdub3NlZCB3aXRoIHN5cGhpbGlzLiBBZGRpdGlvbmFsIHRlc3RpbmcgKFJQUiB0ZXN0KSByZWNvbW1lbmRlZC4KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlN5cGhpbGlzIGNvdW5zZWxsaW5nLCB0cmVhdG1lbnQgYW5kIGZ1cnRoZXIgdGVzdGluZyI6CiAgZXhpc3RzICJTeXBoaWxpcyBjb3Vuc2VsbGluZywgdHJlYXRtZW50IGFuZCBmdXJ0aGVyIHRlc3RpbmcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJTeXBoaWxpcyBjb3Vuc2VsbGluZywgdHJlYXRtZW50IGFuZCBmdXJ0aGVyIHRlc3RpbmcgT2JzZXJ2YXRpb24iCmRlZmluZSAiU3lwaGlsaXMgY291bnNlbGxpbmcsIHRyZWF0bWVudCBhbmQgZnVydGhlciB0ZXN0aW5nIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlN5cGhpbGlzIGNvdW5zZWxsaW5nLCB0cmVhdG1lbnQgYW5kIGZ1cnRoZXIgdGVzdGluZyJdCmRlZmluZSAiU3lwaGlsaXMgY291bnNlbGxpbmcsIHRyZWF0bWVudCBhbmQgZnVydGhlciB0ZXN0aW5nIE9ic2VydmF0aW9uIjoKICAiQ291bnNlbGxpbmcgcHJvdmlkZWQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlN5cGhpbGlzIGNvdW5zZWxsaW5nLCB0cmVhdG1lbnQgYW5kIGZ1cnRoZXIgdGVzdGluZyIKLyogRW5kIG9mIFN5cGhpbGlzIGNvdW5zZWxsaW5nLCB0cmVhdG1lbnQgYW5kIGZ1cnRoZXIgdGVzdGluZyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE0NyAtIExpbmtlZCB0byBlbnJvbG1lbnQgaW4gY2FyZSBhbmQgQVJUIGluaXRpYXRpb24KQGFjdGl2aXR5OiBISVYuQjggUHJvdmlkZSBwb3N0LXRlc3QgY291bnNlbGxpbmcKQGRlc2NyaXB0aW9uOiBMaW5rYWdlIG1hZGUgZnJvbSBISVYgdGVzdGluZyB0byBlbnJvbG1lbnQgaW4gY2FyZSBmb2xsb3dpbmcgYW4gSElWIGRpYWdub3NpcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTGlua2VkIHRvIGVucm9sbWVudCBpbiBjYXJlIGFuZCBBUlQgaW5pdGlhdGlvbiI6CiAgZXhpc3RzICJMaW5rZWQgdG8gZW5yb2xtZW50IGluIGNhcmUgYW5kIEFSVCBpbml0aWF0aW9uIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTGlua2VkIHRvIGVucm9sbWVudCBpbiBjYXJlIGFuZCBBUlQgaW5pdGlhdGlvbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJMaW5rZWQgdG8gZW5yb2xtZW50IGluIGNhcmUgYW5kIEFSVCBpbml0aWF0aW9uIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkxpbmtlZCB0byBlbnJvbG1lbnQgaW4gY2FyZSBhbmQgQVJUIGluaXRpYXRpb24iXQpkZWZpbmUgIkxpbmtlZCB0byBlbnJvbG1lbnQgaW4gY2FyZSBhbmQgQVJUIGluaXRpYXRpb24gT2JzZXJ2YXRpb24iOgogICJDb3Vuc2VsbGluZyBwcm92aWRlZCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTGlua2VkIHRvIGVucm9sbWVudCBpbiBjYXJlIGFuZCBBUlQgaW5pdGlhdGlvbiIKLyogRW5kIG9mIExpbmtlZCB0byBlbnJvbG1lbnQgaW4gY2FyZSBhbmQgQVJUIGluaXRpYXRpb24gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUxNDggLSBWTU1DIGNvdW5zZWxsaW5nIHByb3ZpZGVkCkBhY3Rpdml0eTogSElWLkI4IFByb3ZpZGUgcG9zdC10ZXN0IGNvdW5zZWxsaW5nCkBkZXNjcmlwdGlvbjogV2hldGhlciBjb3Vuc2VsbGluZyBmb3Igdm9sdW50YXJ5IG1lZGljYWwgbWFsZSBjaXJjdW1jaXNpb24gKFZNTUMpIHdhcyBwcm92aWRlZCBmb2xsb3dpbmcgYW4gSElWLW5lZ2F0aXZlIHRlc3QKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlZNTUMgY291bnNlbGxpbmcgcHJvdmlkZWQiOgogIGV4aXN0cyAiVk1NQyBjb3Vuc2VsbGluZyBwcm92aWRlZCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlZNTUMgY291bnNlbGxpbmcgcHJvdmlkZWQgT2JzZXJ2YXRpb24iCmRlZmluZSAiVk1NQyBjb3Vuc2VsbGluZyBwcm92aWRlZCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJWTU1DIGNvdW5zZWxsaW5nIHByb3ZpZGVkIl0KZGVmaW5lICJWTU1DIGNvdW5zZWxsaW5nIHByb3ZpZGVkIE9ic2VydmF0aW9uIjoKICAiQ291bnNlbGxpbmcgcHJvdmlkZWQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlZNTUMgY291bnNlbGxpbmcgcHJvdmlkZWQiCi8qIEVuZCBvZiBWTU1DIGNvdW5zZWxsaW5nIHByb3ZpZGVkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTQ5IC0gUHJldmVudGlvbiBzZXJ2aWNlcyBvZmZlcmVkIGFuZCByZWZlcnJhbHMKQGFjdGl2aXR5OiBISVYuQjkgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgdG8gcHJldmVudGlvbiBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUHJldmVudGlvbiBzZXJ2aWNlcyBvZmZlcmVkIGFuZCByZWZlcnJhbHMgQi5ERTE0OSI6CiAgZXhpc3RzICJQcmV2ZW50aW9uIHNlcnZpY2VzIG9mZmVyZWQgYW5kIHJlZmVycmFscyBCLkRFMTQ5IE9ic2VydmF0aW9uIgpkZWZpbmUgIlByZXZlbnRpb24gc2VydmljZXMgb2ZmZXJlZCBhbmQgcmVmZXJyYWxzIEIuREUxNDkgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlByZXZlbnRpb24gc2VydmljZXMgb2ZmZXJlZCBhbmQgcmVmZXJyYWxzIC0gSElWLkIuREUxNDkiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgUHJldmVudGlvbiBzZXJ2aWNlcyBvZmZlcmVkIGFuZCByZWZlcnJhbHMgQi5ERTE0OSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE1MCAtIE9mZmVyIG1hbGUgYW5kIGZlbWFsZSBjb25kb21zIGFuZCBjb25kb20tY29tcGF0aWJsZSBsdWJyaWNhbnRzCkBhY3Rpdml0eTogSElWLkI5IERldGVybWluZSByZWNvbW1lbmRlZCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE9mZmVyIG1hbGUgYW5kIGZlbWFsZSBjb25kb21zIGFuZCBjb25kb20tY29tcGF0aWJsZSBsdWJyaWNhbnRzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPZmZlciBtYWxlIGFuZCBmZW1hbGUgY29uZG9tcyBhbmQgY29uZG9tLWNvbXBhdGlibGUgbHVicmljYW50cyBCLkRFMTUwIjoKICBleGlzdHMgIk9mZmVyIG1hbGUgYW5kIGZlbWFsZSBjb25kb21zIGFuZCBjb25kb20tY29tcGF0aWJsZSBsdWJyaWNhbnRzIEIuREUxNTAgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPZmZlciBtYWxlIGFuZCBmZW1hbGUgY29uZG9tcyBhbmQgY29uZG9tLWNvbXBhdGlibGUgbHVicmljYW50cyBCLkRFMTUwIE9ic2VydmF0aW9uIgpkZWZpbmUgIk9mZmVyIG1hbGUgYW5kIGZlbWFsZSBjb25kb21zIGFuZCBjb25kb20tY29tcGF0aWJsZSBsdWJyaWNhbnRzIEIuREUxNTAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iT2ZmZXIgbWFsZSBhbmQgZmVtYWxlIGNvbmRvbXMgYW5kIGNvbmRvbS1jb21wYXRpYmxlIGx1YnJpY2FudHMgLSBISVYuQi5ERTE1MCJdCmRlZmluZSAiT2ZmZXIgbWFsZSBhbmQgZmVtYWxlIGNvbmRvbXMgYW5kIGNvbmRvbS1jb21wYXRpYmxlIGx1YnJpY2FudHMgQi5ERTE1MCBPYnNlcnZhdGlvbiI6CiAgIlByZXZlbnRpb24gc2VydmljZXMgb2ZmZXJlZCBhbmQgcmVmZXJyYWxzIEIuREUxNDkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk9mZmVyIG1hbGUgYW5kIGZlbWFsZSBjb25kb21zIGFuZCBjb25kb20tY29tcGF0aWJsZSBsdWJyaWNhbnRzIC0gSElWLkIuREUxNTAiCi8qIEVuZCBvZiBPZmZlciBtYWxlIGFuZCBmZW1hbGUgY29uZG9tcyBhbmQgY29uZG9tLWNvbXBhdGlibGUgbHVicmljYW50cyBCLkRFMTUwICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTUxIC0gT2ZmZXIgcHJlLWV4cG9zdXJlIHByb3BoeWxheGlzIFByRVAgZm9yIHBlb3BsZSBhdCBlbGV2YXRlZCByaXNrIGZvciBISVYgYWNxdWlzaXRpb24KQGFjdGl2aXR5OiBISVYuQjkgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT2ZmZXIgcHJlLWV4cG9zdXJlIHByb3BoeWxheGlzIChQckVQKSB0byBwZW9wbGUgd2l0aCBzdWJzdGFudGlhbCBvbmdvaW5nIHJpc2sgb2YgSElWIGluZmVjdGlvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT2ZmZXIgcHJlLWV4cG9zdXJlIHByb3BoeWxheGlzIFByRVAgZm9yIHBlb3BsZSBhdCBlbGV2YXRlZCByaXNrIGZvciBISVYgYWNxdWlzaXRpb24iOgogIGV4aXN0cyAiT2ZmZXIgcHJlLWV4cG9zdXJlIHByb3BoeWxheGlzIFByRVAgZm9yIHBlb3BsZSBhdCBlbGV2YXRlZCByaXNrIGZvciBISVYgYWNxdWlzaXRpb24gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPZmZlciBwcmUtZXhwb3N1cmUgcHJvcGh5bGF4aXMgUHJFUCBmb3IgcGVvcGxlIGF0IGVsZXZhdGVkIHJpc2sgZm9yIEhJViBhY3F1aXNpdGlvbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJPZmZlciBwcmUtZXhwb3N1cmUgcHJvcGh5bGF4aXMgUHJFUCBmb3IgcGVvcGxlIGF0IGVsZXZhdGVkIHJpc2sgZm9yIEhJViBhY3F1aXNpdGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPZmZlciBwcmUtZXhwb3N1cmUgcHJvcGh5bGF4aXMgUHJFUCBmb3IgcGVvcGxlIGF0IGVsZXZhdGVkIHJpc2sgZm9yIEhJViBhY3F1aXNpdGlvbiJdCmRlZmluZSAiT2ZmZXIgcHJlLWV4cG9zdXJlIHByb3BoeWxheGlzIFByRVAgZm9yIHBlb3BsZSBhdCBlbGV2YXRlZCByaXNrIGZvciBISVYgYWNxdWlzaXRpb24gT2JzZXJ2YXRpb24iOgogICJQcmV2ZW50aW9uIHNlcnZpY2VzIG9mZmVyZWQgYW5kIHJlZmVycmFscyBCLkRFMTQ5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJPZmZlciBwcmUtZXhwb3N1cmUgcHJvcGh5bGF4aXMgUHJFUCBmb3IgcGVvcGxlIGF0IGVsZXZhdGVkIHJpc2sgZm9yIEhJViBhY3F1aXNpdGlvbiIKLyogRW5kIG9mIE9mZmVyIHByZS1leHBvc3VyZSBwcm9waHlsYXhpcyBQckVQIGZvciBwZW9wbGUgYXQgZWxldmF0ZWQgcmlzayBmb3IgSElWIGFjcXVpc2l0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTUyIC0gT2ZmZXIgcG9zdC1leHBvc3VyZSBwcm9waHlsYXhpcyBQRVAgZm9sbG93aW5nIHN1c3BlY3RlZCBleHBvc3VyZQpAYWN0aXZpdHk6IEhJVi5COSBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBjbGllbnQgZm9yIFBFUCBmb2xsb3dpbmcgc3VzcGVjdGVkIGV4cG9zdXJlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPZmZlciBwb3N0LWV4cG9zdXJlIHByb3BoeWxheGlzIFBFUCBmb2xsb3dpbmcgc3VzcGVjdGVkIGV4cG9zdXJlIjoKICBleGlzdHMgIk9mZmVyIHBvc3QtZXhwb3N1cmUgcHJvcGh5bGF4aXMgUEVQIGZvbGxvd2luZyBzdXNwZWN0ZWQgZXhwb3N1cmUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPZmZlciBwb3N0LWV4cG9zdXJlIHByb3BoeWxheGlzIFBFUCBmb2xsb3dpbmcgc3VzcGVjdGVkIGV4cG9zdXJlIE9ic2VydmF0aW9uIgpkZWZpbmUgIk9mZmVyIHBvc3QtZXhwb3N1cmUgcHJvcGh5bGF4aXMgUEVQIGZvbGxvd2luZyBzdXNwZWN0ZWQgZXhwb3N1cmUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iT2ZmZXIgcG9zdC1leHBvc3VyZSBwcm9waHlsYXhpcyBQRVAgZm9sbG93aW5nIHN1c3BlY3RlZCBleHBvc3VyZSJdCmRlZmluZSAiT2ZmZXIgcG9zdC1leHBvc3VyZSBwcm9waHlsYXhpcyBQRVAgZm9sbG93aW5nIHN1c3BlY3RlZCBleHBvc3VyZSBPYnNlcnZhdGlvbiI6CiAgIlByZXZlbnRpb24gc2VydmljZXMgb2ZmZXJlZCBhbmQgcmVmZXJyYWxzIEIuREUxNDkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk9mZmVyIHBvc3QtZXhwb3N1cmUgcHJvcGh5bGF4aXMgUEVQIGZvbGxvd2luZyBzdXNwZWN0ZWQgZXhwb3N1cmUiCi8qIEVuZCBvZiBPZmZlciBwb3N0LWV4cG9zdXJlIHByb3BoeWxheGlzIFBFUCBmb2xsb3dpbmcgc3VzcGVjdGVkIGV4cG9zdXJlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTUzIC0gVm9sdW50YXJ5IG1lZGljYWwgbWFsZSBjaXJjdW1jaXNpb24gVk1NQwpAYWN0aXZpdHk6IEhJVi5COSBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciByZWZlcnJhbCBmb3IgVk1NQyBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVm9sdW50YXJ5IG1lZGljYWwgbWFsZSBjaXJjdW1jaXNpb24gVk1NQyI6CiAgZXhpc3RzICJWb2x1bnRhcnkgbWVkaWNhbCBtYWxlIGNpcmN1bWNpc2lvbiBWTU1DIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVm9sdW50YXJ5IG1lZGljYWwgbWFsZSBjaXJjdW1jaXNpb24gVk1NQyBPYnNlcnZhdGlvbiIKZGVmaW5lICJWb2x1bnRhcnkgbWVkaWNhbCBtYWxlIGNpcmN1bWNpc2lvbiBWTU1DIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlZvbHVudGFyeSBtZWRpY2FsIG1hbGUgY2lyY3VtY2lzaW9uIFZNTUMiXQpkZWZpbmUgIlZvbHVudGFyeSBtZWRpY2FsIG1hbGUgY2lyY3VtY2lzaW9uIFZNTUMgT2JzZXJ2YXRpb24iOgogICJQcmV2ZW50aW9uIHNlcnZpY2VzIG9mZmVyZWQgYW5kIHJlZmVycmFscyBCLkRFMTQ5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJWb2x1bnRhcnkgbWVkaWNhbCBtYWxlIGNpcmN1bWNpc2lvbiBWTU1DIgovKiBFbmQgb2YgVm9sdW50YXJ5IG1lZGljYWwgbWFsZSBjaXJjdW1jaXNpb24gVk1NQyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE1NCAtIEhhcm0gcmVkdWN0aW9uIGZvciBwZW9wbGUgd2hvIGluamVjdCBkcnVncwpAYWN0aXZpdHk6IEhJVi5COSBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciB0byBoYXJtIHJlZHVjdGlvbiBzZXJ2aWNlcyBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgKG5lZWRsZSBhbmQgc3lyaW5nZSBwcm9ncmFtbWVzLCBvcGlvaWQgc3Vic3RpdHV0aW9uIHRoZXJhcHksIG90aGVyIGRydWctZGVwZW5kZW5jZSB0cmVhdG1lbnQgYW5kIG9waW9pZCBvdmVyZG9zZSBwcmV2ZW50aW9uIGFuZCBtYW5hZ2VtZW50KQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSGFybSByZWR1Y3Rpb24gZm9yIHBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIEIuREUxNTQiOgogIGV4aXN0cyAiSGFybSByZWR1Y3Rpb24gZm9yIHBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIEIuREUxNTQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJIYXJtIHJlZHVjdGlvbiBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgQi5ERTE1NCBPYnNlcnZhdGlvbiIKZGVmaW5lICJIYXJtIHJlZHVjdGlvbiBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgQi5ERTE1NCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIYXJtIHJlZHVjdGlvbiBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgLSBISVYuQi5ERTE1NCJdCmRlZmluZSAiSGFybSByZWR1Y3Rpb24gZm9yIHBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIEIuREUxNTQgT2JzZXJ2YXRpb24iOgogICJQcmV2ZW50aW9uIHNlcnZpY2VzIG9mZmVyZWQgYW5kIHJlZmVycmFscyBCLkRFMTQ5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJIYXJtIHJlZHVjdGlvbiBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgLSBISVYuQi5ERTE1NCIKLyogRW5kIG9mIEhhcm0gcmVkdWN0aW9uIGZvciBwZW9wbGUgd2hvIGluamVjdCBkcnVncyBCLkRFMTU0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTU1IC0gQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uLCBwYXJ0aWN1bGFybHkgZm9yIHBlb3BsZSB3aXRoIEhJViBhbmQgbWVtYmVycyBvZiBrZXkgcG9wdWxhdGlvbnMKQGFjdGl2aXR5OiBISVYuQjkgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgdG8gYmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uLCBwYXJ0aWN1bGFybHkgZm9yIHBlb3BsZSB3aXRoIEhJViBhbmQgbWVtYmVycyBvZiBrZXkgcG9wdWxhdGlvbnMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkJlaGF2aW91cmFsIGludGVydmVudGlvbnMgdG8gc3VwcG9ydCByaXNrIHJlZHVjdGlvbiwgcGFydGljdWxhcmx5IGZvciBwZW9wbGUgd2l0aCBISVYgYW5kIG1lbWJlcnMgb2Yga2V5IHBvcHVsYXRpb25zIjoKICBleGlzdHMgIkJlaGF2aW91cmFsIGludGVydmVudGlvbnMgdG8gc3VwcG9ydCByaXNrIHJlZHVjdGlvbiwgcGFydGljdWxhcmx5IGZvciBwZW9wbGUgd2l0aCBISVYgYW5kIG1lbWJlcnMgb2Yga2V5IHBvcHVsYXRpb25zIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uLCBwYXJ0aWN1bGFybHkgZm9yIHBlb3BsZSB3aXRoIEhJViBhbmQgbWVtYmVycyBvZiBrZXkgcG9wdWxhdGlvbnMgT2JzZXJ2YXRpb24iCmRlZmluZSAiQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uLCBwYXJ0aWN1bGFybHkgZm9yIHBlb3BsZSB3aXRoIEhJViBhbmQgbWVtYmVycyBvZiBrZXkgcG9wdWxhdGlvbnMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uLCBwYXJ0aWN1bGFybHkgZm9yIHBlb3BsZSB3aXRoIEhJViBhbmQgbWVtYmVycyBvZiBrZXkgcG9wdWxhdGlvbnMiXQpkZWZpbmUgIkJlaGF2aW91cmFsIGludGVydmVudGlvbnMgdG8gc3VwcG9ydCByaXNrIHJlZHVjdGlvbiwgcGFydGljdWxhcmx5IGZvciBwZW9wbGUgd2l0aCBISVYgYW5kIG1lbWJlcnMgb2Yga2V5IHBvcHVsYXRpb25zIE9ic2VydmF0aW9uIjoKICAiUHJldmVudGlvbiBzZXJ2aWNlcyBvZmZlcmVkIGFuZCByZWZlcnJhbHMgQi5ERTE0OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uLCBwYXJ0aWN1bGFybHkgZm9yIHBlb3BsZSB3aXRoIEhJViBhbmQgbWVtYmVycyBvZiBrZXkgcG9wdWxhdGlvbnMiCi8qIEVuZCBvZiBCZWhhdmlvdXJhbCBpbnRlcnZlbnRpb25zIHRvIHN1cHBvcnQgcmlzayByZWR1Y3Rpb24sIHBhcnRpY3VsYXJseSBmb3IgcGVvcGxlIHdpdGggSElWIGFuZCBtZW1iZXJzIG9mIGtleSBwb3B1bGF0aW9ucyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE1NiAtIEhJViB0ZXN0aW5nIGZvciBwYXJ0bmVycyBhbmQgYmlvbG9naWNhbCBjaGlsZHJlbgpAYWN0aXZpdHk6IEhJVi5COSBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciB2b2x1bnRhcnkgdGVzdGluZyBmb3IgYWxsIHBhcnRuZXJzIGFuZCBiaW9sb2dpY2FsIGNoaWxkcmVuIG9mIHBvc2l0aXZlIGNhc2VzIChpbmNsdWRlcyBwYXJ0bmVyIHNlcnZpY2VzIGFuZCBpbmRleCBjYXNlIHRlc3RpbmcpLCBhcyB3ZWxsbCBhcyBwYXJ0bmVycyBhbmQgc29jaWFsIGNvbnRhY3RzIG9mIHBlb3BsZSBmcm9tIGtleSBwb3B1bGF0aW9ucywgd2hlcmUgYXBwcm9wcmlhdGUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhJViB0ZXN0aW5nIGZvciBwYXJ0bmVycyBhbmQgYmlvbG9naWNhbCBjaGlsZHJlbiBCLkRFMTU2IjoKICBleGlzdHMgIkhJViB0ZXN0aW5nIGZvciBwYXJ0bmVycyBhbmQgYmlvbG9naWNhbCBjaGlsZHJlbiBCLkRFMTU2IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSElWIHRlc3RpbmcgZm9yIHBhcnRuZXJzIGFuZCBiaW9sb2dpY2FsIGNoaWxkcmVuIEIuREUxNTYgT2JzZXJ2YXRpb24iCmRlZmluZSAiSElWIHRlc3RpbmcgZm9yIHBhcnRuZXJzIGFuZCBiaW9sb2dpY2FsIGNoaWxkcmVuIEIuREUxNTYgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSElWIHRlc3RpbmcgZm9yIHBhcnRuZXJzIGFuZCBiaW9sb2dpY2FsIGNoaWxkcmVuIC0gSElWLkIuREUxNTYiXQpkZWZpbmUgIkhJViB0ZXN0aW5nIGZvciBwYXJ0bmVycyBhbmQgYmlvbG9naWNhbCBjaGlsZHJlbiBCLkRFMTU2IE9ic2VydmF0aW9uIjoKICAiUHJldmVudGlvbiBzZXJ2aWNlcyBvZmZlcmVkIGFuZCByZWZlcnJhbHMgQi5ERTE0OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSElWIHRlc3RpbmcgZm9yIHBhcnRuZXJzIGFuZCBiaW9sb2dpY2FsIGNoaWxkcmVuIC0gSElWLkIuREUxNTYiCi8qIEVuZCBvZiBISVYgdGVzdGluZyBmb3IgcGFydG5lcnMgYW5kIGJpb2xvZ2ljYWwgY2hpbGRyZW4gQi5ERTE1NiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE1NyAtIEhJViB0ZXN0aW5nIGZvciBwYXJ0bmVycyBhbmQgc29jaWFsIGNvbnRhY3RzIG9mIHBlb3BsZSBmcm9tIGtleSBwb3B1bGF0aW9ucywgd2hlcmUgYXBwcm9wcmlhdGUKQGFjdGl2aXR5OiBISVYuQjkgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT2ZmZXIgdm9sdW50YXJ5IHRlc3RpbmcgZm9yIHBhcnRuZXJzIGFuZCBzb2NpYWwgY29udGFjdHMgb2YgcGVvcGxlIGZyb20ga2V5IHBvcHVsYXRpb25zLCB3aGVyZSBhcHByb3ByaWF0ZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSElWIHRlc3RpbmcgZm9yIHBhcnRuZXJzIGFuZCBzb2NpYWwgY29udGFjdHMgb2YgcGVvcGxlIGZyb20ga2V5IHBvcHVsYXRpb25zLCB3aGVyZSBhcHByb3ByaWF0ZSI6CiAgZXhpc3RzICJISVYgdGVzdGluZyBmb3IgcGFydG5lcnMgYW5kIHNvY2lhbCBjb250YWN0cyBvZiBwZW9wbGUgZnJvbSBrZXkgcG9wdWxhdGlvbnMsIHdoZXJlIGFwcHJvcHJpYXRlIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSElWIHRlc3RpbmcgZm9yIHBhcnRuZXJzIGFuZCBzb2NpYWwgY29udGFjdHMgb2YgcGVvcGxlIGZyb20ga2V5IHBvcHVsYXRpb25zLCB3aGVyZSBhcHByb3ByaWF0ZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJISVYgdGVzdGluZyBmb3IgcGFydG5lcnMgYW5kIHNvY2lhbCBjb250YWN0cyBvZiBwZW9wbGUgZnJvbSBrZXkgcG9wdWxhdGlvbnMsIHdoZXJlIGFwcHJvcHJpYXRlIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhJViB0ZXN0aW5nIGZvciBwYXJ0bmVycyBhbmQgc29jaWFsIGNvbnRhY3RzIG9mIHBlb3BsZSBmcm9tIGtleSBwb3B1bGF0aW9ucywgd2hlcmUgYXBwcm9wcmlhdGUiXQpkZWZpbmUgIkhJViB0ZXN0aW5nIGZvciBwYXJ0bmVycyBhbmQgc29jaWFsIGNvbnRhY3RzIG9mIHBlb3BsZSBmcm9tIGtleSBwb3B1bGF0aW9ucywgd2hlcmUgYXBwcm9wcmlhdGUgT2JzZXJ2YXRpb24iOgogICJQcmV2ZW50aW9uIHNlcnZpY2VzIG9mZmVyZWQgYW5kIHJlZmVycmFscyBCLkRFMTQ5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJISVYgdGVzdGluZyBmb3IgcGFydG5lcnMgYW5kIHNvY2lhbCBjb250YWN0cyBvZiBwZW9wbGUgZnJvbSBrZXkgcG9wdWxhdGlvbnMsIHdoZXJlIGFwcHJvcHJpYXRlIgovKiBFbmQgb2YgSElWIHRlc3RpbmcgZm9yIHBhcnRuZXJzIGFuZCBzb2NpYWwgY29udGFjdHMgb2YgcGVvcGxlIGZyb20ga2V5IHBvcHVsYXRpb25zLCB3aGVyZSBhcHByb3ByaWF0ZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE1OCAtIFNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzCkBhY3Rpdml0eTogSElWLkI5IERldGVybWluZSByZWNvbW1lbmRlZCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE9mZmVyIG9yIHJlZmVyIHRvIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIGludGVncmF0ZWQgc2VydmljZXMgQi5ERTE1OCI6CiAgZXhpc3RzICJTZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggaW50ZWdyYXRlZCBzZXJ2aWNlcyBCLkRFMTU4IE9ic2VydmF0aW9uIgpkZWZpbmUgIlNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzIEIuREUxNTggT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzIC0gSElWLkIuREUxNTgiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgU2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIGludGVncmF0ZWQgc2VydmljZXMgQi5ERTE1OCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE1OSAtIENvbnRyYWNlcHRpb24gYW5kIGZhbWlseSBwbGFubmluZwpAYWN0aXZpdHk6IEhJVi5COSBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBjb250cmFjZXB0aW9uIGFuZCBmYW1pbHkgcGxhbm5pbmcgc2VydmljZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNvbnRyYWNlcHRpb24gYW5kIGZhbWlseSBwbGFubmluZyBCLkRFMTU5IjoKICBleGlzdHMgIkNvbnRyYWNlcHRpb24gYW5kIGZhbWlseSBwbGFubmluZyBCLkRFMTU5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ29udHJhY2VwdGlvbiBhbmQgZmFtaWx5IHBsYW5uaW5nIEIuREUxNTkgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ29udHJhY2VwdGlvbiBhbmQgZmFtaWx5IHBsYW5uaW5nIEIuREUxNTkgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ29udHJhY2VwdGlvbiBhbmQgZmFtaWx5IHBsYW5uaW5nIC0gSElWLkIuREUxNTkiXQpkZWZpbmUgIkNvbnRyYWNlcHRpb24gYW5kIGZhbWlseSBwbGFubmluZyBCLkRFMTU5IE9ic2VydmF0aW9uIjoKICAiU2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIGludGVncmF0ZWQgc2VydmljZXMgQi5ERTE1OCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ29udHJhY2VwdGlvbiBhbmQgZmFtaWx5IHBsYW5uaW5nIC0gSElWLkIuREUxNTkiCi8qIEVuZCBvZiBDb250cmFjZXB0aW9uIGFuZCBmYW1pbHkgcGxhbm5pbmcgQi5ERTE1OSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE2MCAtIENoZWNrIHByZWduYW5jeSBzdGF0dXMKQGFjdGl2aXR5OiBISVYuQjkgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2hlY2sgd29tZW4ncyBwcmVnbmFuY3kgc3RhdHVzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDaGVjayBwcmVnbmFuY3kgc3RhdHVzIEIuREUxNjAiOgogIGV4aXN0cyAiQ2hlY2sgcHJlZ25hbmN5IHN0YXR1cyBCLkRFMTYwIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ2hlY2sgcHJlZ25hbmN5IHN0YXR1cyBCLkRFMTYwIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNoZWNrIHByZWduYW5jeSBzdGF0dXMgQi5ERTE2MCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDaGVjayBwcmVnbmFuY3kgc3RhdHVzIC0gSElWLkIuREUxNjAiXQpkZWZpbmUgIkNoZWNrIHByZWduYW5jeSBzdGF0dXMgQi5ERTE2MCBPYnNlcnZhdGlvbiI6CiAgIlNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzIEIuREUxNTggT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNoZWNrIHByZWduYW5jeSBzdGF0dXMgLSBISVYuQi5ERTE2MCIKLyogRW5kIG9mIENoZWNrIHByZWduYW5jeSBzdGF0dXMgQi5ERTE2MCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE2MSAtIFByZXZlbnRpb24gb2YgbW90aGVyLXRvLWNoaWxkIHRyYW5zbWlzc2lvbiBjb3Vuc2VsbGluZwpAYWN0aXZpdHk6IEhJVi5COSBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBzZXJ2aWNlcyBmb3IgcHJldmVudGlvbiBvZiBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uIChjb3Vuc2VsbGluZykKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlByZXZlbnRpb24gb2YgbW90aGVyLXRvLWNoaWxkIHRyYW5zbWlzc2lvbiBjb3Vuc2VsbGluZyI6CiAgZXhpc3RzICJQcmV2ZW50aW9uIG9mIG1vdGhlci10by1jaGlsZCB0cmFuc21pc3Npb24gY291bnNlbGxpbmcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQcmV2ZW50aW9uIG9mIG1vdGhlci10by1jaGlsZCB0cmFuc21pc3Npb24gY291bnNlbGxpbmcgT2JzZXJ2YXRpb24iCmRlZmluZSAiUHJldmVudGlvbiBvZiBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uIGNvdW5zZWxsaW5nIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlByZXZlbnRpb24gb2YgbW90aGVyLXRvLWNoaWxkIHRyYW5zbWlzc2lvbiBjb3Vuc2VsbGluZyJdCmRlZmluZSAiUHJldmVudGlvbiBvZiBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uIGNvdW5zZWxsaW5nIE9ic2VydmF0aW9uIjoKICAiU2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIGludGVncmF0ZWQgc2VydmljZXMgQi5ERTE1OCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHJldmVudGlvbiBvZiBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uIGNvdW5zZWxsaW5nIgovKiBFbmQgb2YgUHJldmVudGlvbiBvZiBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uIGNvdW5zZWxsaW5nICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTYyIC0gQ2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBhbmQgdHJlYXRtZW50IGNvdW5zZWxsaW5nCkBhY3Rpdml0eTogSElWLkI5IERldGVybWluZSByZWNvbW1lbmRlZCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE9mZmVyIGNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgYW5kIHRyZWF0bWVudCBjb3Vuc2VsbGluZyBhbmQgc2VydmljZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgYW5kIHRyZWF0bWVudCBjb3Vuc2VsbGluZyI6CiAgZXhpc3RzICJDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIGFuZCB0cmVhdG1lbnQgY291bnNlbGxpbmcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIGFuZCB0cmVhdG1lbnQgY291bnNlbGxpbmcgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBhbmQgdHJlYXRtZW50IGNvdW5zZWxsaW5nIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgYW5kIHRyZWF0bWVudCBjb3Vuc2VsbGluZyJdCmRlZmluZSAiQ2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBhbmQgdHJlYXRtZW50IGNvdW5zZWxsaW5nIE9ic2VydmF0aW9uIjoKICAiU2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIGludGVncmF0ZWQgc2VydmljZXMgQi5ERTE1OCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBhbmQgdHJlYXRtZW50IGNvdW5zZWxsaW5nIgovKiBFbmQgb2YgQ2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBhbmQgdHJlYXRtZW50IGNvdW5zZWxsaW5nICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTYzIC0gQW5hbCBjYW5jZXIgc2NyZWVuaW5nIGZvciBtZW4gd2hvIGhhdmUgc2V4IHdpdGggbWVuCkBhY3Rpdml0eTogSElWLkI5IERldGVybWluZSByZWNvbW1lbmRlZCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE9mZmVyIHNlcnZpY2VzIGZvciBhbmFsIGNhbmNlciBzY3JlZW5pbmcgKGZvciBtZW4gd2hvIGhhdmUgc2V4IHdpdGggbWVuKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQW5hbCBjYW5jZXIgc2NyZWVuaW5nIGZvciBtZW4gd2hvIGhhdmUgc2V4IHdpdGggbWVuIEIuREUxNjMiOgogIGV4aXN0cyAiQW5hbCBjYW5jZXIgc2NyZWVuaW5nIGZvciBtZW4gd2hvIGhhdmUgc2V4IHdpdGggbWVuIEIuREUxNjMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBbmFsIGNhbmNlciBzY3JlZW5pbmcgZm9yIG1lbiB3aG8gaGF2ZSBzZXggd2l0aCBtZW4gQi5ERTE2MyBPYnNlcnZhdGlvbiIKZGVmaW5lICJBbmFsIGNhbmNlciBzY3JlZW5pbmcgZm9yIG1lbiB3aG8gaGF2ZSBzZXggd2l0aCBtZW4gQi5ERTE2MyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBbmFsIGNhbmNlciBzY3JlZW5pbmcgZm9yIG1lbiB3aG8gaGF2ZSBzZXggd2l0aCBtZW4gLSBISVYuQi5ERTE2MyJdCmRlZmluZSAiQW5hbCBjYW5jZXIgc2NyZWVuaW5nIGZvciBtZW4gd2hvIGhhdmUgc2V4IHdpdGggbWVuIEIuREUxNjMgT2JzZXJ2YXRpb24iOgogICJTZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggaW50ZWdyYXRlZCBzZXJ2aWNlcyBCLkRFMTU4IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBbmFsIGNhbmNlciBzY3JlZW5pbmcgZm9yIG1lbiB3aG8gaGF2ZSBzZXggd2l0aCBtZW4gLSBISVYuQi5ERTE2MyIKLyogRW5kIG9mIEFuYWwgY2FuY2VyIHNjcmVlbmluZyBmb3IgbWVuIHdobyBoYXZlIHNleCB3aXRoIG1lbiBCLkRFMTYzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTY0IC0gU1RJIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBzZXJ2aWNlcwpAYWN0aXZpdHk6IEhJVi5COSBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBzZXh1YWxseSB0cmFuc21pdHRlZCBpbmZlY3Rpb24gKFNUSSkgdGVzdGluZyBhbmQgdHJlYXRtZW50IHNlcnZpY2VzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTVEkgdGVzdGluZyBhbmQgdHJlYXRtZW50IHNlcnZpY2VzIjoKICBleGlzdHMgIlNUSSB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQgc2VydmljZXMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJTVEkgdGVzdGluZyBhbmQgdHJlYXRtZW50IHNlcnZpY2VzIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNUSSB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQgc2VydmljZXMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU1RJIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBzZXJ2aWNlcyJdCmRlZmluZSAiU1RJIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBzZXJ2aWNlcyBPYnNlcnZhdGlvbiI6CiAgIlNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzIEIuREUxNTggT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlNUSSB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQgc2VydmljZXMiCi8qIEVuZCBvZiBTVEkgdGVzdGluZyBhbmQgdHJlYXRtZW50IHNlcnZpY2VzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTY1IC0gT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMKQGFjdGl2aXR5OiBISVYuQjkgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT3RoZXIgY2xpbmljYWwgc2VydmljZXMgb2ZmZXJlZCBvciByZWZlcnJhbHMgZ2l2ZW4gdG8gdGhlIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMgQi5ERTE2NSI6CiAgZXhpc3RzICJPZmZlciBvdGhlciBjbGluaWNhbCBzZXJ2aWNlcyBCLkRFMTY1IE9ic2VydmF0aW9uIgpkZWZpbmUgIk9mZmVyIG90aGVyIGNsaW5pY2FsIHNlcnZpY2VzIEIuREUxNjUgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIk9mZmVyIG90aGVyIGNsaW5pY2FsIHNlcnZpY2VzIC0gSElWLkIuREUxNjUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMgQi5ERTE2NSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE2NiAtIEFzc2Vzc21lbnQgYW5kIHByb3Zpc2lvbiBvZiB2YWNjaW5hdGlvbnMKQGFjdGl2aXR5OiBISVYuQjkgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQXNzZXNzbWVudCBhbmQgcHJvdmlzaW9uIG9mIHZhY2NpbmF0aW9ucywgc3VjaCBhcyBmb3IgcGVvcGxlIGZyb20ga2V5IHBvcHVsYXRpb25zLCBwcmVnbmFudCB3b21lbiBhbmQgaW5mYW50czsgYW5kLCB3aGVyZSBhcHByb3ByaWF0ZSwgdGV0YW51cyB2YWNjaW5hdGlvbiBmb3IgYWRvbGVzY2VudCBib3lzIGFuZCBtZW4gcmVjZWl2aW5nIFZNTUMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFzc2Vzc21lbnQgYW5kIHByb3Zpc2lvbiBvZiB2YWNjaW5hdGlvbnMgQi5ERTE2NiI6CiAgZXhpc3RzICJBc3Nlc3NtZW50IGFuZCBwcm92aXNpb24gb2YgdmFjY2luYXRpb25zIEIuREUxNjYgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBc3Nlc3NtZW50IGFuZCBwcm92aXNpb24gb2YgdmFjY2luYXRpb25zIEIuREUxNjYgT2JzZXJ2YXRpb24iCmRlZmluZSAiQXNzZXNzbWVudCBhbmQgcHJvdmlzaW9uIG9mIHZhY2NpbmF0aW9ucyBCLkRFMTY2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFzc2Vzc21lbnQgYW5kIHByb3Zpc2lvbiBvZiB2YWNjaW5hdGlvbnMgLSBISVYuQi5ERTE2NiJdCmRlZmluZSAiQXNzZXNzbWVudCBhbmQgcHJvdmlzaW9uIG9mIHZhY2NpbmF0aW9ucyBCLkRFMTY2IE9ic2VydmF0aW9uIjoKICAiT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMgQi5ERTE2NSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQXNzZXNzbWVudCBhbmQgcHJvdmlzaW9uIG9mIHZhY2NpbmF0aW9ucyAtIEhJVi5CLkRFMTY2IgovKiBFbmQgb2YgQXNzZXNzbWVudCBhbmQgcHJvdmlzaW9uIG9mIHZhY2NpbmF0aW9ucyBCLkRFMTY2ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTY3IC0gSGVwYXRpdGlzIEIgSEJWIGFuZCBoZXBhdGl0aXMgQyB2aXJ1cyBIQ1YgdGVzdGluZyBhbmQgdHJlYXRtZW50IHByb3ZpZGVkCkBhY3Rpdml0eTogSElWLkI5IERldGVybWluZSByZWNvbW1lbmRlZCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE9mZmVyIG9yIHJlZmVyIGZvciBIQlYgYW5kL29yIEhDViB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhlcGF0aXRpcyBCIEhCViBhbmQgaGVwYXRpdGlzIEMgdmlydXMgSENWIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBwcm92aWRlZCI6CiAgZXhpc3RzICJIZXBhdGl0aXMgQiBIQlYgYW5kIGhlcGF0aXRpcyBDIHZpcnVzIEhDViB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQgcHJvdmlkZWQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJIZXBhdGl0aXMgQiBIQlYgYW5kIGhlcGF0aXRpcyBDIHZpcnVzIEhDViB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQgcHJvdmlkZWQgT2JzZXJ2YXRpb24iCmRlZmluZSAiSGVwYXRpdGlzIEIgSEJWIGFuZCBoZXBhdGl0aXMgQyB2aXJ1cyBIQ1YgdGVzdGluZyBhbmQgdHJlYXRtZW50IHByb3ZpZGVkIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhlcGF0aXRpcyBCIEhCViBhbmQgaGVwYXRpdGlzIEMgdmlydXMgSENWIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBwcm92aWRlZCJdCmRlZmluZSAiSGVwYXRpdGlzIEIgSEJWIGFuZCBoZXBhdGl0aXMgQyB2aXJ1cyBIQ1YgdGVzdGluZyBhbmQgdHJlYXRtZW50IHByb3ZpZGVkIE9ic2VydmF0aW9uIjoKICAiT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMgQi5ERTE2NSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSGVwYXRpdGlzIEIgSEJWIGFuZCBoZXBhdGl0aXMgQyB2aXJ1cyBIQ1YgdGVzdGluZyBhbmQgdHJlYXRtZW50IHByb3ZpZGVkIgovKiBFbmQgb2YgSGVwYXRpdGlzIEIgSEJWIGFuZCBoZXBhdGl0aXMgQyB2aXJ1cyBIQ1YgdGVzdGluZyBhbmQgdHJlYXRtZW50IHByb3ZpZGVkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTY4IC0gQ28tdHJpbW94YXpvbGUgY2hlbW9wcm9waHlsYXhpcyB0byBwcmV2ZW50IFBuZXVtb2N5c3RpcyBjYXJpbmlpIHBuZXVtb25pYSBwcm92aWRlZApAYWN0aXZpdHk6IEhJVi5COSBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3IgY28tdHJpbW94YXpvbGUgY2hlbW9wcm9waHlsYXhpcyB0byBwcmV2ZW50IHBuZXVtb2N5c3RpcyBjYXJpbmlpIHBuZXVtb25pYQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ28tdHJpbW94YXpvbGUgY2hlbW9wcm9waHlsYXhpcyB0byBwcmV2ZW50IFBuZXVtb2N5c3RpcyBjYXJpbmlpIHBuZXVtb25pYSBwcm92aWRlZCI6CiAgZXhpc3RzICJDby10cmltb3hhem9sZSBjaGVtb3Byb3BoeWxheGlzIHRvIHByZXZlbnQgUG5ldW1vY3lzdGlzIGNhcmluaWkgcG5ldW1vbmlhIHByb3ZpZGVkIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ28tdHJpbW94YXpvbGUgY2hlbW9wcm9waHlsYXhpcyB0byBwcmV2ZW50IFBuZXVtb2N5c3RpcyBjYXJpbmlpIHBuZXVtb25pYSBwcm92aWRlZCBPYnNlcnZhdGlvbiIKZGVmaW5lICJDby10cmltb3hhem9sZSBjaGVtb3Byb3BoeWxheGlzIHRvIHByZXZlbnQgUG5ldW1vY3lzdGlzIGNhcmluaWkgcG5ldW1vbmlhIHByb3ZpZGVkIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNvLXRyaW1veGF6b2xlIGNoZW1vcHJvcGh5bGF4aXMgdG8gcHJldmVudCBQbmV1bW9jeXN0aXMgY2FyaW5paSBwbmV1bW9uaWEgcHJvdmlkZWQiXQpkZWZpbmUgIkNvLXRyaW1veGF6b2xlIGNoZW1vcHJvcGh5bGF4aXMgdG8gcHJldmVudCBQbmV1bW9jeXN0aXMgY2FyaW5paSBwbmV1bW9uaWEgcHJvdmlkZWQgT2JzZXJ2YXRpb24iOgogICJPZmZlciBvdGhlciBjbGluaWNhbCBzZXJ2aWNlcyBCLkRFMTY1IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDby10cmltb3hhem9sZSBjaGVtb3Byb3BoeWxheGlzIHRvIHByZXZlbnQgUG5ldW1vY3lzdGlzIGNhcmluaWkgcG5ldW1vbmlhIHByb3ZpZGVkIgovKiBFbmQgb2YgQ28tdHJpbW94YXpvbGUgY2hlbW9wcm9waHlsYXhpcyB0byBwcmV2ZW50IFBuZXVtb2N5c3RpcyBjYXJpbmlpIHBuZXVtb25pYSBwcm92aWRlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE2OSAtIEludGVuc2lmaWVkIFRCIGNhc2UgZmluZGluZyBhbmQgbGlua2FnZSB0byBUQiB0cmVhdG1lbnQgcHJvdmlkZWQKQGFjdGl2aXR5OiBISVYuQjkgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgZm9yIGludGVuc2lmaWVkIFRCIGNhc2UgZmluZGluZyBhbmQgbGlua2FnZSB0byBUQiB0cmVhdG1lbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkludGVuc2lmaWVkIFRCIGNhc2UgZmluZGluZyBhbmQgbGlua2FnZSB0byBUQiB0cmVhdG1lbnQgcHJvdmlkZWQiOgogIGV4aXN0cyAiSW50ZW5zaWZpZWQgVEIgY2FzZSBmaW5kaW5nIGFuZCBsaW5rYWdlIHRvIFRCIHRyZWF0bWVudCBwcm92aWRlZCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkludGVuc2lmaWVkIFRCIGNhc2UgZmluZGluZyBhbmQgbGlua2FnZSB0byBUQiB0cmVhdG1lbnQgcHJvdmlkZWQgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW50ZW5zaWZpZWQgVEIgY2FzZSBmaW5kaW5nIGFuZCBsaW5rYWdlIHRvIFRCIHRyZWF0bWVudCBwcm92aWRlZCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJJbnRlbnNpZmllZCBUQiBjYXNlIGZpbmRpbmcgYW5kIGxpbmthZ2UgdG8gVEIgdHJlYXRtZW50IHByb3ZpZGVkIl0KZGVmaW5lICJJbnRlbnNpZmllZCBUQiBjYXNlIGZpbmRpbmcgYW5kIGxpbmthZ2UgdG8gVEIgdHJlYXRtZW50IHByb3ZpZGVkIE9ic2VydmF0aW9uIjoKICAiT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMgQi5ERTE2NSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW50ZW5zaWZpZWQgVEIgY2FzZSBmaW5kaW5nIGFuZCBsaW5rYWdlIHRvIFRCIHRyZWF0bWVudCBwcm92aWRlZCIKLyogRW5kIG9mIEludGVuc2lmaWVkIFRCIGNhc2UgZmluZGluZyBhbmQgbGlua2FnZSB0byBUQiB0cmVhdG1lbnQgcHJvdmlkZWQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUxNzAgLSBQcm92aXNpb24gb2YgaXNvbmlhemlkIHByZXZlbnRpdmUgdGhlcmFweSBpZiBwZXJzb24gZG9lcyBub3QgaGF2ZSBUQgpAYWN0aXZpdHk6IEhJVi5COSBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3IgcHJvdmlzaW9uIG9mIGlzb25pYXppZCBwcmV2ZW50aXZlIHRoZXJhcHkgaWYgcGVyc29uIGRvZXMgbm90IGhhdmUgVEIKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlByb3Zpc2lvbiBvZiBpc29uaWF6aWQgcHJldmVudGl2ZSB0aGVyYXB5IGlmIHBlcnNvbiBkb2VzIG5vdCBoYXZlIFRCIEIuREUxNzAiOgogIGV4aXN0cyAiUHJvdmlzaW9uIG9mIGlzb25pYXppZCBwcmV2ZW50aXZlIHRoZXJhcHkgaWYgcGVyc29uIGRvZXMgbm90IGhhdmUgVEIgQi5ERTE3MCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlByb3Zpc2lvbiBvZiBpc29uaWF6aWQgcHJldmVudGl2ZSB0aGVyYXB5IGlmIHBlcnNvbiBkb2VzIG5vdCBoYXZlIFRCIEIuREUxNzAgT2JzZXJ2YXRpb24iCmRlZmluZSAiUHJvdmlzaW9uIG9mIGlzb25pYXppZCBwcmV2ZW50aXZlIHRoZXJhcHkgaWYgcGVyc29uIGRvZXMgbm90IGhhdmUgVEIgQi5ERTE3MCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQcm92aXNpb24gb2YgaXNvbmlhemlkIHByZXZlbnRpdmUgdGhlcmFweSBpZiBwZXJzb24gZG9lcyBub3QgaGF2ZSBUQiAtIEhJVi5CLkRFMTcwIl0KZGVmaW5lICJQcm92aXNpb24gb2YgaXNvbmlhemlkIHByZXZlbnRpdmUgdGhlcmFweSBpZiBwZXJzb24gZG9lcyBub3QgaGF2ZSBUQiBCLkRFMTcwIE9ic2VydmF0aW9uIjoKICAiT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMgQi5ERTE2NSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHJvdmlzaW9uIG9mIGlzb25pYXppZCBwcmV2ZW50aXZlIHRoZXJhcHkgaWYgcGVyc29uIGRvZXMgbm90IGhhdmUgVEIgLSBISVYuQi5ERTE3MCIKLyogRW5kIG9mIFByb3Zpc2lvbiBvZiBpc29uaWF6aWQgcHJldmVudGl2ZSB0aGVyYXB5IGlmIHBlcnNvbiBkb2VzIG5vdCBoYXZlIFRCIEIuREUxNzAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUxNzEgLSBNYWxhcmlhIHByZXZlbnRpb24gc3VjaCBhcyBiZWQgbmV0cyBhbmQgcHJvcGh5bGF4aXMsIGRlcGVuZGluZyBvbiBlcGlkZW1pb2xvZ3kKQGFjdGl2aXR5OiBISVYuQjkgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgZm9yIG1hbGFyaWEgcHJldmVudGlvbiAoc3VjaCBhcyBiZWQgbmV0cyBhbmQgcHJvcGh5bGF4aXMpLCBkZXBlbmRpbmcgb24gZXBpZGVtaW9sb2d5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJNYWxhcmlhIHByZXZlbnRpb24gc3VjaCBhcyBiZWQgbmV0cyBhbmQgcHJvcGh5bGF4aXMsIGRlcGVuZGluZyBvbiBlcGlkZW1pb2xvZ3kgQi5ERTE3MSI6CiAgZXhpc3RzICJNYWxhcmlhIHByZXZlbnRpb24gc3VjaCBhcyBiZWQgbmV0cyBhbmQgcHJvcGh5bGF4aXMsIGRlcGVuZGluZyBvbiBlcGlkZW1pb2xvZ3kgQi5ERTE3MSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk1hbGFyaWEgcHJldmVudGlvbiBzdWNoIGFzIGJlZCBuZXRzIGFuZCBwcm9waHlsYXhpcywgZGVwZW5kaW5nIG9uIGVwaWRlbWlvbG9neSBCLkRFMTcxIE9ic2VydmF0aW9uIgpkZWZpbmUgIk1hbGFyaWEgcHJldmVudGlvbiBzdWNoIGFzIGJlZCBuZXRzIGFuZCBwcm9waHlsYXhpcywgZGVwZW5kaW5nIG9uIGVwaWRlbWlvbG9neSBCLkRFMTcxIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk1hbGFyaWEgcHJldmVudGlvbiBzdWNoIGFzIGJlZCBuZXRzIGFuZCBwcm9waHlsYXhpcywgZGVwZW5kaW5nIG9uIGVwaWRlbWlvbG9neSAtIEhJVi5CLkRFMTcxIl0KZGVmaW5lICJNYWxhcmlhIHByZXZlbnRpb24gc3VjaCBhcyBiZWQgbmV0cyBhbmQgcHJvcGh5bGF4aXMsIGRlcGVuZGluZyBvbiBlcGlkZW1pb2xvZ3kgQi5ERTE3MSBPYnNlcnZhdGlvbiI6CiAgIk9mZmVyIG90aGVyIGNsaW5pY2FsIHNlcnZpY2VzIEIuREUxNjUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk1hbGFyaWEgcHJldmVudGlvbiBzdWNoIGFzIGJlZCBuZXRzIGFuZCBwcm9waHlsYXhpcywgZGVwZW5kaW5nIG9uIGVwaWRlbWlvbG9neSAtIEhJVi5CLkRFMTcxIgovKiBFbmQgb2YgTWFsYXJpYSBwcmV2ZW50aW9uIHN1Y2ggYXMgYmVkIG5ldHMgYW5kIHByb3BoeWxheGlzLCBkZXBlbmRpbmcgb24gZXBpZGVtaW9sb2d5IEIuREUxNzEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUxNzIgLSBPdGhlciBzdXBwb3J0IHNlcnZpY2VzCkBhY3Rpdml0eTogSElWLkI5IERldGVybWluZSByZWNvbW1lbmRlZCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE9mZmVyIG9yIHJlZmVyIGZvciBvdGhlciBzdXBwb3J0IHNlcnZpY2VzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPdGhlciBzdXBwb3J0IHNlcnZpY2VzIEIuREUxNzIiOgogIGV4aXN0cyAiT3RoZXIgc3VwcG9ydCBzZXJ2aWNlcyBCLkRFMTcyIE9ic2VydmF0aW9uIgpkZWZpbmUgIk90aGVyIHN1cHBvcnQgc2VydmljZXMgQi5ERTE3MiBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iT3RoZXIgc3VwcG9ydCBzZXJ2aWNlcyAtIEhJVi5CLkRFMTcyIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIE90aGVyIHN1cHBvcnQgc2VydmljZXMgQi5ERTE3MiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE3MyAtIE1lbnRhbCBoZWFsdGggc2VydmljZXMKQGFjdGl2aXR5OiBISVYuQjkgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgZm9yIG1lbnRhbCBoZWFsdGggc2VydmljZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk1lbnRhbCBoZWFsdGggc2VydmljZXMgQi5ERTE3MyI6CiAgZXhpc3RzICJNZW50YWwgaGVhbHRoIHNlcnZpY2VzIEIuREUxNzMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJNZW50YWwgaGVhbHRoIHNlcnZpY2VzIEIuREUxNzMgT2JzZXJ2YXRpb24iCmRlZmluZSAiTWVudGFsIGhlYWx0aCBzZXJ2aWNlcyBCLkRFMTczIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk1lbnRhbCBoZWFsdGggc2VydmljZXMgLSBISVYuQi5ERTE3MyJdCmRlZmluZSAiTWVudGFsIGhlYWx0aCBzZXJ2aWNlcyBCLkRFMTczIE9ic2VydmF0aW9uIjoKICAiT3RoZXIgc3VwcG9ydCBzZXJ2aWNlcyBCLkRFMTcyIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJNZW50YWwgaGVhbHRoIHNlcnZpY2VzIC0gSElWLkIuREUxNzMiCi8qIEVuZCBvZiBNZW50YWwgaGVhbHRoIHNlcnZpY2VzIEIuREUxNzMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUxNzQgLSBQc3ljaG9zb2NpYWwgY291bnNlbGxpbmcsIHN1cHBvcnQgYW5kIHRyZWF0bWVudCBhZGhlcmVuY2UgY291bnNlbGxpbmcKQGFjdGl2aXR5OiBISVYuQjkgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgZm9yIHBzeWNob3NvY2lhbCBjb3Vuc2VsbGluZywgc3VwcG9ydCBhbmQgdHJlYXRtZW50IGFkaGVyZW5jZSBjb3Vuc2VsbGluZwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUHN5Y2hvc29jaWFsIGNvdW5zZWxsaW5nLCBzdXBwb3J0IGFuZCB0cmVhdG1lbnQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nIEIuREUxNzQiOgogIGV4aXN0cyAiUHN5Y2hvc29jaWFsIGNvdW5zZWxsaW5nLCBzdXBwb3J0IGFuZCB0cmVhdG1lbnQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nIEIuREUxNzQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQc3ljaG9zb2NpYWwgY291bnNlbGxpbmcsIHN1cHBvcnQgYW5kIHRyZWF0bWVudCBhZGhlcmVuY2UgY291bnNlbGxpbmcgQi5ERTE3NCBPYnNlcnZhdGlvbiIKZGVmaW5lICJQc3ljaG9zb2NpYWwgY291bnNlbGxpbmcsIHN1cHBvcnQgYW5kIHRyZWF0bWVudCBhZGhlcmVuY2UgY291bnNlbGxpbmcgQi5ERTE3NCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQc3ljaG9zb2NpYWwgY291bnNlbGxpbmcsIHN1cHBvcnQgYW5kIHRyZWF0bWVudCBhZGhlcmVuY2UgY291bnNlbGxpbmcgLSBISVYuQi5ERTE3NCJdCmRlZmluZSAiUHN5Y2hvc29jaWFsIGNvdW5zZWxsaW5nLCBzdXBwb3J0IGFuZCB0cmVhdG1lbnQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nIEIuREUxNzQgT2JzZXJ2YXRpb24iOgogICJPdGhlciBzdXBwb3J0IHNlcnZpY2VzIEIuREUxNzIgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlBzeWNob3NvY2lhbCBjb3Vuc2VsbGluZywgc3VwcG9ydCBhbmQgdHJlYXRtZW50IGFkaGVyZW5jZSBjb3Vuc2VsbGluZyAtIEhJVi5CLkRFMTc0IgovKiBFbmQgb2YgUHN5Y2hvc29jaWFsIGNvdW5zZWxsaW5nLCBzdXBwb3J0IGFuZCB0cmVhdG1lbnQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nIEIuREUxNzQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUxNzUgLSBTdXBwb3J0IGZvciBkaXNjbG9zdXJlIGFuZCBwYXJ0bmVyIHNlcnZpY2VzCkBhY3Rpdml0eTogSElWLkI5IERldGVybWluZSByZWNvbW1lbmRlZCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE9mZmVyIG9yIHJlZmVyIGZvciBzdXBwb3J0IGZvciBkaXNjbG9zdXJlIGFuZCBwYXJ0bmVyIHNlcnZpY2VzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTdXBwb3J0IGZvciBkaXNjbG9zdXJlIGFuZCBwYXJ0bmVyIHNlcnZpY2VzIEIuREUxNzUiOgogIGV4aXN0cyAiU3VwcG9ydCBmb3IgZGlzY2xvc3VyZSBhbmQgcGFydG5lciBzZXJ2aWNlcyBCLkRFMTc1IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU3VwcG9ydCBmb3IgZGlzY2xvc3VyZSBhbmQgcGFydG5lciBzZXJ2aWNlcyBCLkRFMTc1IE9ic2VydmF0aW9uIgpkZWZpbmUgIlN1cHBvcnQgZm9yIGRpc2Nsb3N1cmUgYW5kIHBhcnRuZXIgc2VydmljZXMgQi5ERTE3NSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTdXBwb3J0IGZvciBkaXNjbG9zdXJlIGFuZCBwYXJ0bmVyIHNlcnZpY2VzIC0gSElWLkIuREUxNzUiXQpkZWZpbmUgIlN1cHBvcnQgZm9yIGRpc2Nsb3N1cmUgYW5kIHBhcnRuZXIgc2VydmljZXMgQi5ERTE3NSBPYnNlcnZhdGlvbiI6CiAgIk90aGVyIHN1cHBvcnQgc2VydmljZXMgQi5ERTE3MiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU3VwcG9ydCBmb3IgZGlzY2xvc3VyZSBhbmQgcGFydG5lciBzZXJ2aWNlcyAtIEhJVi5CLkRFMTc1IgovKiBFbmQgb2YgU3VwcG9ydCBmb3IgZGlzY2xvc3VyZSBhbmQgcGFydG5lciBzZXJ2aWNlcyBCLkRFMTc1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTc2IC0gTGVnYWwgYW5kIHNvY2lhbCBzZXJ2aWNlcwpAYWN0aXZpdHk6IEhJVi5COSBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3IgbGVnYWwgYW5kIHNvY2lhbCBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTGVnYWwgYW5kIHNvY2lhbCBzZXJ2aWNlcyBCLkRFMTc2IjoKICBleGlzdHMgIkxlZ2FsIGFuZCBzb2NpYWwgc2VydmljZXMgQi5ERTE3NiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkxlZ2FsIGFuZCBzb2NpYWwgc2VydmljZXMgQi5ERTE3NiBPYnNlcnZhdGlvbiIKZGVmaW5lICJMZWdhbCBhbmQgc29jaWFsIHNlcnZpY2VzIEIuREUxNzYgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTGVnYWwgYW5kIHNvY2lhbCBzZXJ2aWNlcyAtIEhJVi5CLkRFMTc2Il0KZGVmaW5lICJMZWdhbCBhbmQgc29jaWFsIHNlcnZpY2VzIEIuREUxNzYgT2JzZXJ2YXRpb24iOgogICJPdGhlciBzdXBwb3J0IHNlcnZpY2VzIEIuREUxNzIgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkxlZ2FsIGFuZCBzb2NpYWwgc2VydmljZXMgLSBISVYuQi5ERTE3NiIKLyogRW5kIG9mIExlZ2FsIGFuZCBzb2NpYWwgc2VydmljZXMgQi5ERTE3NiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE3NyAtIFNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4KQGFjdGl2aXR5OiBISVYuQjkgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgZm9yIHNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4sIGluY2x1ZGluZyBmaXJzdC1saW5lIHN1cHBvcnQgYW5kIHBzeWNob3NvY2lhbCBzdXBwb3J0LCBwb3N0LXJhcGUgY2FyZSBhbmQgb3RoZXIgc3VwcG9ydCBzZXJ2aWNlcyBpbmNsdWRpbmcgc2hlbHRlcnMsIGxlZ2FsIHNlcnZpY2VzIGFuZCB3b21lbiBhbmQgY2hpbGQgcHJvdGVjdGlvbiBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU2VydmljZXMgZm9yIHJlc3BvbmRpbmcgdG8gdmlvbGVuY2UgYWdhaW5zdCB3b21lbiBCLkRFMTc3IjoKICBleGlzdHMgIlNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4gQi5ERTE3NyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4gQi5ERTE3NyBPYnNlcnZhdGlvbiIKZGVmaW5lICJTZXJ2aWNlcyBmb3IgcmVzcG9uZGluZyB0byB2aW9sZW5jZSBhZ2FpbnN0IHdvbWVuIEIuREUxNzcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU2VydmljZXMgZm9yIHJlc3BvbmRpbmcgdG8gdmlvbGVuY2UgYWdhaW5zdCB3b21lbiAtIEhJVi5CLkRFMTc3Il0KZGVmaW5lICJTZXJ2aWNlcyBmb3IgcmVzcG9uZGluZyB0byB2aW9sZW5jZSBhZ2FpbnN0IHdvbWVuIEIuREUxNzcgT2JzZXJ2YXRpb24iOgogICJPdGhlciBzdXBwb3J0IHNlcnZpY2VzIEIuREUxNzIgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4gLSBISVYuQi5ERTE3NyIKLyogRW5kIG9mIFNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4gQi5ERTE3NyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE5MSAtIFR5cGUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50CkBhY3Rpdml0eTogSElWLkIyMCBTY2hlZHVsZSByZXRlc3QKQGRlc2NyaXB0aW9uOiBUeXBlIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCBmb3IgdGVzdGluZyBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVHlwZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQgQi5ERTE5MSI6CiAgZXhpc3RzICJUeXBlIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCBCLkRFMTkxIE9ic2VydmF0aW9uIgpkZWZpbmUgIlR5cGUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IEIuREUxOTEgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlR5cGUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IC0gSElWLkIuREUxOTEiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgVHlwZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQgQi5ERTE5MSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE5MiAtIFJldGVzdGluZyBmb3IgSElWCkBhY3Rpdml0eTogSElWLkIyMCBTY2hlZHVsZSByZXRlc3QKQGRlc2NyaXB0aW9uOiBSZXRlc3RpbmcgZm9sbG93LXVwIGFwcG9pbnRtZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZXRlc3RpbmcgZm9yIEhJViBCLkRFMTkyIjoKICBleGlzdHMgIlJldGVzdGluZyBmb3IgSElWIEIuREUxOTIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSZXRlc3RpbmcgZm9yIEhJViBCLkRFMTkyIE9ic2VydmF0aW9uIgpkZWZpbmUgIlJldGVzdGluZyBmb3IgSElWIEIuREUxOTIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUmV0ZXN0aW5nIGZvciBISVYgLSBISVYuQi5ERTE5MiJdCmRlZmluZSAiUmV0ZXN0aW5nIGZvciBISVYgQi5ERTE5MiBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IEIuREUxOTEgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlJldGVzdGluZyBmb3IgSElWIC0gSElWLkIuREUxOTIiCi8qIEVuZCBvZiBSZXRlc3RpbmcgZm9yIEhJViBCLkRFMTkyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMTkzIC0gT3RoZXIKQGFjdGl2aXR5OiBISVYuQjIwIFNjaGVkdWxlIHJldGVzdApAZGVzY3JpcHRpb246IE90aGVyIHJlYXNvbiBmb3IgdGhlIGZvbGxvdy11cCBhcHBvaW50bWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT3RoZXIgQi5ERTE5MyI6CiAgZXhpc3RzICJPdGhlciBCLkRFMTkzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiT3RoZXIgQi5ERTE5MyBPYnNlcnZhdGlvbiIKZGVmaW5lICJPdGhlciBCLkRFMTkzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk90aGVyIC0gSElWLkIuREUxOTMiXQpkZWZpbmUgIk90aGVyIEIuREUxOTMgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCBCLkRFMTkxIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJPdGhlciAtIEhJVi5CLkRFMTkzIgovKiBFbmQgb2YgT3RoZXIgQi5ERTE5MyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTE5NSAtIERhdGUvdGltZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQKQGFjdGl2aXR5OiBISVYuQjIwIFNjaGVkdWxlIHJldGVzdApAZGVzY3JpcHRpb246IERhdGUgdGhlIHBhdGllbnQgaXMgdG8gcmV0dXJuIGZvciBtb25pdG9yaW5nLCByZS1zdXBwbHkgb3IgYW55IG90aGVyIHJlYXNvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGF0ZS90aW1lIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCBCLkRFMTk1IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJEYXRlL3RpbWUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IC0gSElWLkIuREUxOTUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkRhdGUvdGltZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQgQi5ERTE5NSBWYWx1ZSI6CiAgIkRhdGUvdGltZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQgQi5ERTE5NSIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBEYXRlL3RpbWUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IEIuREUxOTUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUxOTggLSBWTU1DIHByb2NlZHVyZSBkYXRlCkBhY3Rpdml0eTogSElWLkIyMSBPZmZlciBwcmV2ZW50aW9uIG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBEYXRlIG9uIHdoaWNoIGEgdm9sdW50YXJ5IG1lZGljYWwgbWFsZSBjaXJjdW1jaXNpb24gcHJvY2VkdXJlIHdhcyBwZXJmb3JtZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlZNTUMgcHJvY2VkdXJlIGRhdGUiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlZNTUMgcHJvY2VkdXJlIGRhdGUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIlZNTUMgcHJvY2VkdXJlIGRhdGUgVmFsdWUiOgogICJWTU1DIHByb2NlZHVyZSBkYXRlIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIFZNTUMgcHJvY2VkdXJlIGRhdGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMDEgLSBBZHZlcnNlIGV2ZW50IHNldmVyaXR5CkBhY3Rpdml0eTogSElWLkIyMSBPZmZlciBwcmV2ZW50aW9uIG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBTZXZlcml0eSBvZiB0aGUgYWR2ZXJzZSBldmVudCBhc3NvY2lhdGVkIHdpdGggdm9sdW50YXJ5IG1lZGljYWwgbWFsZSBjaXJjdW1jaXNpb24gKFZNTUMpIHByb2NlZHVyZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQWR2ZXJzZSBldmVudCBzZXZlcml0eSI6CiAgZXhpc3RzICJBZHZlcnNlIGV2ZW50IHNldmVyaXR5IE9ic2VydmF0aW9uIgpkZWZpbmUgIkFkdmVyc2UgZXZlbnQgc2V2ZXJpdHkgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkFkdmVyc2UgZXZlbnQgc2V2ZXJpdHkiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgQWR2ZXJzZSBldmVudCBzZXZlcml0eSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTIwMiAtIE1vZGVyYXRlCkBhY3Rpdml0eTogSElWLkIyMSBPZmZlciBwcmV2ZW50aW9uIG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBTZXZlcml0eSBvZiB0aGUgYWR2ZXJzZSBldmVudCBhc3NvY2lhdGVkIHdpdGggVk1NQyBwcm9jZWR1cmUgd2FzIG1vZGVyYXRlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJNb2RlcmF0ZSI6CiAgZXhpc3RzICJNb2RlcmF0ZSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk1vZGVyYXRlIE9ic2VydmF0aW9uIgpkZWZpbmUgIk1vZGVyYXRlIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk1vZGVyYXRlIl0KZGVmaW5lICJNb2RlcmF0ZSBPYnNlcnZhdGlvbiI6CiAgIkFkdmVyc2UgZXZlbnQgc2V2ZXJpdHkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk1vZGVyYXRlIgovKiBFbmQgb2YgTW9kZXJhdGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMDMgLSBTZXZlcmUKQGFjdGl2aXR5OiBISVYuQjIxIE9mZmVyIHByZXZlbnRpb24gb3B0aW9ucwpAZGVzY3JpcHRpb246IFNldmVyaXR5IG9mIHRoZSBhZHZlcnNlIGV2ZW50IGFzc29jaWF0ZWQgd2l0aCBWTU1DIHByb2NlZHVyZSB3YXMgc2V2ZXJlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZXZlcmUiOgogIGV4aXN0cyAiU2V2ZXJlIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2V2ZXJlIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNldmVyZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTZXZlcmUiXQpkZWZpbmUgIlNldmVyZSBPYnNlcnZhdGlvbiI6CiAgIkFkdmVyc2UgZXZlbnQgc2V2ZXJpdHkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlNldmVyZSIKLyogRW5kIG9mIFNldmVyZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTIwNCAtIFRpbWluZyBvZiBhZHZlcnNlIGV2ZW50CkBhY3Rpdml0eTogSElWLkIyMSBPZmZlciBwcmV2ZW50aW9uIG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBXaGVuIHRoZSBhZHZlcnNlIGV2ZW50IGFzc29jaWF0ZWQgd2l0aCBWTU1DIHByb2NlZHVyZSBvY2N1cnJlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVGltaW5nIG9mIGFkdmVyc2UgZXZlbnQiOgogIGV4aXN0cyAiVGltaW5nIG9mIGFkdmVyc2UgZXZlbnQgT2JzZXJ2YXRpb24iCmRlZmluZSAiVGltaW5nIG9mIGFkdmVyc2UgZXZlbnQgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlRpbWluZyBvZiBhZHZlcnNlIGV2ZW50Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFRpbWluZyBvZiBhZHZlcnNlIGV2ZW50ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjA1IC0gSW50cmFvcGVyYXRpdmUKQGFjdGl2aXR5OiBISVYuQjIxIE9mZmVyIHByZXZlbnRpb24gb3B0aW9ucwpAZGVzY3JpcHRpb246IFRoZSBhZHZlcnNlIGV2ZW50IGFzc29jaWF0ZWQgd2l0aCBWTU1DIHByb2NlZHVyZSBvY2N1cnJlZCBkdXJpbmcgdGhlIHByb2NlZHVyZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW50cmFvcGVyYXRpdmUiOgogIGV4aXN0cyAiSW50cmFvcGVyYXRpdmUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJJbnRyYW9wZXJhdGl2ZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJJbnRyYW9wZXJhdGl2ZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJJbnRyYW9wZXJhdGl2ZSJdCmRlZmluZSAiSW50cmFvcGVyYXRpdmUgT2JzZXJ2YXRpb24iOgogICJUaW1pbmcgb2YgYWR2ZXJzZSBldmVudCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW50cmFvcGVyYXRpdmUiCi8qIEVuZCBvZiBJbnRyYW9wZXJhdGl2ZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTIwNiAtIFBvc3RvcGVyYXRpdmUKQGFjdGl2aXR5OiBISVYuQjIxIE9mZmVyIHByZXZlbnRpb24gb3B0aW9ucwpAZGVzY3JpcHRpb246IFRoZSBhZHZlcnNlIGV2ZW50IGFzc29jaWF0ZWQgd2l0aCBWTU1DIHByb2NlZHVyZSBvY2N1cnJlZCB3aXRoaW4gdGhlIGZpcnN0IDMwIGRheXMgYWZ0ZXIgdGhlIHByb2NlZHVyZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUG9zdG9wZXJhdGl2ZSI6CiAgZXhpc3RzICJQb3N0b3BlcmF0aXZlIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUG9zdG9wZXJhdGl2ZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJQb3N0b3BlcmF0aXZlIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlBvc3RvcGVyYXRpdmUiXQpkZWZpbmUgIlBvc3RvcGVyYXRpdmUgT2JzZXJ2YXRpb24iOgogICJUaW1pbmcgb2YgYWR2ZXJzZSBldmVudCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUG9zdG9wZXJhdGl2ZSIKLyogRW5kIG9mIFBvc3RvcGVyYXRpdmUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMDcgLSBUeXBlIG9mIGFkdmVyc2UgVk1NQyBldmVudApAYWN0aXZpdHk6IEhJVi5CMjEgT2ZmZXIgcHJldmVudGlvbiBvcHRpb25zCkBkZXNjcmlwdGlvbjogVHlwZSBvZiBhZHZlcnNlIGV2ZW50IGFzc29jaWF0ZWQgd2l0aCB2b2x1bnRhcnkgbWVkaWNhbCBtYWxlIGNpcmN1bWNpc2lvbiAoVk1NQykgcHJvY2VkdXJlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUeXBlIG9mIGFkdmVyc2UgVk1NQyBldmVudCI6CiAgZXhpc3RzICJUeXBlIG9mIGFkdmVyc2UgVk1NQyBldmVudCBPYnNlcnZhdGlvbiIKZGVmaW5lICJUeXBlIG9mIGFkdmVyc2UgVk1NQyBldmVudCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iVHlwZSBvZiBhZHZlcnNlIFZNTUMgZXZlbnQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgVHlwZSBvZiBhZHZlcnNlIFZNTUMgZXZlbnQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMDggLSBBYm5vcm1hbCBwYWluCkBhY3Rpdml0eTogSElWLkIyMSBPZmZlciBwcmV2ZW50aW9uIG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBDbGllbnQgZXhwZXJpZW5jZWQgYWJub3JtYWwgcGFpbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQWJub3JtYWwgcGFpbiI6CiAgZXhpc3RzICJBYm5vcm1hbCBwYWluIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQWJub3JtYWwgcGFpbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJBYm5vcm1hbCBwYWluIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFibm9ybWFsIHBhaW4iXQpkZWZpbmUgIkFibm9ybWFsIHBhaW4gT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGFkdmVyc2UgVk1NQyBldmVudCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQWJub3JtYWwgcGFpbiIKLyogRW5kIG9mIEFibm9ybWFsIHBhaW4gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMDkgLSBBbmFlc3RoZXNpYS1yZWxhdGVkIGVmZmVjdHMKQGFjdGl2aXR5OiBISVYuQjIxIE9mZmVyIHByZXZlbnRpb24gb3B0aW9ucwpAZGVzY3JpcHRpb246IENsaWVudCBoYWQgYW5hZXN0aGVzaWEtcmVsYXRlZCBlZmZlY3RzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBbmFlc3RoZXNpYS1yZWxhdGVkIGVmZmVjdHMiOgogIGV4aXN0cyAiQW5hZXN0aGVzaWEtcmVsYXRlZCBlZmZlY3RzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQW5hZXN0aGVzaWEtcmVsYXRlZCBlZmZlY3RzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFuYWVzdGhlc2lhLXJlbGF0ZWQgZWZmZWN0cyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBbmFlc3RoZXNpYS1yZWxhdGVkIGVmZmVjdHMiXQpkZWZpbmUgIkFuYWVzdGhlc2lhLXJlbGF0ZWQgZWZmZWN0cyBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2YgYWR2ZXJzZSBWTU1DIGV2ZW50IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBbmFlc3RoZXNpYS1yZWxhdGVkIGVmZmVjdHMiCi8qIEVuZCBvZiBBbmFlc3RoZXNpYS1yZWxhdGVkIGVmZmVjdHMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMTAgLSBCbGVlZGluZwpAYWN0aXZpdHk6IEhJVi5CMjEgT2ZmZXIgcHJldmVudGlvbiBvcHRpb25zCkBkZXNjcmlwdGlvbjogQ2xpZW50IGhhZCBibGVlZGluZwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQmxlZWRpbmciOgogIGV4aXN0cyAiQmxlZWRpbmcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJCbGVlZGluZyBPYnNlcnZhdGlvbiIKZGVmaW5lICJCbGVlZGluZyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJCbGVlZGluZyJdCmRlZmluZSAiQmxlZWRpbmcgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGFkdmVyc2UgVk1NQyBldmVudCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQmxlZWRpbmciCi8qIEVuZCBvZiBCbGVlZGluZyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTIxMSAtIERhbWFnZSB0byB0aGUgcGVuaXMKQGFjdGl2aXR5OiBISVYuQjIxIE9mZmVyIHByZXZlbnRpb24gb3B0aW9ucwpAZGVzY3JpcHRpb246IENsaWVudCBoYWQgZGFtYWdlIHRvIHRoZSBwZW5pcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGFtYWdlIHRvIHRoZSBwZW5pcyI6CiAgZXhpc3RzICJEYW1hZ2UgdG8gdGhlIHBlbmlzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRGFtYWdlIHRvIHRoZSBwZW5pcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJEYW1hZ2UgdG8gdGhlIHBlbmlzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkRhbWFnZSB0byB0aGUgcGVuaXMiXQpkZWZpbmUgIkRhbWFnZSB0byB0aGUgcGVuaXMgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGFkdmVyc2UgVk1NQyBldmVudCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRGFtYWdlIHRvIHRoZSBwZW5pcyIKLyogRW5kIG9mIERhbWFnZSB0byB0aGUgcGVuaXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMTIgLSBEaWZmaWN1bHR5IHVyaW5hdGluZwpAYWN0aXZpdHk6IEhJVi5CMjEgT2ZmZXIgcHJldmVudGlvbiBvcHRpb25zCkBkZXNjcmlwdGlvbjogQ2xpZW50IGhhZCBkaWZmaWN1bHR5IHVyaW5hdGluZwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGlmZmljdWx0eSB1cmluYXRpbmciOgogIGV4aXN0cyAiRGlmZmljdWx0eSB1cmluYXRpbmcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJEaWZmaWN1bHR5IHVyaW5hdGluZyBPYnNlcnZhdGlvbiIKZGVmaW5lICJEaWZmaWN1bHR5IHVyaW5hdGluZyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJEaWZmaWN1bHR5IHVyaW5hdGluZyJdCmRlZmluZSAiRGlmZmljdWx0eSB1cmluYXRpbmcgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGFkdmVyc2UgVk1NQyBldmVudCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRGlmZmljdWx0eSB1cmluYXRpbmciCi8qIEVuZCBvZiBEaWZmaWN1bHR5IHVyaW5hdGluZyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTIxMyAtIEV4Y2Vzc2l2ZSBibGVlZGluZwpAYWN0aXZpdHk6IEhJVi5CMjEgT2ZmZXIgcHJldmVudGlvbiBvcHRpb25zCkBkZXNjcmlwdGlvbjogQ2xpZW50IGV4cGVyaWVuY2VkIGV4Y2Vzc2l2ZSBibGVlZGluZwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRXhjZXNzaXZlIGJsZWVkaW5nIjoKICBleGlzdHMgIkV4Y2Vzc2l2ZSBibGVlZGluZyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkV4Y2Vzc2l2ZSBibGVlZGluZyBPYnNlcnZhdGlvbiIKZGVmaW5lICJFeGNlc3NpdmUgYmxlZWRpbmcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRXhjZXNzaXZlIGJsZWVkaW5nIl0KZGVmaW5lICJFeGNlc3NpdmUgYmxlZWRpbmcgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGFkdmVyc2UgVk1NQyBldmVudCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRXhjZXNzaXZlIGJsZWVkaW5nIgovKiBFbmQgb2YgRXhjZXNzaXZlIGJsZWVkaW5nICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjE0IC0gRXhjZXNzaXZlIHNraW4gcmVtb3ZhbApAYWN0aXZpdHk6IEhJVi5CMjEgT2ZmZXIgcHJldmVudGlvbiBvcHRpb25zCkBkZXNjcmlwdGlvbjogQ2xpZW50IGV4cGVyaWVuY2VkIGV4Y2Vzc2l2ZSBza2luIHJlbW92YWwKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkV4Y2Vzc2l2ZSBza2luIHJlbW92YWwiOgogIGV4aXN0cyAiRXhjZXNzaXZlIHNraW4gcmVtb3ZhbCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkV4Y2Vzc2l2ZSBza2luIHJlbW92YWwgT2JzZXJ2YXRpb24iCmRlZmluZSAiRXhjZXNzaXZlIHNraW4gcmVtb3ZhbCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJFeGNlc3NpdmUgc2tpbiByZW1vdmFsIl0KZGVmaW5lICJFeGNlc3NpdmUgc2tpbiByZW1vdmFsIE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiBhZHZlcnNlIFZNTUMgZXZlbnQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkV4Y2Vzc2l2ZSBza2luIHJlbW92YWwiCi8qIEVuZCBvZiBFeGNlc3NpdmUgc2tpbiByZW1vdmFsICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjE1IC0gRXhjZXNzaXZlIHN3ZWxsaW5nCkBhY3Rpdml0eTogSElWLkIyMSBPZmZlciBwcmV2ZW50aW9uIG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBDbGllbnQgZXhwZXJpZW5jZWQgZXhjZXNzaXZlIHN3ZWxsaW5nCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJFeGNlc3NpdmUgc3dlbGxpbmciOgogIGV4aXN0cyAiRXhjZXNzaXZlIHN3ZWxsaW5nIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRXhjZXNzaXZlIHN3ZWxsaW5nIE9ic2VydmF0aW9uIgpkZWZpbmUgIkV4Y2Vzc2l2ZSBzd2VsbGluZyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJFeGNlc3NpdmUgc3dlbGxpbmciXQpkZWZpbmUgIkV4Y2Vzc2l2ZSBzd2VsbGluZyBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2YgYWR2ZXJzZSBWTU1DIGV2ZW50IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJFeGNlc3NpdmUgc3dlbGxpbmciCi8qIEVuZCBvZiBFeGNlc3NpdmUgc3dlbGxpbmcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMTYgLSBIYWVtYXRvbWEKQGFjdGl2aXR5OiBISVYuQjIxIE9mZmVyIHByZXZlbnRpb24gb3B0aW9ucwpAZGVzY3JpcHRpb246IENsaWVudCBleHBlcmllbmNlZCBoYWVtYXRvbWEKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhhZW1hdG9tYSI6CiAgZXhpc3RzICJIYWVtYXRvbWEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJIYWVtYXRvbWEgT2JzZXJ2YXRpb24iCmRlZmluZSAiSGFlbWF0b21hIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhhZW1hdG9tYSJdCmRlZmluZSAiSGFlbWF0b21hIE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiBhZHZlcnNlIFZNTUMgZXZlbnQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkhhZW1hdG9tYSIKLyogRW5kIG9mIEhhZW1hdG9tYSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTIxNyAtIEluZmVjdGlvbgpAYWN0aXZpdHk6IEhJVi5CMjEgT2ZmZXIgcHJldmVudGlvbiBvcHRpb25zCkBkZXNjcmlwdGlvbjogQ2xpZW50IGV4cGVyaWVuY2VkIGluZmVjdGlvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW5mZWN0aW9uIjoKICBleGlzdHMgIkluZmVjdGlvbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkluZmVjdGlvbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJJbmZlY3Rpb24gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW5mZWN0aW9uIl0KZGVmaW5lICJJbmZlY3Rpb24gT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGFkdmVyc2UgVk1NQyBldmVudCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW5mZWN0aW9uIgovKiBFbmQgb2YgSW5mZWN0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjE4IC0gSW5qdXJ5IHRvIGdsYW5zCkBhY3Rpdml0eTogSElWLkIyMSBPZmZlciBwcmV2ZW50aW9uIG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBDbGllbnQgZXhwZXJpZW5jZWQgaW5qdXJ5IHRvIGdsYW5zCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJJbmp1cnkgdG8gZ2xhbnMiOgogIGV4aXN0cyAiSW5qdXJ5IHRvIGdsYW5zIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW5qdXJ5IHRvIGdsYW5zIE9ic2VydmF0aW9uIgpkZWZpbmUgIkluanVyeSB0byBnbGFucyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJJbmp1cnkgdG8gZ2xhbnMiXQpkZWZpbmUgIkluanVyeSB0byBnbGFucyBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2YgYWR2ZXJzZSBWTU1DIGV2ZW50IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJJbmp1cnkgdG8gZ2xhbnMiCi8qIEVuZCBvZiBJbmp1cnkgdG8gZ2xhbnMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMTkgLSBTY2FyIG9yIGRpc2ZpZ3VyZW1lbnQKQGFjdGl2aXR5OiBISVYuQjIxIE9mZmVyIHByZXZlbnRpb24gb3B0aW9ucwpAZGVzY3JpcHRpb246IENsaWVudCBleHBlcmllbmNlZCBzY2FyIG9yIGRpc2ZpZ3VyZW1lbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlNjYXIgb3IgZGlzZmlndXJlbWVudCI6CiAgZXhpc3RzICJTY2FyIG9yIGRpc2ZpZ3VyZW1lbnQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJTY2FyIG9yIGRpc2ZpZ3VyZW1lbnQgT2JzZXJ2YXRpb24iCmRlZmluZSAiU2NhciBvciBkaXNmaWd1cmVtZW50IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlNjYXIgb3IgZGlzZmlndXJlbWVudCJdCmRlZmluZSAiU2NhciBvciBkaXNmaWd1cmVtZW50IE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiBhZHZlcnNlIFZNTUMgZXZlbnQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlNjYXIgb3IgZGlzZmlndXJlbWVudCIKLyogRW5kIG9mIFNjYXIgb3IgZGlzZmlndXJlbWVudCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTIyMCAtIFNoYXJwcyBpbmp1cnkgdG8gcGVyc29ubmVsCkBhY3Rpdml0eTogSElWLkIyMSBPZmZlciBwcmV2ZW50aW9uIG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBEdXJpbmcgVk1NQyBwcm9jZWR1cmUgdGhlcmUgd2FzIHNoYXJwcyBpbmp1cnkgdG8gcGVyc29ubmVsCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTaGFycHMgaW5qdXJ5IHRvIHBlcnNvbm5lbCI6CiAgZXhpc3RzICJTaGFycHMgaW5qdXJ5IHRvIHBlcnNvbm5lbCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlNoYXJwcyBpbmp1cnkgdG8gcGVyc29ubmVsIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNoYXJwcyBpbmp1cnkgdG8gcGVyc29ubmVsIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlNoYXJwcyBpbmp1cnkgdG8gcGVyc29ubmVsIl0KZGVmaW5lICJTaGFycHMgaW5qdXJ5IHRvIHBlcnNvbm5lbCBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2YgYWR2ZXJzZSBWTU1DIGV2ZW50IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTaGFycHMgaW5qdXJ5IHRvIHBlcnNvbm5lbCIKLyogRW5kIG9mIFNoYXJwcyBpbmp1cnkgdG8gcGVyc29ubmVsICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjIxIC0gV291bmQgZGlzcnVwdGlvbgpAYWN0aXZpdHk6IEhJVi5CMjEgT2ZmZXIgcHJldmVudGlvbiBvcHRpb25zCkBkZXNjcmlwdGlvbjogQ2xpZW50IGV4cGVyaWVuY2VkIHdvdW5kIGRpc3J1cHRpb24KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIldvdW5kIGRpc3J1cHRpb24iOgogIGV4aXN0cyAiV291bmQgZGlzcnVwdGlvbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIldvdW5kIGRpc3J1cHRpb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiV291bmQgZGlzcnVwdGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJXb3VuZCBkaXNydXB0aW9uIl0KZGVmaW5lICJXb3VuZCBkaXNydXB0aW9uIE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiBhZHZlcnNlIFZNTUMgZXZlbnQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIldvdW5kIGRpc3J1cHRpb24iCi8qIEVuZCBvZiBXb3VuZCBkaXNydXB0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjIyIC0gT3RoZXIKQGFjdGl2aXR5OiBISVYuQjIxIE9mZmVyIHByZXZlbnRpb24gb3B0aW9ucwpAZGVzY3JpcHRpb246IENsaWVudCBleHBlcmllbmNlZCBvdGhlciBhZHZlcnNlIFZNTUMgZXZlbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk90aGVyIEIuREUyMjIiOgogIGV4aXN0cyAiT3RoZXIgQi5ERTIyMiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk90aGVyIEIuREUyMjIgT2JzZXJ2YXRpb24iCmRlZmluZSAiT3RoZXIgQi5ERTIyMiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPdGhlciAtIEhJVi5CLkRFMjIyIl0KZGVmaW5lICJPdGhlciBCLkRFMjIyIE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiBhZHZlcnNlIFZNTUMgZXZlbnQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk90aGVyIC0gSElWLkIuREUyMjIiCi8qIEVuZCBvZiBPdGhlciBCLkRFMjIyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjI0IC0gSElWIHJldGVzdCBwcmlvciB0byBzdGFydGluZyBBUlQgY29uZHVjdGVkCkBhY3Rpdml0eTogSElWLkIyMCBTY2hlZHVsZSByZXRlc3QKQGRlc2NyaXB0aW9uOiBISVYgcmV0ZXN0IHByaW9yIHRvIHN0YXJ0aW5nIEFSVCBjb25kdWN0ZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhJViByZXRlc3QgcHJpb3IgdG8gc3RhcnRpbmcgQVJUIGNvbmR1Y3RlZCI6CiAgZXhpc3RzICJISVYgcmV0ZXN0IHByaW9yIHRvIHN0YXJ0aW5nIEFSVCBjb25kdWN0ZWQgT2JzZXJ2YXRpb24iCmRlZmluZSAiSElWIHJldGVzdCBwcmlvciB0byBzdGFydGluZyBBUlQgY29uZHVjdGVkIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJISVYgcmV0ZXN0IHByaW9yIHRvIHN0YXJ0aW5nIEFSVCBjb25kdWN0ZWQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBISVYgcmV0ZXN0IHByaW9yIHRvIHN0YXJ0aW5nIEFSVCBjb25kdWN0ZWQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMjUgLSBBdCBlbGV2YXRlZCByaXNrIGZvciBISVYgYWNxdWlzaXRpb24KQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgYXQgZWxldmF0ZWQgcmlzayBmb3IgSElWIGFjcXVpc2l0aW9uCiovCgpkZWZpbmUgIkF0IGVsZXZhdGVkIHJpc2sgZm9yIEhJViBhY3F1aXNpdGlvbiBCLkRFMjI1IjoKICBbT2JzZXJ2YXRpb25dIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICBhbmQgZXhpc3RzKE8uY2F0ZWdvcnkgT0Mgd2hlcmUgT0MgfiBDb25jZXB0c0N1c3RvbS4ic29jaWFsLWhpc3RvcnkiKQogICAgYW5kIE8uY29kZSB+IENvbmNlcHRzLiJBdCBlbGV2YXRlZCByaXNrIGZvciBISVYgYWNxdWlzaXRpb24gLSBISVYuQi5ERTIyNSIKLyogRW5kIG9mIEF0IGVsZXZhdGVkIHJpc2sgZm9yIEhJViBhY3F1aXNpdGlvbiBCLkRFMjI1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjI2IC0gU3luZHJvbWUvU1RJIGRpYWdub3NlZApAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogU3luZHJvbWUgb3IgU1RJIGZvciB3aGljaCBjbGllbnQgaXMgZGlhZ25vc2VkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTeW5kcm9tZS9TVEkgZGlhZ25vc2VkIEIuREUyMjYiOgogIGV4aXN0cyAiU3luZHJvbWUvU1RJIGRpYWdub3NlZCBCLkRFMjI2IE9ic2VydmF0aW9uIgpkZWZpbmUgIlN5bmRyb21lL1NUSSBkaWFnbm9zZWQgQi5ERTIyNiBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iU3luZHJvbWUvU1RJIGRpYWdub3NlZCAtIEhJVi5CLkRFMjI2Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFN5bmRyb21lL1NUSSBkaWFnbm9zZWQgQi5ERTIyNiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTIyNyAtIFVyZXRocmFsIGRpc2NoYXJnZSBzeW5kcm9tZQpAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2xpZW50IGRpYWdub3NlZCB3aXRoIHVyZXRocmFsIGRpc2NoYXJnZSBzeW5kcm9tZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVXJldGhyYWwgZGlzY2hhcmdlIHN5bmRyb21lIEIuREUyMjciOgogIGV4aXN0cyAiVXJldGhyYWwgZGlzY2hhcmdlIHN5bmRyb21lIEIuREUyMjcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVcmV0aHJhbCBkaXNjaGFyZ2Ugc3luZHJvbWUgQi5ERTIyNyBPYnNlcnZhdGlvbiIKZGVmaW5lICJVcmV0aHJhbCBkaXNjaGFyZ2Ugc3luZHJvbWUgQi5ERTIyNyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJVcmV0aHJhbCBkaXNjaGFyZ2Ugc3luZHJvbWUgLSBISVYuQi5ERTIyNyJdCmRlZmluZSAiVXJldGhyYWwgZGlzY2hhcmdlIHN5bmRyb21lIEIuREUyMjcgT2JzZXJ2YXRpb24iOgogICJTeW5kcm9tZS9TVEkgZGlhZ25vc2VkIEIuREUyMjYgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlVyZXRocmFsIGRpc2NoYXJnZSBzeW5kcm9tZSAtIEhJVi5CLkRFMjI3IgovKiBFbmQgb2YgVXJldGhyYWwgZGlzY2hhcmdlIHN5bmRyb21lIEIuREUyMjcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMjggLSBWYWdpbmFsIGRpc2NoYXJnZSBzeW5kcm9tZQpAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2xpZW50IGRpYWdub3NlZCB3aXRoIHZhZ2luYWwgZGlzY2hhcmdlIHN5bmRyb21lCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJWYWdpbmFsIGRpc2NoYXJnZSBzeW5kcm9tZSBCLkRFMjI4IjoKICBleGlzdHMgIlZhZ2luYWwgZGlzY2hhcmdlIHN5bmRyb21lIEIuREUyMjggQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJWYWdpbmFsIGRpc2NoYXJnZSBzeW5kcm9tZSBCLkRFMjI4IE9ic2VydmF0aW9uIgpkZWZpbmUgIlZhZ2luYWwgZGlzY2hhcmdlIHN5bmRyb21lIEIuREUyMjggQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVmFnaW5hbCBkaXNjaGFyZ2Ugc3luZHJvbWUgLSBISVYuQi5ERTIyOCJdCmRlZmluZSAiVmFnaW5hbCBkaXNjaGFyZ2Ugc3luZHJvbWUgQi5ERTIyOCBPYnNlcnZhdGlvbiI6CiAgIlN5bmRyb21lL1NUSSBkaWFnbm9zZWQgQi5ERTIyNiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVmFnaW5hbCBkaXNjaGFyZ2Ugc3luZHJvbWUgLSBISVYuQi5ERTIyOCIKLyogRW5kIG9mIFZhZ2luYWwgZGlzY2hhcmdlIHN5bmRyb21lIEIuREUyMjggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMjkgLSBMb3dlciBBYmRvbWluYWwgcGFpbiAKQGFjdGl2aXR5OiBISVYuQjIzIE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IENsaWVudCBkaWFnbm9zZWQgd2l0aCBsb3dlciBhYmRvbWluYWwgcGFpbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTG93ZXIgQWJkb21pbmFsIHBhaW4gIEIuREUyMjkiOgogIGV4aXN0cyAiTG93ZXIgQWJkb21pbmFsIHBhaW4gIEIuREUyMjkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJMb3dlciBBYmRvbWluYWwgcGFpbiAgQi5ERTIyOSBPYnNlcnZhdGlvbiIKZGVmaW5lICJMb3dlciBBYmRvbWluYWwgcGFpbiAgQi5ERTIyOSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJMb3dlciBBYmRvbWluYWwgcGFpbiAgLSBISVYuQi5ERTIyOSJdCmRlZmluZSAiTG93ZXIgQWJkb21pbmFsIHBhaW4gIEIuREUyMjkgT2JzZXJ2YXRpb24iOgogICJTeW5kcm9tZS9TVEkgZGlhZ25vc2VkIEIuREUyMjYgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkxvd2VyIEFiZG9taW5hbCBwYWluICAtIEhJVi5CLkRFMjI5IgovKiBFbmQgb2YgTG93ZXIgQWJkb21pbmFsIHBhaW4gIEIuREUyMjkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMzAgLSBHZW5pdGFsIHVsY2VyIGRpc2Vhc2Ugc3luZHJvbWUKQGFjdGl2aXR5OiBISVYuQjIzIE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IENsaWVudCBkaWFnbm9zZWQgd2l0aCBnZW5pdGFsIHVsY2VyIGRpc2Vhc2Ugc3luZHJvbWUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkdlbml0YWwgdWxjZXIgZGlzZWFzZSBzeW5kcm9tZSBCLkRFMjMwIjoKICBleGlzdHMgIkdlbml0YWwgdWxjZXIgZGlzZWFzZSBzeW5kcm9tZSBCLkRFMjMwIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiR2VuaXRhbCB1bGNlciBkaXNlYXNlIHN5bmRyb21lIEIuREUyMzAgT2JzZXJ2YXRpb24iCmRlZmluZSAiR2VuaXRhbCB1bGNlciBkaXNlYXNlIHN5bmRyb21lIEIuREUyMzAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iR2VuaXRhbCB1bGNlciBkaXNlYXNlIHN5bmRyb21lIC0gSElWLkIuREUyMzAiXQpkZWZpbmUgIkdlbml0YWwgdWxjZXIgZGlzZWFzZSBzeW5kcm9tZSBCLkRFMjMwIE9ic2VydmF0aW9uIjoKICAiU3luZHJvbWUvU1RJIGRpYWdub3NlZCBCLkRFMjI2IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJHZW5pdGFsIHVsY2VyIGRpc2Vhc2Ugc3luZHJvbWUgLSBISVYuQi5ERTIzMCIKLyogRW5kIG9mIEdlbml0YWwgdWxjZXIgZGlzZWFzZSBzeW5kcm9tZSBCLkRFMjMwICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjMxIC0gQW5vcmVjdGFsIGRpc2NoYXJnZQpAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2xpZW50IGRpYWdub3NlZCB3aXRoIGFub3JlY3RhbCBkaXNjaGFyZ2UKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFub3JlY3RhbCBkaXNjaGFyZ2UgQi5ERTIzMSI6CiAgZXhpc3RzICJBbm9yZWN0YWwgZGlzY2hhcmdlIEIuREUyMzEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBbm9yZWN0YWwgZGlzY2hhcmdlIEIuREUyMzEgT2JzZXJ2YXRpb24iCmRlZmluZSAiQW5vcmVjdGFsIGRpc2NoYXJnZSBCLkRFMjMxIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFub3JlY3RhbCBkaXNjaGFyZ2UgLSBISVYuQi5ERTIzMSJdCmRlZmluZSAiQW5vcmVjdGFsIGRpc2NoYXJnZSBCLkRFMjMxIE9ic2VydmF0aW9uIjoKICAiU3luZHJvbWUvU1RJIGRpYWdub3NlZCBCLkRFMjI2IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBbm9yZWN0YWwgZGlzY2hhcmdlIC0gSElWLkIuREUyMzEiCi8qIEVuZCBvZiBBbm9yZWN0YWwgZGlzY2hhcmdlIEIuREUyMzEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyMzIgLSBTZW50IGZvciB0ZXN0aW5nCkBhY3Rpdml0eTogSElWLkIyMyBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBTcGVjaW1lbiBzZW50IGZvciB0ZXN0aW5nCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZW50IGZvciB0ZXN0aW5nIEIuREUyMzIiOgogIGV4aXN0cyAiU2VudCBmb3IgdGVzdGluZyBCLkRFMjMyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2VudCBmb3IgdGVzdGluZyBCLkRFMjMyIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNlbnQgZm9yIHRlc3RpbmcgQi5ERTIzMiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTZW50IGZvciB0ZXN0aW5nIC0gSElWLkIuREUyMzIiXQpkZWZpbmUgIlNlbnQgZm9yIHRlc3RpbmcgQi5ERTIzMiBPYnNlcnZhdGlvbiI6CiAgIlN5bmRyb21lL1NUSSBkaWFnbm9zZWQgQi5ERTIyNiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU2VudCBmb3IgdGVzdGluZyAtIEhJVi5CLkRFMjMyIgovKiBFbmQgb2YgU2VudCBmb3IgdGVzdGluZyBCLkRFMjMyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjMzIC0gT3RoZXIKQGFjdGl2aXR5OiBISVYuQjIzIE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE90aGVyIHN5bmRyb21lL1NUSSBkaWFnbm9zZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk90aGVyIEIuREUyMzMiOgogIGV4aXN0cyAiT3RoZXIgQi5ERTIzMyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk90aGVyIEIuREUyMzMgT2JzZXJ2YXRpb24iCmRlZmluZSAiT3RoZXIgQi5ERTIzMyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPdGhlciAtIEhJVi5CLkRFMjMzIl0KZGVmaW5lICJPdGhlciBCLkRFMjMzIE9ic2VydmF0aW9uIjoKICAiU3luZHJvbWUvU1RJIGRpYWdub3NlZCBCLkRFMjI2IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJPdGhlciAtIEhJVi5CLkRFMjMzIgovKiBFbmQgb2YgT3RoZXIgQi5ERTIzMyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTIzNSAtIEFueSBTVEkgc3luZHJvbWUgZGlhZ25vc2VkCkBhY3Rpdml0eTogSElWLkIyMyBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBXYXMgdGhlIGNsaWVudCBkaWFnbm9zZWQgd2l0aCBhbnkgb2YgdGhlIGZpdmUgU1RJIHN5bmRyb21lcyBkdXJpbmcgdGhpcyB2aXNpdD8KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFueSBTVEkgc3luZHJvbWUgZGlhZ25vc2VkIEIuREUyMzUiOgogIGV4aXN0cyAiQW55IFNUSSBzeW5kcm9tZSBkaWFnbm9zZWQgQi5ERTIzNSBPYnNlcnZhdGlvbiIKZGVmaW5lICJBbnkgU1RJIHN5bmRyb21lIGRpYWdub3NlZCBCLkRFMjM1IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJBbnkgU1RJIHN5bmRyb21lIGRpYWdub3NlZCAtIEhJVi5CLkRFMjM1Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgaXMgdHJ1ZQovKiBFbmQgb2YgQW55IFNUSSBzeW5kcm9tZSBkaWFnbm9zZWQgQi5ERTIzNSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTI0OSAtIFN5cGhpbGlzIHRlc3QgZGF0ZQpAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogRGF0ZSBvZiBzeXBoaWxpcyB0ZXN0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTeXBoaWxpcyB0ZXN0IGRhdGUgQi5ERTI0OSI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iU3lwaGlsaXMgdGVzdCBkYXRlIC0gSElWLkIuREUyNDkiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIlN5cGhpbGlzIHRlc3QgZGF0ZSBCLkRFMjQ5IFZhbHVlIjoKICAiU3lwaGlsaXMgdGVzdCBkYXRlIEIuREUyNDkiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgU3lwaGlsaXMgdGVzdCBkYXRlIEIuREUyNDkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyNTAgLSBTeXBoaWxpcyB0ZXN0IHJlc3VsdApAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogUmVzdWx0IGZyb20gc3lwaGlsaXMgdGVzdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU3lwaGlsaXMgdGVzdCByZXN1bHQgQi5ERTI1MCI6CiAgZXhpc3RzICJTeXBoaWxpcyB0ZXN0IHJlc3VsdCBCLkRFMjUwIE9ic2VydmF0aW9uIgpkZWZpbmUgIlN5cGhpbGlzIHRlc3QgcmVzdWx0IEIuREUyNTAgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlN5cGhpbGlzIHRlc3QgcmVzdWx0IC0gSElWLkIuREUyNTAiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgU3lwaGlsaXMgdGVzdCByZXN1bHQgQi5ERTI1MCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTI1MSAtIFBvc2l0aXZlCkBhY3Rpdml0eTogSElWLkIyMyBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBUZXN0IHJlc3VsdCBpcyBwb3NpdGl2ZSBmb3Igc3lwaGlsaXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBvc2l0aXZlIEIuREUyNTEiOgogIGV4aXN0cyAiUG9zaXRpdmUgQi5ERTI1MSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlBvc2l0aXZlIEIuREUyNTEgT2JzZXJ2YXRpb24iCmRlZmluZSAiUG9zaXRpdmUgQi5ERTI1MSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQb3NpdGl2ZSAtIEhJVi5CLkRFMjUxIl0KZGVmaW5lICJQb3NpdGl2ZSBCLkRFMjUxIE9ic2VydmF0aW9uIjoKICAiU3lwaGlsaXMgdGVzdCByZXN1bHQgQi5ERTI1MCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUG9zaXRpdmUgLSBISVYuQi5ERTI1MSIKLyogRW5kIG9mIFBvc2l0aXZlIEIuREUyNTEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyNTIgLSBOZWdhdGl2ZQpAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogVGVzdCByZXN1bHQgaXMgbmVnYXRpdmUgZm9yIHN5cGhpbGlzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOZWdhdGl2ZSBCLkRFMjUyIjoKICBleGlzdHMgIk5lZ2F0aXZlIEIuREUyNTIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJOZWdhdGl2ZSBCLkRFMjUyIE9ic2VydmF0aW9uIgpkZWZpbmUgIk5lZ2F0aXZlIEIuREUyNTIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTmVnYXRpdmUgLSBISVYuQi5ERTI1MiJdCmRlZmluZSAiTmVnYXRpdmUgQi5ERTI1MiBPYnNlcnZhdGlvbiI6CiAgIlN5cGhpbGlzIHRlc3QgcmVzdWx0IEIuREUyNTAgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5lZ2F0aXZlIC0gSElWLkIuREUyNTIiCi8qIEVuZCBvZiBOZWdhdGl2ZSBCLkRFMjUyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjUzIC0gSW5jb25jbHVzaXZlCkBhY3Rpdml0eTogSElWLkIyMyBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBUZXN0IHJlc3VsdCBpcyBpbmNvbmNsdXNpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkluY29uY2x1c2l2ZSBCLkRFMjUzIjoKICBleGlzdHMgIkluY29uY2x1c2l2ZSBCLkRFMjUzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW5jb25jbHVzaXZlIEIuREUyNTMgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW5jb25jbHVzaXZlIEIuREUyNTMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW5jb25jbHVzaXZlIC0gSElWLkIuREUyNTMiXQpkZWZpbmUgIkluY29uY2x1c2l2ZSBCLkRFMjUzIE9ic2VydmF0aW9uIjoKICAiU3lwaGlsaXMgdGVzdCByZXN1bHQgQi5ERTI1MCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW5jb25jbHVzaXZlIC0gSElWLkIuREUyNTMiCi8qIEVuZCBvZiBJbmNvbmNsdXNpdmUgQi5ERTI1MyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTI1NCAtIFN5cGhpbGlzIHRyZWF0bWVudCBzdGFydCBkYXRlCkBhY3Rpdml0eTogSElWLkIyMyBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBEYXRlIG9mIGluaXRpYXRpb24gb2Ygc3lwaGlsaXMgdHJlYXRtZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTeXBoaWxpcyB0cmVhdG1lbnQgc3RhcnQgZGF0ZSBCLkRFMjU0IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJTeXBoaWxpcyB0cmVhdG1lbnQgc3RhcnQgZGF0ZSAtIEhJVi5CLkRFMjU0Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJTeXBoaWxpcyB0cmVhdG1lbnQgc3RhcnQgZGF0ZSBCLkRFMjU0IFZhbHVlIjoKICAiU3lwaGlsaXMgdHJlYXRtZW50IHN0YXJ0IGRhdGUgQi5ERTI1NCIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBTeXBoaWxpcyB0cmVhdG1lbnQgc3RhcnQgZGF0ZSBCLkRFMjU0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjU1IC0gR29ub3JyaG9lYSB0ZXN0IGRhdGUKQGFjdGl2aXR5OiBISVYuQjIzIE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IERhdGUgb2YgR29ub3JyaG9lYSB0ZXN0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJHb25vcnJob2VhIHRlc3QgZGF0ZSBCLkRFMjU1IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJHb25vcnJob2VhIHRlc3QgZGF0ZSAtIEhJVi5CLkRFMjU1Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJHb25vcnJob2VhIHRlc3QgZGF0ZSBCLkRFMjU1IFZhbHVlIjoKICAiR29ub3JyaG9lYSB0ZXN0IGRhdGUgQi5ERTI1NSIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBHb25vcnJob2VhIHRlc3QgZGF0ZSBCLkRFMjU1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjU2IC0gR29ub3JyaG9lYSB0ZXN0IHJlc3VsdApAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogUmVzdWx0IGZyb20gR29ub3JyaG9lYSB0ZXN0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJHb25vcnJob2VhIHRlc3QgcmVzdWx0IEIuREUyNTYiOgogIGV4aXN0cyAiR29ub3JyaG9lYSB0ZXN0IHJlc3VsdCBCLkRFMjU2IE9ic2VydmF0aW9uIgpkZWZpbmUgIkdvbm9ycmhvZWEgdGVzdCByZXN1bHQgQi5ERTI1NiBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iR29ub3JyaG9lYSB0ZXN0IHJlc3VsdCAtIEhJVi5CLkRFMjU2Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEdvbm9ycmhvZWEgdGVzdCByZXN1bHQgQi5ERTI1NiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTI1NyAtIFBvc2l0aXZlCkBhY3Rpdml0eTogSElWLkIyMyBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBUZXN0IHJlc3VsdCBpcyBwb3NpdGl2ZSBmb3IgTmVpc3NlcmlhIGdvbm9ycmhvZWFlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQb3NpdGl2ZSBCLkRFMjU3IjoKICBleGlzdHMgIlBvc2l0aXZlIEIuREUyNTcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQb3NpdGl2ZSBCLkRFMjU3IE9ic2VydmF0aW9uIgpkZWZpbmUgIlBvc2l0aXZlIEIuREUyNTcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUG9zaXRpdmUgLSBISVYuQi5ERTI1NyJdCmRlZmluZSAiUG9zaXRpdmUgQi5ERTI1NyBPYnNlcnZhdGlvbiI6CiAgIkdvbm9ycmhvZWEgdGVzdCByZXN1bHQgQi5ERTI1NiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUG9zaXRpdmUgLSBISVYuQi5ERTI1NyIKLyogRW5kIG9mIFBvc2l0aXZlIEIuREUyNTcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyNTggLSBOZWdhdGl2ZQpAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogVGVzdCByZXN1bHQgaXMgbmVnYXRpdmUgZm9yIE5laXNzZXJpYSBnb25vcnJob2VhZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTmVnYXRpdmUgQi5ERTI1OCI6CiAgZXhpc3RzICJOZWdhdGl2ZSBCLkRFMjU4IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTmVnYXRpdmUgQi5ERTI1OCBPYnNlcnZhdGlvbiIKZGVmaW5lICJOZWdhdGl2ZSBCLkRFMjU4IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5lZ2F0aXZlIC0gSElWLkIuREUyNTgiXQpkZWZpbmUgIk5lZ2F0aXZlIEIuREUyNTggT2JzZXJ2YXRpb24iOgogICJHb25vcnJob2VhIHRlc3QgcmVzdWx0IEIuREUyNTYgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5lZ2F0aXZlIC0gSElWLkIuREUyNTgiCi8qIEVuZCBvZiBOZWdhdGl2ZSBCLkRFMjU4ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjU5IC0gSW5jb25jbHVzaXZlCkBhY3Rpdml0eTogSElWLkIyMyBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBUZXN0IHJlc3VsdCBpcyBpbmNvbmNsdXNpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkluY29uY2x1c2l2ZSBCLkRFMjU5IjoKICBleGlzdHMgIkluY29uY2x1c2l2ZSBCLkRFMjU5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW5jb25jbHVzaXZlIEIuREUyNTkgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW5jb25jbHVzaXZlIEIuREUyNTkgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW5jb25jbHVzaXZlIC0gSElWLkIuREUyNTkiXQpkZWZpbmUgIkluY29uY2x1c2l2ZSBCLkRFMjU5IE9ic2VydmF0aW9uIjoKICAiR29ub3JyaG9lYSB0ZXN0IHJlc3VsdCBCLkRFMjU2IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJJbmNvbmNsdXNpdmUgLSBISVYuQi5ERTI1OSIKLyogRW5kIG9mIEluY29uY2x1c2l2ZSBCLkRFMjU5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjYwIC0gR29ub3JyaG9lYSB0cmVhdG1lbnQgc3RhcnQgZGF0ZQpAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogRGF0ZSBvZiBpbml0aWF0aW9uIG9mIEdvbm9ycmhvZWEgdHJlYXRtZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJHb25vcnJob2VhIHRyZWF0bWVudCBzdGFydCBkYXRlIEIuREUyNjAiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkdvbm9ycmhvZWEgdHJlYXRtZW50IHN0YXJ0IGRhdGUgLSBISVYuQi5ERTI2MCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiR29ub3JyaG9lYSB0cmVhdG1lbnQgc3RhcnQgZGF0ZSBCLkRFMjYwIFZhbHVlIjoKICAiR29ub3JyaG9lYSB0cmVhdG1lbnQgc3RhcnQgZGF0ZSBCLkRFMjYwIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIEdvbm9ycmhvZWEgdHJlYXRtZW50IHN0YXJ0IGRhdGUgQi5ERTI2MCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTI2MSAtIFR5cGUgb2Ygc3BlY2ltZW4KQGFjdGl2aXR5OiBISVYuQjIzIE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IFR5cGUgb2Ygc3BlY2ltZW4gdG8gYmUgY29sbGVjdGVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUeXBlIG9mIHNwZWNpbWVuIEIuREUyNjEiOgogIGV4aXN0cyAiVHlwZSBvZiBzcGVjaW1lbiBCLkRFMjYxIE9ic2VydmF0aW9uIgpkZWZpbmUgIlR5cGUgb2Ygc3BlY2ltZW4gQi5ERTI2MSBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iVHlwZSBvZiBzcGVjaW1lbiAtIEhJVi5CLkRFMjYxIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFR5cGUgb2Ygc3BlY2ltZW4gQi5ERTI2MSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTI2MiAtIEJsb29kCkBhY3Rpdml0eTogSElWLkIyMyBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBCbG9vZCBzcGVjaW1lbiB0byBiZSBjb2xsZWN0ZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkJsb29kIEIuREUyNjIiOgogIGV4aXN0cyAiQmxvb2QgQi5ERTI2MiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkJsb29kIEIuREUyNjIgT2JzZXJ2YXRpb24iCmRlZmluZSAiQmxvb2QgQi5ERTI2MiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJCbG9vZCAtIEhJVi5CLkRFMjYyIl0KZGVmaW5lICJCbG9vZCBCLkRFMjYyIE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiBzcGVjaW1lbiBCLkRFMjYxIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJCbG9vZCAtIEhJVi5CLkRFMjYyIgovKiBFbmQgb2YgQmxvb2QgQi5ERTI2MiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTI2MyAtIFVyaW5lCkBhY3Rpdml0eTogSElWLkIyMyBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBVcmluZSBzcGVjaW1lbiB0byBiZSBjb2xsZWN0ZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlVyaW5lIEIuREUyNjMiOgogIGV4aXN0cyAiVXJpbmUgQi5ERTI2MyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlVyaW5lIEIuREUyNjMgT2JzZXJ2YXRpb24iCmRlZmluZSAiVXJpbmUgQi5ERTI2MyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJVcmluZSAtIEhJVi5CLkRFMjYzIl0KZGVmaW5lICJVcmluZSBCLkRFMjYzIE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiBzcGVjaW1lbiBCLkRFMjYxIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJVcmluZSAtIEhJVi5CLkRFMjYzIgovKiBFbmQgb2YgVXJpbmUgQi5ERTI2MyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTI2NCAtIENlcnZpY2FsIG9yIHZhZ2luYWwgc3dhYgpAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2VydmljYWwgb3IgdmFnaW5hbCBzd2FiIHRvIGJlIGNvbGxlY3RlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ2VydmljYWwgb3IgdmFnaW5hbCBzd2FiIEIuREUyNjQiOgogIGV4aXN0cyAiQ2VydmljYWwgb3IgdmFnaW5hbCBzd2FiIEIuREUyNjQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDZXJ2aWNhbCBvciB2YWdpbmFsIHN3YWIgQi5ERTI2NCBPYnNlcnZhdGlvbiIKZGVmaW5lICJDZXJ2aWNhbCBvciB2YWdpbmFsIHN3YWIgQi5ERTI2NCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDZXJ2aWNhbCBvciB2YWdpbmFsIHN3YWIgLSBISVYuQi5ERTI2NCJdCmRlZmluZSAiQ2VydmljYWwgb3IgdmFnaW5hbCBzd2FiIEIuREUyNjQgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIHNwZWNpbWVuIEIuREUyNjEgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNlcnZpY2FsIG9yIHZhZ2luYWwgc3dhYiAtIEhJVi5CLkRFMjY0IgovKiBFbmQgb2YgQ2VydmljYWwgb3IgdmFnaW5hbCBzd2FiIEIuREUyNjQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyNjUgLSBVcmV0aHJhbCBvciBwZW5pbGUgc3dhYgpAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogVXJldGhyYWwgb3IgcGVuaWxlIHN3YWIgdG8gYmUgY29sbGVjdGVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJVcmV0aHJhbCBvciBwZW5pbGUgc3dhYiBCLkRFMjY1IjoKICBleGlzdHMgIlVyZXRocmFsIG9yIHBlbmlsZSBzd2FiIEIuREUyNjUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVcmV0aHJhbCBvciBwZW5pbGUgc3dhYiBCLkRFMjY1IE9ic2VydmF0aW9uIgpkZWZpbmUgIlVyZXRocmFsIG9yIHBlbmlsZSBzd2FiIEIuREUyNjUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVXJldGhyYWwgb3IgcGVuaWxlIHN3YWIgLSBISVYuQi5ERTI2NSJdCmRlZmluZSAiVXJldGhyYWwgb3IgcGVuaWxlIHN3YWIgQi5ERTI2NSBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2Ygc3BlY2ltZW4gQi5ERTI2MSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVXJldGhyYWwgb3IgcGVuaWxlIHN3YWIgLSBISVYuQi5ERTI2NSIKLyogRW5kIG9mIFVyZXRocmFsIG9yIHBlbmlsZSBzd2FiIEIuREUyNjUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyNjYgLSBSZWN0YWwgc3dhYgpAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogUmVjdGFsIHN3YWIgdG8gYmUgY29sbGVjdGVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZWN0YWwgc3dhYiBCLkRFMjY2IjoKICBleGlzdHMgIlJlY3RhbCBzd2FiIEIuREUyNjYgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSZWN0YWwgc3dhYiBCLkRFMjY2IE9ic2VydmF0aW9uIgpkZWZpbmUgIlJlY3RhbCBzd2FiIEIuREUyNjYgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUmVjdGFsIHN3YWIgLSBISVYuQi5ERTI2NiJdCmRlZmluZSAiUmVjdGFsIHN3YWIgQi5ERTI2NiBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2Ygc3BlY2ltZW4gQi5ERTI2MSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUmVjdGFsIHN3YWIgLSBISVYuQi5ERTI2NiIKLyogRW5kIG9mIFJlY3RhbCBzd2FiIEIuREUyNjYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyNjcgLSBPdGhlcgpAYWN0aXZpdHk6IEhJVi5CMjMgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT3RoZXIgc3BlY2ltZW4gdHlwZSB0byBiZSBjb2xsZWN0ZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk90aGVyIEIuREUyNjciOgogIGV4aXN0cyAiT3RoZXIgQi5ERTI2NyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk90aGVyIEIuREUyNjcgT2JzZXJ2YXRpb24iCmRlZmluZSAiT3RoZXIgQi5ERTI2NyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPdGhlciAtIEhJVi5CLkRFMjY3Il0KZGVmaW5lICJPdGhlciBCLkRFMjY3IE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiBzcGVjaW1lbiBCLkRFMjYxIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJPdGhlciAtIEhJVi5CLkRFMjY3IgovKiBFbmQgb2YgT3RoZXIgQi5ERTI2NyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTI3NiAtIE5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUKQGFjdGl2aXR5OiBISVYuQjIzIE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IFR5cGUgb2YgZGlhZ25vc3RpYyB0ZXN0IHVzZWQgZm9yIE5laXNzZXJpYSBnb25vcnJob2VhZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTmVpc3NlcmlhIGdvbm9ycmhvZWFlIHRlc3QgdHlwZSBCLkRFMjc2IjoKICBleGlzdHMgIk5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUgQi5ERTI3NiBPYnNlcnZhdGlvbiIKZGVmaW5lICJOZWlzc2VyaWEgZ29ub3JyaG9lYWUgdGVzdCB0eXBlIEIuREUyNzYgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIk5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUgLSBISVYuQi5ERTI3NiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBOZWlzc2VyaWEgZ29ub3JyaG9lYWUgdGVzdCB0eXBlIEIuREUyNzYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyNzcgLSBOQUFUCkBhY3Rpdml0eTogSElWLkIyMyBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBOdWNsZWljIEFjaWQgQW1wbGlmaWNhdGlvbiBUZXN0IChOQUFUKSB1c2VkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOQUFUIEIuREUyNzciOgogIGV4aXN0cyAiTkFBVCBCLkRFMjc3IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTkFBVCBCLkRFMjc3IE9ic2VydmF0aW9uIgpkZWZpbmUgIk5BQVQgQi5ERTI3NyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOQUFUIC0gSElWLkIuREUyNzciXQpkZWZpbmUgIk5BQVQgQi5ERTI3NyBPYnNlcnZhdGlvbiI6CiAgIk5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUgQi5ERTI3NiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTkFBVCAtIEhJVi5CLkRFMjc3IgovKiBFbmQgb2YgTkFBVCBCLkRFMjc3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjc4IC0gUE9DIFRlc3QKQGFjdGl2aXR5OiBISVYuQjIzIE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IFBvaW50LW9mLWNhcmUgKFBPQykgdGVzdCB1c2VkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQT0MgVGVzdCBCLkRFMjc4IjoKICBleGlzdHMgIlBPQyBUZXN0IEIuREUyNzggQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQT0MgVGVzdCBCLkRFMjc4IE9ic2VydmF0aW9uIgpkZWZpbmUgIlBPQyBUZXN0IEIuREUyNzggQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUE9DIFRlc3QgLSBISVYuQi5ERTI3OCJdCmRlZmluZSAiUE9DIFRlc3QgQi5ERTI3OCBPYnNlcnZhdGlvbiI6CiAgIk5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUgQi5ERTI3NiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUE9DIFRlc3QgLSBISVYuQi5ERTI3OCIKLyogRW5kIG9mIFBPQyBUZXN0IEIuREUyNzggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkIuREUyNzkgLSBDdWx0dXJlCkBhY3Rpdml0eTogSElWLkIyMyBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBDdWx0dXJlIHRlc3QgdXNlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ3VsdHVyZSBCLkRFMjc5IjoKICBleGlzdHMgIkN1bHR1cmUgQi5ERTI3OSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkN1bHR1cmUgQi5ERTI3OSBPYnNlcnZhdGlvbiIKZGVmaW5lICJDdWx0dXJlIEIuREUyNzkgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ3VsdHVyZSAtIEhJVi5CLkRFMjc5Il0KZGVmaW5lICJDdWx0dXJlIEIuREUyNzkgT2JzZXJ2YXRpb24iOgogICJOZWlzc2VyaWEgZ29ub3JyaG9lYWUgdGVzdCB0eXBlIEIuREUyNzYgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkN1bHR1cmUgLSBISVYuQi5ERTI3OSIKLyogRW5kIG9mIEN1bHR1cmUgQi5ERTI3OSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQi5ERTI4MCAtIE1pY3Jvc2NvcHkKQGFjdGl2aXR5OiBISVYuQjIzIE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE1pY3Jvc2NvcHkgdGVzdCB1c2VkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJNaWNyb3Njb3B5IEIuREUyODAiOgogIGV4aXN0cyAiTWljcm9zY29weSBCLkRFMjgwIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTWljcm9zY29weSBCLkRFMjgwIE9ic2VydmF0aW9uIgpkZWZpbmUgIk1pY3Jvc2NvcHkgQi5ERTI4MCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJNaWNyb3Njb3B5IC0gSElWLkIuREUyODAiXQpkZWZpbmUgIk1pY3Jvc2NvcHkgQi5ERTI4MCBPYnNlcnZhdGlvbiI6CiAgIk5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUgQi5ERTI3NiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTWljcm9zY29weSAtIEhJVi5CLkRFMjgwIgovKiBFbmQgb2YgTWljcm9zY29weSBCLkRFMjgwICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5CLkRFMjgxIC0gT3RoZXIKQGFjdGl2aXR5OiBISVYuQjIzIE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE90aGVyIHR5cGUgb2YgdGVzdCB1c2VkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPdGhlciBCLkRFMjgxIjoKICBleGlzdHMgIk90aGVyIEIuREUyODEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPdGhlciBCLkRFMjgxIE9ic2VydmF0aW9uIgpkZWZpbmUgIk90aGVyIEIuREUyODEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iT3RoZXIgLSBISVYuQi5ERTI4MSJdCmRlZmluZSAiT3RoZXIgQi5ERTI4MSBPYnNlcnZhdGlvbiI6CiAgIk5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUgQi5ERTI3NiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iT3RoZXIgLSBISVYuQi5ERTI4MSIKLyogRW5kIG9mIE90aGVyIEIuREUyODEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREU5IC0gRGF0ZS90aW1lIG9mIHN1c3BlY3RlZCBleHBvc3VyZSB0byBISVYKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBXaGVuIHRoZSBzdXNwZWN0IGV4cG9zdXJlIHRvIEhJViB0b29rIHBsYWNlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEYXRlL3RpbWUgb2Ygc3VzcGVjdGVkIGV4cG9zdXJlIHRvIEhJViBDLkRFOSI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iRGF0ZS90aW1lIG9mIHN1c3BlY3RlZCBleHBvc3VyZSB0byBISVYgLSBISVYuQy5ERTkiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkRhdGUvdGltZSBvZiBzdXNwZWN0ZWQgZXhwb3N1cmUgdG8gSElWIEMuREU5IFZhbHVlIjoKICAiRGF0ZS90aW1lIG9mIHN1c3BlY3RlZCBleHBvc3VyZSB0byBISVYgQy5ERTkiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgRGF0ZS90aW1lIG9mIHN1c3BlY3RlZCBleHBvc3VyZSB0byBISVYgQy5ERTkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxMCAtIEN1cnJlbnRseSBvbiBQckVQCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGhlIGNsaWVudCBpcyBjdXJyZW50bHkgdGFraW5nIFByRVAuIE9yYWwgcHJlLWV4cG9zdXJlIHByb3BoeWxheGlzIChQckVQKSBvZiBISVYgaXMgdGhlIHVzZSBvZiBBUlYgZHJ1Z3MgYnkgcGVvcGxlIHdobyBhcmUgbm90IGluZmVjdGVkIHdpdGggSElWIHRvIGJsb2NrIHRoZSBhY3F1aXNpdGlvbiBvZiBISVYuCiovCgovKkB0cmlnZ2VyZWRCeSBFbmNvdW50ZXIgd2l0aCBsb2NhdGlvbiA9IGNvbW11bml0eSBsZXZlbCB0ZXN0aW5nKi8KCmRlZmluZSAiUFJFUCBQcm9kdWN0IE9yYWwiOgogIGV4aXN0cyhbTWVkaWNhdGlvblN0YXRlbWVudF0gTVMKICAgIHdoZXJlIE1TLnN0YXR1cyA9ICdjb21wbGV0ZWQnCiAgICBhbmQgZXhpc3RzKE1TLnJlYXNvbkNvZGUgQyB3aGVyZSBDIH4gQ29uY2VwdHMuIkN1cnJlbnRseSBvbiBQckVQIikKICAgIGFuZCAoTVMubWVkaWNhdGlvbiB+IENvbmNlcHRzLiJUREYgKyBGVEMgLSBISVYuQy5ERTE4IiBvcgogICAgTVMubWVkaWNhdGlvbiB+IENvbmNlcHRzLiJUREYgLSBISVYuQy5ERTE5IiBvcgogICAgTVMubWVkaWNhdGlvbiB+IENvbmNlcHRzLiJUREYgKyAzVEMgLSBISVYuQy5ERTIwIiBvcgogICAgTVMubWVkaWNhdGlvbiB+IENvbmNlcHRzLiJPdGhlciBUREYtYmFzZWQgcmVnaW1lbiIpCiAgKQoKZGVmaW5lICJQUkVQIFByb2R1Y3QgbG9uZy1hY3RpbmcgZGV2aWNlIjoKICBleGlzdHMoW01lZGljYXRpb25TdGF0ZW1lbnRdIE1TCiAgICB3aGVyZSBNUy5zdGF0dXMgPSAnY29tcGxldGVkJwogICAgYW5kIGV4aXN0cyhNUy5yZWFzb25Db2RlIEMgd2hlcmUgQyB+IENvbmNlcHRzLiJDdXJyZW50bHkgb24gUHJFUCIpCiAgICBhbmQgTVMubWVkaWNhdGlvbiB+IENvbmNlcHRzLiJEYXBpdmlyaW5lIHZhZ2luYWwgcmluZyBEVlIgLSBISVYuQy5ERTIyIgogICkKCmRlZmluZSAiUFJFUCBQcm9kdWN0IGxvbmctYWN0aW5nIGluamVjdGFibGUiOgogIGV4aXN0cyhbTWVkaWNhdGlvblN0YXRlbWVudF0gTVMKICAgIHdoZXJlIE1TLnN0YXR1cyA9ICdjb21wbGV0ZWQnCiAgICBhbmQgZXhpc3RzKE1TLnJlYXNvbkNvZGUgQyB3aGVyZSBDIH4gQ29uY2VwdHMuIkN1cnJlbnRseSBvbiBQckVQIikKICAgIGFuZCBNUy5tZWRpY2F0aW9uIH4gQ29uY2VwdHMuIkNBQi1MQSAtIEhJVi5DLkRFMjMiCiAgKQogIApkZWZpbmUgIlBSRVAgZmlyc3QgdGltZSI6CiAgZXhpc3RzKFtNZWRpY2F0aW9uU3RhdGVtZW50XSBNUwogICAgd2hlcmUgTVMuc3RhdHVzID0gJ2NvbXBsZXRlZCcKICAgIGFuZCBleGlzdHMoTVMucmVhc29uQ29kZSBDIHdoZXJlIEMgfiBDb25jZXB0cy4iQ3VycmVudGx5IG9uIFByRVAiKQogICAgYW5kIGV4aXN0cyhNUy5zdGF0dXNSZWFzb24gU1Igd2hlcmUgU1IgfiBDb25jZXB0cy4iRmlyc3QtdGltZSB1c2VyIC0gSElWLkMuREUyNSIpCiAgKQoKZGVmaW5lICJQUkVQIENvbnRpbnVpbmcgdXNlciI6CiAgZXhpc3RzKFtNZWRpY2F0aW9uU3RhdGVtZW50XSBNUwogICAgd2hlcmUgTVMuc3RhdHVzID0gJ2NvbXBsZXRlZCcKICAgIGFuZCBleGlzdHMoTVMucmVhc29uQ29kZSBDIHdoZXJlIEMgfiBDb25jZXB0cy4iQ3VycmVudGx5IG9uIFByRVAiKQogICAgYW5kIGV4aXN0cyhNUy5zdGF0dXNSZWFzb24gU1Igd2hlcmUgU1IgfiBDb25jZXB0cy4iQ29udGludWluZyB1c2VyIikKICApCiAgCmRlZmluZSAiUFJFUCBSZXN0YXJ0aW5nIjoKICBleGlzdHMoW01lZGljYXRpb25TdGF0ZW1lbnRdIE1TCiAgICB3aGVyZSBNUy5zdGF0dXMgPSAnY29tcGxldGVkJwogICAgYW5kIGV4aXN0cyhNUy5yZWFzb25Db2RlIEMgd2hlcmUgQyB+IENvbmNlcHRzLiJDdXJyZW50bHkgb24gUHJFUCIpCiAgICBhbmQgZXhpc3RzKE1TLnN0YXR1c1JlYXNvbiBTUiB3aGVyZSBTUiB+IENvbmNlcHRzLiJSZXN0YXJ0aW5nIGZvbGxvd2luZyBhIHBlcmlvZCBvZiBub3QgdGFraW5nIFByRVAiKQogICkKCmRlZmluZSAiRGFpbHlfb3JhbF9QckVQIjoKICBleGlzdHMoW01lZGljYXRpb25TdGF0ZW1lbnRdIE1TCiAgICB3aGVyZSBNUy5zdGF0dXMgPSAnY29tcGxldGVkJwogICAgYW5kIGV4aXN0cyhNUy5yZWFzb25Db2RlIEMgd2hlcmUgQyB+IENvbmNlcHRzLiJDdXJyZW50bHkgb24gUHJFUCIpCiAgICBhbmQgZXhpc3RzKE1TLmRvc2FnZS5hZGRpdGlvbmFsSW5zdHJ1Y3Rpb24gQUkgd2hlcmUgQUkgfiBDb25jZXB0cy4iRGFpbHkgb3JhbCBQckVQIikKICApCgpkZWZpbmUgIkV2ZW50X2RyaXZlbl9QckVQIjoKICBleGlzdHMoW01lZGljYXRpb25TdGF0ZW1lbnRdIE1TCiAgICB3aGVyZSBNUy5zdGF0dXMgPSAnY29tcGxldGVkJwogICAgYW5kIGV4aXN0cyhNUy5yZWFzb25Db2RlIEMgd2hlcmUgQyB+IENvbmNlcHRzLiJDdXJyZW50bHkgb24gUHJFUCIpCiAgICBhbmQgZXhpc3RzKE1TLmRvc2FnZS5hZGRpdGlvbmFsSW5zdHJ1Y3Rpb24gQUkgd2hlcmUgQUkgfiBDb25jZXB0cy4iRXZlbnQtZHJpdmVuIFByRVAgMisxKzEiKSAKICApCgpkZWZpbmUgIm90aGVyX2Rvc2luZ19QckVQIjoKICBleGlzdHMoW01lZGljYXRpb25TdGF0ZW1lbnRdIE1TCiAgICB3aGVyZSBNUy5zdGF0dXMgPSAnY29tcGxldGVkJwogICAgYW5kIGV4aXN0cyhNUy5yZWFzb25Db2RlIEMgd2hlcmUgQyB+IENvbmNlcHRzLiJDdXJyZW50bHkgb24gUHJFUCIpCiAgICBhbmQgZXhpc3RzKE1TLmRvc2FnZS5hZGRpdGlvbmFsSW5zdHJ1Y3Rpb24gQUkgd2hlcmUgQUkgfiBDb25jZXB0cy4iT3RoZXIgUHJFUCBkb3NpbmcgdHlwZSIpIAogICkKCgoKLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkN1cnJlbnRseSBvbiBQckVQIjoKICBleGlzdHMgIkN1cnJlbnRseSBvbiBQckVQIE9ic2VydmF0aW9uIgpkZWZpbmUgIkN1cnJlbnRseSBvbiBQckVQIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJDdXJyZW50bHkgb24gUHJFUCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIEN1cnJlbnRseSBvbiBQckVQICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTEgLSBQckVQIGRvc2luZyB0eXBlCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogV2F5IGluIHdoaWNoIHByZS1leHBvc3VyZSBwcm9waHlsYXhpcyAoUHJFUCkgaXMgdGFrZW4gKGRhaWx5IG9yIGV2ZW50LWRyaXZlbikKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlByRVAgZG9zaW5nIHR5cGUiOgogIGV4aXN0cyAiUHJFUCBkb3NpbmcgdHlwZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJQckVQIGRvc2luZyB0eXBlIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJQckVQIGRvc2luZyB0eXBlIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFByRVAgZG9zaW5nIHR5cGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxMiAtIERhaWx5IG9yYWwgUHJFUApAYWN0aXZpdHk6IEhJVi5DMyBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFByZS1leHBvc3VyZSBwcm9waHlsYXhpcyAoUHJFUCkgaXMgdGFrZW4gZXZlcnkgZGF5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEYWlseSBvcmFsIFByRVAiOgogIGV4aXN0cyAiRGFpbHkgb3JhbCBQckVQIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRGFpbHkgb3JhbCBQckVQIE9ic2VydmF0aW9uIgpkZWZpbmUgIkRhaWx5IG9yYWwgUHJFUCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJEYWlseSBvcmFsIFByRVAiXQpkZWZpbmUgIkRhaWx5IG9yYWwgUHJFUCBPYnNlcnZhdGlvbiI6CiAgIlByRVAgZG9zaW5nIHR5cGUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkRhaWx5IG9yYWwgUHJFUCIKLyogRW5kIG9mIERhaWx5IG9yYWwgUHJFUCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTEzIC0gRXZlbnQtZHJpdmVuIFByRVAgMisxKzEKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBFdmVudC1kcml2ZW4gcHJlLWV4cG9zdXJlIHByb3BoeWxheGlzIChQckVQKSBpcyB0YWtlbiBvbiBhbiBldmVuLWRyaXZlbiBiYXNpcyAoMisxKzEpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJFdmVudC1kcml2ZW4gUHJFUCAyKzErMSI6CiAgZXhpc3RzICJFdmVudC1kcml2ZW4gUHJFUCAyKzErMSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkV2ZW50LWRyaXZlbiBQckVQIDIrMSsxIE9ic2VydmF0aW9uIgpkZWZpbmUgIkV2ZW50LWRyaXZlbiBQckVQIDIrMSsxIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkV2ZW50LWRyaXZlbiBQckVQIDIrMSsxIl0KZGVmaW5lICJFdmVudC1kcml2ZW4gUHJFUCAyKzErMSBPYnNlcnZhdGlvbiI6CiAgIlByRVAgZG9zaW5nIHR5cGUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkV2ZW50LWRyaXZlbiBQckVQIDIrMSsxIgovKiBFbmQgb2YgRXZlbnQtZHJpdmVuIFByRVAgMisxKzEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxNCAtIE90aGVyIFByRVAgZG9zaW5nIHR5cGUKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBPdGhlciBQckVQIGRvc2luZyB0eXBlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPdGhlciBQckVQIGRvc2luZyB0eXBlIjoKICBleGlzdHMgIk90aGVyIFByRVAgZG9zaW5nIHR5cGUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPdGhlciBQckVQIGRvc2luZyB0eXBlIE9ic2VydmF0aW9uIgpkZWZpbmUgIk90aGVyIFByRVAgZG9zaW5nIHR5cGUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iT3RoZXIgUHJFUCBkb3NpbmcgdHlwZSJdCmRlZmluZSAiT3RoZXIgUHJFUCBkb3NpbmcgdHlwZSBPYnNlcnZhdGlvbiI6CiAgIlByRVAgZG9zaW5nIHR5cGUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk90aGVyIFByRVAgZG9zaW5nIHR5cGUiCi8qIEVuZCBvZiBPdGhlciBQckVQIGRvc2luZyB0eXBlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTcgLSBDdXJyZW50IFByRVAgcmVnaW1lbgpAYWN0aXZpdHk6IEhJVi5DMyBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IEhJViBwcmUtZXhwb3N1cmUgcHJvcGh5bGF4aXMgKFByRVApIHJlZ2ltZW4KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkN1cnJlbnQgUHJFUCByZWdpbWVuIjoKICBleGlzdHMgIkN1cnJlbnQgUHJFUCByZWdpbWVuIE9ic2VydmF0aW9uIgpkZWZpbmUgIkN1cnJlbnQgUHJFUCByZWdpbWVuIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJDdXJyZW50IFByRVAgcmVnaW1lbiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBDdXJyZW50IFByRVAgcmVnaW1lbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE4IC0gVERGICsgRlRDCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVHJlYXRlZCB3aXRoIHRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlIChUREYpIGFuZCBlbXRyaWNpdGFiaW5lIChGVEMpIHByZS1leHBvc3VyZSBwcm9waHlsYXhpcyAoUHJFUCkgcmVnaW1lbiAob3JhbCBQckVQKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVERGICsgRlRDIEMuREUxOCI6CiAgZXhpc3RzICJUREYgKyBGVEMgQy5ERTE4IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVERGICsgRlRDIEMuREUxOCBPYnNlcnZhdGlvbiIKZGVmaW5lICJUREYgKyBGVEMgQy5ERTE4IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlRERiArIEZUQyAtIEhJVi5DLkRFMTgiXQpkZWZpbmUgIlRERiArIEZUQyBDLkRFMTggT2JzZXJ2YXRpb24iOgogICJDdXJyZW50IFByRVAgcmVnaW1lbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVERGICsgRlRDIC0gSElWLkMuREUxOCIKLyogRW5kIG9mIFRERiArIEZUQyBDLkRFMTggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxOSAtIFRERgpAYWN0aXZpdHk6IEhJVi5DMyBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRyZWF0ZWQgd2l0aCBzaW5nbGUtYWdlbnQgdGVub2ZvdmlyIGRpc29wcm94aWwgZnVtYXJhdGUgKFRERikgcHJlLWV4cG9zdXJlIHByb3BoeWxheGlzIChQckVQKSByZWdpbWVuIChvcmFsIFByRVApCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUREYgQy5ERTE5IjoKICBleGlzdHMgIlRERiBDLkRFMTkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJUREYgQy5ERTE5IE9ic2VydmF0aW9uIgpkZWZpbmUgIlRERiBDLkRFMTkgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVERGIC0gSElWLkMuREUxOSJdCmRlZmluZSAiVERGIEMuREUxOSBPYnNlcnZhdGlvbiI6CiAgIkN1cnJlbnQgUHJFUCByZWdpbWVuIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJUREYgLSBISVYuQy5ERTE5IgovKiBFbmQgb2YgVERGIEMuREUxOSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTIwIC0gVERGICsgM1RDCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVHJlYXRlZCB3aXRoIHRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlIChUREYpIGFuZCBsYW1pdnVkaW5lICgzVEMpIHByZS1leHBvc3VyZSBwcm9waHlsYXhpcyAoUHJFUCkgcmVnaW1lbiAob3JhbCBQckVQKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVERGICsgM1RDIEMuREUyMCI6CiAgZXhpc3RzICJUREYgKyAzVEMgQy5ERTIwIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVERGICsgM1RDIEMuREUyMCBPYnNlcnZhdGlvbiIKZGVmaW5lICJUREYgKyAzVEMgQy5ERTIwIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlRERiArIDNUQyAtIEhJVi5DLkRFMjAiXQpkZWZpbmUgIlRERiArIDNUQyBDLkRFMjAgT2JzZXJ2YXRpb24iOgogICJDdXJyZW50IFByRVAgcmVnaW1lbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVERGICsgM1RDIC0gSElWLkMuREUyMCIKLyogRW5kIG9mIFRERiArIDNUQyBDLkRFMjAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUyMSAtIE90aGVyIFRERi1iYXNlZCByZWdpbWVuCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVHJlYXRlZCB3aXRoIG90aGVyIHRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlIChUREYpLWJhc2VkIHJlZ2ltZW4gKG9yYWwgUHJFUCkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk90aGVyIFRERi1iYXNlZCByZWdpbWVuIjoKICBleGlzdHMgIk90aGVyIFRERi1iYXNlZCByZWdpbWVuIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiT3RoZXIgVERGLWJhc2VkIHJlZ2ltZW4gT2JzZXJ2YXRpb24iCmRlZmluZSAiT3RoZXIgVERGLWJhc2VkIHJlZ2ltZW4gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iT3RoZXIgVERGLWJhc2VkIHJlZ2ltZW4iXQpkZWZpbmUgIk90aGVyIFRERi1iYXNlZCByZWdpbWVuIE9ic2VydmF0aW9uIjoKICAiQ3VycmVudCBQckVQIHJlZ2ltZW4gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk90aGVyIFRERi1iYXNlZCByZWdpbWVuIgovKiBFbmQgb2YgT3RoZXIgVERGLWJhc2VkIHJlZ2ltZW4gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUyMiAtIERhcGl2aXJpbmUgdmFnaW5hbCByaW5nIERWUgpAYWN0aXZpdHk6IEhJVi5DMyBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IERhcGl2aXJpbmUgdmFnaW5hbCByaW5nIChEVlIpIGZvciBISVYgcHJldmVudGlvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGFwaXZpcmluZSB2YWdpbmFsIHJpbmcgRFZSIEMuREUyMiI6CiAgZXhpc3RzICJEYXBpdmlyaW5lIHZhZ2luYWwgcmluZyBEVlIgQy5ERTIyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRGFwaXZpcmluZSB2YWdpbmFsIHJpbmcgRFZSIEMuREUyMiBPYnNlcnZhdGlvbiIKZGVmaW5lICJEYXBpdmlyaW5lIHZhZ2luYWwgcmluZyBEVlIgQy5ERTIyIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkRhcGl2aXJpbmUgdmFnaW5hbCByaW5nIERWUiAtIEhJVi5DLkRFMjIiXQpkZWZpbmUgIkRhcGl2aXJpbmUgdmFnaW5hbCByaW5nIERWUiBDLkRFMjIgT2JzZXJ2YXRpb24iOgogICJDdXJyZW50IFByRVAgcmVnaW1lbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRGFwaXZpcmluZSB2YWdpbmFsIHJpbmcgRFZSIC0gSElWLkMuREUyMiIKLyogRW5kIG9mIERhcGl2aXJpbmUgdmFnaW5hbCByaW5nIERWUiBDLkRFMjIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUyMyAtIENBQi1MQQpAYWN0aXZpdHk6IEhJVi5DMyBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IExvbmctYWN0aW5nIGluamVjdGFibGUgY2Fib3RlZ3JhdmlyCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDQUItTEEgQy5ERTIzIjoKICBleGlzdHMgIkNBQi1MQSBDLkRFMjMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDQUItTEEgQy5ERTIzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNBQi1MQSBDLkRFMjMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ0FCLUxBIC0gSElWLkMuREUyMyJdCmRlZmluZSAiQ0FCLUxBIEMuREUyMyBPYnNlcnZhdGlvbiI6CiAgIkN1cnJlbnQgUHJFUCByZWdpbWVuIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDQUItTEEgLSBISVYuQy5ERTIzIgovKiBFbmQgb2YgQ0FCLUxBIEMuREUyMyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTI0IC0gRXhwZXJpZW5jZSB3aXRoIFByRVAKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGUgY2xpZW50J3MgZXhwZXJpZW5jZSBpbiB0YWtpbmcgUHJFUAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRXhwZXJpZW5jZSB3aXRoIFByRVAiOgogIGV4aXN0cyAiRXhwZXJpZW5jZSB3aXRoIFByRVAgT2JzZXJ2YXRpb24iCmRlZmluZSAiRXhwZXJpZW5jZSB3aXRoIFByRVAgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkV4cGVyaWVuY2Ugd2l0aCBQckVQIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEV4cGVyaWVuY2Ugd2l0aCBQckVQICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMjUgLSBGaXJzdC10aW1lIHVzZXIKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGUgY2xpZW50IGhhcyBuZXZlciB1c2VkIHByZS1leHBvc3VyZSBwcm9waHlsYXhpcyAoUHJFUCkgYmVmb3JlIChuYWl2ZSkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkZpcnN0LXRpbWUgdXNlciBDLkRFMjUiOgogIGV4aXN0cyAiRmlyc3QtdGltZSB1c2VyIEMuREUyNSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkZpcnN0LXRpbWUgdXNlciBDLkRFMjUgT2JzZXJ2YXRpb24iCmRlZmluZSAiRmlyc3QtdGltZSB1c2VyIEMuREUyNSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJGaXJzdC10aW1lIHVzZXIgLSBISVYuQy5ERTI1Il0KZGVmaW5lICJGaXJzdC10aW1lIHVzZXIgQy5ERTI1IE9ic2VydmF0aW9uIjoKICAiRXhwZXJpZW5jZSB3aXRoIFByRVAgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkZpcnN0LXRpbWUgdXNlciAtIEhJVi5DLkRFMjUiCi8qIEVuZCBvZiBGaXJzdC10aW1lIHVzZXIgQy5ERTI1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMjYgLSBDb250aW51aW5nIHVzZXIKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGUgY2xpZW50IGhhcyB1c2VkIFByRVAgYmVmb3JlIGFuZCBpcyBjb250aW51aW5nIHRvIHVzZSBQckVQCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDb250aW51aW5nIHVzZXIiOgogIGV4aXN0cyAiQ29udGludWluZyB1c2VyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ29udGludWluZyB1c2VyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNvbnRpbnVpbmcgdXNlciBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDb250aW51aW5nIHVzZXIiXQpkZWZpbmUgIkNvbnRpbnVpbmcgdXNlciBPYnNlcnZhdGlvbiI6CiAgIkV4cGVyaWVuY2Ugd2l0aCBQckVQIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDb250aW51aW5nIHVzZXIiCi8qIEVuZCBvZiBDb250aW51aW5nIHVzZXIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUyNyAtIFJlc3RhcnRpbmcgZm9sbG93aW5nIGEgcGVyaW9kIG9mIG5vdCB0YWtpbmcgUHJFUApAYWN0aXZpdHk6IEhJVi5DMyBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRoZSBjbGllbnQgaXMgcmVzdGFydGluZyBQckVQIGZvbGxvd2luZyBhIHBlcmlvZCBvZiBub3QgdGFraW5nIFByRVAKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlJlc3RhcnRpbmcgZm9sbG93aW5nIGEgcGVyaW9kIG9mIG5vdCB0YWtpbmcgUHJFUCI6CiAgZXhpc3RzICJSZXN0YXJ0aW5nIGZvbGxvd2luZyBhIHBlcmlvZCBvZiBub3QgdGFraW5nIFByRVAgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSZXN0YXJ0aW5nIGZvbGxvd2luZyBhIHBlcmlvZCBvZiBub3QgdGFraW5nIFByRVAgT2JzZXJ2YXRpb24iCmRlZmluZSAiUmVzdGFydGluZyBmb2xsb3dpbmcgYSBwZXJpb2Qgb2Ygbm90IHRha2luZyBQckVQIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlJlc3RhcnRpbmcgZm9sbG93aW5nIGEgcGVyaW9kIG9mIG5vdCB0YWtpbmcgUHJFUCJdCmRlZmluZSAiUmVzdGFydGluZyBmb2xsb3dpbmcgYSBwZXJpb2Qgb2Ygbm90IHRha2luZyBQckVQIE9ic2VydmF0aW9uIjoKICAiRXhwZXJpZW5jZSB3aXRoIFByRVAgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlJlc3RhcnRpbmcgZm9sbG93aW5nIGEgcGVyaW9kIG9mIG5vdCB0YWtpbmcgUHJFUCIKLyogRW5kIG9mIFJlc3RhcnRpbmcgZm9sbG93aW5nIGEgcGVyaW9kIG9mIG5vdCB0YWtpbmcgUHJFUCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTMxIC0gUEVQIGhpc3RvcnkKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGUgY2xpZW50J3MgaGlzdG9yeSBpbiB0YWtpbmcgcG9zdC1leHBvc3VyZSBwcm9waHlsYXhpcyAoUEVQKSBmb3IgSElWIHByZXZlbnRpb24KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBFUCBoaXN0b3J5IjoKICBleGlzdHMgIlBFUCBoaXN0b3J5IE9ic2VydmF0aW9uIgpkZWZpbmUgIlBFUCBoaXN0b3J5IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJQRVAgaGlzdG9yeSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBQRVAgaGlzdG9yeSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTMyIC0gRmlyc3QtdGltZSB1c2VyCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGhlIGNsaWVudCBoYXMgbmV2ZXIgdXNlZCBwb3N0LWV4cG9zdXJlIHByb3BoeWxheGlzIChQRVApIGJlZm9yZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRmlyc3QtdGltZSB1c2VyIEMuREUzMiI6CiAgZXhpc3RzICJGaXJzdC10aW1lIHVzZXIgQy5ERTMyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRmlyc3QtdGltZSB1c2VyIEMuREUzMiBPYnNlcnZhdGlvbiIKZGVmaW5lICJGaXJzdC10aW1lIHVzZXIgQy5ERTMyIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkZpcnN0LXRpbWUgdXNlciAtIEhJVi5DLkRFMzIiXQpkZWZpbmUgIkZpcnN0LXRpbWUgdXNlciBDLkRFMzIgT2JzZXJ2YXRpb24iOgogICJQRVAgaGlzdG9yeSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRmlyc3QtdGltZSB1c2VyIC0gSElWLkMuREUzMiIKLyogRW5kIG9mIEZpcnN0LXRpbWUgdXNlciBDLkRFMzIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUzMyAtIFJlcGVhdCB1c2VyCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGhlIGNsaWVudCBoYXMgdXNlZCBwb3N0LWV4cG9zdXJlIHByb3BoeWxheGlzIChQRVApIGJlZm9yZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmVwZWF0IHVzZXIiOgogIGV4aXN0cyAiUmVwZWF0IHVzZXIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSZXBlYXQgdXNlciBPYnNlcnZhdGlvbiIKZGVmaW5lICJSZXBlYXQgdXNlciBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJSZXBlYXQgdXNlciJdCmRlZmluZSAiUmVwZWF0IHVzZXIgT2JzZXJ2YXRpb24iOgogICJQRVAgaGlzdG9yeSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUmVwZWF0IHVzZXIiCi8qIEVuZCBvZiBSZXBlYXQgdXNlciAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTM1IC0gRGF0ZSBjbGllbnQgY29tcGxldGVzIFBFUCBjb3Vyc2UKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBEYXRlIGNsaWVudCBjb21wbGV0ZXMgUEVQIGNvdXJzZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGF0ZSBjbGllbnQgY29tcGxldGVzIFBFUCBjb3Vyc2UiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkRhdGUgY2xpZW50IGNvbXBsZXRlcyBQRVAgY291cnNlIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJEYXRlIGNsaWVudCBjb21wbGV0ZXMgUEVQIGNvdXJzZSBWYWx1ZSI6CiAgIkRhdGUgY2xpZW50IGNvbXBsZXRlcyBQRVAgY291cnNlIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIERhdGUgY2xpZW50IGNvbXBsZXRlcyBQRVAgY291cnNlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMzYgLSBTaWducyBvZiBzdWJzdGFudGlhbCByaXNrIG9mIEhJViBpbmZlY3Rpb24KQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBTaWducyB0aGUgY2xpZW50IGlzIGF0IGEgc3Vic3RhbnRpYWwgcmlzayBvZiBISVYgaW5mZWN0aW9uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTaWducyBvZiBzdWJzdGFudGlhbCByaXNrIG9mIEhJViBpbmZlY3Rpb24gQy5ERTM2IjoKICBleGlzdHMgIlNpZ25zIG9mIHN1YnN0YW50aWFsIHJpc2sgb2YgSElWIGluZmVjdGlvbiBDLkRFMzYgT2JzZXJ2YXRpb24iCmRlZmluZSAiU2lnbnMgb2Ygc3Vic3RhbnRpYWwgcmlzayBvZiBISVYgaW5mZWN0aW9uIEMuREUzNiBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iU2lnbnMgb2Ygc3Vic3RhbnRpYWwgcmlzayBvZiBISVYgaW5mZWN0aW9uIC0gSElWLkMuREUzNiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBTaWducyBvZiBzdWJzdGFudGlhbCByaXNrIG9mIEhJViBpbmZlY3Rpb24gQy5ERTM2ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMzcgLSBObyBjb25kb20gdXNlIGR1cmluZyBzZXggd2l0aCBtb3JlIHRoYW4gb25lIHBhcnRuZXIgaW4gdGhlIHBhc3QgNiBtb250aHMKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBSZWNlbnQgdmFnaW5hbCBvciBhbmFsIHNleHVhbCBpbnRlcmNvdXJzZSB3aXRob3V0IGEgY29uZG9tIHdpdGggbW9yZSB0aGFuIG9uZSBwYXJ0bmVyCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJObyBjb25kb20gdXNlIGR1cmluZyBzZXggd2l0aCBtb3JlIHRoYW4gb25lIHBhcnRuZXIgaW4gdGhlIHBhc3QgNiBtb250aHMgQy5ERTM3IjoKICBleGlzdHMgIk5vIGNvbmRvbSB1c2UgZHVyaW5nIHNleCB3aXRoIG1vcmUgdGhhbiBvbmUgcGFydG5lciBpbiB0aGUgcGFzdCA2IG1vbnRocyBDLkRFMzcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJObyBjb25kb20gdXNlIGR1cmluZyBzZXggd2l0aCBtb3JlIHRoYW4gb25lIHBhcnRuZXIgaW4gdGhlIHBhc3QgNiBtb250aHMgQy5ERTM3IE9ic2VydmF0aW9uIgpkZWZpbmUgIk5vIGNvbmRvbSB1c2UgZHVyaW5nIHNleCB3aXRoIG1vcmUgdGhhbiBvbmUgcGFydG5lciBpbiB0aGUgcGFzdCA2IG1vbnRocyBDLkRFMzcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTm8gY29uZG9tIHVzZSBkdXJpbmcgc2V4IHdpdGggbW9yZSB0aGFuIG9uZSBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIC0gSElWLkMuREUzNyJdCmRlZmluZSAiTm8gY29uZG9tIHVzZSBkdXJpbmcgc2V4IHdpdGggbW9yZSB0aGFuIG9uZSBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIEMuREUzNyBPYnNlcnZhdGlvbiI6CiAgIlNpZ25zIG9mIHN1YnN0YW50aWFsIHJpc2sgb2YgSElWIGluZmVjdGlvbiBDLkRFMzYgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5vIGNvbmRvbSB1c2UgZHVyaW5nIHNleCB3aXRoIG1vcmUgdGhhbiBvbmUgcGFydG5lciBpbiB0aGUgcGFzdCA2IG1vbnRocyAtIEhJVi5DLkRFMzciCi8qIEVuZCBvZiBObyBjb25kb20gdXNlIGR1cmluZyBzZXggd2l0aCBtb3JlIHRoYW4gb25lIHBhcnRuZXIgaW4gdGhlIHBhc3QgNiBtb250aHMgQy5ERTM3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMzggLSBTVEkgaW4gdGhlIHBhc3QgNiBtb250aHMKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBBIHJlY2VudCBoaXN0b3J5IChpbiB0aGUgbGFzdCA2IG1vbnRocykgb2YgYSBzZXh1YWxseSB0cmFuc21pdHRlZCBpbmZlY3Rpb24gKFNUSSApIGJ5IGxhYm9yYXRvcnkgdGVzdGluZywgc2VsZi1yZXBvcnQgb3Igc3luZHJvbWljIFNUSSB0cmVhdG1lbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlNUSSBpbiB0aGUgcGFzdCA2IG1vbnRocyBDLkRFMzgiOgogIGV4aXN0cyAiU1RJIGluIHRoZSBwYXN0IDYgbW9udGhzIEMuREUzOCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlNUSSBpbiB0aGUgcGFzdCA2IG1vbnRocyBDLkRFMzggT2JzZXJ2YXRpb24iCmRlZmluZSAiU1RJIGluIHRoZSBwYXN0IDYgbW9udGhzIEMuREUzOCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTVEkgaW4gdGhlIHBhc3QgNiBtb250aHMgLSBISVYuQy5ERTM4Il0KZGVmaW5lICJTVEkgaW4gdGhlIHBhc3QgNiBtb250aHMgQy5ERTM4IE9ic2VydmF0aW9uIjoKICAiU2lnbnMgb2Ygc3Vic3RhbnRpYWwgcmlzayBvZiBISVYgaW5mZWN0aW9uIEMuREUzNiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU1RJIGluIHRoZSBwYXN0IDYgbW9udGhzIC0gSElWLkMuREUzOCIKLyogRW5kIG9mIFNUSSBpbiB0aGUgcGFzdCA2IG1vbnRocyBDLkRFMzggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUzOSAtIEEgc2V4dWFsIHBhcnRuZXIgaW4gdGhlIHBhc3QgNiBtb250aHMgaGFkIG9uZSBvciBtb3JlIEhJViByaXNrIGZhY3RvcnMKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBBIHJlY2VudCBzZXggcGFydG5lciBvZiB0aGUgY2xpZW50IGhhZCBISVYgcmlzayBmYWN0b3JzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBIHNleHVhbCBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIGhhZCBvbmUgb3IgbW9yZSBISVYgcmlzayBmYWN0b3JzIEMuREUzOSI6CiAgZXhpc3RzICJBIHNleHVhbCBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIGhhZCBvbmUgb3IgbW9yZSBISVYgcmlzayBmYWN0b3JzIEMuREUzOSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkEgc2V4dWFsIHBhcnRuZXIgaW4gdGhlIHBhc3QgNiBtb250aHMgaGFkIG9uZSBvciBtb3JlIEhJViByaXNrIGZhY3RvcnMgQy5ERTM5IE9ic2VydmF0aW9uIgpkZWZpbmUgIkEgc2V4dWFsIHBhcnRuZXIgaW4gdGhlIHBhc3QgNiBtb250aHMgaGFkIG9uZSBvciBtb3JlIEhJViByaXNrIGZhY3RvcnMgQy5ERTM5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkEgc2V4dWFsIHBhcnRuZXIgaW4gdGhlIHBhc3QgNiBtb250aHMgaGFkIG9uZSBvciBtb3JlIEhJViByaXNrIGZhY3RvcnMgLSBISVYuQy5ERTM5Il0KZGVmaW5lICJBIHNleHVhbCBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIGhhZCBvbmUgb3IgbW9yZSBISVYgcmlzayBmYWN0b3JzIEMuREUzOSBPYnNlcnZhdGlvbiI6CiAgIlNpZ25zIG9mIHN1YnN0YW50aWFsIHJpc2sgb2YgSElWIGluZmVjdGlvbiBDLkRFMzYgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkEgc2V4dWFsIHBhcnRuZXIgaW4gdGhlIHBhc3QgNiBtb250aHMgaGFkIG9uZSBvciBtb3JlIEhJViByaXNrIGZhY3RvcnMgLSBISVYuQy5ERTM5IgovKiBFbmQgb2YgQSBzZXh1YWwgcGFydG5lciBpbiB0aGUgcGFzdCA2IG1vbnRocyBoYWQgb25lIG9yIG1vcmUgSElWIHJpc2sgZmFjdG9ycyBDLkRFMzkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREU0MCAtIFByRVAgcmVxdWVzdGVkIGJ5IGNsaWVudApAYWN0aXZpdHk6IEhJVi5DMyBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCBpcyByZXF1ZXN0aW5nIFByRVAsIHJlZmxlY3RpbmcgYSBkZWNpc2lvbi1tYWtpbmcgcHJvY2VzcyBoYXMgYWxyZWFkeSB0YWtlbiBwbGFjZSBhbmQgc3VnZ2VzdGluZyBvZiBzdWJzdGFudGlhbCByaXNrIG9mIEhJVgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUHJFUCByZXF1ZXN0ZWQgYnkgY2xpZW50IEMuREU0MCI6CiAgZXhpc3RzICJQckVQIHJlcXVlc3RlZCBieSBjbGllbnQgQy5ERTQwIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUHJFUCByZXF1ZXN0ZWQgYnkgY2xpZW50IEMuREU0MCBPYnNlcnZhdGlvbiIKZGVmaW5lICJQckVQIHJlcXVlc3RlZCBieSBjbGllbnQgQy5ERTQwIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlByRVAgcmVxdWVzdGVkIGJ5IGNsaWVudCAtIEhJVi5DLkRFNDAiXQpkZWZpbmUgIlByRVAgcmVxdWVzdGVkIGJ5IGNsaWVudCBDLkRFNDAgT2JzZXJ2YXRpb24iOgogICJTaWducyBvZiBzdWJzdGFudGlhbCByaXNrIG9mIEhJViBpbmZlY3Rpb24gQy5ERTM2IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQckVQIHJlcXVlc3RlZCBieSBjbGllbnQgLSBISVYuQy5ERTQwIgovKiBFbmQgb2YgUHJFUCByZXF1ZXN0ZWQgYnkgY2xpZW50IEMuREU0MCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTQ2IC0gQWN1dGUgSElWIGluZmVjdGlvbiBzeW1wdG9tcwpAYWN0aXZpdHk6IEhJVi5DMyBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFN5bXB0b21zIHRoYXQgY291bGQgc3VnZ2VzdCBhbiBhY3V0ZSBISVYgaW5mZWN0aW9uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBY3V0ZSBISVYgaW5mZWN0aW9uIHN5bXB0b21zIEMuREU0NiI6CiAgZXhpc3RzICJBY3V0ZSBISVYgaW5mZWN0aW9uIHN5bXB0b21zIEMuREU0NiBPYnNlcnZhdGlvbiIKZGVmaW5lICJBY3V0ZSBISVYgaW5mZWN0aW9uIHN5bXB0b21zIEMuREU0NiBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQWN1dGUgSElWIGluZmVjdGlvbiBzeW1wdG9tcyAtIEhJVi5DLkRFNDYiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgQWN1dGUgSElWIGluZmVjdGlvbiBzeW1wdG9tcyBDLkRFNDYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREU0NyAtIEZldmVyCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSBhIGZldmVyCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJGZXZlciI6CiAgZXhpc3RzICJGZXZlciBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkZldmVyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkZldmVyIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkZldmVyIl0KZGVmaW5lICJGZXZlciBPYnNlcnZhdGlvbiI6CiAgIkFjdXRlIEhJViBpbmZlY3Rpb24gc3ltcHRvbXMgQy5ERTQ2IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJGZXZlciIKLyogRW5kIG9mIEZldmVyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFNDggLSBTb3JlIHRocm9hdApAYWN0aXZpdHk6IEhJVi5DMyBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgYSBzb3JlIHRocm9hdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU29yZSB0aHJvYXQiOgogIGV4aXN0cyAiU29yZSB0aHJvYXQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJTb3JlIHRocm9hdCBPYnNlcnZhdGlvbiIKZGVmaW5lICJTb3JlIHRocm9hdCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTb3JlIHRocm9hdCJdCmRlZmluZSAiU29yZSB0aHJvYXQgT2JzZXJ2YXRpb24iOgogICJBY3V0ZSBISVYgaW5mZWN0aW9uIHN5bXB0b21zIEMuREU0NiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU29yZSB0aHJvYXQiCi8qIEVuZCBvZiBTb3JlIHRocm9hdCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTQ5IC0gQWNoZXMKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIGFjaGVzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBY2hlcyI6CiAgZXhpc3RzICJBY2hlcyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkFjaGVzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFjaGVzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFjaGVzIl0KZGVmaW5lICJBY2hlcyBPYnNlcnZhdGlvbiI6CiAgIkFjdXRlIEhJViBpbmZlY3Rpb24gc3ltcHRvbXMgQy5ERTQ2IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBY2hlcyIKLyogRW5kIG9mIEFjaGVzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFNTAgLSBQYWlucwpAYWN0aXZpdHk6IEhJVi5DMyBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgcGFpbnMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBhaW5zIjoKICBleGlzdHMgIlBhaW5zIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUGFpbnMgT2JzZXJ2YXRpb24iCmRlZmluZSAiUGFpbnMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUGFpbnMiXQpkZWZpbmUgIlBhaW5zIE9ic2VydmF0aW9uIjoKICAiQWN1dGUgSElWIGluZmVjdGlvbiBzeW1wdG9tcyBDLkRFNDYgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlBhaW5zIgovKiBFbmQgb2YgUGFpbnMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREU1MSAtIFN3b2xsZW4gZ2xhbmRzCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSBzd29sbGVuIGdsYW5kcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU3dvbGxlbiBnbGFuZHMiOgogIGV4aXN0cyAiU3dvbGxlbiBnbGFuZHMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJTd29sbGVuIGdsYW5kcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJTd29sbGVuIGdsYW5kcyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTd29sbGVuIGdsYW5kcyJdCmRlZmluZSAiU3dvbGxlbiBnbGFuZHMgT2JzZXJ2YXRpb24iOgogICJBY3V0ZSBISVYgaW5mZWN0aW9uIHN5bXB0b21zIEMuREU0NiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU3dvbGxlbiBnbGFuZHMiCi8qIEVuZCBvZiBTd29sbGVuIGdsYW5kcyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTUyIC0gTW91dGggc29yZXMKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIGEgbW91dGggc29yZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk1vdXRoIHNvcmVzIjoKICBleGlzdHMgIk1vdXRoIHNvcmVzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTW91dGggc29yZXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiTW91dGggc29yZXMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTW91dGggc29yZXMiXQpkZWZpbmUgIk1vdXRoIHNvcmVzIE9ic2VydmF0aW9uIjoKICAiQWN1dGUgSElWIGluZmVjdGlvbiBzeW1wdG9tcyBDLkRFNDYgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk1vdXRoIHNvcmVzIgovKiBFbmQgb2YgTW91dGggc29yZXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREU1MyAtIEhlYWRhY2hlcwpAYWN0aXZpdHk6IEhJVi5DMyBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgYSBoZWFkYWNoZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhlYWRhY2hlcyI6CiAgZXhpc3RzICJIZWFkYWNoZXMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJIZWFkYWNoZXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiSGVhZGFjaGVzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhlYWRhY2hlcyJdCmRlZmluZSAiSGVhZGFjaGVzIE9ic2VydmF0aW9uIjoKICAiQWN1dGUgSElWIGluZmVjdGlvbiBzeW1wdG9tcyBDLkRFNDYgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkhlYWRhY2hlcyIKLyogRW5kIG9mIEhlYWRhY2hlcyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTU0IC0gUmFzaApAYWN0aXZpdHk6IEhJVi5DMyBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgYSByYXNoCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSYXNoIjoKICBleGlzdHMgIlJhc2ggQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSYXNoIE9ic2VydmF0aW9uIgpkZWZpbmUgIlJhc2ggQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUmFzaCJdCmRlZmluZSAiUmFzaCBPYnNlcnZhdGlvbiI6CiAgIkFjdXRlIEhJViBpbmZlY3Rpb24gc3ltcHRvbXMgQy5ERTQ2IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJSYXNoIgovKiBFbmQgb2YgUmFzaCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTU1IC0gU2V4IHBhcnRuZXJzIEhJViB0cmVhdG1lbnQgc3RhdHVzCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVHJlYXRtZW50IGFkaGVyZW5jZSBvZiBjbGllbnQncyBzZXggcGFydG5lciBmb3IgcGFydG5lcnMgdGhhdCBhcmUgSElWLXBvc2l0aXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZXggcGFydG5lcnMgSElWIHRyZWF0bWVudCBzdGF0dXMiOgogIGV4aXN0cyAiU2V4IHBhcnRuZXJzIEhJViB0cmVhdG1lbnQgc3RhdHVzIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNleCBwYXJ0bmVycyBISVYgdHJlYXRtZW50IHN0YXR1cyBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iU2V4IHBhcnRuZXJzIEhJViB0cmVhdG1lbnQgc3RhdHVzIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFNleCBwYXJ0bmVycyBISVYgdHJlYXRtZW50IHN0YXR1cyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTU2IC0gTm90IG9uIEFSVApAYWN0aXZpdHk6IEhJVi5DMyBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFNleCBwYXJ0bmVyIGlzIEhJVi1wb3NpdGl2ZSBhbmQgbm90IG9uIEFSVAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTm90IG9uIEFSVCI6CiAgZXhpc3RzICJOb3Qgb24gQVJUIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTm90IG9uIEFSVCBPYnNlcnZhdGlvbiIKZGVmaW5lICJOb3Qgb24gQVJUIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5vdCBvbiBBUlQiXQpkZWZpbmUgIk5vdCBvbiBBUlQgT2JzZXJ2YXRpb24iOgogICJTZXggcGFydG5lcnMgSElWIHRyZWF0bWVudCBzdGF0dXMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5vdCBvbiBBUlQiCi8qIEVuZCBvZiBOb3Qgb24gQVJUICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFNTcgLSBPbiBBUlQgbGVzcyB0aGFuIDYgbW9udGhzCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogU2V4IHBhcnRuZXIgaXMgSElWLXBvc2l0aXZlIGFuZCBpcyBvbiBBUlQgbGVzcyB0aGFuIDYgbW9udGhzLiBBUlQgbWF5IHRha2UgdXAgdG8gNiBtb250aHMgdG8gc3VwcHJlc3MgdmlyYWwgbG9hZC4gSW4gc3R1ZGllcyBvZiBzZXJvZGlzY29yZGFudCBjb3VwbGVzLCBwcmUtZXhwb3N1cmUgcHJvcGh5bGF4aXMgKFByRVApIGhhcyBwcm92aWRlZCBhIHVzZWZ1bCBicmlkZ2UgdG8gZnVsbCB2aXJhbCBzdXBwcmVzc2lvbiBieSB0aGUgcGFydG5lciBkdXJpbmcgdGhhdCB0aW1lLgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT24gQVJUIGxlc3MgdGhhbiA2IG1vbnRocyI6CiAgZXhpc3RzICJPbiBBUlQgbGVzcyB0aGFuIDYgbW9udGhzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiT24gQVJUIGxlc3MgdGhhbiA2IG1vbnRocyBPYnNlcnZhdGlvbiIKZGVmaW5lICJPbiBBUlQgbGVzcyB0aGFuIDYgbW9udGhzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk9uIEFSVCBsZXNzIHRoYW4gNiBtb250aHMiXQpkZWZpbmUgIk9uIEFSVCBsZXNzIHRoYW4gNiBtb250aHMgT2JzZXJ2YXRpb24iOgogICJTZXggcGFydG5lcnMgSElWIHRyZWF0bWVudCBzdGF0dXMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk9uIEFSVCBsZXNzIHRoYW4gNiBtb250aHMiCi8qIEVuZCBvZiBPbiBBUlQgbGVzcyB0aGFuIDYgbW9udGhzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFNTggLSBQYXJ0bmVyIGhhcyBzdXNwZWN0ZWQgbG93IGFkaGVyZW5jZSB0byBBUlQKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBTZXggcGFydG5lciBpcyBISVYtcG9zaXRpdmUgYW5kIGlzIHN1c3BlY3RlZCB0byBoYXZlIGxvdyBhZGhlcmVuY2UgdG8gQVJULiBUaGVyZSBoYXZlIGJlZW4gZ2FwcyBpbiB0aGUgcGFydG5lcidzIHRyZWF0bWVudCBhZGhlcmVuY2Ugb3IgdGhlIGNvdXBsZSBpcyBub3QgY29tbXVuaWNhdGluZyBvcGVubHkgYWJvdXQgdHJlYXRtZW50IGFkaGVyZW5jZSBhbmQgdmlyYWwgbG9hZCB0ZXN0IHJlc3VsdHMuCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQYXJ0bmVyIGhhcyBzdXNwZWN0ZWQgbG93IGFkaGVyZW5jZSB0byBBUlQiOgogIGV4aXN0cyAiUGFydG5lciBoYXMgc3VzcGVjdGVkIGxvdyBhZGhlcmVuY2UgdG8gQVJUIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUGFydG5lciBoYXMgc3VzcGVjdGVkIGxvdyBhZGhlcmVuY2UgdG8gQVJUIE9ic2VydmF0aW9uIgpkZWZpbmUgIlBhcnRuZXIgaGFzIHN1c3BlY3RlZCBsb3cgYWRoZXJlbmNlIHRvIEFSVCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQYXJ0bmVyIGhhcyBzdXNwZWN0ZWQgbG93IGFkaGVyZW5jZSB0byBBUlQiXQpkZWZpbmUgIlBhcnRuZXIgaGFzIHN1c3BlY3RlZCBsb3cgYWRoZXJlbmNlIHRvIEFSVCBPYnNlcnZhdGlvbiI6CiAgIlNleCBwYXJ0bmVycyBISVYgdHJlYXRtZW50IHN0YXR1cyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUGFydG5lciBoYXMgc3VzcGVjdGVkIGxvdyBhZGhlcmVuY2UgdG8gQVJUIgovKiBFbmQgb2YgUGFydG5lciBoYXMgc3VzcGVjdGVkIGxvdyBhZGhlcmVuY2UgdG8gQVJUICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFNTkgLSBQYXJ0bmVyIGlzIG5vdCB2aXJhbGx5IHN1cHByZXNzZWQKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBTZXggcGFydG5lciBpcyBISVYtcG9zaXRpdmUgYW5kIG5vdCB2aXJhbGx5IHN1cHByZXNzZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBhcnRuZXIgaXMgbm90IHZpcmFsbHkgc3VwcHJlc3NlZCI6CiAgZXhpc3RzICJQYXJ0bmVyIGlzIG5vdCB2aXJhbGx5IHN1cHByZXNzZWQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQYXJ0bmVyIGlzIG5vdCB2aXJhbGx5IHN1cHByZXNzZWQgT2JzZXJ2YXRpb24iCmRlZmluZSAiUGFydG5lciBpcyBub3QgdmlyYWxseSBzdXBwcmVzc2VkIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlBhcnRuZXIgaXMgbm90IHZpcmFsbHkgc3VwcHJlc3NlZCJdCmRlZmluZSAiUGFydG5lciBpcyBub3QgdmlyYWxseSBzdXBwcmVzc2VkIE9ic2VydmF0aW9uIjoKICAiU2V4IHBhcnRuZXJzIEhJViB0cmVhdG1lbnQgc3RhdHVzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQYXJ0bmVyIGlzIG5vdCB2aXJhbGx5IHN1cHByZXNzZWQiCi8qIEVuZCBvZiBQYXJ0bmVyIGlzIG5vdCB2aXJhbGx5IHN1cHByZXNzZWQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREU2MCAtIFBhcnRuZXIgaXMgdmlyYWxseSBzdXBwcmVzc2VkIGFuZCBoYXMgYmVlbiBvbiBBUlQgZm9yIDYgbW9udGhzIG9yIG1vcmUKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBTZXggcGFydG5lciBpcyBISVYtcG9zaXRpdmUgYW5kIHZpcmFsbHkgc3VwcHJlc3NlZCB3aXRoIDYgbW9udGhzIG9yIG1vcmUgb24gQVJUCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQYXJ0bmVyIGlzIHZpcmFsbHkgc3VwcHJlc3NlZCBhbmQgaGFzIGJlZW4gb24gQVJUIGZvciA2IG1vbnRocyBvciBtb3JlIjoKICBleGlzdHMgIlBhcnRuZXIgaXMgdmlyYWxseSBzdXBwcmVzc2VkIGFuZCBoYXMgYmVlbiBvbiBBUlQgZm9yIDYgbW9udGhzIG9yIG1vcmUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQYXJ0bmVyIGlzIHZpcmFsbHkgc3VwcHJlc3NlZCBhbmQgaGFzIGJlZW4gb24gQVJUIGZvciA2IG1vbnRocyBvciBtb3JlIE9ic2VydmF0aW9uIgpkZWZpbmUgIlBhcnRuZXIgaXMgdmlyYWxseSBzdXBwcmVzc2VkIGFuZCBoYXMgYmVlbiBvbiBBUlQgZm9yIDYgbW9udGhzIG9yIG1vcmUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUGFydG5lciBpcyB2aXJhbGx5IHN1cHByZXNzZWQgYW5kIGhhcyBiZWVuIG9uIEFSVCBmb3IgNiBtb250aHMgb3IgbW9yZSJdCmRlZmluZSAiUGFydG5lciBpcyB2aXJhbGx5IHN1cHByZXNzZWQgYW5kIGhhcyBiZWVuIG9uIEFSVCBmb3IgNiBtb250aHMgb3IgbW9yZSBPYnNlcnZhdGlvbiI6CiAgIlNleCBwYXJ0bmVycyBISVYgdHJlYXRtZW50IHN0YXR1cyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUGFydG5lciBpcyB2aXJhbGx5IHN1cHByZXNzZWQgYW5kIGhhcyBiZWVuIG9uIEFSVCBmb3IgNiBtb250aHMgb3IgbW9yZSIKLyogRW5kIG9mIFBhcnRuZXIgaXMgdmlyYWxseSBzdXBwcmVzc2VkIGFuZCBoYXMgYmVlbiBvbiBBUlQgZm9yIDYgbW9udGhzIG9yIG1vcmUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREU2MSAtIFN1aXRhYmxlIGZvciBQckVQCkBhY3Rpdml0eTogSElWLkM4IFN1aXRhYmxlIGZvciBQckVQIG9yIFBFUD8KQGRlc2NyaXB0aW9uOiBUaGUgY2xpZW50IGlzIHN1aXRhYmxlIGZvciBQckVQCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTdWl0YWJsZSBmb3IgUHJFUCI6CiAgZXhpc3RzICJTdWl0YWJsZSBmb3IgUHJFUCBPYnNlcnZhdGlvbiIKZGVmaW5lICJTdWl0YWJsZSBmb3IgUHJFUCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iU3VpdGFibGUgZm9yIFByRVAiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBTdWl0YWJsZSBmb3IgUHJFUCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTc0IC0gRGF0ZSBtZWRpY2F0aW9ucyBwcmVzY3JpYmVkCkBhY3Rpdml0eTogSElWLkMyMyBQcmVzY3JpYmUgb3IgYWRtaW5pc3RlciBQckVQIG9yIFBFUApAZGVzY3JpcHRpb246IERhdGUgdGhlIGNsaWVudCB3YXMgcHJlc2NyaWJlZCBtZWRpY2F0aW9ucwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGF0ZSBtZWRpY2F0aW9ucyBwcmVzY3JpYmVkIEMuREU3NCI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iRGF0ZSBtZWRpY2F0aW9ucyBwcmVzY3JpYmVkIC0gSElWLkMuREU3NCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRGF0ZSBtZWRpY2F0aW9ucyBwcmVzY3JpYmVkIEMuREU3NCBWYWx1ZSI6CiAgIkRhdGUgbWVkaWNhdGlvbnMgcHJlc2NyaWJlZCBDLkRFNzQiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgRGF0ZSBtZWRpY2F0aW9ucyBwcmVzY3JpYmVkIEMuREU3NCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTc1IC0gTWVkaWNhdGlvbnMgcHJlc2NyaWJlZApAYWN0aXZpdHk6IEhJVi5DMjMgUHJlc2NyaWJlIG9yIGFkbWluaXN0ZXIgUHJFUCBvciBQRVAKQGRlc2NyaXB0aW9uOiBNZWRpY2F0aW9ucyB0aGUgY2xpZW50IHdhcyBwcmVzY3JpYmVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJNZWRpY2F0aW9ucyBwcmVzY3JpYmVkIEMuREU3NSI6CiAgZXhpc3RzICJNZWRpY2F0aW9ucyBwcmVzY3JpYmVkIEMuREU3NSBPYnNlcnZhdGlvbiIKZGVmaW5lICJNZWRpY2F0aW9ucyBwcmVzY3JpYmVkIEMuREU3NSBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iTWVkaWNhdGlvbnMgcHJlc2NyaWJlZCAtIEhJVi5DLkRFNzUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgTWVkaWNhdGlvbnMgcHJlc2NyaWJlZCBDLkRFNzUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREU3NiAtIFByRVAgZm9yIEhJViBwcmV2ZW50aW9uCkBhY3Rpdml0eTogSElWLkMyMyBQcmVzY3JpYmUgb3IgYWRtaW5pc3RlciBQckVQIG9yIFBFUApAZGVzY3JpcHRpb246IENsaWVudCB3YXMgcHJlc2NyaWJlZCBwcmUtZXhwb3N1cmUgcHJvcGh5bGF4aXMgKFByRVApIGZvciBISVYgcHJldmVudGlvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUHJFUCBmb3IgSElWIHByZXZlbnRpb24iOgogIGV4aXN0cyAiUHJFUCBmb3IgSElWIHByZXZlbnRpb24gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQckVQIGZvciBISVYgcHJldmVudGlvbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJQckVQIGZvciBISVYgcHJldmVudGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQckVQIGZvciBISVYgcHJldmVudGlvbiJdCmRlZmluZSAiUHJFUCBmb3IgSElWIHByZXZlbnRpb24gT2JzZXJ2YXRpb24iOgogICJNZWRpY2F0aW9ucyBwcmVzY3JpYmVkIEMuREU3NSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHJFUCBmb3IgSElWIHByZXZlbnRpb24iCi8qIEVuZCBvZiBQckVQIGZvciBISVYgcHJldmVudGlvbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTc3IC0gUEVQIGZvciBISVYgcHJldmVudGlvbgpAYWN0aXZpdHk6IEhJVi5DMjMgUHJlc2NyaWJlIG9yIGFkbWluaXN0ZXIgUHJFUCBvciBQRVAKQGRlc2NyaXB0aW9uOiBDbGllbnQgd2FzIHByZXNjcmliZWQgcG9zdC1leHBvc3VyZSBwcm9waHlsYXhpcyAoUEVQKSBmb3IgSElWIHByZXZlbnRpb24KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBFUCBmb3IgSElWIHByZXZlbnRpb24iOgogIGV4aXN0cyAiUEVQIGZvciBISVYgcHJldmVudGlvbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlBFUCBmb3IgSElWIHByZXZlbnRpb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiUEVQIGZvciBISVYgcHJldmVudGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQRVAgZm9yIEhJViBwcmV2ZW50aW9uIl0KZGVmaW5lICJQRVAgZm9yIEhJViBwcmV2ZW50aW9uIE9ic2VydmF0aW9uIjoKICAiTWVkaWNhdGlvbnMgcHJlc2NyaWJlZCBDLkRFNzUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlBFUCBmb3IgSElWIHByZXZlbnRpb24iCi8qIEVuZCBvZiBQRVAgZm9yIEhJViBwcmV2ZW50aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFNzggLSBPdGhlcgpAYWN0aXZpdHk6IEhJVi5DMjMgUHJlc2NyaWJlIG9yIGFkbWluaXN0ZXIgUHJFUCBvciBQRVAKQGRlc2NyaXB0aW9uOiBDbGllbnQgd2FzIHByZXNjcmliZWQgb3RoZXIgbWVkaWNhdGlvbnMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk90aGVyIEMuREU3OCI6CiAgZXhpc3RzICJPdGhlciBDLkRFNzggQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPdGhlciBDLkRFNzggT2JzZXJ2YXRpb24iCmRlZmluZSAiT3RoZXIgQy5ERTc4IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk90aGVyIC0gSElWLkMuREU3OCJdCmRlZmluZSAiT3RoZXIgQy5ERTc4IE9ic2VydmF0aW9uIjoKICAiTWVkaWNhdGlvbnMgcHJlc2NyaWJlZCBDLkRFNzUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk90aGVyIC0gSElWLkMuREU3OCIKLyogRW5kIG9mIE90aGVyIEMuREU3OCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTgwIC0gUHJFUCBwcm9kdWN0IHByZXNjcmliZWQKQGFjdGl2aXR5OiBISVYuQzIzIFByZXNjcmliZSBvciBhZG1pbmlzdGVyIFByRVAgb3IgUEVQCkBkZXNjcmlwdGlvbjogUHJFUCBwcm9kdWN0IHRoYXQgdGhlIGNsaWVudCB3YXMgcHJlc2NyaWJlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUHJFUCBwcm9kdWN0IHByZXNjcmliZWQiOgogIGV4aXN0cyAiUHJFUCBwcm9kdWN0IHByZXNjcmliZWQgT2JzZXJ2YXRpb24iCmRlZmluZSAiUHJFUCBwcm9kdWN0IHByZXNjcmliZWQgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlByRVAgcHJvZHVjdCBwcmVzY3JpYmVkIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFByRVAgcHJvZHVjdCBwcmVzY3JpYmVkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFODEgLSBPcmFsIFByRVAKQGFjdGl2aXR5OiBISVYuQzIzIFByZXNjcmliZSBvciBhZG1pbmlzdGVyIFByRVAgb3IgUEVQCkBkZXNjcmlwdGlvbjogQ2xpZW50IHdhcyBwcmVzY3JpYmVkIG9yYWwgUHJFUAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT3JhbCBQckVQIjoKICBleGlzdHMgIk9yYWwgUHJFUCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk9yYWwgUHJFUCBPYnNlcnZhdGlvbiIKZGVmaW5lICJPcmFsIFByRVAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iT3JhbCBQckVQIl0KZGVmaW5lICJPcmFsIFByRVAgT2JzZXJ2YXRpb24iOgogICJQckVQIHByb2R1Y3QgcHJlc2NyaWJlZCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iT3JhbCBQckVQIgovKiBFbmQgb2YgT3JhbCBQckVQICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFODIgLSBEYXBpdmlyaW5lIHZhZ2luYWwgcmluZyBEVlIKQGFjdGl2aXR5OiBISVYuQzIzIFByZXNjcmliZSBvciBhZG1pbmlzdGVyIFByRVAgb3IgUEVQCkBkZXNjcmlwdGlvbjogQ2xpZW50IHdhcyBwcmVzY3JpYmVkIGRhcGl2aXJpbmUgdmFnaW5hbCByaW5nIChEVlIpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEYXBpdmlyaW5lIHZhZ2luYWwgcmluZyBEVlIgQy5ERTgyIjoKICBleGlzdHMgIkRhcGl2aXJpbmUgdmFnaW5hbCByaW5nIERWUiBDLkRFODIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJEYXBpdmlyaW5lIHZhZ2luYWwgcmluZyBEVlIgQy5ERTgyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkRhcGl2aXJpbmUgdmFnaW5hbCByaW5nIERWUiBDLkRFODIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRGFwaXZpcmluZSB2YWdpbmFsIHJpbmcgRFZSIC0gSElWLkMuREU4MiJdCmRlZmluZSAiRGFwaXZpcmluZSB2YWdpbmFsIHJpbmcgRFZSIEMuREU4MiBPYnNlcnZhdGlvbiI6CiAgIlByRVAgcHJvZHVjdCBwcmVzY3JpYmVkIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJEYXBpdmlyaW5lIHZhZ2luYWwgcmluZyBEVlIgLSBISVYuQy5ERTgyIgovKiBFbmQgb2YgRGFwaXZpcmluZSB2YWdpbmFsIHJpbmcgRFZSIEMuREU4MiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTgzIC0gQ0FCLUxBCkBhY3Rpdml0eTogSElWLkMyMyBQcmVzY3JpYmUgb3IgYWRtaW5pc3RlciBQckVQIG9yIFBFUApAZGVzY3JpcHRpb246IENsaWVudCB3YXMgcHJlc2NyaWJlZCBsb25nLWFjdGluZyBjYWJvdGVncmF2aXIgKENBQi1MQSkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNBQi1MQSBDLkRFODMiOgogIGV4aXN0cyAiQ0FCLUxBIEMuREU4MyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNBQi1MQSBDLkRFODMgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ0FCLUxBIEMuREU4MyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDQUItTEEgLSBISVYuQy5ERTgzIl0KZGVmaW5lICJDQUItTEEgQy5ERTgzIE9ic2VydmF0aW9uIjoKICAiUHJFUCBwcm9kdWN0IHByZXNjcmliZWQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNBQi1MQSAtIEhJVi5DLkRFODMiCi8qIEVuZCBvZiBDQUItTEEgQy5ERTgzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFODQgLSBPdGhlcgpAYWN0aXZpdHk6IEhJVi5DMjMgUHJlc2NyaWJlIG9yIGFkbWluaXN0ZXIgUHJFUCBvciBQRVAKQGRlc2NyaXB0aW9uOiBDbGllbnQgd2FzIHByZXNjcmliZWQgb3RoZXIgUHJFUCBwcm9kdWN0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPdGhlciBDLkRFODQiOgogIGV4aXN0cyAiT3RoZXIgQy5ERTg0IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiT3RoZXIgQy5ERTg0IE9ic2VydmF0aW9uIgpkZWZpbmUgIk90aGVyIEMuREU4NCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPdGhlciAtIEhJVi5DLkRFODQiXQpkZWZpbmUgIk90aGVyIEMuREU4NCBPYnNlcnZhdGlvbiI6CiAgIlByRVAgcHJvZHVjdCBwcmVzY3JpYmVkIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJPdGhlciAtIEhJVi5DLkRFODQiCi8qIEVuZCBvZiBPdGhlciBDLkRFODQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREU5MSAtIFByZWZlcnJlZCBQRVAgYmFja2JvbmUgcmVnaW1lbgpAYWN0aXZpdHk6IEhJVi5DMjMgUHJlc2NyaWJlIG9yIGFkbWluaXN0ZXIgUHJFUCBvciBQRVAKQGRlc2NyaXB0aW9uOiBQcmVmZXJyZWQgYmFja2JvbmUgcmVnaW1lbiBmb3IgUEVQCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQcmVmZXJyZWQgUEVQIGJhY2tib25lIHJlZ2ltZW4iOgogIGV4aXN0cyAiUHJlZmVycmVkIFBFUCBiYWNrYm9uZSByZWdpbWVuIE9ic2VydmF0aW9uIgpkZWZpbmUgIlByZWZlcnJlZCBQRVAgYmFja2JvbmUgcmVnaW1lbiBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iUHJlZmVycmVkIFBFUCBiYWNrYm9uZSByZWdpbWVuIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFByZWZlcnJlZCBQRVAgYmFja2JvbmUgcmVnaW1lbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTkyIC0gVERGICsgM1RDCkBhY3Rpdml0eTogSElWLkMyMyBQcmVzY3JpYmUgb3IgYWRtaW5pc3RlciBQckVQIG9yIFBFUApAZGVzY3JpcHRpb246IFByZWZlcnJlZCBiYWNrYm9uZSBjb250YWluaW5nIHRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlIGFuZCBsYW1pdnVkaW5lCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUREYgKyAzVEMgQy5ERTkyIjoKICBleGlzdHMgIlRERiArIDNUQyBDLkRFOTIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJUREYgKyAzVEMgQy5ERTkyIE9ic2VydmF0aW9uIgpkZWZpbmUgIlRERiArIDNUQyBDLkRFOTIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVERGICsgM1RDIC0gSElWLkMuREU5MiJdCmRlZmluZSAiVERGICsgM1RDIEMuREU5MiBPYnNlcnZhdGlvbiI6CiAgIlByZWZlcnJlZCBQRVAgYmFja2JvbmUgcmVnaW1lbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVERGICsgM1RDIC0gSElWLkMuREU5MiIKLyogRW5kIG9mIFRERiArIDNUQyBDLkRFOTIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREU5MyAtIFRERiArIEZUQwpAYWN0aXZpdHk6IEhJVi5DMjMgUHJlc2NyaWJlIG9yIGFkbWluaXN0ZXIgUHJFUCBvciBQRVAKQGRlc2NyaXB0aW9uOiBQcmVmZXJyZWQgYmFja2JvbmUgY29udGFpbmluZyB0ZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSBhbmQgZW10cmljaXRhYmluZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVERGICsgRlRDIEMuREU5MyI6CiAgZXhpc3RzICJUREYgKyBGVEMgQy5ERTkzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVERGICsgRlRDIEMuREU5MyBPYnNlcnZhdGlvbiIKZGVmaW5lICJUREYgKyBGVEMgQy5ERTkzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlRERiArIEZUQyAtIEhJVi5DLkRFOTMiXQpkZWZpbmUgIlRERiArIEZUQyBDLkRFOTMgT2JzZXJ2YXRpb24iOgogICJQcmVmZXJyZWQgUEVQIGJhY2tib25lIHJlZ2ltZW4gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlRERiArIEZUQyAtIEhJVi5DLkRFOTMiCi8qIEVuZCBvZiBUREYgKyBGVEMgQy5ERTkzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFOTQgLSBBWlQgKyAzVEMKQGFjdGl2aXR5OiBISVYuQzIzIFByZXNjcmliZSBvciBhZG1pbmlzdGVyIFByRVAgb3IgUEVQCkBkZXNjcmlwdGlvbjogUHJlZmVycmVkIGJhY2tib25lIGNvbnRhaW5pbmcgemlkb3Z1ZGluZSBhbmQgbGFtaXZ1ZGluZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQVpUICsgM1RDIjoKICBleGlzdHMgIkFaVCArIDNUQyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkFaVCArIDNUQyBPYnNlcnZhdGlvbiIKZGVmaW5lICJBWlQgKyAzVEMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQVpUICsgM1RDIl0KZGVmaW5lICJBWlQgKyAzVEMgT2JzZXJ2YXRpb24iOgogICJQcmVmZXJyZWQgUEVQIGJhY2tib25lIHJlZ2ltZW4gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkFaVCArIDNUQyIKLyogRW5kIG9mIEFaVCArIDNUQyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTk1IC0gQWx0ZXJuYXRpdmUgUEVQIGJhY2tib25lIHJlZ2ltZW4KQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBBbHRlcm5hdGl2ZSBiYWNrYm9uZSByZWdpbWVuIGZvciBQRVAKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFsdGVybmF0aXZlIFBFUCBiYWNrYm9uZSByZWdpbWVuIjoKICBleGlzdHMgIkFsdGVybmF0aXZlIFBFUCBiYWNrYm9uZSByZWdpbWVuIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFsdGVybmF0aXZlIFBFUCBiYWNrYm9uZSByZWdpbWVuIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJBbHRlcm5hdGl2ZSBQRVAgYmFja2JvbmUgcmVnaW1lbiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBBbHRlcm5hdGl2ZSBQRVAgYmFja2JvbmUgcmVnaW1lbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTk2IC0gQUJDICsgM1RDCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQWx0ZXJuYXRpdmUgYmFja2JvbmUgY29udGFpbmluZyBhYmFjYXZpciBhbmQgbGFtaXZ1ZGluZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQUJDICsgM1RDIjoKICBleGlzdHMgIkFCQyArIDNUQyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkFCQyArIDNUQyBPYnNlcnZhdGlvbiIKZGVmaW5lICJBQkMgKyAzVEMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQUJDICsgM1RDIl0KZGVmaW5lICJBQkMgKyAzVEMgT2JzZXJ2YXRpb24iOgogICJBbHRlcm5hdGl2ZSBQRVAgYmFja2JvbmUgcmVnaW1lbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQUJDICsgM1RDIgovKiBFbmQgb2YgQUJDICsgM1RDICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFOTcgLSBUREYgKyAzVEMKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBBbHRlcm5hdGl2ZSBiYWNrYm9uZSBjb250YWluaW5nIHRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlIGFuZCBsYW1pdnVkaW5lCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUREYgKyAzVEMgQy5ERTk3IjoKICBleGlzdHMgIlRERiArIDNUQyBDLkRFOTcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJUREYgKyAzVEMgQy5ERTk3IE9ic2VydmF0aW9uIgpkZWZpbmUgIlRERiArIDNUQyBDLkRFOTcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVERGICsgM1RDIC0gSElWLkMuREU5NyJdCmRlZmluZSAiVERGICsgM1RDIEMuREU5NyBPYnNlcnZhdGlvbiI6CiAgIkFsdGVybmF0aXZlIFBFUCBiYWNrYm9uZSByZWdpbWVuIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJUREYgKyAzVEMgLSBISVYuQy5ERTk3IgovKiBFbmQgb2YgVERGICsgM1RDIEMuREU5NyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTk4IC0gVERGICsgRlRDCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQWx0ZXJuYXRpdmUgYmFja2JvbmUgY29udGFpbmluZyB0ZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSBhbmQgZW10cmljaXRhYmluZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVERGICsgRlRDIEMuREU5OCI6CiAgZXhpc3RzICJUREYgKyBGVEMgQy5ERTk4IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVERGICsgRlRDIEMuREU5OCBPYnNlcnZhdGlvbiIKZGVmaW5lICJUREYgKyBGVEMgQy5ERTk4IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlRERiArIEZUQyAtIEhJVi5DLkRFOTgiXQpkZWZpbmUgIlRERiArIEZUQyBDLkRFOTggT2JzZXJ2YXRpb24iOgogICJBbHRlcm5hdGl2ZSBQRVAgYmFja2JvbmUgcmVnaW1lbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVERGICsgRlRDIC0gSElWLkMuREU5OCIKLyogRW5kIG9mIFRERiArIEZUQyBDLkRFOTggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREU5OSAtIFByZWZlcnJlZCB0aGlyZCBQRVAgZHJ1ZwpAYWN0aXZpdHk6IEhJVi5DMjMgUHJlc2NyaWJlIG9yIGFkbWluaXN0ZXIgUHJFUCBvciBQRVAKQGRlc2NyaXB0aW9uOiBQcmVmZXJyZWQgdGhpcmQgZHJ1ZyBmb3IgUEVQCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQcmVmZXJyZWQgdGhpcmQgUEVQIGRydWciOgogIGV4aXN0cyAiUHJlZmVycmVkIHRoaXJkIFBFUCBkcnVnIE9ic2VydmF0aW9uIgpkZWZpbmUgIlByZWZlcnJlZCB0aGlyZCBQRVAgZHJ1ZyBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iUHJlZmVycmVkIHRoaXJkIFBFUCBkcnVnIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFByZWZlcnJlZCB0aGlyZCBQRVAgZHJ1ZyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTEwMCAtIERURwpAYWN0aXZpdHk6IEhJVi5DMjMgUHJlc2NyaWJlIG9yIGFkbWluaXN0ZXIgUHJFUCBvciBQRVAKQGRlc2NyaXB0aW9uOiBQcmVmZXJyZWQgdGhpcmQgZHJ1ZyBvZiBkb2x1dGVncmF2aXIKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkRURyBDLkRFMTAwIjoKICBleGlzdHMgIkRURyBDLkRFMTAwIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRFRHIEMuREUxMDAgT2JzZXJ2YXRpb24iCmRlZmluZSAiRFRHIEMuREUxMDAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRFRHIC0gSElWLkMuREUxMDAiXQpkZWZpbmUgIkRURyBDLkRFMTAwIE9ic2VydmF0aW9uIjoKICAiUHJlZmVycmVkIHRoaXJkIFBFUCBkcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJEVEcgLSBISVYuQy5ERTEwMCIKLyogRW5kIG9mIERURyBDLkRFMTAwICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTAxIC0gQWx0ZXJuYXRpdmUgdGhpcmQgUEVQIGRydWcKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBBbHRlcm5hdGl2ZSB0aGlyZCBkcnVnIGZvciBQRVAKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFsdGVybmF0aXZlIHRoaXJkIFBFUCBkcnVnIjoKICBleGlzdHMgIkFsdGVybmF0aXZlIHRoaXJkIFBFUCBkcnVnIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFsdGVybmF0aXZlIHRoaXJkIFBFUCBkcnVnIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJBbHRlcm5hdGl2ZSB0aGlyZCBQRVAgZHJ1ZyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBBbHRlcm5hdGl2ZSB0aGlyZCBQRVAgZHJ1ZyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTEwMiAtIEFUVi9yCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQWx0ZXJuYXRpdmUgdGhpcmQgZHJ1ZyBvZiBhdGF6YW5hdmlyL3JpdG9uYXZpciAoQVRWL3IpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBVFYvciBDLkRFMTAyIjoKICBleGlzdHMgIkFUVi9yIEMuREUxMDIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBVFYvciBDLkRFMTAyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFUVi9yIEMuREUxMDIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQVRWL3IgLSBISVYuQy5ERTEwMiJdCmRlZmluZSAiQVRWL3IgQy5ERTEwMiBPYnNlcnZhdGlvbiI6CiAgIkFsdGVybmF0aXZlIHRoaXJkIFBFUCBkcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBVFYvciAtIEhJVi5DLkRFMTAyIgovKiBFbmQgb2YgQVRWL3IgQy5ERTEwMiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTEwMyAtIERSVi9yCkBhY3Rpdml0eTogSElWLkMzIENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQWx0ZXJuYXRpdmUgdGhpcmQgZHJ1ZyBvZiBkYXJ1bmF2aXIvcml0b25hdmlyIChEUlYvcikKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkRSVi9yIEMuREUxMDMiOgogIGV4aXN0cyAiRFJWL3IgQy5ERTEwMyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkRSVi9yIEMuREUxMDMgT2JzZXJ2YXRpb24iCmRlZmluZSAiRFJWL3IgQy5ERTEwMyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJEUlYvciAtIEhJVi5DLkRFMTAzIl0KZGVmaW5lICJEUlYvciBDLkRFMTAzIE9ic2VydmF0aW9uIjoKICAiQWx0ZXJuYXRpdmUgdGhpcmQgUEVQIGRydWcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkRSVi9yIC0gSElWLkMuREUxMDMiCi8qIEVuZCBvZiBEUlYvciBDLkRFMTAzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTA0IC0gTFBWL3IKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBBbHRlcm5hdGl2ZSB0aGlyZCBkcnVnIG9mIGxvcGluYXZpci9yaXRvbmF2aXIgKExQVi9yKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTFBWL3IgQy5ERTEwNCI6CiAgZXhpc3RzICJMUFYvciBDLkRFMTA0IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTFBWL3IgQy5ERTEwNCBPYnNlcnZhdGlvbiIKZGVmaW5lICJMUFYvciBDLkRFMTA0IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkxQVi9yIC0gSElWLkMuREUxMDQiXQpkZWZpbmUgIkxQVi9yIEMuREUxMDQgT2JzZXJ2YXRpb24iOgogICJBbHRlcm5hdGl2ZSB0aGlyZCBQRVAgZHJ1ZyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTFBWL3IgLSBISVYuQy5ERTEwNCIKLyogRW5kIG9mIExQVi9yIEMuREUxMDQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxMDUgLSBSQUwKQGFjdGl2aXR5OiBISVYuQzMgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBBbHRlcm5hdGl2ZSB0aGlyZCBkcnVnIG9mIHJhbHRlZ3JhdmlyIChSQUwpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSQUwgQy5ERTEwNSI6CiAgZXhpc3RzICJSQUwgQy5ERTEwNSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlJBTCBDLkRFMTA1IE9ic2VydmF0aW9uIgpkZWZpbmUgIlJBTCBDLkRFMTA1IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlJBTCAtIEhJVi5DLkRFMTA1Il0KZGVmaW5lICJSQUwgQy5ERTEwNSBPYnNlcnZhdGlvbiI6CiAgIkFsdGVybmF0aXZlIHRoaXJkIFBFUCBkcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJSQUwgLSBISVYuQy5ERTEwNSIKLyogRW5kIG9mIFJBTCBDLkRFMTA1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTA2IC0gRXN0aW1hdGVkIGNyZWF0aW5pbmUgY2xlYXJhbmNlCkBhY3Rpdml0eTogSElWLkMyMyBQcmVzY3JpYmUgb3IgYWRtaW5pc3RlciBQckVQIG9yIFBFUApAZGVzY3JpcHRpb246IEVzdGltYXRlZCBjcmVhdGluaW5lIGNsZWFyYW5jZSBvZiB0aGUgY2xpZW50IHJldHVybmVkIGZyb20gbGFiIGluIG1ML21pbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRXN0aW1hdGVkIGNyZWF0aW5pbmUgY2xlYXJhbmNlIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJFc3RpbWF0ZWQgY3JlYXRpbmluZSBjbGVhcmFuY2UiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkVzdGltYXRlZCBjcmVhdGluaW5lIGNsZWFyYW5jZSBWYWx1ZSI6CiAgIkVzdGltYXRlZCBjcmVhdGluaW5lIGNsZWFyYW5jZSIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBFc3RpbWF0ZWQgY3JlYXRpbmluZSBjbGVhcmFuY2UgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxMTIgLSBDb250cmFpbmRpY2F0aW9ucyB0byBQckVQIHVzYWdlCkBhY3Rpdml0eTogSElWLkMyMyBQcmVzY3JpYmUgb3IgYWRtaW5pc3RlciBQckVQIG9yIFBFUApAZGVzY3JpcHRpb246IExpc3Rpbmcgb2YgY29udHJhaW5kaWNhdGlvbnMgdG8gcHJlLWV4cG9zdXJlIHByb3BoeWxheGlzIChQckVQKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ29udHJhaW5kaWNhdGlvbnMgdG8gUHJFUCB1c2FnZSI6CiAgZXhpc3RzICJDb250cmFpbmRpY2F0aW9ucyB0byBQckVQIHVzYWdlIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNvbnRyYWluZGljYXRpb25zIHRvIFByRVAgdXNhZ2UgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkNvbnRyYWluZGljYXRpb25zIHRvIFByRVAgdXNhZ2UiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgQ29udHJhaW5kaWNhdGlvbnMgdG8gUHJFUCB1c2FnZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTExMyAtIFRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlIFRERiBhbGxlcmd5IG9yIGNvbnRyYWluZGljYXRpb24KQGFjdGl2aXR5OiBISVYuQzIzIFByZXNjcmliZSBvciBhZG1pbmlzdGVyIFByRVAgb3IgUEVQCkBkZXNjcmlwdGlvbjogQWxsZXJneSB0byBwcmUtZXhwb3N1cmUgcHJvcGh5bGF4aXMgKFByRVApIHRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlIChUREYpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSBUREYgYWxsZXJneSBvciBjb250cmFpbmRpY2F0aW9uIjoKICBleGlzdHMgIlRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlIFRERiBhbGxlcmd5IG9yIGNvbnRyYWluZGljYXRpb24gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJUZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSBUREYgYWxsZXJneSBvciBjb250cmFpbmRpY2F0aW9uIE9ic2VydmF0aW9uIgpkZWZpbmUgIlRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlIFRERiBhbGxlcmd5IG9yIGNvbnRyYWluZGljYXRpb24gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVGVub2ZvdmlyIGRpc29wcm94aWwgZnVtYXJhdGUgVERGIGFsbGVyZ3kgb3IgY29udHJhaW5kaWNhdGlvbiJdCmRlZmluZSAiVGVub2ZvdmlyIGRpc29wcm94aWwgZnVtYXJhdGUgVERGIGFsbGVyZ3kgb3IgY29udHJhaW5kaWNhdGlvbiBPYnNlcnZhdGlvbiI6CiAgIkNvbnRyYWluZGljYXRpb25zIHRvIFByRVAgdXNhZ2UgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlRlbm9mb3ZpciBkaXNvcHJveGlsIGZ1bWFyYXRlIFRERiBhbGxlcmd5IG9yIGNvbnRyYWluZGljYXRpb24iCi8qIEVuZCBvZiBUZW5vZm92aXIgZGlzb3Byb3hpbCBmdW1hcmF0ZSBUREYgYWxsZXJneSBvciBjb250cmFpbmRpY2F0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTE0IC0gSElWLXBvc2l0aXZlCkBhY3Rpdml0eTogSElWLkMyMyBQcmVzY3JpYmUgb3IgYWRtaW5pc3RlciBQckVQIG9yIFBFUApAZGVzY3JpcHRpb246IENsaWVudCBpcyBISVYtcG9zaXRpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhJVi1wb3NpdGl2ZSBDLkRFMTE0IjoKICBleGlzdHMgIkhJVi1wb3NpdGl2ZSBDLkRFMTE0IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSElWLXBvc2l0aXZlIEMuREUxMTQgT2JzZXJ2YXRpb24iCmRlZmluZSAiSElWLXBvc2l0aXZlIEMuREUxMTQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSElWLXBvc2l0aXZlIC0gSElWLkMuREUxMTQiXQpkZWZpbmUgIkhJVi1wb3NpdGl2ZSBDLkRFMTE0IE9ic2VydmF0aW9uIjoKICAiQ29udHJhaW5kaWNhdGlvbnMgdG8gUHJFUCB1c2FnZSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSElWLXBvc2l0aXZlIC0gSElWLkMuREUxMTQiCi8qIEVuZCBvZiBISVYtcG9zaXRpdmUgQy5ERTExNCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTExNSAtIExvdyBlc3RpbWF0ZWQgY3JlYXRpbmluZSBjbGVhcmFuY2UKQGFjdGl2aXR5OiBISVYuQzIzIFByZXNjcmliZSBvciBhZG1pbmlzdGVyIFByRVAgb3IgUEVQCkBkZXNjcmlwdGlvbjogRXN0aW1hdGVkIGNyZWF0aW5pbmUgY2xlYXJhbmNlIG9mIGxlc3MgdGhhbiA2MCBtbC9taW4gKGlmIGtub3duKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTG93IGVzdGltYXRlZCBjcmVhdGluaW5lIGNsZWFyYW5jZSI6CiAgZXhpc3RzICJMb3cgZXN0aW1hdGVkIGNyZWF0aW5pbmUgY2xlYXJhbmNlIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTG93IGVzdGltYXRlZCBjcmVhdGluaW5lIGNsZWFyYW5jZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJMb3cgZXN0aW1hdGVkIGNyZWF0aW5pbmUgY2xlYXJhbmNlIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkxvdyBlc3RpbWF0ZWQgY3JlYXRpbmluZSBjbGVhcmFuY2UiXQpkZWZpbmUgIkxvdyBlc3RpbWF0ZWQgY3JlYXRpbmluZSBjbGVhcmFuY2UgT2JzZXJ2YXRpb24iOgogICJDb250cmFpbmRpY2F0aW9ucyB0byBQckVQIHVzYWdlIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJMb3cgZXN0aW1hdGVkIGNyZWF0aW5pbmUgY2xlYXJhbmNlIgovKiBFbmQgb2YgTG93IGVzdGltYXRlZCBjcmVhdGluaW5lIGNsZWFyYW5jZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTExNiAtIEFjdXRlIEhJViBpbmZlY3Rpb24gc3ltcHRvbXMKQGFjdGl2aXR5OiBISVYuQzIzIFByZXNjcmliZSBvciBhZG1pbmlzdGVyIFByRVAgb3IgUEVQCkBkZXNjcmlwdGlvbjogU3ltcHRvbXMgdGhhdCBjb3VsZCBzdWdnZXN0IGFuIGFjdXRlIEhJViBpbmZlY3Rpb24KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFjdXRlIEhJViBpbmZlY3Rpb24gc3ltcHRvbXMgQy5ERTExNiI6CiAgZXhpc3RzICJBY3V0ZSBISVYgaW5mZWN0aW9uIHN5bXB0b21zIEMuREUxMTYgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBY3V0ZSBISVYgaW5mZWN0aW9uIHN5bXB0b21zIEMuREUxMTYgT2JzZXJ2YXRpb24iCmRlZmluZSAiQWN1dGUgSElWIGluZmVjdGlvbiBzeW1wdG9tcyBDLkRFMTE2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFjdXRlIEhJViBpbmZlY3Rpb24gc3ltcHRvbXMgLSBISVYuQy5ERTExNiJdCmRlZmluZSAiQWN1dGUgSElWIGluZmVjdGlvbiBzeW1wdG9tcyBDLkRFMTE2IE9ic2VydmF0aW9uIjoKICAiQ29udHJhaW5kaWNhdGlvbnMgdG8gUHJFUCB1c2FnZSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQWN1dGUgSElWIGluZmVjdGlvbiBzeW1wdG9tcyAtIEhJVi5DLkRFMTE2IgovKiBFbmQgb2YgQWN1dGUgSElWIGluZmVjdGlvbiBzeW1wdG9tcyBDLkRFMTE2ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTE3IC0gUHJvYmFibGUgcmVjZW50IGV4cG9zdXJlIHRvIEhJVgpAYWN0aXZpdHk6IEhJVi5DMjMgUHJlc2NyaWJlIG9yIGFkbWluaXN0ZXIgUHJFUCBvciBQRVAKQGRlc2NyaXB0aW9uOiBXaGVuIHRoZSBjbGllbnQgaXMgcmVwb3J0ZWQgdG8gaGF2ZSBoYWQgcHJvYmFibGUgcmVjZW50IGV4cG9zdXJlIHRvIEhJVgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUHJvYmFibGUgcmVjZW50IGV4cG9zdXJlIHRvIEhJViI6CiAgZXhpc3RzICJQcm9iYWJsZSByZWNlbnQgZXhwb3N1cmUgdG8gSElWIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUHJvYmFibGUgcmVjZW50IGV4cG9zdXJlIHRvIEhJViBPYnNlcnZhdGlvbiIKZGVmaW5lICJQcm9iYWJsZSByZWNlbnQgZXhwb3N1cmUgdG8gSElWIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlByb2JhYmxlIHJlY2VudCBleHBvc3VyZSB0byBISVYiXQpkZWZpbmUgIlByb2JhYmxlIHJlY2VudCBleHBvc3VyZSB0byBISVYgT2JzZXJ2YXRpb24iOgogICJDb250cmFpbmRpY2F0aW9ucyB0byBQckVQIHVzYWdlIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQcm9iYWJsZSByZWNlbnQgZXhwb3N1cmUgdG8gSElWIgovKiBFbmQgb2YgUHJvYmFibGUgcmVjZW50IGV4cG9zdXJlIHRvIEhJViAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTExOCAtIE90aGVyIGFsbGVyZ3kgb3IgY29udHJhaW5kaWNhdGlvbiB0byBhIG1lZGljaW5lIGluIHRoZSBQckVQIHJlZ2ltZW4KQGFjdGl2aXR5OiBISVYuQzIzIFByZXNjcmliZSBvciBhZG1pbmlzdGVyIFByRVAgb3IgUEVQCkBkZXNjcmlwdGlvbjogQ2xpZW50IGhhcyBhbm90aGVyIGFsbGVyZ3kgb3IgY29udHJhaW5kaWNhdGlvbiB0byBhIG1lZGljaW5lIGluIHRoZSBwcmUtZXhwb3N1cmUgcHJvcGh5bGF4aXMgKFByRVApIHJlZ2ltZW4KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk90aGVyIGFsbGVyZ3kgb3IgY29udHJhaW5kaWNhdGlvbiB0byBhIG1lZGljaW5lIGluIHRoZSBQckVQIHJlZ2ltZW4iOgogIGV4aXN0cyAiT3RoZXIgYWxsZXJneSBvciBjb250cmFpbmRpY2F0aW9uIHRvIGEgbWVkaWNpbmUgaW4gdGhlIFByRVAgcmVnaW1lbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk90aGVyIGFsbGVyZ3kgb3IgY29udHJhaW5kaWNhdGlvbiB0byBhIG1lZGljaW5lIGluIHRoZSBQckVQIHJlZ2ltZW4gT2JzZXJ2YXRpb24iCmRlZmluZSAiT3RoZXIgYWxsZXJneSBvciBjb250cmFpbmRpY2F0aW9uIHRvIGEgbWVkaWNpbmUgaW4gdGhlIFByRVAgcmVnaW1lbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPdGhlciBhbGxlcmd5IG9yIGNvbnRyYWluZGljYXRpb24gdG8gYSBtZWRpY2luZSBpbiB0aGUgUHJFUCByZWdpbWVuIl0KZGVmaW5lICJPdGhlciBhbGxlcmd5IG9yIGNvbnRyYWluZGljYXRpb24gdG8gYSBtZWRpY2luZSBpbiB0aGUgUHJFUCByZWdpbWVuIE9ic2VydmF0aW9uIjoKICAiQ29udHJhaW5kaWNhdGlvbnMgdG8gUHJFUCB1c2FnZSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iT3RoZXIgYWxsZXJneSBvciBjb250cmFpbmRpY2F0aW9uIHRvIGEgbWVkaWNpbmUgaW4gdGhlIFByRVAgcmVnaW1lbiIKLyogRW5kIG9mIE90aGVyIGFsbGVyZ3kgb3IgY29udHJhaW5kaWNhdGlvbiB0byBhIG1lZGljaW5lIGluIHRoZSBQckVQIHJlZ2ltZW4gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxMjEgLSBOdW1iZXIgb2YgZGF5cyBwcmVzY3JpYmVkCkBhY3Rpdml0eTogSElWLkMyMyBQcmVzY3JpYmUgb3IgYWRtaW5pc3RlciBQckVQIG9yIFBFUApAZGVzY3JpcHRpb246IERheXMgb2YgbWVkaWNhdGlvbiBjbGllbnQgaGFzIGJlZW4gcHJlc2NyaWJlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTnVtYmVyIG9mIGRheXMgcHJlc2NyaWJlZCBDLkRFMTIxIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJOdW1iZXIgb2YgZGF5cyBwcmVzY3JpYmVkIC0gSElWLkMuREUxMjEiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIk51bWJlciBvZiBkYXlzIHByZXNjcmliZWQgQy5ERTEyMSBWYWx1ZSI6CiAgIk51bWJlciBvZiBkYXlzIHByZXNjcmliZWQgQy5ERTEyMSIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBOdW1iZXIgb2YgZGF5cyBwcmVzY3JpYmVkIEMuREUxMjEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxMjMgLSBBZGhlcmVuY2UgY291bnNlbGxpbmcgcHJvdmlkZWQKQGFjdGl2aXR5OiBISVYuQzIzIFByZXNjcmliZSBvciBhZG1pbmlzdGVyIFByRVAgb3IgUEVQCkBkZXNjcmlwdGlvbjogV2hldGhlciBhZGhlcmVuY2UgY291bnNlbGxpbmcgd2FzIHByb3ZpZGVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBZGhlcmVuY2UgY291bnNlbGxpbmcgcHJvdmlkZWQgQy5ERTEyMyI6CiAgZXhpc3RzICJBZGhlcmVuY2UgY291bnNlbGxpbmcgcHJvdmlkZWQgQy5ERTEyMyBPYnNlcnZhdGlvbiIKZGVmaW5lICJBZGhlcmVuY2UgY291bnNlbGxpbmcgcHJvdmlkZWQgQy5ERTEyMyBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQWRoZXJlbmNlIGNvdW5zZWxsaW5nIHByb3ZpZGVkIC0gSElWLkMuREUxMjMiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBBZGhlcmVuY2UgY291bnNlbGxpbmcgcHJvdmlkZWQgQy5ERTEyMyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTEyNCAtIERhdGUvdGltZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQKQGFjdGl2aXR5OiBISVYuQzI0IFNjaGVkdWxlIGZvbGxvdy11cApAZGVzY3JpcHRpb246IERhdGUgdGhlIGNsaWVudCBpcyB0byByZXR1cm4gZm9yIG1vbml0b3JpbmcsIHJlLXN1cHBseSwgb3IgYW55IG90aGVyIHJlYXNvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGF0ZS90aW1lIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCBDLkRFMTI0IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJEYXRlL3RpbWUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IC0gSElWLkMuREUxMjQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkRhdGUvdGltZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQgQy5ERTEyNCBWYWx1ZSI6CiAgIkRhdGUvdGltZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQgQy5ERTEyNCIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBEYXRlL3RpbWUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IEMuREUxMjQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxMjUgLSBUeXBlIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudApAYWN0aXZpdHk6IEhJVi5DMjQgU2NoZWR1bGUgZm9sbG93LXVwCkBkZXNjcmlwdGlvbjogVHlwZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQgZm9yIHRlc3Rpbmcgc2VydmljZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlR5cGUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IEMuREUxMjUiOgogIGV4aXN0cyAiVHlwZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQgQy5ERTEyNSBPYnNlcnZhdGlvbiIKZGVmaW5lICJUeXBlIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCBDLkRFMTI1IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJUeXBlIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCAtIEhJVi5DLkRFMTI1Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFR5cGUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IEMuREUxMjUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxMjYgLSBSZXRlc3RpbmcgZm9yIEhJVgpAYWN0aXZpdHk6IEhJVi5DMjQgU2NoZWR1bGUgZm9sbG93LXVwCkBkZXNjcmlwdGlvbjogUmV0ZXN0aW5nIGZvbGxvdy11cCBhcHBvaW50bWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmV0ZXN0aW5nIGZvciBISVYgQy5ERTEyNiI6CiAgZXhpc3RzICJSZXRlc3RpbmcgZm9yIEhJViBDLkRFMTI2IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUmV0ZXN0aW5nIGZvciBISVYgQy5ERTEyNiBPYnNlcnZhdGlvbiIKZGVmaW5lICJSZXRlc3RpbmcgZm9yIEhJViBDLkRFMTI2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlJldGVzdGluZyBmb3IgSElWIC0gSElWLkMuREUxMjYiXQpkZWZpbmUgIlJldGVzdGluZyBmb3IgSElWIEMuREUxMjYgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCBDLkRFMTI1IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJSZXRlc3RpbmcgZm9yIEhJViAtIEhJVi5DLkRFMTI2IgovKiBFbmQgb2YgUmV0ZXN0aW5nIGZvciBISVYgQy5ERTEyNiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTEyNyAtIEZvbGxvdy11cCBhcHBvaW50bWVudCBmb3IgUHJFUApAYWN0aXZpdHk6IEhJVi5DMjQgU2NoZWR1bGUgZm9sbG93LXVwCkBkZXNjcmlwdGlvbjogUmV0ZXN0aW5nIGZvbGxvdy11cCBhcHBvaW50bWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRm9sbG93LXVwIGFwcG9pbnRtZW50IGZvciBQckVQIjoKICBleGlzdHMgIkZvbGxvdy11cCBhcHBvaW50bWVudCBmb3IgUHJFUCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkZvbGxvdy11cCBhcHBvaW50bWVudCBmb3IgUHJFUCBPYnNlcnZhdGlvbiIKZGVmaW5lICJGb2xsb3ctdXAgYXBwb2ludG1lbnQgZm9yIFByRVAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRm9sbG93LXVwIGFwcG9pbnRtZW50IGZvciBQckVQIl0KZGVmaW5lICJGb2xsb3ctdXAgYXBwb2ludG1lbnQgZm9yIFByRVAgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCBDLkRFMTI1IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJGb2xsb3ctdXAgYXBwb2ludG1lbnQgZm9yIFByRVAiCi8qIEVuZCBvZiBGb2xsb3ctdXAgYXBwb2ludG1lbnQgZm9yIFByRVAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxMjggLSBPdGhlcgpAYWN0aXZpdHk6IEhJVi5DMjQgU2NoZWR1bGUgZm9sbG93LXVwCkBkZXNjcmlwdGlvbjogT3RoZXIgcmVhc29uIGZvciB0aGUgZm9sbG93LXVwIGFwcG9pbnRtZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPdGhlciBDLkRFMTI4IjoKICBleGlzdHMgIk90aGVyIEMuREUxMjggQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPdGhlciBDLkRFMTI4IE9ic2VydmF0aW9uIgpkZWZpbmUgIk90aGVyIEMuREUxMjggQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iT3RoZXIgLSBISVYuQy5ERTEyOCJdCmRlZmluZSAiT3RoZXIgQy5ERTEyOCBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IEMuREUxMjUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk90aGVyIC0gSElWLkMuREUxMjgiCi8qIEVuZCBvZiBPdGhlciBDLkRFMTI4ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTMxIC0gUHJldmVudGlvbiBzZXJ2aWNlcyBvZmZlcmVkIGFuZCByZWZlcnJhbHMKQGFjdGl2aXR5OiBISVYuQzEwIENvdW5zZWwgb24gcmlzayBhbmQgcHJldmVudGlvbgpAZGVzY3JpcHRpb246IE9mZmVyIG9yIHJlZmVyIHRvIHByZXZlbnRpb24gc2VydmljZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlByZXZlbnRpb24gc2VydmljZXMgb2ZmZXJlZCBhbmQgcmVmZXJyYWxzIEMuREUxMzEiOgogIGV4aXN0cyAiUHJldmVudGlvbiBzZXJ2aWNlcyBvZmZlcmVkIGFuZCByZWZlcnJhbHMgQy5ERTEzMSBPYnNlcnZhdGlvbiIKZGVmaW5lICJQcmV2ZW50aW9uIHNlcnZpY2VzIG9mZmVyZWQgYW5kIHJlZmVycmFscyBDLkRFMTMxIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJQcmV2ZW50aW9uIHNlcnZpY2VzIG9mZmVyZWQgYW5kIHJlZmVycmFscyAtIEhJVi5DLkRFMTMxIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFByZXZlbnRpb24gc2VydmljZXMgb2ZmZXJlZCBhbmQgcmVmZXJyYWxzIEMuREUxMzEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxMzIgLSBNYWxlIGFuZCBmZW1hbGUgY29uZG9tcyBhbmQgY29uZG9tLWNvbXBhdGlibGUgbHVicmljYW50cyBvZmZlcmVkCkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBPZmZlciBtYWxlIGFuZCBmZW1hbGUgY29uZG9tcyBhbmQgY29uZG9tLWNvbXBhdGlibGUgbHVicmljYW50cwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTWFsZSBhbmQgZmVtYWxlIGNvbmRvbXMgYW5kIGNvbmRvbS1jb21wYXRpYmxlIGx1YnJpY2FudHMgb2ZmZXJlZCI6CiAgZXhpc3RzICJNYWxlIGFuZCBmZW1hbGUgY29uZG9tcyBhbmQgY29uZG9tLWNvbXBhdGlibGUgbHVicmljYW50cyBvZmZlcmVkIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTWFsZSBhbmQgZmVtYWxlIGNvbmRvbXMgYW5kIGNvbmRvbS1jb21wYXRpYmxlIGx1YnJpY2FudHMgb2ZmZXJlZCBPYnNlcnZhdGlvbiIKZGVmaW5lICJNYWxlIGFuZCBmZW1hbGUgY29uZG9tcyBhbmQgY29uZG9tLWNvbXBhdGlibGUgbHVicmljYW50cyBvZmZlcmVkIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk1hbGUgYW5kIGZlbWFsZSBjb25kb21zIGFuZCBjb25kb20tY29tcGF0aWJsZSBsdWJyaWNhbnRzIG9mZmVyZWQiXQpkZWZpbmUgIk1hbGUgYW5kIGZlbWFsZSBjb25kb21zIGFuZCBjb25kb20tY29tcGF0aWJsZSBsdWJyaWNhbnRzIG9mZmVyZWQgT2JzZXJ2YXRpb24iOgogICJQcmV2ZW50aW9uIHNlcnZpY2VzIG9mZmVyZWQgYW5kIHJlZmVycmFscyBDLkRFMTMxIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJNYWxlIGFuZCBmZW1hbGUgY29uZG9tcyBhbmQgY29uZG9tLWNvbXBhdGlibGUgbHVicmljYW50cyBvZmZlcmVkIgovKiBFbmQgb2YgTWFsZSBhbmQgZmVtYWxlIGNvbmRvbXMgYW5kIGNvbmRvbS1jb21wYXRpYmxlIGx1YnJpY2FudHMgb2ZmZXJlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTEzMyAtIFZvbHVudGFyeSBtZWRpY2FsIG1hbGUgY2lyY3VtY2lzaW9uIFZNTUMgcmVmZXJyYWwKQGFjdGl2aXR5OiBISVYuQzEwIENvdW5zZWwgb24gcmlzayBhbmQgcHJldmVudGlvbgpAZGVzY3JpcHRpb246IE9mZmVyIHJlZmVycmFsIGZvciBWTU1DIHNlcnZpY2VzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJWb2x1bnRhcnkgbWVkaWNhbCBtYWxlIGNpcmN1bWNpc2lvbiBWTU1DIHJlZmVycmFsIjoKICBleGlzdHMgIlZvbHVudGFyeSBtZWRpY2FsIG1hbGUgY2lyY3VtY2lzaW9uIFZNTUMgcmVmZXJyYWwgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJWb2x1bnRhcnkgbWVkaWNhbCBtYWxlIGNpcmN1bWNpc2lvbiBWTU1DIHJlZmVycmFsIE9ic2VydmF0aW9uIgpkZWZpbmUgIlZvbHVudGFyeSBtZWRpY2FsIG1hbGUgY2lyY3VtY2lzaW9uIFZNTUMgcmVmZXJyYWwgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVm9sdW50YXJ5IG1lZGljYWwgbWFsZSBjaXJjdW1jaXNpb24gVk1NQyByZWZlcnJhbCJdCmRlZmluZSAiVm9sdW50YXJ5IG1lZGljYWwgbWFsZSBjaXJjdW1jaXNpb24gVk1NQyByZWZlcnJhbCBPYnNlcnZhdGlvbiI6CiAgIlByZXZlbnRpb24gc2VydmljZXMgb2ZmZXJlZCBhbmQgcmVmZXJyYWxzIEMuREUxMzEgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlZvbHVudGFyeSBtZWRpY2FsIG1hbGUgY2lyY3VtY2lzaW9uIFZNTUMgcmVmZXJyYWwiCi8qIEVuZCBvZiBWb2x1bnRhcnkgbWVkaWNhbCBtYWxlIGNpcmN1bWNpc2lvbiBWTU1DIHJlZmVycmFsICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTM0IC0gSGFybSByZWR1Y3Rpb24gZm9yIHBlb3BsZSB3aG8gaW5qZWN0IGRydWdzCkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciB0byBoYXJtIHJlZHVjdGlvbiBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgKG5lZWRsZSBhbmQgc3lyaW5nZSBwcm9ncmFtbWVzLCBvcGlvaWQgc3Vic3RpdHV0aW9uIHRoZXJhcHksIG90aGVyIGRydWctZGVwZW5kZW5jZSB0cmVhdG1lbnQgYW5kIG9waW9pZCBvdmVyZG9zZSBwcmV2ZW50aW9uIGFuZCBtYW5hZ2VtZW50KSBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSGFybSByZWR1Y3Rpb24gZm9yIHBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIEMuREUxMzQiOgogIGV4aXN0cyAiSGFybSByZWR1Y3Rpb24gZm9yIHBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIEMuREUxMzQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJIYXJtIHJlZHVjdGlvbiBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgQy5ERTEzNCBPYnNlcnZhdGlvbiIKZGVmaW5lICJIYXJtIHJlZHVjdGlvbiBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgQy5ERTEzNCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIYXJtIHJlZHVjdGlvbiBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgLSBISVYuQy5ERTEzNCJdCmRlZmluZSAiSGFybSByZWR1Y3Rpb24gZm9yIHBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIEMuREUxMzQgT2JzZXJ2YXRpb24iOgogICJQcmV2ZW50aW9uIHNlcnZpY2VzIG9mZmVyZWQgYW5kIHJlZmVycmFscyBDLkRFMTMxIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJIYXJtIHJlZHVjdGlvbiBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgLSBISVYuQy5ERTEzNCIKLyogRW5kIG9mIEhhcm0gcmVkdWN0aW9uIGZvciBwZW9wbGUgd2hvIGluamVjdCBkcnVncyBDLkRFMTM0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTM1IC0gQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uCkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciB0byBzZXJ2aWNlcyBmb3IgYmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uLCBwYXJ0aWN1bGFybHkgZm9yIHBlb3BsZSB3aXRoIEhJViBhbmQgbWVtYmVycyBvZiBrZXkgcG9wdWxhdGlvbnMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkJlaGF2aW91cmFsIGludGVydmVudGlvbnMgdG8gc3VwcG9ydCByaXNrIHJlZHVjdGlvbiBDLkRFMTM1IjoKICBleGlzdHMgIkJlaGF2aW91cmFsIGludGVydmVudGlvbnMgdG8gc3VwcG9ydCByaXNrIHJlZHVjdGlvbiBDLkRFMTM1IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uIEMuREUxMzUgT2JzZXJ2YXRpb24iCmRlZmluZSAiQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uIEMuREUxMzUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uIC0gSElWLkMuREUxMzUiXQpkZWZpbmUgIkJlaGF2aW91cmFsIGludGVydmVudGlvbnMgdG8gc3VwcG9ydCByaXNrIHJlZHVjdGlvbiBDLkRFMTM1IE9ic2VydmF0aW9uIjoKICAiUHJldmVudGlvbiBzZXJ2aWNlcyBvZmZlcmVkIGFuZCByZWZlcnJhbHMgQy5ERTEzMSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uIC0gSElWLkMuREUxMzUiCi8qIEVuZCBvZiBCZWhhdmlvdXJhbCBpbnRlcnZlbnRpb25zIHRvIHN1cHBvcnQgcmlzayByZWR1Y3Rpb24gQy5ERTEzNSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTEzOCAtIENvbmRvbSB0eXBlCkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBUeXBlIG9mIGNvbmRvbSBwcm92aWRlZCB0byBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNvbmRvbSB0eXBlIjoKICBleGlzdHMgIkNvbmRvbSB0eXBlIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNvbmRvbSB0eXBlIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJDb25kb20gdHlwZSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBDb25kb20gdHlwZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTEzOSAtIE1hbGUgY29uZG9tCkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBNYWxlIGNvbmRvbXMgd2VyZSBwcm92aWRlZCB0byB0aGUgY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJNYWxlIGNvbmRvbSI6CiAgZXhpc3RzICJNYWxlIGNvbmRvbSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk1hbGUgY29uZG9tIE9ic2VydmF0aW9uIgpkZWZpbmUgIk1hbGUgY29uZG9tIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk1hbGUgY29uZG9tIl0KZGVmaW5lICJNYWxlIGNvbmRvbSBPYnNlcnZhdGlvbiI6CiAgIkNvbmRvbSB0eXBlIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJNYWxlIGNvbmRvbSIKLyogRW5kIG9mIE1hbGUgY29uZG9tICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTQwIC0gRmVtYWxlIGNvbmRvbQpAYWN0aXZpdHk6IEhJVi5DMTAgQ291bnNlbCBvbiByaXNrIGFuZCBwcmV2ZW50aW9uCkBkZXNjcmlwdGlvbjogRmVtYWxlIGNvbmRvbXMgd2VyZSBwcm92aWRlZCB0byB0aGUgY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJGZW1hbGUgY29uZG9tIjoKICBleGlzdHMgIkZlbWFsZSBjb25kb20gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJGZW1hbGUgY29uZG9tIE9ic2VydmF0aW9uIgpkZWZpbmUgIkZlbWFsZSBjb25kb20gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRmVtYWxlIGNvbmRvbSJdCmRlZmluZSAiRmVtYWxlIGNvbmRvbSBPYnNlcnZhdGlvbiI6CiAgIkNvbmRvbSB0eXBlIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJGZW1hbGUgY29uZG9tIgovKiBFbmQgb2YgRmVtYWxlIGNvbmRvbSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE0MiAtIE51bWJlciBvZiBISVYgc2VsZi10ZXN0IGtpdHMgZGlzdHJpYnV0ZWQKQGFjdGl2aXR5OiBISVYuQzEwIENvdW5zZWwgb24gcmlzayBhbmQgcHJldmVudGlvbgpAZGVzY3JpcHRpb246IE51bWJlciBvZiBISVYgc2VsZi10ZXN0IGtpdHMgZGlzdHJpYnV0ZWQgdG8gdGhlIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTnVtYmVyIG9mIEhJViBzZWxmLXRlc3Qga2l0cyBkaXN0cmlidXRlZCI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iTnVtYmVyIG9mIEhJViBzZWxmLXRlc3Qga2l0cyBkaXN0cmlidXRlZCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiTnVtYmVyIG9mIEhJViBzZWxmLXRlc3Qga2l0cyBkaXN0cmlidXRlZCBWYWx1ZSI6CiAgIk51bWJlciBvZiBISVYgc2VsZi10ZXN0IGtpdHMgZGlzdHJpYnV0ZWQiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgTnVtYmVyIG9mIEhJViBzZWxmLXRlc3Qga2l0cyBkaXN0cmlidXRlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE0MyAtIEhJViBzZWxmLXRlc3QgZGlzdHJpYnV0ZWQgZm9yIHVzZSBieQpAYWN0aXZpdHk6IEhJVi5DMTAgQ291bnNlbCBvbiByaXNrIGFuZCBwcmV2ZW50aW9uCkBkZXNjcmlwdGlvbjogV2hvbSB0aGUgY2xpZW50IHBsYW5zIHRvIGdpdmUgdGhlIEhJViBzZWxmLXRlc3Qga2l0IChzZWxmLCBzZXh1YWwgcGFydG5lciwgc29jaWFsIGNvbnRhY3QsIGV0Yy4pCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYgc2VsZi10ZXN0IGRpc3RyaWJ1dGVkIGZvciB1c2UgYnkiOgogIGV4aXN0cyAiSElWIHNlbGYtdGVzdCBkaXN0cmlidXRlZCBmb3IgdXNlIGJ5IE9ic2VydmF0aW9uIgpkZWZpbmUgIkhJViBzZWxmLXRlc3QgZGlzdHJpYnV0ZWQgZm9yIHVzZSBieSBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSElWIHNlbGYtdGVzdCBkaXN0cmlidXRlZCBmb3IgdXNlIGJ5Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEhJViBzZWxmLXRlc3QgZGlzdHJpYnV0ZWQgZm9yIHVzZSBieSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE0NCAtIFNlbGYKQGFjdGl2aXR5OiBISVYuQzEwIENvdW5zZWwgb24gcmlzayBhbmQgcHJldmVudGlvbgpAZGVzY3JpcHRpb246IENsaWVudCBwbGFucyB0byB1c2UgdGhlIHNlbGYtdGVzdCBraXQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlNlbGYiOgogIGV4aXN0cyAiU2VsZiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlNlbGYgT2JzZXJ2YXRpb24iCmRlZmluZSAiU2VsZiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTZWxmIl0KZGVmaW5lICJTZWxmIE9ic2VydmF0aW9uIjoKICAiSElWIHNlbGYtdGVzdCBkaXN0cmlidXRlZCBmb3IgdXNlIGJ5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTZWxmIgovKiBFbmQgb2YgU2VsZiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE0NSAtIEZhbWlseSBtZW1iZXIKQGFjdGl2aXR5OiBISVYuQzEwIENvdW5zZWwgb24gcmlzayBhbmQgcHJldmVudGlvbgpAZGVzY3JpcHRpb246IENsaWVudCBwbGFucyB0byBnaXZlIHRoZSBzZWxmLXRlc3Qga2l0IHRvIGEgZmFtaWx5IG1lbWJlciB0byB1c2UKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkZhbWlseSBtZW1iZXIiOgogIGV4aXN0cyAiRmFtaWx5IG1lbWJlciBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkZhbWlseSBtZW1iZXIgT2JzZXJ2YXRpb24iCmRlZmluZSAiRmFtaWx5IG1lbWJlciBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJGYW1pbHkgbWVtYmVyIl0KZGVmaW5lICJGYW1pbHkgbWVtYmVyIE9ic2VydmF0aW9uIjoKICAiSElWIHNlbGYtdGVzdCBkaXN0cmlidXRlZCBmb3IgdXNlIGJ5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJGYW1pbHkgbWVtYmVyIgovKiBFbmQgb2YgRmFtaWx5IG1lbWJlciAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE0NiAtIERydWctaW5qZWN0aW5nIHBhcnRuZXIKQGFjdGl2aXR5OiBISVYuQzEwIENvdW5zZWwgb24gcmlzayBhbmQgcHJldmVudGlvbgpAZGVzY3JpcHRpb246IENsaWVudCBwbGFucyB0byBnaXZlIHRoZSBzZWxmLXRlc3Qga2l0IHRvIGEgZHJ1Zy1pbmplY3RpbmcgcGFydG5lcgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRHJ1Zy1pbmplY3RpbmcgcGFydG5lciBDLkRFMTQ2IjoKICBleGlzdHMgIkRydWctaW5qZWN0aW5nIHBhcnRuZXIgQy5ERTE0NiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkRydWctaW5qZWN0aW5nIHBhcnRuZXIgQy5ERTE0NiBPYnNlcnZhdGlvbiIKZGVmaW5lICJEcnVnLWluamVjdGluZyBwYXJ0bmVyIEMuREUxNDYgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRHJ1Zy1pbmplY3RpbmcgcGFydG5lciAtIEhJVi5DLkRFMTQ2Il0KZGVmaW5lICJEcnVnLWluamVjdGluZyBwYXJ0bmVyIEMuREUxNDYgT2JzZXJ2YXRpb24iOgogICJISVYgc2VsZi10ZXN0IGRpc3RyaWJ1dGVkIGZvciB1c2UgYnkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkRydWctaW5qZWN0aW5nIHBhcnRuZXIgLSBISVYuQy5ERTE0NiIKLyogRW5kIG9mIERydWctaW5qZWN0aW5nIHBhcnRuZXIgQy5ERTE0NiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE0NyAtIFNleHVhbCBwYXJ0bmVyCkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBDbGllbnQgcGxhbnMgdG8gZ2l2ZSB0aGUgc2VsZi10ZXN0IGtpdCB0byBhIHNleHVhbCBwYXJ0bmVyCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZXh1YWwgcGFydG5lciBDLkRFMTQ3IjoKICBleGlzdHMgIlNleHVhbCBwYXJ0bmVyIEMuREUxNDcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJTZXh1YWwgcGFydG5lciBDLkRFMTQ3IE9ic2VydmF0aW9uIgpkZWZpbmUgIlNleHVhbCBwYXJ0bmVyIEMuREUxNDcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU2V4dWFsIHBhcnRuZXIgLSBISVYuQy5ERTE0NyJdCmRlZmluZSAiU2V4dWFsIHBhcnRuZXIgQy5ERTE0NyBPYnNlcnZhdGlvbiI6CiAgIkhJViBzZWxmLXRlc3QgZGlzdHJpYnV0ZWQgZm9yIHVzZSBieSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU2V4dWFsIHBhcnRuZXIgLSBISVYuQy5ERTE0NyIKLyogRW5kIG9mIFNleHVhbCBwYXJ0bmVyIEMuREUxNDcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxNDggLSBTb2NpYWwgY29udGFjdApAYWN0aXZpdHk6IEhJVi5DMTAgQ291bnNlbCBvbiByaXNrIGFuZCBwcmV2ZW50aW9uCkBkZXNjcmlwdGlvbjogQ2xpZW50IHBsYW5zIHRvIGdpdmUgdGhlIHNlbGYtdGVzdCBraXQgdG8gYSBzb2NpYWwgY29udGFjdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU29jaWFsIGNvbnRhY3QgQy5ERTE0OCI6CiAgZXhpc3RzICJTb2NpYWwgY29udGFjdCBDLkRFMTQ4IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU29jaWFsIGNvbnRhY3QgQy5ERTE0OCBPYnNlcnZhdGlvbiIKZGVmaW5lICJTb2NpYWwgY29udGFjdCBDLkRFMTQ4IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlNvY2lhbCBjb250YWN0IC0gSElWLkMuREUxNDgiXQpkZWZpbmUgIlNvY2lhbCBjb250YWN0IEMuREUxNDggT2JzZXJ2YXRpb24iOgogICJISVYgc2VsZi10ZXN0IGRpc3RyaWJ1dGVkIGZvciB1c2UgYnkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlNvY2lhbCBjb250YWN0IC0gSElWLkMuREUxNDgiCi8qIEVuZCBvZiBTb2NpYWwgY29udGFjdCBDLkRFMTQ4ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTQ5IC0gU2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIGludGVncmF0ZWQgc2VydmljZXMKQGFjdGl2aXR5OiBISVYuQzEwIENvdW5zZWwgb24gcmlzayBhbmQgcHJldmVudGlvbgpAZGVzY3JpcHRpb246IE9mZmVyIG9yIHJlZmVyIHRvIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIGludGVncmF0ZWQgc2VydmljZXMgQy5ERTE0OSI6CiAgZXhpc3RzICJTZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggaW50ZWdyYXRlZCBzZXJ2aWNlcyBDLkRFMTQ5IE9ic2VydmF0aW9uIgpkZWZpbmUgIlNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzIEMuREUxNDkgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzIC0gSElWLkMuREUxNDkiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgU2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIGludGVncmF0ZWQgc2VydmljZXMgQy5ERTE0OSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE1MCAtIENvbnRyYWNlcHRpb24gYW5kIGZhbWlseSBwbGFubmluZwpAYWN0aXZpdHk6IEhJVi5DMTAgQ291bnNlbCBvbiByaXNrIGFuZCBwcmV2ZW50aW9uCkBkZXNjcmlwdGlvbjogT2ZmZXIgY29udHJhY2VwdGlvbiBhbmQgZmFtaWx5IHBsYW5uaW5nIHNlcnZpY2VzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDb250cmFjZXB0aW9uIGFuZCBmYW1pbHkgcGxhbm5pbmcgQy5ERTE1MCI6CiAgZXhpc3RzICJDb250cmFjZXB0aW9uIGFuZCBmYW1pbHkgcGxhbm5pbmcgQy5ERTE1MCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNvbnRyYWNlcHRpb24gYW5kIGZhbWlseSBwbGFubmluZyBDLkRFMTUwIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNvbnRyYWNlcHRpb24gYW5kIGZhbWlseSBwbGFubmluZyBDLkRFMTUwIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNvbnRyYWNlcHRpb24gYW5kIGZhbWlseSBwbGFubmluZyAtIEhJVi5DLkRFMTUwIl0KZGVmaW5lICJDb250cmFjZXB0aW9uIGFuZCBmYW1pbHkgcGxhbm5pbmcgQy5ERTE1MCBPYnNlcnZhdGlvbiI6CiAgIlNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzIEMuREUxNDkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNvbnRyYWNlcHRpb24gYW5kIGZhbWlseSBwbGFubmluZyAtIEhJVi5DLkRFMTUwIgovKiBFbmQgb2YgQ29udHJhY2VwdGlvbiBhbmQgZmFtaWx5IHBsYW5uaW5nIEMuREUxNTAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxNTEgLSBDaGVjayBwcmVnbmFuY3kgc3RhdHVzCkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBDaGVjayB3b21hbidzIHByZWduYW5jeSBzdGF0dXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNoZWNrIHByZWduYW5jeSBzdGF0dXMgQy5ERTE1MSI6CiAgZXhpc3RzICJDaGVjayBwcmVnbmFuY3kgc3RhdHVzIEMuREUxNTEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDaGVjayBwcmVnbmFuY3kgc3RhdHVzIEMuREUxNTEgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ2hlY2sgcHJlZ25hbmN5IHN0YXR1cyBDLkRFMTUxIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNoZWNrIHByZWduYW5jeSBzdGF0dXMgLSBISVYuQy5ERTE1MSJdCmRlZmluZSAiQ2hlY2sgcHJlZ25hbmN5IHN0YXR1cyBDLkRFMTUxIE9ic2VydmF0aW9uIjoKICAiU2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIGludGVncmF0ZWQgc2VydmljZXMgQy5ERTE0OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ2hlY2sgcHJlZ25hbmN5IHN0YXR1cyAtIEhJVi5DLkRFMTUxIgovKiBFbmQgb2YgQ2hlY2sgcHJlZ25hbmN5IHN0YXR1cyBDLkRFMTUxICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTUyIC0gUHJldmVudCBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uCkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBPZmZlciBzZXJ2aWNlcyAoY291bnNlbGxpbmcpIHRvIGhlbHAgcHJldmVudCBvZiBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQcmV2ZW50IG1vdGhlci10by1jaGlsZCB0cmFuc21pc3Npb24iOgogIGV4aXN0cyAiUHJldmVudCBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUHJldmVudCBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uIE9ic2VydmF0aW9uIgpkZWZpbmUgIlByZXZlbnQgbW90aGVyLXRvLWNoaWxkIHRyYW5zbWlzc2lvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQcmV2ZW50IG1vdGhlci10by1jaGlsZCB0cmFuc21pc3Npb24iXQpkZWZpbmUgIlByZXZlbnQgbW90aGVyLXRvLWNoaWxkIHRyYW5zbWlzc2lvbiBPYnNlcnZhdGlvbiI6CiAgIlNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzIEMuREUxNDkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlByZXZlbnQgbW90aGVyLXRvLWNoaWxkIHRyYW5zbWlzc2lvbiIKLyogRW5kIG9mIFByZXZlbnQgbW90aGVyLXRvLWNoaWxkIHRyYW5zbWlzc2lvbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE1MyAtIENlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgYW5kIHRyZWF0bWVudApAYWN0aXZpdHk6IEhJVi5DMTAgQ291bnNlbCBvbiByaXNrIGFuZCBwcmV2ZW50aW9uCkBkZXNjcmlwdGlvbjogT2ZmZXIgY2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBhbmQgdHJlYXRtZW50IHNlcnZpY2VzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIGFuZCB0cmVhdG1lbnQiOgogIGV4aXN0cyAiQ2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBhbmQgdHJlYXRtZW50IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBhbmQgdHJlYXRtZW50IE9ic2VydmF0aW9uIgpkZWZpbmUgIkNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgYW5kIHRyZWF0bWVudCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIGFuZCB0cmVhdG1lbnQiXQpkZWZpbmUgIkNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgYW5kIHRyZWF0bWVudCBPYnNlcnZhdGlvbiI6CiAgIlNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzIEMuREUxNDkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgYW5kIHRyZWF0bWVudCIKLyogRW5kIG9mIENlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgYW5kIHRyZWF0bWVudCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE1NCAtIEFuYWwgY2FuY2VyIHNjcmVlbmluZyBmb3IgbWVuIHdobyBoYXZlIHNleCB3aXRoIG1lbgpAYWN0aXZpdHk6IEhJVi5DMTAgQ291bnNlbCBvbiByaXNrIGFuZCBwcmV2ZW50aW9uCkBkZXNjcmlwdGlvbjogT2ZmZXIgYW5hbCBjYW5jZXIgc2NyZWVuaW5nIChmb3IgbWVuIHdobyBoYXZlIHNleCB3aXRoIG1lbikgc2VydmljZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFuYWwgY2FuY2VyIHNjcmVlbmluZyBmb3IgbWVuIHdobyBoYXZlIHNleCB3aXRoIG1lbiBDLkRFMTU0IjoKICBleGlzdHMgIkFuYWwgY2FuY2VyIHNjcmVlbmluZyBmb3IgbWVuIHdobyBoYXZlIHNleCB3aXRoIG1lbiBDLkRFMTU0IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQW5hbCBjYW5jZXIgc2NyZWVuaW5nIGZvciBtZW4gd2hvIGhhdmUgc2V4IHdpdGggbWVuIEMuREUxNTQgT2JzZXJ2YXRpb24iCmRlZmluZSAiQW5hbCBjYW5jZXIgc2NyZWVuaW5nIGZvciBtZW4gd2hvIGhhdmUgc2V4IHdpdGggbWVuIEMuREUxNTQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQW5hbCBjYW5jZXIgc2NyZWVuaW5nIGZvciBtZW4gd2hvIGhhdmUgc2V4IHdpdGggbWVuIC0gSElWLkMuREUxNTQiXQpkZWZpbmUgIkFuYWwgY2FuY2VyIHNjcmVlbmluZyBmb3IgbWVuIHdobyBoYXZlIHNleCB3aXRoIG1lbiBDLkRFMTU0IE9ic2VydmF0aW9uIjoKICAiU2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIGludGVncmF0ZWQgc2VydmljZXMgQy5ERTE0OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQW5hbCBjYW5jZXIgc2NyZWVuaW5nIGZvciBtZW4gd2hvIGhhdmUgc2V4IHdpdGggbWVuIC0gSElWLkMuREUxNTQiCi8qIEVuZCBvZiBBbmFsIGNhbmNlciBzY3JlZW5pbmcgZm9yIG1lbiB3aG8gaGF2ZSBzZXggd2l0aCBtZW4gQy5ERTE1NCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE1NSAtIFNUSSB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQKQGFjdGl2aXR5OiBISVYuQzEwIENvdW5zZWwgb24gcmlzayBhbmQgcHJldmVudGlvbgpAZGVzY3JpcHRpb246IE9mZmVyIFNUSSB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQgc2VydmljZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlNUSSB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQgQy5ERTE1NSI6CiAgZXhpc3RzICJTVEkgdGVzdGluZyBhbmQgdHJlYXRtZW50IEMuREUxNTUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJTVEkgdGVzdGluZyBhbmQgdHJlYXRtZW50IEMuREUxNTUgT2JzZXJ2YXRpb24iCmRlZmluZSAiU1RJIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBDLkRFMTU1IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlNUSSB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQgLSBISVYuQy5ERTE1NSJdCmRlZmluZSAiU1RJIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBDLkRFMTU1IE9ic2VydmF0aW9uIjoKICAiU2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIGludGVncmF0ZWQgc2VydmljZXMgQy5ERTE0OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU1RJIHRlc3RpbmcgYW5kIHRyZWF0bWVudCAtIEhJVi5DLkRFMTU1IgovKiBFbmQgb2YgU1RJIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBDLkRFMTU1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTU2IC0gSElWIHRlc3RpbmcgZm9yIHBhcnRuZXJzIGFuZCBiaW9sb2dpY2FsIGNoaWxkcmVuCkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBPZmZlciB0ZXN0aW5nIGZvciBhbGwgcGFydG5lcnMgYW5kIGJpb2xvZ2ljYWwgY2hpbGRyZW4gb2YgcG9zaXRpdmUgY2FzZXMgKGluY2x1ZGVzIHBhcnRuZXIgc2VydmljZXMgYW5kIGluZGV4IGNhc2UgdGVzdGluZyksIGFzIHdlbGwgYXMgcGFydG5lcnMgYW5kIHNvY2lhbCBjb250YWN0cyBvZiBwZW9wbGUgZnJvbSBrZXkgcG9wdWxhdGlvbnMsIHdoZXJlIGFwcHJvcHJpYXRlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYgdGVzdGluZyBmb3IgcGFydG5lcnMgYW5kIGJpb2xvZ2ljYWwgY2hpbGRyZW4gQy5ERTE1NiI6CiAgZXhpc3RzICJISVYgdGVzdGluZyBmb3IgcGFydG5lcnMgYW5kIGJpb2xvZ2ljYWwgY2hpbGRyZW4gQy5ERTE1NiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhJViB0ZXN0aW5nIGZvciBwYXJ0bmVycyBhbmQgYmlvbG9naWNhbCBjaGlsZHJlbiBDLkRFMTU2IE9ic2VydmF0aW9uIgpkZWZpbmUgIkhJViB0ZXN0aW5nIGZvciBwYXJ0bmVycyBhbmQgYmlvbG9naWNhbCBjaGlsZHJlbiBDLkRFMTU2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhJViB0ZXN0aW5nIGZvciBwYXJ0bmVycyBhbmQgYmlvbG9naWNhbCBjaGlsZHJlbiAtIEhJVi5DLkRFMTU2Il0KZGVmaW5lICJISVYgdGVzdGluZyBmb3IgcGFydG5lcnMgYW5kIGJpb2xvZ2ljYWwgY2hpbGRyZW4gQy5ERTE1NiBPYnNlcnZhdGlvbiI6CiAgIlNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzIEMuREUxNDkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkhJViB0ZXN0aW5nIGZvciBwYXJ0bmVycyBhbmQgYmlvbG9naWNhbCBjaGlsZHJlbiAtIEhJVi5DLkRFMTU2IgovKiBFbmQgb2YgSElWIHRlc3RpbmcgZm9yIHBhcnRuZXJzIGFuZCBiaW9sb2dpY2FsIGNoaWxkcmVuIEMuREUxNTYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxNTcgLSBPZmZlciBvdGhlciBjbGluaWNhbCBzZXJ2aWNlcwpAYWN0aXZpdHk6IEhJVi5DMTAgQ291bnNlbCBvbiByaXNrIGFuZCBwcmV2ZW50aW9uCkBkZXNjcmlwdGlvbjogT3RoZXIgY2xpbmljYWwgc2VydmljZXMgb2ZmZXJlZCBvciByZWZlcnJhbHMgZ2l2ZW4gdG8gdGhlIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMgQy5ERTE1NyI6CiAgZXhpc3RzICJPZmZlciBvdGhlciBjbGluaWNhbCBzZXJ2aWNlcyBDLkRFMTU3IE9ic2VydmF0aW9uIgpkZWZpbmUgIk9mZmVyIG90aGVyIGNsaW5pY2FsIHNlcnZpY2VzIEMuREUxNTcgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIk9mZmVyIG90aGVyIGNsaW5pY2FsIHNlcnZpY2VzIC0gSElWLkMuREUxNTciXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMgQy5ERTE1NyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE1OCAtIEFzc2Vzc21lbnQgYW5kIHByb3Zpc2lvbiBvZiB2YWNjaW5hdGlvbnMKQGFjdGl2aXR5OiBISVYuQzEwIENvdW5zZWwgb24gcmlzayBhbmQgcHJldmVudGlvbgpAZGVzY3JpcHRpb246IEFzc2Vzc21lbnQgYW5kIHByb3Zpc2lvbiBvZiB2YWNjaW5hdGlvbnMsIHN1Y2ggYXMgZm9yIHBlb3BsZSBmcm9tIGtleSBwb3B1bGF0aW9ucywgcHJlZ25hbnQgd29tZW4gYW5kIGluZmFudHM7IGFuZCwgd2hlcmUgYXBwcm9wcmlhdGUsIHRldGFudXMgdmFjY2luYXRpb24gZm9yIGFkb2xlc2NlbnQgYm95cyBhbmQgbWVuIHJlY2VpdmluZyBWTU1DCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBc3Nlc3NtZW50IGFuZCBwcm92aXNpb24gb2YgdmFjY2luYXRpb25zIEMuREUxNTgiOgogIGV4aXN0cyAiQXNzZXNzbWVudCBhbmQgcHJvdmlzaW9uIG9mIHZhY2NpbmF0aW9ucyBDLkRFMTU4IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQXNzZXNzbWVudCBhbmQgcHJvdmlzaW9uIG9mIHZhY2NpbmF0aW9ucyBDLkRFMTU4IE9ic2VydmF0aW9uIgpkZWZpbmUgIkFzc2Vzc21lbnQgYW5kIHByb3Zpc2lvbiBvZiB2YWNjaW5hdGlvbnMgQy5ERTE1OCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBc3Nlc3NtZW50IGFuZCBwcm92aXNpb24gb2YgdmFjY2luYXRpb25zIC0gSElWLkMuREUxNTgiXQpkZWZpbmUgIkFzc2Vzc21lbnQgYW5kIHByb3Zpc2lvbiBvZiB2YWNjaW5hdGlvbnMgQy5ERTE1OCBPYnNlcnZhdGlvbiI6CiAgIk9mZmVyIG90aGVyIGNsaW5pY2FsIHNlcnZpY2VzIEMuREUxNTcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkFzc2Vzc21lbnQgYW5kIHByb3Zpc2lvbiBvZiB2YWNjaW5hdGlvbnMgLSBISVYuQy5ERTE1OCIKLyogRW5kIG9mIEFzc2Vzc21lbnQgYW5kIHByb3Zpc2lvbiBvZiB2YWNjaW5hdGlvbnMgQy5ERTE1OCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE1OSAtIEhlcGF0aXRpcyBCIHZpcnVzIEhCViBhbmQgaGVwYXRpdGlzIEMgdmlydXMgSENWIHRlc3RpbmcgYW5kIHRyZWF0bWVudApAYWN0aXZpdHk6IEhJVi5DMTAgQ291bnNlbCBvbiByaXNrIGFuZCBwcmV2ZW50aW9uCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgZm9yIEhCViB0ZXN0aW5nIGFuZCB2YWNjaW5hdGlvbiBhbmQgSENWIHRlc3RpbmcgYW5kIHRyZWF0bWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSGVwYXRpdGlzIEIgdmlydXMgSEJWIGFuZCBoZXBhdGl0aXMgQyB2aXJ1cyBIQ1YgdGVzdGluZyBhbmQgdHJlYXRtZW50IjoKICBleGlzdHMgIkhlcGF0aXRpcyBCIHZpcnVzIEhCViBhbmQgaGVwYXRpdGlzIEMgdmlydXMgSENWIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhlcGF0aXRpcyBCIHZpcnVzIEhCViBhbmQgaGVwYXRpdGlzIEMgdmlydXMgSENWIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBPYnNlcnZhdGlvbiIKZGVmaW5lICJIZXBhdGl0aXMgQiB2aXJ1cyBIQlYgYW5kIGhlcGF0aXRpcyBDIHZpcnVzIEhDViB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSGVwYXRpdGlzIEIgdmlydXMgSEJWIGFuZCBoZXBhdGl0aXMgQyB2aXJ1cyBIQ1YgdGVzdGluZyBhbmQgdHJlYXRtZW50Il0KZGVmaW5lICJIZXBhdGl0aXMgQiB2aXJ1cyBIQlYgYW5kIGhlcGF0aXRpcyBDIHZpcnVzIEhDViB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQgT2JzZXJ2YXRpb24iOgogICJPZmZlciBvdGhlciBjbGluaWNhbCBzZXJ2aWNlcyBDLkRFMTU3IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJIZXBhdGl0aXMgQiB2aXJ1cyBIQlYgYW5kIGhlcGF0aXRpcyBDIHZpcnVzIEhDViB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQiCi8qIEVuZCBvZiBIZXBhdGl0aXMgQiB2aXJ1cyBIQlYgYW5kIGhlcGF0aXRpcyBDIHZpcnVzIEhDViB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxNjAgLSBDby10cmltb3hhem9sZSBjaGVtb3Byb3BoeWxheGlzIHRvIHByZXZlbnQgcG5ldW1vY3lzdGlzIGNhcmluaWkgcG5ldW1vbmlhCkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3IgY28tdHJpbW94YXpvbGUgY2hlbW9wcm9waHlsYXhpcyB0byBwcmV2ZW50IHBuZXVtb2N5c3RpcyBjYXJpbmlpIHBuZXVtb25pYQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ28tdHJpbW94YXpvbGUgY2hlbW9wcm9waHlsYXhpcyB0byBwcmV2ZW50IHBuZXVtb2N5c3RpcyBjYXJpbmlpIHBuZXVtb25pYSBDLkRFMTYwIjoKICBleGlzdHMgIkNvLXRyaW1veGF6b2xlIGNoZW1vcHJvcGh5bGF4aXMgdG8gcHJldmVudCBwbmV1bW9jeXN0aXMgY2FyaW5paSBwbmV1bW9uaWEgQy5ERTE2MCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNvLXRyaW1veGF6b2xlIGNoZW1vcHJvcGh5bGF4aXMgdG8gcHJldmVudCBwbmV1bW9jeXN0aXMgY2FyaW5paSBwbmV1bW9uaWEgQy5ERTE2MCBPYnNlcnZhdGlvbiIKZGVmaW5lICJDby10cmltb3hhem9sZSBjaGVtb3Byb3BoeWxheGlzIHRvIHByZXZlbnQgcG5ldW1vY3lzdGlzIGNhcmluaWkgcG5ldW1vbmlhIEMuREUxNjAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ28tdHJpbW94YXpvbGUgY2hlbW9wcm9waHlsYXhpcyB0byBwcmV2ZW50IHBuZXVtb2N5c3RpcyBjYXJpbmlpIHBuZXVtb25pYSAtIEhJVi5DLkRFMTYwIl0KZGVmaW5lICJDby10cmltb3hhem9sZSBjaGVtb3Byb3BoeWxheGlzIHRvIHByZXZlbnQgcG5ldW1vY3lzdGlzIGNhcmluaWkgcG5ldW1vbmlhIEMuREUxNjAgT2JzZXJ2YXRpb24iOgogICJPZmZlciBvdGhlciBjbGluaWNhbCBzZXJ2aWNlcyBDLkRFMTU3IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDby10cmltb3hhem9sZSBjaGVtb3Byb3BoeWxheGlzIHRvIHByZXZlbnQgcG5ldW1vY3lzdGlzIGNhcmluaWkgcG5ldW1vbmlhIC0gSElWLkMuREUxNjAiCi8qIEVuZCBvZiBDby10cmltb3hhem9sZSBjaGVtb3Byb3BoeWxheGlzIHRvIHByZXZlbnQgcG5ldW1vY3lzdGlzIGNhcmluaWkgcG5ldW1vbmlhIEMuREUxNjAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxNjEgLSBJbnRlbnNpZmllZCBUQiBjYXNlIGZpbmRpbmcgYW5kIGxpbmthZ2UgdG8gVEIgdHJlYXRtZW50CkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3IgVEIgY2FzZSBmaW5kaW5nIGFuZCBsaW5rYWdlIHRvIFRCIHRyZWF0bWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW50ZW5zaWZpZWQgVEIgY2FzZSBmaW5kaW5nIGFuZCBsaW5rYWdlIHRvIFRCIHRyZWF0bWVudCBDLkRFMTYxIjoKICBleGlzdHMgIkludGVuc2lmaWVkIFRCIGNhc2UgZmluZGluZyBhbmQgbGlua2FnZSB0byBUQiB0cmVhdG1lbnQgQy5ERTE2MSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkludGVuc2lmaWVkIFRCIGNhc2UgZmluZGluZyBhbmQgbGlua2FnZSB0byBUQiB0cmVhdG1lbnQgQy5ERTE2MSBPYnNlcnZhdGlvbiIKZGVmaW5lICJJbnRlbnNpZmllZCBUQiBjYXNlIGZpbmRpbmcgYW5kIGxpbmthZ2UgdG8gVEIgdHJlYXRtZW50IEMuREUxNjEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW50ZW5zaWZpZWQgVEIgY2FzZSBmaW5kaW5nIGFuZCBsaW5rYWdlIHRvIFRCIHRyZWF0bWVudCAtIEhJVi5DLkRFMTYxIl0KZGVmaW5lICJJbnRlbnNpZmllZCBUQiBjYXNlIGZpbmRpbmcgYW5kIGxpbmthZ2UgdG8gVEIgdHJlYXRtZW50IEMuREUxNjEgT2JzZXJ2YXRpb24iOgogICJPZmZlciBvdGhlciBjbGluaWNhbCBzZXJ2aWNlcyBDLkRFMTU3IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJJbnRlbnNpZmllZCBUQiBjYXNlIGZpbmRpbmcgYW5kIGxpbmthZ2UgdG8gVEIgdHJlYXRtZW50IC0gSElWLkMuREUxNjEiCi8qIEVuZCBvZiBJbnRlbnNpZmllZCBUQiBjYXNlIGZpbmRpbmcgYW5kIGxpbmthZ2UgdG8gVEIgdHJlYXRtZW50IEMuREUxNjEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxNjIgLSBQcm92aXNpb24gb2YgaXNvbmlhemlkIHByZXZlbnRpdmUgdGhlcmFweSBpZiBwZXJzb24gZG9lcyBub3QgaGF2ZSBUQgpAYWN0aXZpdHk6IEhJVi5DMTAgQ291bnNlbCBvbiByaXNrIGFuZCBwcmV2ZW50aW9uCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgZm9yIHByb3Zpc2lvbiBvZiBpc29uaWF6aWQgcHJldmVudGl2ZSB0aGVyYXB5IGlmIHBlcnNvbiBkb2VzIG5vdCBoYXZlIFRCCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQcm92aXNpb24gb2YgaXNvbmlhemlkIHByZXZlbnRpdmUgdGhlcmFweSBpZiBwZXJzb24gZG9lcyBub3QgaGF2ZSBUQiBDLkRFMTYyIjoKICBleGlzdHMgIlByb3Zpc2lvbiBvZiBpc29uaWF6aWQgcHJldmVudGl2ZSB0aGVyYXB5IGlmIHBlcnNvbiBkb2VzIG5vdCBoYXZlIFRCIEMuREUxNjIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQcm92aXNpb24gb2YgaXNvbmlhemlkIHByZXZlbnRpdmUgdGhlcmFweSBpZiBwZXJzb24gZG9lcyBub3QgaGF2ZSBUQiBDLkRFMTYyIE9ic2VydmF0aW9uIgpkZWZpbmUgIlByb3Zpc2lvbiBvZiBpc29uaWF6aWQgcHJldmVudGl2ZSB0aGVyYXB5IGlmIHBlcnNvbiBkb2VzIG5vdCBoYXZlIFRCIEMuREUxNjIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUHJvdmlzaW9uIG9mIGlzb25pYXppZCBwcmV2ZW50aXZlIHRoZXJhcHkgaWYgcGVyc29uIGRvZXMgbm90IGhhdmUgVEIgLSBISVYuQy5ERTE2MiJdCmRlZmluZSAiUHJvdmlzaW9uIG9mIGlzb25pYXppZCBwcmV2ZW50aXZlIHRoZXJhcHkgaWYgcGVyc29uIGRvZXMgbm90IGhhdmUgVEIgQy5ERTE2MiBPYnNlcnZhdGlvbiI6CiAgIk9mZmVyIG90aGVyIGNsaW5pY2FsIHNlcnZpY2VzIEMuREUxNTcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlByb3Zpc2lvbiBvZiBpc29uaWF6aWQgcHJldmVudGl2ZSB0aGVyYXB5IGlmIHBlcnNvbiBkb2VzIG5vdCBoYXZlIFRCIC0gSElWLkMuREUxNjIiCi8qIEVuZCBvZiBQcm92aXNpb24gb2YgaXNvbmlhemlkIHByZXZlbnRpdmUgdGhlcmFweSBpZiBwZXJzb24gZG9lcyBub3QgaGF2ZSBUQiBDLkRFMTYyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTYzIC0gTWFsYXJpYSBwcmV2ZW50aW9uIHN1Y2ggYXMgYmVkIG5ldHMgYW5kIHByb3BoeWxheGlzLCBkZXBlbmRpbmcgb24gZXBpZGVtaW9sb2d5CkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3IgbWFsYXJpYSBwcmV2ZW50aW9uIChzdWNoIGFzIGJlZCBuZXRzIGFuZCBwcm9waHlsYXhpcyksIGRlcGVuZGluZyBvbiBlcGlkZW1pb2xvZ3kKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk1hbGFyaWEgcHJldmVudGlvbiBzdWNoIGFzIGJlZCBuZXRzIGFuZCBwcm9waHlsYXhpcywgZGVwZW5kaW5nIG9uIGVwaWRlbWlvbG9neSBDLkRFMTYzIjoKICBleGlzdHMgIk1hbGFyaWEgcHJldmVudGlvbiBzdWNoIGFzIGJlZCBuZXRzIGFuZCBwcm9waHlsYXhpcywgZGVwZW5kaW5nIG9uIGVwaWRlbWlvbG9neSBDLkRFMTYzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTWFsYXJpYSBwcmV2ZW50aW9uIHN1Y2ggYXMgYmVkIG5ldHMgYW5kIHByb3BoeWxheGlzLCBkZXBlbmRpbmcgb24gZXBpZGVtaW9sb2d5IEMuREUxNjMgT2JzZXJ2YXRpb24iCmRlZmluZSAiTWFsYXJpYSBwcmV2ZW50aW9uIHN1Y2ggYXMgYmVkIG5ldHMgYW5kIHByb3BoeWxheGlzLCBkZXBlbmRpbmcgb24gZXBpZGVtaW9sb2d5IEMuREUxNjMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTWFsYXJpYSBwcmV2ZW50aW9uIHN1Y2ggYXMgYmVkIG5ldHMgYW5kIHByb3BoeWxheGlzLCBkZXBlbmRpbmcgb24gZXBpZGVtaW9sb2d5IC0gSElWLkMuREUxNjMiXQpkZWZpbmUgIk1hbGFyaWEgcHJldmVudGlvbiBzdWNoIGFzIGJlZCBuZXRzIGFuZCBwcm9waHlsYXhpcywgZGVwZW5kaW5nIG9uIGVwaWRlbWlvbG9neSBDLkRFMTYzIE9ic2VydmF0aW9uIjoKICAiT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMgQy5ERTE1NyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTWFsYXJpYSBwcmV2ZW50aW9uIHN1Y2ggYXMgYmVkIG5ldHMgYW5kIHByb3BoeWxheGlzLCBkZXBlbmRpbmcgb24gZXBpZGVtaW9sb2d5IC0gSElWLkMuREUxNjMiCi8qIEVuZCBvZiBNYWxhcmlhIHByZXZlbnRpb24gc3VjaCBhcyBiZWQgbmV0cyBhbmQgcHJvcGh5bGF4aXMsIGRlcGVuZGluZyBvbiBlcGlkZW1pb2xvZ3kgQy5ERTE2MyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE2NCAtIE90aGVyIHN1cHBvcnQgc2VydmljZXMKQGFjdGl2aXR5OiBISVYuQzEwIENvdW5zZWwgb24gcmlzayBhbmQgcHJldmVudGlvbgpAZGVzY3JpcHRpb246IE9mZmVyIG9yIHJlZmVyIGZvciBvdGhlciBzdXBwb3J0IHNlcnZpY2VzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPdGhlciBzdXBwb3J0IHNlcnZpY2VzIEMuREUxNjQiOgogIGV4aXN0cyAiT3RoZXIgc3VwcG9ydCBzZXJ2aWNlcyBDLkRFMTY0IE9ic2VydmF0aW9uIgpkZWZpbmUgIk90aGVyIHN1cHBvcnQgc2VydmljZXMgQy5ERTE2NCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iT3RoZXIgc3VwcG9ydCBzZXJ2aWNlcyAtIEhJVi5DLkRFMTY0Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIE90aGVyIHN1cHBvcnQgc2VydmljZXMgQy5ERTE2NCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE2NSAtIE1lbnRhbCBoZWFsdGggc2VydmljZXMKQGFjdGl2aXR5OiBISVYuQzEwIENvdW5zZWwgb24gcmlzayBhbmQgcHJldmVudGlvbgpAZGVzY3JpcHRpb246IE9mZmVyIG9yIHJlZmVyIGZvciBtZW50YWwgaGVhbHRoIHNlcnZpY2VzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJNZW50YWwgaGVhbHRoIHNlcnZpY2VzIEMuREUxNjUiOgogIGV4aXN0cyAiTWVudGFsIGhlYWx0aCBzZXJ2aWNlcyBDLkRFMTY1IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTWVudGFsIGhlYWx0aCBzZXJ2aWNlcyBDLkRFMTY1IE9ic2VydmF0aW9uIgpkZWZpbmUgIk1lbnRhbCBoZWFsdGggc2VydmljZXMgQy5ERTE2NSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJNZW50YWwgaGVhbHRoIHNlcnZpY2VzIC0gSElWLkMuREUxNjUiXQpkZWZpbmUgIk1lbnRhbCBoZWFsdGggc2VydmljZXMgQy5ERTE2NSBPYnNlcnZhdGlvbiI6CiAgIk90aGVyIHN1cHBvcnQgc2VydmljZXMgQy5ERTE2NCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTWVudGFsIGhlYWx0aCBzZXJ2aWNlcyAtIEhJVi5DLkRFMTY1IgovKiBFbmQgb2YgTWVudGFsIGhlYWx0aCBzZXJ2aWNlcyBDLkRFMTY1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTY2IC0gUHN5Y2hvc29jaWFsIGNvdW5zZWxsaW5nLCBzdXBwb3J0IGFuZCB0cmVhdG1lbnQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nCkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3IgcHN5Y2hvc29jaWFsIGNvdW5zZWxsaW5nLCBzdXBwb3J0IGFuZCB0cmVhdG1lbnQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQc3ljaG9zb2NpYWwgY291bnNlbGxpbmcsIHN1cHBvcnQgYW5kIHRyZWF0bWVudCBhZGhlcmVuY2UgY291bnNlbGxpbmcgQy5ERTE2NiI6CiAgZXhpc3RzICJQc3ljaG9zb2NpYWwgY291bnNlbGxpbmcsIHN1cHBvcnQgYW5kIHRyZWF0bWVudCBhZGhlcmVuY2UgY291bnNlbGxpbmcgQy5ERTE2NiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlBzeWNob3NvY2lhbCBjb3Vuc2VsbGluZywgc3VwcG9ydCBhbmQgdHJlYXRtZW50IGFkaGVyZW5jZSBjb3Vuc2VsbGluZyBDLkRFMTY2IE9ic2VydmF0aW9uIgpkZWZpbmUgIlBzeWNob3NvY2lhbCBjb3Vuc2VsbGluZywgc3VwcG9ydCBhbmQgdHJlYXRtZW50IGFkaGVyZW5jZSBjb3Vuc2VsbGluZyBDLkRFMTY2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlBzeWNob3NvY2lhbCBjb3Vuc2VsbGluZywgc3VwcG9ydCBhbmQgdHJlYXRtZW50IGFkaGVyZW5jZSBjb3Vuc2VsbGluZyAtIEhJVi5DLkRFMTY2Il0KZGVmaW5lICJQc3ljaG9zb2NpYWwgY291bnNlbGxpbmcsIHN1cHBvcnQgYW5kIHRyZWF0bWVudCBhZGhlcmVuY2UgY291bnNlbGxpbmcgQy5ERTE2NiBPYnNlcnZhdGlvbiI6CiAgIk90aGVyIHN1cHBvcnQgc2VydmljZXMgQy5ERTE2NCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHN5Y2hvc29jaWFsIGNvdW5zZWxsaW5nLCBzdXBwb3J0IGFuZCB0cmVhdG1lbnQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nIC0gSElWLkMuREUxNjYiCi8qIEVuZCBvZiBQc3ljaG9zb2NpYWwgY291bnNlbGxpbmcsIHN1cHBvcnQgYW5kIHRyZWF0bWVudCBhZGhlcmVuY2UgY291bnNlbGxpbmcgQy5ERTE2NiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQy5ERTE2NyAtIFN1cHBvcnQgZm9yIGRpc2Nsb3N1cmUgYW5kIHBhcnRuZXIgc2VydmljZXMKQGFjdGl2aXR5OiBISVYuQzEwIENvdW5zZWwgb24gcmlzayBhbmQgcHJldmVudGlvbgpAZGVzY3JpcHRpb246IE9mZmVyIG9yIHJlZmVyIGZvciBzdXBwb3J0IGZvciBkaXNjbG9zdXJlIGFuZCBwYXJ0bmVyIHNlcnZpY2VzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTdXBwb3J0IGZvciBkaXNjbG9zdXJlIGFuZCBwYXJ0bmVyIHNlcnZpY2VzIEMuREUxNjciOgogIGV4aXN0cyAiU3VwcG9ydCBmb3IgZGlzY2xvc3VyZSBhbmQgcGFydG5lciBzZXJ2aWNlcyBDLkRFMTY3IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU3VwcG9ydCBmb3IgZGlzY2xvc3VyZSBhbmQgcGFydG5lciBzZXJ2aWNlcyBDLkRFMTY3IE9ic2VydmF0aW9uIgpkZWZpbmUgIlN1cHBvcnQgZm9yIGRpc2Nsb3N1cmUgYW5kIHBhcnRuZXIgc2VydmljZXMgQy5ERTE2NyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTdXBwb3J0IGZvciBkaXNjbG9zdXJlIGFuZCBwYXJ0bmVyIHNlcnZpY2VzIC0gSElWLkMuREUxNjciXQpkZWZpbmUgIlN1cHBvcnQgZm9yIGRpc2Nsb3N1cmUgYW5kIHBhcnRuZXIgc2VydmljZXMgQy5ERTE2NyBPYnNlcnZhdGlvbiI6CiAgIk90aGVyIHN1cHBvcnQgc2VydmljZXMgQy5ERTE2NCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU3VwcG9ydCBmb3IgZGlzY2xvc3VyZSBhbmQgcGFydG5lciBzZXJ2aWNlcyAtIEhJVi5DLkRFMTY3IgovKiBFbmQgb2YgU3VwcG9ydCBmb3IgZGlzY2xvc3VyZSBhbmQgcGFydG5lciBzZXJ2aWNlcyBDLkRFMTY3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5DLkRFMTY4IC0gTGVnYWwgYW5kIHNvY2lhbCBzZXJ2aWNlcwpAYWN0aXZpdHk6IEhJVi5DMTAgQ291bnNlbCBvbiByaXNrIGFuZCBwcmV2ZW50aW9uCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgZm9yIGxlZ2FsIGFuZCBzb2NpYWwgc2VydmljZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkxlZ2FsIGFuZCBzb2NpYWwgc2VydmljZXMgQy5ERTE2OCI6CiAgZXhpc3RzICJMZWdhbCBhbmQgc29jaWFsIHNlcnZpY2VzIEMuREUxNjggQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJMZWdhbCBhbmQgc29jaWFsIHNlcnZpY2VzIEMuREUxNjggT2JzZXJ2YXRpb24iCmRlZmluZSAiTGVnYWwgYW5kIHNvY2lhbCBzZXJ2aWNlcyBDLkRFMTY4IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkxlZ2FsIGFuZCBzb2NpYWwgc2VydmljZXMgLSBISVYuQy5ERTE2OCJdCmRlZmluZSAiTGVnYWwgYW5kIHNvY2lhbCBzZXJ2aWNlcyBDLkRFMTY4IE9ic2VydmF0aW9uIjoKICAiT3RoZXIgc3VwcG9ydCBzZXJ2aWNlcyBDLkRFMTY0IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJMZWdhbCBhbmQgc29jaWFsIHNlcnZpY2VzIC0gSElWLkMuREUxNjgiCi8qIEVuZCBvZiBMZWdhbCBhbmQgc29jaWFsIHNlcnZpY2VzIEMuREUxNjggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkMuREUxNjkgLSBTZXJ2aWNlcyBmb3IgcmVzcG9uZGluZyB0byB2aW9sZW5jZSBhZ2FpbnN0IHdvbWVuCkBhY3Rpdml0eTogSElWLkMxMCBDb3Vuc2VsIG9uIHJpc2sgYW5kIHByZXZlbnRpb24KQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3Igc2VydmljZXMgZm9yIHJlc3BvbmRpbmcgdG8gdmlvbGVuY2UgYWdhaW5zdCB3b21lbiwgaW5jbHVkaW5nIGZpcnN0LWxpbmUgc3VwcG9ydCBhbmQgcHN5Y2hvc29jaWFsIHN1cHBvcnQsIHBvc3QtcmFwZSBjYXJlIGFuZCBvdGhlciBzdXBwb3J0IHNlcnZpY2VzIGluY2x1ZGluZyBzaGVsdGVycywgbGVnYWwgc2VydmljZXMgYW5kIHdvbWVuIGFuZCBjaGlsZCBwcm90ZWN0aW9uIHNlcnZpY2VzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZXJ2aWNlcyBmb3IgcmVzcG9uZGluZyB0byB2aW9sZW5jZSBhZ2FpbnN0IHdvbWVuIEMuREUxNjkiOgogIGV4aXN0cyAiU2VydmljZXMgZm9yIHJlc3BvbmRpbmcgdG8gdmlvbGVuY2UgYWdhaW5zdCB3b21lbiBDLkRFMTY5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2VydmljZXMgZm9yIHJlc3BvbmRpbmcgdG8gdmlvbGVuY2UgYWdhaW5zdCB3b21lbiBDLkRFMTY5IE9ic2VydmF0aW9uIgpkZWZpbmUgIlNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4gQy5ERTE2OSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTZXJ2aWNlcyBmb3IgcmVzcG9uZGluZyB0byB2aW9sZW5jZSBhZ2FpbnN0IHdvbWVuIC0gSElWLkMuREUxNjkiXQpkZWZpbmUgIlNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4gQy5ERTE2OSBPYnNlcnZhdGlvbiI6CiAgIk90aGVyIHN1cHBvcnQgc2VydmljZXMgQy5ERTE2NCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU2VydmljZXMgZm9yIHJlc3BvbmRpbmcgdG8gdmlvbGVuY2UgYWdhaW5zdCB3b21lbiAtIEhJVi5DLkRFMTY5IgovKiBFbmQgb2YgU2VydmljZXMgZm9yIHJlc3BvbmRpbmcgdG8gdmlvbGVuY2UgYWdhaW5zdCB3b21lbiBDLkRFMTY5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMSAtIFJlYXNvbiBmb3IgdmlzaXQKQGFjdGl2aXR5OiBISVYuRDEgRGV0ZXJtaW5lIHJlYXNvbiBmb3IgdmlzaXQKQGRlc2NyaXB0aW9uOiBXaGV0aGVyIHZpc2l0IHdhcyBzY2hlZHVsZWQgb3IgdW5zY2hlZHVsZWQsIGNsaW5pY2FsIG9ubHksIG9yIGZvciBBUlYgZHJ1ZyBwaWNrLXVwCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZWFzb24gZm9yIHZpc2l0IEQuREUxIjoKICBleGlzdHMgIlJlYXNvbiBmb3IgdmlzaXQgRC5ERTEgT2JzZXJ2YXRpb24iCmRlZmluZSAiUmVhc29uIGZvciB2aXNpdCBELkRFMSBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iUmVhc29uIGZvciB2aXNpdCAtIEhJVi5ELkRFMSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBSZWFzb24gZm9yIHZpc2l0IEQuREUxICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMiAtIEZpcnN0IGNsaW5pY2FsIHZpc2l0CkBhY3Rpdml0eTogSElWLkQxIERldGVybWluZSByZWFzb24gZm9yIHZpc2l0CkBkZXNjcmlwdGlvbjogVGhlIGNsaWVudCdzIGZpcnN0IGFwcG9pbnRtZW50IGZvciBjbGluaWNhbCBjYXJlIGJ5IGEgcHJvdmlkZXIgYXQgdGhlIGZhY2lsaXR5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJGaXJzdCBjbGluaWNhbCB2aXNpdCI6CiAgZXhpc3RzICJGaXJzdCBjbGluaWNhbCB2aXNpdCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkZpcnN0IGNsaW5pY2FsIHZpc2l0IE9ic2VydmF0aW9uIgpkZWZpbmUgIkZpcnN0IGNsaW5pY2FsIHZpc2l0IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkZpcnN0IGNsaW5pY2FsIHZpc2l0Il0KZGVmaW5lICJGaXJzdCBjbGluaWNhbCB2aXNpdCBPYnNlcnZhdGlvbiI6CiAgIlJlYXNvbiBmb3IgdmlzaXQgRC5ERTEgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkZpcnN0IGNsaW5pY2FsIHZpc2l0IgovKiBFbmQgb2YgRmlyc3QgY2xpbmljYWwgdmlzaXQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzIC0gQ2xpbmljYWwgdmlzaXQKQGFjdGl2aXR5OiBISVYuRDEgRGV0ZXJtaW5lIHJlYXNvbiBmb3IgdmlzaXQKQGRlc2NyaXB0aW9uOiBBcHBvaW50bWVudCBmb3IgY2xpbmljYWwgY2FyZSBieSBhIHByb3ZpZGVyCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDbGluaWNhbCB2aXNpdCBELkRFMyI6CiAgZXhpc3RzICJDbGluaWNhbCB2aXNpdCBELkRFMyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNsaW5pY2FsIHZpc2l0IEQuREUzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNsaW5pY2FsIHZpc2l0IEQuREUzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNsaW5pY2FsIHZpc2l0IC0gSElWLkQuREUzIl0KZGVmaW5lICJDbGluaWNhbCB2aXNpdCBELkRFMyBPYnNlcnZhdGlvbiI6CiAgIlJlYXNvbiBmb3IgdmlzaXQgRC5ERTEgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNsaW5pY2FsIHZpc2l0IC0gSElWLkQuREUzIgovKiBFbmQgb2YgQ2xpbmljYWwgdmlzaXQgRC5ERTMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0IC0gQVJUIGluaXRpYXRpb24KQGFjdGl2aXR5OiBISVYuRDEgRGV0ZXJtaW5lIHJlYXNvbiBmb3IgdmlzaXQKQGRlc2NyaXB0aW9uOiBBcHBvaW50bWVudCBmb3IgaW5pdGlhdGlvbiBvZiBBUlQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFSVCBpbml0aWF0aW9uIjoKICBleGlzdHMgIkFSVCBpbml0aWF0aW9uIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQVJUIGluaXRpYXRpb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiQVJUIGluaXRpYXRpb24gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQVJUIGluaXRpYXRpb24iXQpkZWZpbmUgIkFSVCBpbml0aWF0aW9uIE9ic2VydmF0aW9uIjoKICAiUmVhc29uIGZvciB2aXNpdCBELkRFMSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQVJUIGluaXRpYXRpb24iCi8qIEVuZCBvZiBBUlQgaW5pdGlhdGlvbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTUgLSBBUlQgZHJ1ZyBwaWNrIHVwCkBhY3Rpdml0eTogSElWLkQxIERldGVybWluZSByZWFzb24gZm9yIHZpc2l0CkBkZXNjcmlwdGlvbjogQXBwb2ludG1lbnQgZm9yIGFuIGFudGlyZXRyb3ZpcmFsIGRydWcgcGljayB1cAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQVJUIGRydWcgcGljayB1cCI6CiAgZXhpc3RzICJBUlQgZHJ1ZyBwaWNrIHVwIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQVJUIGRydWcgcGljayB1cCBPYnNlcnZhdGlvbiIKZGVmaW5lICJBUlQgZHJ1ZyBwaWNrIHVwIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFSVCBkcnVnIHBpY2sgdXAiXQpkZWZpbmUgIkFSVCBkcnVnIHBpY2sgdXAgT2JzZXJ2YXRpb24iOgogICJSZWFzb24gZm9yIHZpc2l0IEQuREUxIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBUlQgZHJ1ZyBwaWNrIHVwIgovKiBFbmQgb2YgQVJUIGRydWcgcGljayB1cCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTYgLSBJc3N1ZXMgYW5kIGNvbmNlcm5zCkBhY3Rpdml0eTogSElWLkQxIERldGVybWluZSByZWFzb24gZm9yIHZpc2l0CkBkZXNjcmlwdGlvbjogVmlzaXQgdG8gYWRkcmVzcyBpc3N1ZXMgYW5kIGNvbmNlcm5zCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJJc3N1ZXMgYW5kIGNvbmNlcm5zIjoKICBleGlzdHMgIklzc3VlcyBhbmQgY29uY2VybnMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJJc3N1ZXMgYW5kIGNvbmNlcm5zIE9ic2VydmF0aW9uIgpkZWZpbmUgIklzc3VlcyBhbmQgY29uY2VybnMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSXNzdWVzIGFuZCBjb25jZXJucyJdCmRlZmluZSAiSXNzdWVzIGFuZCBjb25jZXJucyBPYnNlcnZhdGlvbiI6CiAgIlJlYXNvbiBmb3IgdmlzaXQgRC5ERTEgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIklzc3VlcyBhbmQgY29uY2VybnMiCi8qIEVuZCBvZiBJc3N1ZXMgYW5kIGNvbmNlcm5zICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNyAtIFBvc3QtdHJlYXRtZW50IGZvbGxvdy11cCB2aXNpdCBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMgb3IgaW52YXNpdmUgY2VydmljYWwgY2FuY2VyCkBhY3Rpdml0eTogSElWLkQxIERldGVybWluZSByZWFzb24gZm9yIHZpc2l0CkBkZXNjcmlwdGlvbjogQXBwb2ludG1lbnQgZm9yIGEgcG9zdC10cmVhdG1lbnQgZm9sbG93LXVwIHZpc2l0IGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBvciBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBvc3QtdHJlYXRtZW50IGZvbGxvdy11cCB2aXNpdCBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMgb3IgaW52YXNpdmUgY2VydmljYWwgY2FuY2VyIEQuREU3IjoKICBleGlzdHMgIlBvc3QtdHJlYXRtZW50IGZvbGxvdy11cCB2aXNpdCBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMgb3IgaW52YXNpdmUgY2VydmljYWwgY2FuY2VyIEQuREU3IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUG9zdC10cmVhdG1lbnQgZm9sbG93LXVwIHZpc2l0IGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBvciBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgRC5ERTcgT2JzZXJ2YXRpb24iCmRlZmluZSAiUG9zdC10cmVhdG1lbnQgZm9sbG93LXVwIHZpc2l0IGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBvciBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgRC5ERTcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUG9zdC10cmVhdG1lbnQgZm9sbG93LXVwIHZpc2l0IGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBvciBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgLSBISVYuRC5ERTciXQpkZWZpbmUgIlBvc3QtdHJlYXRtZW50IGZvbGxvdy11cCB2aXNpdCBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMgb3IgaW52YXNpdmUgY2VydmljYWwgY2FuY2VyIEQuREU3IE9ic2VydmF0aW9uIjoKICAiUmVhc29uIGZvciB2aXNpdCBELkRFMSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUG9zdC10cmVhdG1lbnQgZm9sbG93LXVwIHZpc2l0IGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBvciBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgLSBISVYuRC5ERTciCi8qIEVuZCBvZiBQb3N0LXRyZWF0bWVudCBmb2xsb3ctdXAgdmlzaXQgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIG9yIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlciBELkRFNyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkgLSBCb2R5IHRlbXBlcmF0dXJlCkBhY3Rpdml0eTogSElWLkQyIFRha2Ugdml0YWwgc2lnbnMKQGRlc2NyaXB0aW9uOiBUZW1wZXJhdHVyZSBvZiB0aGUgY2xpZW50IGluIENlbHNpdXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkJvZHkgdGVtcGVyYXR1cmUiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkJvZHkgdGVtcGVyYXR1cmUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkJvZHkgdGVtcGVyYXR1cmUgVmFsdWUiOgogICJCb2R5IHRlbXBlcmF0dXJlIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIEJvZHkgdGVtcGVyYXR1cmUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxMyAtIEJvZHkgd2VpZ2h0CkBhY3Rpdml0eTogSElWLkQyIFRha2Ugdml0YWwgc2lnbnMKQGRlc2NyaXB0aW9uOiBUaGUgY2xpZW50J3MgY3VycmVudCB3ZWlnaHQgaW4ga2lsb2dyYW1zCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJCb2R5IHdlaWdodCI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQm9keSB3ZWlnaHQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkJvZHkgd2VpZ2h0IFZhbHVlIjoKICAiQm9keSB3ZWlnaHQiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgQm9keSB3ZWlnaHQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxNyAtIFNpZ25zIG9mIHNlcmlvdXMgaWxsbmVzcwpAYWN0aXZpdHk6IEhJVi5EMyBDaGVjayBmb3Igc2lnbnMgb2Ygc2VyaW91cyBpbGxuZXNzCkBkZXNjcmlwdGlvbjogU2lnbnMgdGhhdCBtYXkgaW5kaWNhdGUgdGhlIGNsaWVudCBoYXMgYSBzZXJpb3VzIGlsbG5lc3MgYW5kIG5lZWRzIHRyaWFnZSBvciBhbiBlbWVyZ2VuY3kgcmVmZXJyYWwKKi8KZGVmaW5lICJTaWducyBvZiBzZXJpb3VzIGlsbG5lc3MiOgogIGV4aXN0cyAiU2lnbnMgb2Ygc2VyaW91cyBpbGxuZXNzIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNpZ25zIG9mIHNlcmlvdXMgaWxsbmVzcyBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iU2lnbnMgb2Ygc2VyaW91cyBpbGxuZXNzIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFNpZ25zIG9mIHNlcmlvdXMgaWxsbmVzcyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE4IC0gRmV2ZXIgb2YgMzkgQyBvciBncmVhdGVyCkBhY3Rpdml0eTogSElWLkQzIENoZWNrIGZvciBzaWducyBvZiBzZXJpb3VzIGlsbG5lc3MKQGRlc2NyaXB0aW9uOiBDbGllbnQgaGFzIGEgZmV2ZXIgd2l0aCBhIG1lYXN1cmVkIHRlbXBlcmF0dXJlIG9mIDEwMi4yIEYvMzkgQyBvciBncmVhdGVyCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJGZXZlciBvZiAzOSBDIG9yIGdyZWF0ZXIiOgogIGV4aXN0cyAiRmV2ZXIgb2YgMzkgQyBvciBncmVhdGVyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRmV2ZXIgb2YgMzkgQyBvciBncmVhdGVyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkZldmVyIG9mIDM5IEMgb3IgZ3JlYXRlciBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJGZXZlciBvZiAzOSBDIG9yIGdyZWF0ZXIiXQpkZWZpbmUgIkZldmVyIG9mIDM5IEMgb3IgZ3JlYXRlciBPYnNlcnZhdGlvbiI6CiAgIlNpZ25zIG9mIHNlcmlvdXMgaWxsbmVzcyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRmV2ZXIgb2YgMzkgQyBvciBncmVhdGVyIgovKiBFbmQgb2YgRmV2ZXIgb2YgMzkgQyBvciBncmVhdGVyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTkgLSBUYWNoeWNhcmRpYQpAYWN0aXZpdHk6IEhJVi5EMyBDaGVjayBmb3Igc2lnbnMgb2Ygc2VyaW91cyBpbGxuZXNzCkBkZXNjcmlwdGlvbjogSGVhcnQgcmF0ZSBhYm92ZSBhIHJhdGUgcGVyIG1pbnV0ZSBiYXNlZCBvbiBhZ2UKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlRhY2h5Y2FyZGlhIjoKICBleGlzdHMgIlRhY2h5Y2FyZGlhIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVGFjaHljYXJkaWEgT2JzZXJ2YXRpb24iCmRlZmluZSAiVGFjaHljYXJkaWEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVGFjaHljYXJkaWEiXQpkZWZpbmUgIlRhY2h5Y2FyZGlhIE9ic2VydmF0aW9uIjoKICAiU2lnbnMgb2Ygc2VyaW91cyBpbGxuZXNzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJUYWNoeWNhcmRpYSIKLyogRW5kIG9mIFRhY2h5Y2FyZGlhICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMjAgLSBUYWNoeXBuZWEKQGFjdGl2aXR5OiBISVYuRDMgQ2hlY2sgZm9yIHNpZ25zIG9mIHNlcmlvdXMgaWxsbmVzcwpAZGVzY3JpcHRpb246IFJlc3BpcmF0b3J5IHJhdGUgYWJvdmUgYSBudW1iZXIgb2YgYnJlYXRocyBwZXIgbWludXRlIGJhc2VkIG9uIGFnZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVGFjaHlwbmVhIjoKICBleGlzdHMgIlRhY2h5cG5lYSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlRhY2h5cG5lYSBPYnNlcnZhdGlvbiIKZGVmaW5lICJUYWNoeXBuZWEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVGFjaHlwbmVhIl0KZGVmaW5lICJUYWNoeXBuZWEgT2JzZXJ2YXRpb24iOgogICJTaWducyBvZiBzZXJpb3VzIGlsbG5lc3MgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlRhY2h5cG5lYSIKLyogRW5kIG9mIFRhY2h5cG5lYSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTIxIC0gVW5hYmxlIHRvIHdhbGsgdW5haWRlZApAYWN0aXZpdHk6IEhJVi5EMyBDaGVjayBmb3Igc2lnbnMgb2Ygc2VyaW91cyBpbGxuZXNzCkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIG5vdCBhYmxlIHRvIHdhbGsgd2l0aG91dCBoZWxwCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJVbmFibGUgdG8gd2FsayB1bmFpZGVkIjoKICBleGlzdHMgIlVuYWJsZSB0byB3YWxrIHVuYWlkZWQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVbmFibGUgdG8gd2FsayB1bmFpZGVkIE9ic2VydmF0aW9uIgpkZWZpbmUgIlVuYWJsZSB0byB3YWxrIHVuYWlkZWQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVW5hYmxlIHRvIHdhbGsgdW5haWRlZCJdCmRlZmluZSAiVW5hYmxlIHRvIHdhbGsgdW5haWRlZCBPYnNlcnZhdGlvbiI6CiAgIlNpZ25zIG9mIHNlcmlvdXMgaWxsbmVzcyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVW5hYmxlIHRvIHdhbGsgdW5haWRlZCIKLyogRW5kIG9mIFVuYWJsZSB0byB3YWxrIHVuYWlkZWQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUyMiAtIExldGhhcmd5CkBhY3Rpdml0eTogSElWLkQzIENoZWNrIGZvciBzaWducyBvZiBzZXJpb3VzIGlsbG5lc3MKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgZXhoaWJpdGluZyBsZXRoYXJneSBhcyBhIHNpZ24gb2Ygc2VyaW91cyBpbGxuZXNzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJMZXRoYXJneSBELkRFMjIiOgogIGV4aXN0cyAiTGV0aGFyZ3kgRC5ERTIyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTGV0aGFyZ3kgRC5ERTIyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkxldGhhcmd5IEQuREUyMiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJMZXRoYXJneSAtIEhJVi5ELkRFMjIiXQpkZWZpbmUgIkxldGhhcmd5IEQuREUyMiBPYnNlcnZhdGlvbiI6CiAgIlNpZ25zIG9mIHNlcmlvdXMgaWxsbmVzcyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTGV0aGFyZ3kgLSBISVYuRC5ERTIyIgovKiBFbmQgb2YgTGV0aGFyZ3kgRC5ERTIyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMjMgLSBVbmNvbnNjaW91c25lc3MKQGFjdGl2aXR5OiBISVYuRDMgQ2hlY2sgZm9yIHNpZ25zIG9mIHNlcmlvdXMgaWxsbmVzcwpAZGVzY3JpcHRpb246IENsaWVudCBpcyBjdXJyZW50bHkgdW5jb25zY2lvdXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlVuY29uc2Npb3VzbmVzcyI6CiAgZXhpc3RzICJVbmNvbnNjaW91c25lc3MgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVbmNvbnNjaW91c25lc3MgT2JzZXJ2YXRpb24iCmRlZmluZSAiVW5jb25zY2lvdXNuZXNzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlVuY29uc2Npb3VzbmVzcyJdCmRlZmluZSAiVW5jb25zY2lvdXNuZXNzIE9ic2VydmF0aW9uIjoKICAiU2lnbnMgb2Ygc2VyaW91cyBpbGxuZXNzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJVbmNvbnNjaW91c25lc3MiCi8qIEVuZCBvZiBVbmNvbnNjaW91c25lc3MgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUyNCAtIENvbnZ1bHNpb25zCkBhY3Rpdml0eTogSElWLkQzIENoZWNrIGZvciBzaWducyBvZiBzZXJpb3VzIGlsbG5lc3MKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgY29udnVsc2luZwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ29udnVsc2lvbnMiOgogIGV4aXN0cyAiQ29udnVsc2lvbnMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDb252dWxzaW9ucyBPYnNlcnZhdGlvbiIKZGVmaW5lICJDb252dWxzaW9ucyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDb252dWxzaW9ucyJdCmRlZmluZSAiQ29udnVsc2lvbnMgT2JzZXJ2YXRpb24iOgogICJTaWducyBvZiBzZXJpb3VzIGlsbG5lc3MgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNvbnZ1bHNpb25zIgovKiBFbmQgb2YgQ29udnVsc2lvbnMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUyNSAtIFVuYWJsZSB0byBkcmluawpAYWN0aXZpdHk6IEhJVi5EMyBDaGVjayBmb3Igc2lnbnMgb2Ygc2VyaW91cyBpbGxuZXNzCkBkZXNjcmlwdGlvbjogQ2hpbGQgaXMgbm90IGFibGUgdG8gZHJpbmsKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlVuYWJsZSB0byBkcmluayI6CiAgZXhpc3RzICJVbmFibGUgdG8gZHJpbmsgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVbmFibGUgdG8gZHJpbmsgT2JzZXJ2YXRpb24iCmRlZmluZSAiVW5hYmxlIHRvIGRyaW5rIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlVuYWJsZSB0byBkcmluayJdCmRlZmluZSAiVW5hYmxlIHRvIGRyaW5rIE9ic2VydmF0aW9uIjoKICAiU2lnbnMgb2Ygc2VyaW91cyBpbGxuZXNzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJVbmFibGUgdG8gZHJpbmsiCi8qIEVuZCBvZiBVbmFibGUgdG8gZHJpbmsgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUyNiAtIFVuYWJsZSB0byBicmVhc3RmZWVkCkBhY3Rpdml0eTogSElWLkQzIENoZWNrIGZvciBzaWducyBvZiBzZXJpb3VzIGlsbG5lc3MKQGRlc2NyaXB0aW9uOiBJbmZhbnQgb3IgY2hpbGQgaXMgbm90IGFibGUgdG8gYnJlYXN0ZmVlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVW5hYmxlIHRvIGJyZWFzdGZlZWQiOgogIGV4aXN0cyAiVW5hYmxlIHRvIGJyZWFzdGZlZWQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVbmFibGUgdG8gYnJlYXN0ZmVlZCBPYnNlcnZhdGlvbiIKZGVmaW5lICJVbmFibGUgdG8gYnJlYXN0ZmVlZCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJVbmFibGUgdG8gYnJlYXN0ZmVlZCJdCmRlZmluZSAiVW5hYmxlIHRvIGJyZWFzdGZlZWQgT2JzZXJ2YXRpb24iOgogICJTaWducyBvZiBzZXJpb3VzIGlsbG5lc3MgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlVuYWJsZSB0byBicmVhc3RmZWVkIgovKiBFbmQgb2YgVW5hYmxlIHRvIGJyZWFzdGZlZWQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUyNyAtIFJlcGVhdGVkIHZvbWl0aW5nCkBhY3Rpdml0eTogSElWLkQzIENoZWNrIGZvciBzaWducyBvZiBzZXJpb3VzIGlsbG5lc3MKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgcmVwZWF0ZWRseSB2b21pdGluZwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmVwZWF0ZWQgdm9taXRpbmciOgogIGV4aXN0cyAiUmVwZWF0ZWQgdm9taXRpbmcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSZXBlYXRlZCB2b21pdGluZyBPYnNlcnZhdGlvbiIKZGVmaW5lICJSZXBlYXRlZCB2b21pdGluZyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJSZXBlYXRlZCB2b21pdGluZyJdCmRlZmluZSAiUmVwZWF0ZWQgdm9taXRpbmcgT2JzZXJ2YXRpb24iOgogICJTaWducyBvZiBzZXJpb3VzIGlsbG5lc3MgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlJlcGVhdGVkIHZvbWl0aW5nIgovKiBFbmQgb2YgUmVwZWF0ZWQgdm9taXRpbmcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUyOCAtIEhlYWRhY2hlCkBhY3Rpdml0eTogSElWLkQzIENoZWNrIGZvciBzaWducyBvZiBzZXJpb3VzIGlsbG5lc3MKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgZXhoaWJpdGluZyBhIGhlYWRhY2hlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIZWFkYWNoZSBELkRFMjgiOgogIGV4aXN0cyAiSGVhZGFjaGUgRC5ERTI4IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSGVhZGFjaGUgRC5ERTI4IE9ic2VydmF0aW9uIgpkZWZpbmUgIkhlYWRhY2hlIEQuREUyOCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIZWFkYWNoZSAtIEhJVi5ELkRFMjgiXQpkZWZpbmUgIkhlYWRhY2hlIEQuREUyOCBPYnNlcnZhdGlvbiI6CiAgIlNpZ25zIG9mIHNlcmlvdXMgaWxsbmVzcyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSGVhZGFjaGUgLSBISVYuRC5ERTI4IgovKiBFbmQgb2YgSGVhZGFjaGUgRC5ERTI4ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMjkgLSBPdGhlciBzaWduIG9mIHNlcmlvdXMgaWxsbmVzcwpAYWN0aXZpdHk6IEhJVi5EMyBDaGVjayBmb3Igc2lnbnMgb2Ygc2VyaW91cyBpbGxuZXNzCkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGV4aGliaXRpbmcgYW5vdGhlciBzaWduIG9mIGEgc2VyaW91cyBpbGxuZXNzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPdGhlciBzaWduIG9mIHNlcmlvdXMgaWxsbmVzcyI6CiAgZXhpc3RzICJPdGhlciBzaWduIG9mIHNlcmlvdXMgaWxsbmVzcyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk90aGVyIHNpZ24gb2Ygc2VyaW91cyBpbGxuZXNzIE9ic2VydmF0aW9uIgpkZWZpbmUgIk90aGVyIHNpZ24gb2Ygc2VyaW91cyBpbGxuZXNzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk90aGVyIHNpZ24gb2Ygc2VyaW91cyBpbGxuZXNzIl0KZGVmaW5lICJPdGhlciBzaWduIG9mIHNlcmlvdXMgaWxsbmVzcyBPYnNlcnZhdGlvbiI6CiAgIlNpZ25zIG9mIHNlcmlvdXMgaWxsbmVzcyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iT3RoZXIgc2lnbiBvZiBzZXJpb3VzIGlsbG5lc3MiCi8qIEVuZCBvZiBPdGhlciBzaWduIG9mIHNlcmlvdXMgaWxsbmVzcyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTMxIC0gQ3VycmVudGx5IHByZWduYW50CkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGN1cnJlbnRseSBwcmVnbmFudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ3VycmVudGx5IHByZWduYW50IEQuREUzMSI6CiAgZXhpc3RzICJDdXJyZW50bHkgcHJlZ25hbnQgRC5ERTMxIE9ic2VydmF0aW9uIgpkZWZpbmUgIkN1cnJlbnRseSBwcmVnbmFudCBELkRFMzEgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkN1cnJlbnRseSBwcmVnbmFudCAtIEhJVi5ELkRFMzEiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBDdXJyZW50bHkgcHJlZ25hbnQgRC5ERTMxICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzIgLSBCcmVhc3RmZWVkaW5nCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGdpdmluZyBpbmZhbnQgYnJlYXN0IG1pbGsKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkJyZWFzdGZlZWRpbmcgRC5ERTMyIjoKICBleGlzdHMgIkJyZWFzdGZlZWRpbmcgRC5ERTMyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkJyZWFzdGZlZWRpbmcgRC5ERTMyIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJCcmVhc3RmZWVkaW5nIC0gSElWLkQuREUzMiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIEJyZWFzdGZlZWRpbmcgRC5ERTMyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzcgLSBTZXJvZGlzY29yZGFudCBwYXJ0bmVyCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50J3MgSElWIHN0YXR1cyBpcyBkaWZmZXJlbnQgZnJvbSBhIGN1cnJlbnQgcGFydG5lcidzIEhJViBzdGF0dXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlNlcm9kaXNjb3JkYW50IHBhcnRuZXIgRC5ERTM3IjoKICBleGlzdHMgIlNlcm9kaXNjb3JkYW50IHBhcnRuZXIgRC5ERTM3IE9ic2VydmF0aW9uIgpkZWZpbmUgIlNlcm9kaXNjb3JkYW50IHBhcnRuZXIgRC5ERTM3IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJTZXJvZGlzY29yZGFudCBwYXJ0bmVyIC0gSElWLkQuREUzNyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIFNlcm9kaXNjb3JkYW50IHBhcnRuZXIgRC5ERTM3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzggLSBPbiBBUlQKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgY3VycmVudGx5IHRha2luZyBBUlQKKi8KCmRlZmluZSAiT24gQVJUIEQuREUzOCI6CiAgICBbTWVkaWNhdGlvblN0YXRlbWVudF0gTVMKICAgIHdoZXJlIGV4aXN0cyhNUy5yZWFzb25Db2RlIEMgd2hlcmUgQyB+IENvbmNlcHRzLiJPbiBBUlQgLSBISVYuRC5ERTM4IikKICAgIHNvcnQgYnkgc3RhcnQgb2YgZWZmZWN0aXZlLnRvSW50ZXJ2YWwoKQovKiBFbmQgb2YgT24gQVJUIEQuREUzOCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTM5IC0gQVJUIHN0YXJ0IGRhdGUKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGUgZGF0ZSBvbiB3aGljaCB0aGUgY2xpZW50IHN0YXJ0ZWQgb3IgcmVzdGFydGVkIEFSVAoqLwpkZWZpbmUgIkFSVCBzdGFydCBkYXRlIEQuREUzOSI6CiAgIk9uIEFSVCBELkRFMzgiIE1TCiAgcmV0dXJuIHN0YXJ0IG9mIE1TLmVmZmVjdGl2ZS50b0ludGVydmFsKCkKLyogRW5kIG9mIEFSVCBzdGFydCBkYXRlIEQuREUzOSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQxIC0gRGF0ZSBBUlQgc3RvcHBlZApAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IERhdGUgb24gd2hpY2ggY2xpZW50IHN0b3BwZWQgQVJUCiovCmRlZmluZSAiRGF0ZSBBUlQgc3RvcHBlZCBELkRFNDEiOgogICJPbiBBUlQgRC5ERTM4IiBNUwogIHJldHVybiBlbmQgb2YgTVMuZWZmZWN0aXZlLnRvSW50ZXJ2YWwoKQovKiBFbmQgb2YgRGF0ZSBBUlQgc3RvcHBlZCBELkRFNDEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0MiAtIEVzdGFibGlzaGVkIG9uIEFSVApAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IElzIHRoZSBjbGllbnQgc3VjY2Vzc2Z1bGx5IGVzdGFibGlzaGVkIG9uIEFSVD8KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkVzdGFibGlzaGVkIG9uIEFSVCI6CiAgZXhpc3RzICJFc3RhYmxpc2hlZCBvbiBBUlQgT2JzZXJ2YXRpb24iCmRlZmluZSAiRXN0YWJsaXNoZWQgb24gQVJUIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJFc3RhYmxpc2hlZCBvbiBBUlQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBFc3RhYmxpc2hlZCBvbiBBUlQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0MyAtIEFSVCBzdGFydCB0eXBlCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogV2hldGhlciB0aGUgY2xpZW50IGlzIEFSVCBuYWl2ZSBvciBpcyByZXN0YXJ0aW5nIEFSVAoqLwoKZGVmaW5lICJBUlQgc3RhcnQgdHlwZSI6CiAgW01lZGljYXRpb25TdGF0ZW1lbnRdIE1TCiAgICB3aGVyZSBleGlzdHMoTVMucmVhc29uQ29kZSBDIHdoZXJlIEMgfiBDb25jZXB0cy4iT24gQVJUIC0gSElWLkQuREUzOCIpCiAgICBzb3J0IGJ5IHN0YXJ0IG9mIGVmZmVjdGl2ZS50b0ludGVydmFsKCkKLyogRW5kIG9mIEFSVCBzdGFydCB0eXBlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDQgLSBGaXJzdC10aW1lIHVzZXIgb2YgQVJUCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIEFSVCBuYWl2ZSwgaGF2aW5nIG5ldmVyIHRha2VuIEFSVCB0byB0cmVhdCBISVYgYmVmb3JlCiovCgpkZWZpbmUgIkZpcnN0LXRpbWUgdXNlciBvZiBBUlQiOgogICJBUlQgc3RhcnQgdHlwZSIgTVMKICAgICAgd2hlcmUgZXhpc3RzKE1TLnJlYXNvbkNvZGUgQyB3aGVyZSBDIH4gQ29uY2VwdHMuIkZpcnN0LXRpbWUgdXNlciBvZiBBUlQiKSAKLyogRW5kIG9mIEZpcnN0LXRpbWUgdXNlciBvZiBBUlQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0NSAtIFJlc3RhcnRpbmcgQVJUCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIHJlc3RhcnRpbmcgQVJUIGFmdGVyIHN0b3BwaW5nIHRyZWF0bWVudCBmb3IgYW55IHJlYXNvbgoqLwoKZGVmaW5lICJSZXN0YXJ0aW5nIEFSVCI6CiAgICJBUlQgc3RhcnQgdHlwZSIgTVMKICAgICAgd2hlcmUgZXhpc3RzKE1TLnJlYXNvbkNvZGUgQyB3aGVyZSBDIH4gQ29uY2VwdHMuIlJlc3RhcnRpbmcgQVJUIikgCgovKiBFbmQgb2YgUmVzdGFydGluZyBBUlQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3NSAtIEN1cnJlbnQgQVJUIHJlZ2ltZW4KQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGUgY3VycmVudCBBUlQgcmVnaW1lbiB0aGUgY2xpZW50IGlzIHRha2luZwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ3VycmVudCBBUlQgcmVnaW1lbiI6CiAgZXhpc3RzICJDdXJyZW50IEFSVCByZWdpbWVuIE9ic2VydmF0aW9uIgpkZWZpbmUgIkN1cnJlbnQgQVJUIHJlZ2ltZW4gT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkN1cnJlbnQgQVJUIHJlZ2ltZW4iXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgQ3VycmVudCBBUlQgcmVnaW1lbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTc3IC0gUHJlZmVycmVkIGZpcnN0LWxpbmUgQVJUIHJlZ2ltZW4KQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGUgcHJlZmVycmVkIGZpcnN0LWxpbmUgQVJUIHJlZ2ltZW4gZm9yIHRoZSBjbGllbnQgYWNjb3JkaW5nIHRvIFdITyAob3IgbmF0aW9uYWwpIGd1aWRlbGluZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlByZWZlcnJlZCBmaXJzdC1saW5lIEFSVCByZWdpbWVuIjoKICBleGlzdHMgIlByZWZlcnJlZCBmaXJzdC1saW5lIEFSVCByZWdpbWVuIE9ic2VydmF0aW9uIgpkZWZpbmUgIlByZWZlcnJlZCBmaXJzdC1saW5lIEFSVCByZWdpbWVuIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJQcmVmZXJyZWQgZmlyc3QtbGluZSBBUlQgcmVnaW1lbiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBQcmVmZXJyZWQgZmlyc3QtbGluZSBBUlQgcmVnaW1lbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTc4IC0gQWx0ZXJuYXRpdmUgZmlyc3QtbGluZSBBUlQgcmVnaW1lbgpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRoZSBhbHRlcm5hdGl2ZSBmaXJzdC1saW5lIEFSVCByZWdpbWVuIGZvciB0aGUgY2xpZW50IGFjY29yZGluZyB0byBXSE8gKG9yIG5hdGlvbmFsKSBndWlkZWxpbmVzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBbHRlcm5hdGl2ZSBmaXJzdC1saW5lIEFSVCByZWdpbWVuIjoKICBleGlzdHMgIkFsdGVybmF0aXZlIGZpcnN0LWxpbmUgQVJUIHJlZ2ltZW4gT2JzZXJ2YXRpb24iCmRlZmluZSAiQWx0ZXJuYXRpdmUgZmlyc3QtbGluZSBBUlQgcmVnaW1lbiBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQWx0ZXJuYXRpdmUgZmlyc3QtbGluZSBBUlQgcmVnaW1lbiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBBbHRlcm5hdGl2ZSBmaXJzdC1saW5lIEFSVCByZWdpbWVuICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzkgLSBGaXJzdC1saW5lIEFSVCByZWdpbWVuIHVuZGVyIHNwZWNpYWwgY2lyY3Vtc3RhbmNlcwpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRoZSBmaXJzdC1saW5lIEFSVCByZWdpbWVuIGZvciB0aGUgY2xpZW50IHVuZGVyIHNwZWNpYWwgY2lyY3Vtc3RhbmNlcyBhY2NvcmRpbmcgdG8gV0hPIChvciBuYXRpb25hbCkgZ3VpZGVsaW5lcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRmlyc3QtbGluZSBBUlQgcmVnaW1lbiB1bmRlciBzcGVjaWFsIGNpcmN1bXN0YW5jZXMiOgogIGV4aXN0cyAiRmlyc3QtbGluZSBBUlQgcmVnaW1lbiB1bmRlciBzcGVjaWFsIGNpcmN1bXN0YW5jZXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiRmlyc3QtbGluZSBBUlQgcmVnaW1lbiB1bmRlciBzcGVjaWFsIGNpcmN1bXN0YW5jZXMgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkZpcnN0LWxpbmUgQVJUIHJlZ2ltZW4gdW5kZXIgc3BlY2lhbCBjaXJjdW1zdGFuY2VzIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEZpcnN0LWxpbmUgQVJUIHJlZ2ltZW4gdW5kZXIgc3BlY2lhbCBjaXJjdW1zdGFuY2VzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFODAgLSBQcmVmZXJyZWQgc2Vjb25kLWxpbmUgQVJUIHJlZ2ltZW4KQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGUgcHJlZmVycmVkIHNlY29uZC1saW5lIEFSVCByZWdpbWVuIGZvciB0aGUgY2xpZW50IGFjY29yZGluZyB0byBXSE8gKG9yIG5hdGlvbmFsKSBndWlkZWxpbmVzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQcmVmZXJyZWQgc2Vjb25kLWxpbmUgQVJUIHJlZ2ltZW4iOgogIGV4aXN0cyAiUHJlZmVycmVkIHNlY29uZC1saW5lIEFSVCByZWdpbWVuIE9ic2VydmF0aW9uIgpkZWZpbmUgIlByZWZlcnJlZCBzZWNvbmQtbGluZSBBUlQgcmVnaW1lbiBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iUHJlZmVycmVkIHNlY29uZC1saW5lIEFSVCByZWdpbWVuIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFByZWZlcnJlZCBzZWNvbmQtbGluZSBBUlQgcmVnaW1lbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTgxIC0gQWx0ZXJuYXRpdmUgc2Vjb25kLWxpbmUgQVJUIHJlZ2ltZW4KQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGUgYWx0ZXJuYXRpdmUgc2Vjb25kLWxpbmUgQVJUIHJlZ2ltZW4gZm9yIHRoZSBjbGllbnQgYWNjb3JkaW5nIHRvIFdITyAob3IgbmF0aW9uYWwpIGd1aWRlbGluZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFsdGVybmF0aXZlIHNlY29uZC1saW5lIEFSVCByZWdpbWVuIjoKICBleGlzdHMgIkFsdGVybmF0aXZlIHNlY29uZC1saW5lIEFSVCByZWdpbWVuIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFsdGVybmF0aXZlIHNlY29uZC1saW5lIEFSVCByZWdpbWVuIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJBbHRlcm5hdGl2ZSBzZWNvbmQtbGluZSBBUlQgcmVnaW1lbiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBBbHRlcm5hdGl2ZSBzZWNvbmQtbGluZSBBUlQgcmVnaW1lbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTgyIC0gT3B0aW1hbCByZWdpbWVuIGZvciB0cmFuc2l0aW9uCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGhlIG9wdGltYWwgcmVnaW1lbiBmb3IgdHJhbnNpdGlvbiB0byBEVEctYmFzZWQgcmVnaW1lbnMgZm9yIGNoaWxkcmVuIGVzdGFibGlzaGVkIG9uIEFSVAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT3B0aW1hbCByZWdpbWVuIGZvciB0cmFuc2l0aW9uIjoKICBleGlzdHMgIk9wdGltYWwgcmVnaW1lbiBmb3IgdHJhbnNpdGlvbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJPcHRpbWFsIHJlZ2ltZW4gZm9yIHRyYW5zaXRpb24gT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIk9wdGltYWwgcmVnaW1lbiBmb3IgdHJhbnNpdGlvbiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBPcHRpbWFsIHJlZ2ltZW4gZm9yIHRyYW5zaXRpb24gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU4MyAtIEN1cnJlbnQgQVJUIHJlZ2ltZW4gZmlyc3QtLCBzZWNvbmQtLCBvciB0aGlyZC1saW5lCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQVJUIHJlZ2ltZW4gZm9yIHRyZWF0aW5nIGNsaWVudHMgbGl2aW5nIHdpdGggSElWLCBiYXNlZCBvbiBuYXRpb25hbCBndWlkYW5jZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ3VycmVudCBBUlQgcmVnaW1lbiBmaXJzdC0sIHNlY29uZC0sIG9yIHRoaXJkLWxpbmUiOgogIGV4aXN0cyAiQ3VycmVudCBBUlQgcmVnaW1lbiBmaXJzdC0sIHNlY29uZC0sIG9yIHRoaXJkLWxpbmUgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ3VycmVudCBBUlQgcmVnaW1lbiBmaXJzdC0sIHNlY29uZC0sIG9yIHRoaXJkLWxpbmUgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkN1cnJlbnQgQVJUIHJlZ2ltZW4gZmlyc3QtLCBzZWNvbmQtLCBvciB0aGlyZC1saW5lIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEN1cnJlbnQgQVJUIHJlZ2ltZW4gZmlyc3QtLCBzZWNvbmQtLCBvciB0aGlyZC1saW5lICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFODQgLSBGaXJzdC1saW5lIEFSVCByZWdpbWVuIGZvciBhZHVsdHMgYW5kIGFkb2xlc2NlbnRzCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogRmlyc3QtbGluZSBBUlQgcmVnaW1lbiBmb3IgYWR1bHRzIGFuZCBhZG9sZXNjZW50cyBsaXZpbmcgd2l0aCBISVYKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkZpcnN0LWxpbmUgQVJUIHJlZ2ltZW4gZm9yIGFkdWx0cyBhbmQgYWRvbGVzY2VudHMiOgogIGV4aXN0cyAiRmlyc3QtbGluZSBBUlQgcmVnaW1lbiBmb3IgYWR1bHRzIGFuZCBhZG9sZXNjZW50cyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkZpcnN0LWxpbmUgQVJUIHJlZ2ltZW4gZm9yIGFkdWx0cyBhbmQgYWRvbGVzY2VudHMgT2JzZXJ2YXRpb24iCmRlZmluZSAiRmlyc3QtbGluZSBBUlQgcmVnaW1lbiBmb3IgYWR1bHRzIGFuZCBhZG9sZXNjZW50cyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJGaXJzdC1saW5lIEFSVCByZWdpbWVuIGZvciBhZHVsdHMgYW5kIGFkb2xlc2NlbnRzIl0KZGVmaW5lICJGaXJzdC1saW5lIEFSVCByZWdpbWVuIGZvciBhZHVsdHMgYW5kIGFkb2xlc2NlbnRzIE9ic2VydmF0aW9uIjoKICAiQ3VycmVudCBBUlQgcmVnaW1lbiBmaXJzdC0sIHNlY29uZC0sIG9yIHRoaXJkLWxpbmUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkZpcnN0LWxpbmUgQVJUIHJlZ2ltZW4gZm9yIGFkdWx0cyBhbmQgYWRvbGVzY2VudHMiCi8qIEVuZCBvZiBGaXJzdC1saW5lIEFSVCByZWdpbWVuIGZvciBhZHVsdHMgYW5kIGFkb2xlc2NlbnRzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFODUgLSBGaXJzdC1saW5lIEFSVCByZWdpbWVuIGZvciBjaGlsZHJlbgpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IEZpcnN0LWxpbmUgQVJUIHJlZ2ltZW4gZm9yIGNoaWxkcmVuIGxpdmluZyB3aXRoIEhJVgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRmlyc3QtbGluZSBBUlQgcmVnaW1lbiBmb3IgY2hpbGRyZW4iOgogIGV4aXN0cyAiRmlyc3QtbGluZSBBUlQgcmVnaW1lbiBmb3IgY2hpbGRyZW4gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJGaXJzdC1saW5lIEFSVCByZWdpbWVuIGZvciBjaGlsZHJlbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJGaXJzdC1saW5lIEFSVCByZWdpbWVuIGZvciBjaGlsZHJlbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJGaXJzdC1saW5lIEFSVCByZWdpbWVuIGZvciBjaGlsZHJlbiJdCmRlZmluZSAiRmlyc3QtbGluZSBBUlQgcmVnaW1lbiBmb3IgY2hpbGRyZW4gT2JzZXJ2YXRpb24iOgogICJDdXJyZW50IEFSVCByZWdpbWVuIGZpcnN0LSwgc2Vjb25kLSwgb3IgdGhpcmQtbGluZSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRmlyc3QtbGluZSBBUlQgcmVnaW1lbiBmb3IgY2hpbGRyZW4iCi8qIEVuZCBvZiBGaXJzdC1saW5lIEFSVCByZWdpbWVuIGZvciBjaGlsZHJlbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTg2IC0gRmlyc3QtbGluZSBBUlQgcmVnaW1lbiBmb3IgbmVvbmF0ZXMKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBGaXJzdC1saW5lIEFSVCByZWdpbWVuIGZvciBuZW9uYXRlcyBsaXZpbmcgd2l0aCBISVYKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkZpcnN0LWxpbmUgQVJUIHJlZ2ltZW4gZm9yIG5lb25hdGVzIjoKICBleGlzdHMgIkZpcnN0LWxpbmUgQVJUIHJlZ2ltZW4gZm9yIG5lb25hdGVzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRmlyc3QtbGluZSBBUlQgcmVnaW1lbiBmb3IgbmVvbmF0ZXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiRmlyc3QtbGluZSBBUlQgcmVnaW1lbiBmb3IgbmVvbmF0ZXMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRmlyc3QtbGluZSBBUlQgcmVnaW1lbiBmb3IgbmVvbmF0ZXMiXQpkZWZpbmUgIkZpcnN0LWxpbmUgQVJUIHJlZ2ltZW4gZm9yIG5lb25hdGVzIE9ic2VydmF0aW9uIjoKICAiQ3VycmVudCBBUlQgcmVnaW1lbiBmaXJzdC0sIHNlY29uZC0sIG9yIHRoaXJkLWxpbmUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkZpcnN0LWxpbmUgQVJUIHJlZ2ltZW4gZm9yIG5lb25hdGVzIgovKiBFbmQgb2YgRmlyc3QtbGluZSBBUlQgcmVnaW1lbiBmb3IgbmVvbmF0ZXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU4NyAtIFNlY29uZC1saW5lIEFSVCByZWdpbWVuIGZvciBhZHVsdHMgYW5kIGFkb2xlc2NlbnRzCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogU2Vjb25kLWxpbmUgQVJUIHJlZ2ltZW4gZm9yIGFkdWx0cyBhbmQgYWRvbGVzY2VudHMgbGl2aW5nIHdpdGggSElWCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZWNvbmQtbGluZSBBUlQgcmVnaW1lbiBmb3IgYWR1bHRzIGFuZCBhZG9sZXNjZW50cyI6CiAgZXhpc3RzICJTZWNvbmQtbGluZSBBUlQgcmVnaW1lbiBmb3IgYWR1bHRzIGFuZCBhZG9sZXNjZW50cyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlNlY29uZC1saW5lIEFSVCByZWdpbWVuIGZvciBhZHVsdHMgYW5kIGFkb2xlc2NlbnRzIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNlY29uZC1saW5lIEFSVCByZWdpbWVuIGZvciBhZHVsdHMgYW5kIGFkb2xlc2NlbnRzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlNlY29uZC1saW5lIEFSVCByZWdpbWVuIGZvciBhZHVsdHMgYW5kIGFkb2xlc2NlbnRzIl0KZGVmaW5lICJTZWNvbmQtbGluZSBBUlQgcmVnaW1lbiBmb3IgYWR1bHRzIGFuZCBhZG9sZXNjZW50cyBPYnNlcnZhdGlvbiI6CiAgIkN1cnJlbnQgQVJUIHJlZ2ltZW4gZmlyc3QtLCBzZWNvbmQtLCBvciB0aGlyZC1saW5lIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTZWNvbmQtbGluZSBBUlQgcmVnaW1lbiBmb3IgYWR1bHRzIGFuZCBhZG9sZXNjZW50cyIKLyogRW5kIG9mIFNlY29uZC1saW5lIEFSVCByZWdpbWVuIGZvciBhZHVsdHMgYW5kIGFkb2xlc2NlbnRzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFODggLSBTZWNvbmQtbGluZSBBUlQgcmVnaW1lbiBmb3IgY2hpbGRyZW4KQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBTZWNvbmQtbGluZSBBUlQgcmVnaW1lbiBmb3IgY2hpbGRyZW4gbGl2aW5nIHdpdGggSElWCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZWNvbmQtbGluZSBBUlQgcmVnaW1lbiBmb3IgY2hpbGRyZW4iOgogIGV4aXN0cyAiU2Vjb25kLWxpbmUgQVJUIHJlZ2ltZW4gZm9yIGNoaWxkcmVuIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2Vjb25kLWxpbmUgQVJUIHJlZ2ltZW4gZm9yIGNoaWxkcmVuIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNlY29uZC1saW5lIEFSVCByZWdpbWVuIGZvciBjaGlsZHJlbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTZWNvbmQtbGluZSBBUlQgcmVnaW1lbiBmb3IgY2hpbGRyZW4iXQpkZWZpbmUgIlNlY29uZC1saW5lIEFSVCByZWdpbWVuIGZvciBjaGlsZHJlbiBPYnNlcnZhdGlvbiI6CiAgIkN1cnJlbnQgQVJUIHJlZ2ltZW4gZmlyc3QtLCBzZWNvbmQtLCBvciB0aGlyZC1saW5lIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTZWNvbmQtbGluZSBBUlQgcmVnaW1lbiBmb3IgY2hpbGRyZW4iCi8qIEVuZCBvZiBTZWNvbmQtbGluZSBBUlQgcmVnaW1lbiBmb3IgY2hpbGRyZW4gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU4OSAtIFRoaXJkLWxpbmUgQVJUIHJlZ2ltZW4KQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGlyZC1saW5lIEFSVCByZWdpbWVuIGZvciBwZW9wbGUgbGl2aW5nIHdpdGggSElWIChOb3QgZGVmaW5lZCBieSBXSE8uIE5hdGlvbmFsIHByb2dyYW1tZXMgc2hvdWxkIGRldmVsb3AgcG9saWNpZXMgZm9yIHRoaXJkLWxpbmUgQVJUKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVGhpcmQtbGluZSBBUlQgcmVnaW1lbiI6CiAgZXhpc3RzICJUaGlyZC1saW5lIEFSVCByZWdpbWVuIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVGhpcmQtbGluZSBBUlQgcmVnaW1lbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJUaGlyZC1saW5lIEFSVCByZWdpbWVuIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlRoaXJkLWxpbmUgQVJUIHJlZ2ltZW4iXQpkZWZpbmUgIlRoaXJkLWxpbmUgQVJUIHJlZ2ltZW4gT2JzZXJ2YXRpb24iOgogICJDdXJyZW50IEFSVCByZWdpbWVuIGZpcnN0LSwgc2Vjb25kLSwgb3IgdGhpcmQtbGluZSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVGhpcmQtbGluZSBBUlQgcmVnaW1lbiIKLyogRW5kIG9mIFRoaXJkLWxpbmUgQVJUIHJlZ2ltZW4gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxMjggLSBBUlQgcmVnaW1lbiBjb21wb3NpdGlvbgpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IERydWcgY29tcG9zaXRpb24gb2YgY2xpZW50J3MgY3VycmVudCBBUlQgcmVnaW1lbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQVJUIHJlZ2ltZW4gY29tcG9zaXRpb24iOgogIGV4aXN0cyAiQVJUIHJlZ2ltZW4gY29tcG9zaXRpb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiQVJUIHJlZ2ltZW4gY29tcG9zaXRpb24gT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkFSVCByZWdpbWVuIGNvbXBvc2l0aW9uIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEFSVCByZWdpbWVuIGNvbXBvc2l0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTI5IC0gQUJDCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVHJlYXRlZCB3aXRoIGFiYWNhdmlyIChBQkMpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBQkMiOgogIGV4aXN0cyAiQUJDIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQUJDIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFCQyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBQkMiXQpkZWZpbmUgIkFCQyBPYnNlcnZhdGlvbiI6CiAgIkFSVCByZWdpbWVuIGNvbXBvc2l0aW9uIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBQkMiCi8qIEVuZCBvZiBBQkMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxMzAgLSBGVEMKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUcmVhdGVkIHdpdGggZW10cmljaXRhYmluZSAoRlRDKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRlRDIjoKICBleGlzdHMgIkZUQyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkZUQyBPYnNlcnZhdGlvbiIKZGVmaW5lICJGVEMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRlRDIl0KZGVmaW5lICJGVEMgT2JzZXJ2YXRpb24iOgogICJBUlQgcmVnaW1lbiBjb21wb3NpdGlvbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRlRDIgovKiBFbmQgb2YgRlRDICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTMxIC0gM1RDCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVHJlYXRlZCB3aXRoIGxhbWl2dWRpbmUgKDNUQykKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIjNUQyI6CiAgZXhpc3RzICIzVEMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICIzVEMgT2JzZXJ2YXRpb24iCmRlZmluZSAiM1RDIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIjNUQyJdCmRlZmluZSAiM1RDIE9ic2VydmF0aW9uIjoKICAiQVJUIHJlZ2ltZW4gY29tcG9zaXRpb24gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIjNUQyIKLyogRW5kIG9mIDNUQyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTEzMiAtIEFaVApAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRyZWF0ZWQgd2l0aCB6aWRvdnVkaW5lIChBWlQpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBWlQiOgogIGV4aXN0cyAiQVpUIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQVpUIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFaVCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBWlQiXQpkZWZpbmUgIkFaVCBPYnNlcnZhdGlvbiI6CiAgIkFSVCByZWdpbWVuIGNvbXBvc2l0aW9uIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBWlQiCi8qIEVuZCBvZiBBWlQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxMzMgLSBEREkKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUcmVhdGVkIHdpdGggZGlkYW5vc2luZSAoRERJKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRERJIjoKICBleGlzdHMgIkRESSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkRESSBPYnNlcnZhdGlvbiIKZGVmaW5lICJEREkgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRERJIl0KZGVmaW5lICJEREkgT2JzZXJ2YXRpb24iOgogICJBUlQgcmVnaW1lbiBjb21wb3NpdGlvbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRERJIgovKiBFbmQgb2YgRERJICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTM0IC0gRDRUCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVHJlYXRlZCB3aXRoIHN0YXZ1ZGluZSAoRDRUKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRDRUIjoKICBleGlzdHMgIkQ0VCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkQ0VCBPYnNlcnZhdGlvbiIKZGVmaW5lICJENFQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRDRUIl0KZGVmaW5lICJENFQgT2JzZXJ2YXRpb24iOgogICJBUlQgcmVnaW1lbiBjb21wb3NpdGlvbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRDRUIgovKiBFbmQgb2YgRDRUICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTM1IC0gVERGCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVHJlYXRlZCB3aXRoIHRlbm9mb3ZpciAoVERGKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVERGIEQuREUxMzUiOgogIGV4aXN0cyAiVERGIEQuREUxMzUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJUREYgRC5ERTEzNSBPYnNlcnZhdGlvbiIKZGVmaW5lICJUREYgRC5ERTEzNSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJUREYgLSBISVYuRC5ERTEzNSJdCmRlZmluZSAiVERGIEQuREUxMzUgT2JzZXJ2YXRpb24iOgogICJBUlQgcmVnaW1lbiBjb21wb3NpdGlvbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVERGIC0gSElWLkQuREUxMzUiCi8qIEVuZCBvZiBUREYgRC5ERTEzNSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTEzNiAtIEVGVgpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRyZWF0ZWQgd2l0aCBlZmF2aXJlbnogKEVGVikKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkVGViI6CiAgZXhpc3RzICJFRlYgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJFRlYgT2JzZXJ2YXRpb24iCmRlZmluZSAiRUZWIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkVGViJdCmRlZmluZSAiRUZWIE9ic2VydmF0aW9uIjoKICAiQVJUIHJlZ2ltZW4gY29tcG9zaXRpb24gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkVGViIKLyogRW5kIG9mIEVGViAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTEzNyAtIEVUVgpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRyZWF0ZWQgd2l0aCBldHJhdmlyaW5lIChFVFYpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJFVFYiOgogIGV4aXN0cyAiRVRWIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRVRWIE9ic2VydmF0aW9uIgpkZWZpbmUgIkVUViBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJFVFYiXQpkZWZpbmUgIkVUViBPYnNlcnZhdGlvbiI6CiAgIkFSVCByZWdpbWVuIGNvbXBvc2l0aW9uIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJFVFYiCi8qIEVuZCBvZiBFVFYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxMzggLSBOVlAKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUcmVhdGVkIHdpdGggbmV2aXJhcGluZSAoTlZQKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTlZQIjoKICBleGlzdHMgIk5WUCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk5WUCBPYnNlcnZhdGlvbiIKZGVmaW5lICJOVlAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTlZQIl0KZGVmaW5lICJOVlAgT2JzZXJ2YXRpb24iOgogICJBUlQgcmVnaW1lbiBjb21wb3NpdGlvbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTlZQIgovKiBFbmQgb2YgTlZQICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTM5IC0gUklMCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVHJlYXRlZCB3aXRoIHJpbHBpdmlyaW5lIChSSUwpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSSUwiOgogIGV4aXN0cyAiUklMIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUklMIE9ic2VydmF0aW9uIgpkZWZpbmUgIlJJTCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJSSUwiXQpkZWZpbmUgIlJJTCBPYnNlcnZhdGlvbiI6CiAgIkFSVCByZWdpbWVuIGNvbXBvc2l0aW9uIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJSSUwiCi8qIEVuZCBvZiBSSUwgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxNDAgLSBBVFYvcgpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRyZWF0ZWQgd2l0aCBhdGF6YW5hdmlyL3JpdG9uYXZpciAoQVRWL3IpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBVFYvciBELkRFMTQwIjoKICBleGlzdHMgIkFUVi9yIEQuREUxNDAgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBVFYvciBELkRFMTQwIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFUVi9yIEQuREUxNDAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQVRWL3IgLSBISVYuRC5ERTE0MCJdCmRlZmluZSAiQVRWL3IgRC5ERTE0MCBPYnNlcnZhdGlvbiI6CiAgIkFSVCByZWdpbWVuIGNvbXBvc2l0aW9uIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBVFYvciAtIEhJVi5ELkRFMTQwIgovKiBFbmQgb2YgQVRWL3IgRC5ERTE0MCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE0MSAtIExQVi9yCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVHJlYXRlZCB3aXRoIGxvcGluYXZpci9yaXRvbmF2aXIgKExQVi9yKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTFBWL3IgRC5ERTE0MSI6CiAgZXhpc3RzICJMUFYvciBELkRFMTQxIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTFBWL3IgRC5ERTE0MSBPYnNlcnZhdGlvbiIKZGVmaW5lICJMUFYvciBELkRFMTQxIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkxQVi9yIC0gSElWLkQuREUxNDEiXQpkZWZpbmUgIkxQVi9yIEQuREUxNDEgT2JzZXJ2YXRpb24iOgogICJBUlQgcmVnaW1lbiBjb21wb3NpdGlvbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTFBWL3IgLSBISVYuRC5ERTE0MSIKLyogRW5kIG9mIExQVi9yIEQuREUxNDEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxNDIgLSBEUlYvcgpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRyZWF0ZWQgd2l0aCBkYXJ1bmF2aXIvcml0b25hdmlyIChEUlYvcikKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkRSVi9yIEQuREUxNDIiOgogIGV4aXN0cyAiRFJWL3IgRC5ERTE0MiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkRSVi9yIEQuREUxNDIgT2JzZXJ2YXRpb24iCmRlZmluZSAiRFJWL3IgRC5ERTE0MiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJEUlYvciAtIEhJVi5ELkRFMTQyIl0KZGVmaW5lICJEUlYvciBELkRFMTQyIE9ic2VydmF0aW9uIjoKICAiQVJUIHJlZ2ltZW4gY29tcG9zaXRpb24gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkRSVi9yIC0gSElWLkQuREUxNDIiCi8qIEVuZCBvZiBEUlYvciBELkRFMTQyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTQzIC0gUlRWCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVHJlYXRlZCB3aXRoIHJpdG9uYXZpciAoUlRWKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUlRWIjoKICBleGlzdHMgIlJUViBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlJUViBPYnNlcnZhdGlvbiIKZGVmaW5lICJSVFYgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUlRWIl0KZGVmaW5lICJSVFYgT2JzZXJ2YXRpb24iOgogICJBUlQgcmVnaW1lbiBjb21wb3NpdGlvbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUlRWIgovKiBFbmQgb2YgUlRWICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTQ0IC0gRFRHCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVHJlYXRlZCB3aXRoIGRvbHV0ZWdyYXZpciAoRFRHKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRFRHIEQuREUxNDQiOgogIGV4aXN0cyAiRFRHIEQuREUxNDQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJEVEcgRC5ERTE0NCBPYnNlcnZhdGlvbiIKZGVmaW5lICJEVEcgRC5ERTE0NCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJEVEcgLSBISVYuRC5ERTE0NCJdCmRlZmluZSAiRFRHIEQuREUxNDQgT2JzZXJ2YXRpb24iOgogICJBUlQgcmVnaW1lbiBjb21wb3NpdGlvbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRFRHIC0gSElWLkQuREUxNDQiCi8qIEVuZCBvZiBEVEcgRC5ERTE0NCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE0NSAtIFJBTApAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRyZWF0ZWQgd2l0aCByYWx0ZWdyYXZpciAoUkFMKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUkFMIEQuREUxNDUiOgogIGV4aXN0cyAiUkFMIEQuREUxNDUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSQUwgRC5ERTE0NSBPYnNlcnZhdGlvbiIKZGVmaW5lICJSQUwgRC5ERTE0NSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJSQUwgLSBISVYuRC5ERTE0NSJdCmRlZmluZSAiUkFMIEQuREUxNDUgT2JzZXJ2YXRpb24iOgogICJBUlQgcmVnaW1lbiBjb21wb3NpdGlvbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUkFMIC0gSElWLkQuREUxNDUiCi8qIEVuZCBvZiBSQUwgRC5ERTE0NSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE1MiAtIFByZXZlbnRpb24gc2VydmljZXMgb2ZmZXJlZCBhbmQgcmVmZXJyYWxzCkBhY3Rpdml0eTogSElWLkQxMiBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2NyZWVuaW5ncyBhbmQgdGVzdHMKQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3IgcHJldmVudGlvbiBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUHJldmVudGlvbiBzZXJ2aWNlcyBvZmZlcmVkIGFuZCByZWZlcnJhbHMgRC5ERTE1MiI6CiAgZXhpc3RzICJQcmV2ZW50aW9uIHNlcnZpY2VzIG9mZmVyZWQgYW5kIHJlZmVycmFscyBELkRFMTUyIE9ic2VydmF0aW9uIgpkZWZpbmUgIlByZXZlbnRpb24gc2VydmljZXMgb2ZmZXJlZCBhbmQgcmVmZXJyYWxzIEQuREUxNTIgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlByZXZlbnRpb24gc2VydmljZXMgb2ZmZXJlZCBhbmQgcmVmZXJyYWxzIC0gSElWLkQuREUxNTIiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgUHJldmVudGlvbiBzZXJ2aWNlcyBvZmZlcmVkIGFuZCByZWZlcnJhbHMgRC5ERTE1MiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE1MyAtIE9mZmVyIG1hbGUgYW5kIGZlbWFsZSBjb25kb21zIGFuZCBjb25kb20tY29tcGF0aWJsZSBsdWJyaWNhbnRzCkBhY3Rpdml0eTogSElWLkQyNiBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBtYWxlIGFuZCBmZW1hbGUgY29uZG9tcyBhbmQgY29uZG9tLWNvbXBhdGlibGUgbHVicmljYW50cwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT2ZmZXIgbWFsZSBhbmQgZmVtYWxlIGNvbmRvbXMgYW5kIGNvbmRvbS1jb21wYXRpYmxlIGx1YnJpY2FudHMgRC5ERTE1MyI6CiAgZXhpc3RzICJPZmZlciBtYWxlIGFuZCBmZW1hbGUgY29uZG9tcyBhbmQgY29uZG9tLWNvbXBhdGlibGUgbHVicmljYW50cyBELkRFMTUzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiT2ZmZXIgbWFsZSBhbmQgZmVtYWxlIGNvbmRvbXMgYW5kIGNvbmRvbS1jb21wYXRpYmxlIGx1YnJpY2FudHMgRC5ERTE1MyBPYnNlcnZhdGlvbiIKZGVmaW5lICJPZmZlciBtYWxlIGFuZCBmZW1hbGUgY29uZG9tcyBhbmQgY29uZG9tLWNvbXBhdGlibGUgbHVicmljYW50cyBELkRFMTUzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk9mZmVyIG1hbGUgYW5kIGZlbWFsZSBjb25kb21zIGFuZCBjb25kb20tY29tcGF0aWJsZSBsdWJyaWNhbnRzIC0gSElWLkQuREUxNTMiXQpkZWZpbmUgIk9mZmVyIG1hbGUgYW5kIGZlbWFsZSBjb25kb21zIGFuZCBjb25kb20tY29tcGF0aWJsZSBsdWJyaWNhbnRzIEQuREUxNTMgT2JzZXJ2YXRpb24iOgogICJQcmV2ZW50aW9uIHNlcnZpY2VzIG9mZmVyZWQgYW5kIHJlZmVycmFscyBELkRFMTUyIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJPZmZlciBtYWxlIGFuZCBmZW1hbGUgY29uZG9tcyBhbmQgY29uZG9tLWNvbXBhdGlibGUgbHVicmljYW50cyAtIEhJVi5ELkRFMTUzIgovKiBFbmQgb2YgT2ZmZXIgbWFsZSBhbmQgZmVtYWxlIGNvbmRvbXMgYW5kIGNvbmRvbS1jb21wYXRpYmxlIGx1YnJpY2FudHMgRC5ERTE1MyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE1NCAtIEhhcm0gcmVkdWN0aW9uIGZvciBwZW9wbGUgd2hvIGluamVjdCBkcnVncwpAYWN0aXZpdHk6IEhJVi5EMTIgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNjcmVlbmluZ3MgYW5kIHRlc3RzCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgdG8gaGFybSByZWR1Y3Rpb24gc2VydmljZXMgKG5lZWRsZSBhbmQgc3lyaW5nZSBwcm9ncmFtbWVzLCBvcGlvaWQgc3Vic3RpdHV0aW9uIHRoZXJhcHksIG90aGVyIGRydWctZGVwZW5kZW5jZSB0cmVhdG1lbnQgYW5kIG9waW9pZCBvdmVyZG9zZSBwcmV2ZW50aW9uIGFuZCBtYW5hZ2VtZW50KQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSGFybSByZWR1Y3Rpb24gZm9yIHBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIEQuREUxNTQiOgogIGV4aXN0cyAiSGFybSByZWR1Y3Rpb24gZm9yIHBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIEQuREUxNTQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJIYXJtIHJlZHVjdGlvbiBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgRC5ERTE1NCBPYnNlcnZhdGlvbiIKZGVmaW5lICJIYXJtIHJlZHVjdGlvbiBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgRC5ERTE1NCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIYXJtIHJlZHVjdGlvbiBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgLSBISVYuRC5ERTE1NCJdCmRlZmluZSAiSGFybSByZWR1Y3Rpb24gZm9yIHBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIEQuREUxNTQgT2JzZXJ2YXRpb24iOgogICJQcmV2ZW50aW9uIHNlcnZpY2VzIG9mZmVyZWQgYW5kIHJlZmVycmFscyBELkRFMTUyIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJIYXJtIHJlZHVjdGlvbiBmb3IgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgLSBISVYuRC5ERTE1NCIKLyogRW5kIG9mIEhhcm0gcmVkdWN0aW9uIGZvciBwZW9wbGUgd2hvIGluamVjdCBkcnVncyBELkRFMTU0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTU1IC0gQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uCkBhY3Rpdml0eTogSElWLkQxMiBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2NyZWVuaW5ncyBhbmQgdGVzdHMKQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciB0byBzZXJ2aWNlcyBmb3IgYmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uLCBwYXJ0aWN1bGFybHkgZm9yIHBlb3BsZSB3aXRoIEhJViBhbmQgbWVtYmVycyBvZiBrZXkgcG9wdWxhdGlvbnMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkJlaGF2aW91cmFsIGludGVydmVudGlvbnMgdG8gc3VwcG9ydCByaXNrIHJlZHVjdGlvbiBELkRFMTU1IjoKICBleGlzdHMgIkJlaGF2aW91cmFsIGludGVydmVudGlvbnMgdG8gc3VwcG9ydCByaXNrIHJlZHVjdGlvbiBELkRFMTU1IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uIEQuREUxNTUgT2JzZXJ2YXRpb24iCmRlZmluZSAiQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uIEQuREUxNTUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uIC0gSElWLkQuREUxNTUiXQpkZWZpbmUgIkJlaGF2aW91cmFsIGludGVydmVudGlvbnMgdG8gc3VwcG9ydCByaXNrIHJlZHVjdGlvbiBELkRFMTU1IE9ic2VydmF0aW9uIjoKICAiUHJldmVudGlvbiBzZXJ2aWNlcyBvZmZlcmVkIGFuZCByZWZlcnJhbHMgRC5ERTE1MiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQmVoYXZpb3VyYWwgaW50ZXJ2ZW50aW9ucyB0byBzdXBwb3J0IHJpc2sgcmVkdWN0aW9uIC0gSElWLkQuREUxNTUiCi8qIEVuZCBvZiBCZWhhdmlvdXJhbCBpbnRlcnZlbnRpb25zIHRvIHN1cHBvcnQgcmlzayByZWR1Y3Rpb24gRC5ERTE1NSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE1NiAtIFNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzCkBhY3Rpdml0eTogSElWLkQxMiBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2NyZWVuaW5ncyBhbmQgdGVzdHMKQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciB0byBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzIEQuREUxNTYiOgogIGV4aXN0cyAiU2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIGludGVncmF0ZWQgc2VydmljZXMgRC5ERTE1NiBPYnNlcnZhdGlvbiIKZGVmaW5lICJTZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggaW50ZWdyYXRlZCBzZXJ2aWNlcyBELkRFMTU2IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJTZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggaW50ZWdyYXRlZCBzZXJ2aWNlcyAtIEhJVi5ELkRFMTU2Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzIEQuREUxNTYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxNTcgLSBDb250cmFjZXB0aW9uIGFuZCBmYW1pbHkgcGxhbm5pbmcKQGFjdGl2aXR5OiBISVYuRDEyIERldGVybWluZSByZWNvbW1lbmRlZCBzY3JlZW5pbmdzIGFuZCB0ZXN0cwpAZGVzY3JpcHRpb246IE9mZmVyIGNvbnRyYWNlcHRpb24gYW5kIGZhbWlseSBwbGFubmluZyBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ29udHJhY2VwdGlvbiBhbmQgZmFtaWx5IHBsYW5uaW5nIEQuREUxNTciOgogIGV4aXN0cyAiQ29udHJhY2VwdGlvbiBhbmQgZmFtaWx5IHBsYW5uaW5nIEQuREUxNTcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDb250cmFjZXB0aW9uIGFuZCBmYW1pbHkgcGxhbm5pbmcgRC5ERTE1NyBPYnNlcnZhdGlvbiIKZGVmaW5lICJDb250cmFjZXB0aW9uIGFuZCBmYW1pbHkgcGxhbm5pbmcgRC5ERTE1NyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDb250cmFjZXB0aW9uIGFuZCBmYW1pbHkgcGxhbm5pbmcgLSBISVYuRC5ERTE1NyJdCmRlZmluZSAiQ29udHJhY2VwdGlvbiBhbmQgZmFtaWx5IHBsYW5uaW5nIEQuREUxNTcgT2JzZXJ2YXRpb24iOgogICJTZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggaW50ZWdyYXRlZCBzZXJ2aWNlcyBELkRFMTU2IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDb250cmFjZXB0aW9uIGFuZCBmYW1pbHkgcGxhbm5pbmcgLSBISVYuRC5ERTE1NyIKLyogRW5kIG9mIENvbnRyYWNlcHRpb24gYW5kIGZhbWlseSBwbGFubmluZyBELkRFMTU3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTU4IC0gQ2hlY2sgcHJlZ25hbmN5IHN0YXR1cwpAYWN0aXZpdHk6IEhJVi5EMTIgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNjcmVlbmluZ3MgYW5kIHRlc3RzCkBkZXNjcmlwdGlvbjogQ2hlY2sgd29tYW4ncyBwcmVnbmFuY3kgc3RhdHVzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDaGVjayBwcmVnbmFuY3kgc3RhdHVzIEQuREUxNTgiOgogIGV4aXN0cyAiQ2hlY2sgcHJlZ25hbmN5IHN0YXR1cyBELkRFMTU4IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ2hlY2sgcHJlZ25hbmN5IHN0YXR1cyBELkRFMTU4IE9ic2VydmF0aW9uIgpkZWZpbmUgIkNoZWNrIHByZWduYW5jeSBzdGF0dXMgRC5ERTE1OCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDaGVjayBwcmVnbmFuY3kgc3RhdHVzIC0gSElWLkQuREUxNTgiXQpkZWZpbmUgIkNoZWNrIHByZWduYW5jeSBzdGF0dXMgRC5ERTE1OCBPYnNlcnZhdGlvbiI6CiAgIlNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBpbnRlZ3JhdGVkIHNlcnZpY2VzIEQuREUxNTYgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNoZWNrIHByZWduYW5jeSBzdGF0dXMgLSBISVYuRC5ERTE1OCIKLyogRW5kIG9mIENoZWNrIHByZWduYW5jeSBzdGF0dXMgRC5ERTE1OCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE1OSAtIFByZXZlbnRpb24gb2YgbW90aGVyLXRvLWNoaWxkIHRyYW5zbWlzc2lvbgpAYWN0aXZpdHk6IEhJVi5EMTIgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNjcmVlbmluZ3MgYW5kIHRlc3RzCkBkZXNjcmlwdGlvbjogT2ZmZXIgcHJldmVudGlvbiBvZiBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uIHNlcnZpY2VzIChjb3Vuc2VsbGluZykKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlByZXZlbnRpb24gb2YgbW90aGVyLXRvLWNoaWxkIHRyYW5zbWlzc2lvbiI6CiAgZXhpc3RzICJQcmV2ZW50aW9uIG9mIG1vdGhlci10by1jaGlsZCB0cmFuc21pc3Npb24gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQcmV2ZW50aW9uIG9mIG1vdGhlci10by1jaGlsZCB0cmFuc21pc3Npb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiUHJldmVudGlvbiBvZiBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlByZXZlbnRpb24gb2YgbW90aGVyLXRvLWNoaWxkIHRyYW5zbWlzc2lvbiJdCmRlZmluZSAiUHJldmVudGlvbiBvZiBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uIE9ic2VydmF0aW9uIjoKICAiU2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIGludGVncmF0ZWQgc2VydmljZXMgRC5ERTE1NiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHJldmVudGlvbiBvZiBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uIgovKiBFbmQgb2YgUHJldmVudGlvbiBvZiBtb3RoZXItdG8tY2hpbGQgdHJhbnNtaXNzaW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTYwIC0gU1RJIHRlc3RpbmcgYW5kIHRyZWF0bWVudApAYWN0aXZpdHk6IEhJVi5EMTIgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNjcmVlbmluZ3MgYW5kIHRlc3RzCkBkZXNjcmlwdGlvbjogT2ZmZXIgU1RJIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU1RJIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBELkRFMTYwIjoKICBleGlzdHMgIlNUSSB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQgRC5ERTE2MCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlNUSSB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQgRC5ERTE2MCBPYnNlcnZhdGlvbiIKZGVmaW5lICJTVEkgdGVzdGluZyBhbmQgdHJlYXRtZW50IEQuREUxNjAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU1RJIHRlc3RpbmcgYW5kIHRyZWF0bWVudCAtIEhJVi5ELkRFMTYwIl0KZGVmaW5lICJTVEkgdGVzdGluZyBhbmQgdHJlYXRtZW50IEQuREUxNjAgT2JzZXJ2YXRpb24iOgogICJTZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggaW50ZWdyYXRlZCBzZXJ2aWNlcyBELkRFMTU2IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTVEkgdGVzdGluZyBhbmQgdHJlYXRtZW50IC0gSElWLkQuREUxNjAiCi8qIEVuZCBvZiBTVEkgdGVzdGluZyBhbmQgdHJlYXRtZW50IEQuREUxNjAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxNjEgLSBIQnNBZyB0ZXN0IGRhdGUKQGFjdGl2aXR5OiBISVYuRDEyIERldGVybWluZSByZWNvbW1lbmRlZCBzY3JlZW5pbmdzIGFuZCB0ZXN0cwpAZGVzY3JpcHRpb246IERhdGUgY2xpZW50IHdhcyB0ZXN0ZWQgZm9yIGhlcGF0aXRpcyBCIHZpcnVzIChIQlYpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIQnNBZyB0ZXN0IGRhdGUgRC5ERTE2MSI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSEJzQWcgdGVzdCBkYXRlIC0gSElWLkQuREUxNjEiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkhCc0FnIHRlc3QgZGF0ZSBELkRFMTYxIFZhbHVlIjoKICAiSEJzQWcgdGVzdCBkYXRlIEQuREUxNjEiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgSEJzQWcgdGVzdCBkYXRlIEQuREUxNjEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxNjIgLSBIQnNBZyB0ZXN0IHJlc3VsdApAYWN0aXZpdHk6IEhJVi5EMTIgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNjcmVlbmluZ3MgYW5kIHRlc3RzCkBkZXNjcmlwdGlvbjogSGVwYXRpdGlzIEIgdmlydXMgdGVzdCByZXN1bHQgKEhCc0FnKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSEJzQWcgdGVzdCByZXN1bHQgRC5ERTE2MiI6CiAgZXhpc3RzICJIQnNBZyB0ZXN0IHJlc3VsdCBELkRFMTYyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkhCc0FnIHRlc3QgcmVzdWx0IEQuREUxNjIgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhCc0FnIHRlc3QgcmVzdWx0IC0gSElWLkQuREUxNjIiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgSEJzQWcgdGVzdCByZXN1bHQgRC5ERTE2MiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE2MyAtIFBvc2l0aXZlCkBhY3Rpdml0eTogSElWLkQxMiBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2NyZWVuaW5ncyBhbmQgdGVzdHMKQGRlc2NyaXB0aW9uOiBIQnNBZyB0ZXN0IHJlc3VsdCB3YXMgcG9zaXRpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBvc2l0aXZlIEQuREUxNjMiOgogIGV4aXN0cyAiUG9zaXRpdmUgRC5ERTE2MyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlBvc2l0aXZlIEQuREUxNjMgT2JzZXJ2YXRpb24iCmRlZmluZSAiUG9zaXRpdmUgRC5ERTE2MyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQb3NpdGl2ZSAtIEhJVi5ELkRFMTYzIl0KZGVmaW5lICJQb3NpdGl2ZSBELkRFMTYzIE9ic2VydmF0aW9uIjoKICAiSEJzQWcgdGVzdCByZXN1bHQgRC5ERTE2MiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUG9zaXRpdmUgLSBISVYuRC5ERTE2MyIKLyogRW5kIG9mIFBvc2l0aXZlIEQuREUxNjMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxNjQgLSBOZWdhdGl2ZQpAYWN0aXZpdHk6IEhJVi5EMTIgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNjcmVlbmluZ3MgYW5kIHRlc3RzCkBkZXNjcmlwdGlvbjogSEJzQWcgdGVzdCByZXN1bHQgd2FzIG5lZ2F0aXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOZWdhdGl2ZSBELkRFMTY0IjoKICBleGlzdHMgIk5lZ2F0aXZlIEQuREUxNjQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJOZWdhdGl2ZSBELkRFMTY0IE9ic2VydmF0aW9uIgpkZWZpbmUgIk5lZ2F0aXZlIEQuREUxNjQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTmVnYXRpdmUgLSBISVYuRC5ERTE2NCJdCmRlZmluZSAiTmVnYXRpdmUgRC5ERTE2NCBPYnNlcnZhdGlvbiI6CiAgIkhCc0FnIHRlc3QgcmVzdWx0IEQuREUxNjIgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5lZ2F0aXZlIC0gSElWLkQuREUxNjQiCi8qIEVuZCBvZiBOZWdhdGl2ZSBELkRFMTY0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTY1IC0gSW5kZXRlcm1pbmF0ZQpAYWN0aXZpdHk6IEhJVi5EMTIgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNjcmVlbmluZ3MgYW5kIHRlc3RzCkBkZXNjcmlwdGlvbjogSEJzQWcgdGVzdCByZXN1bHQgd2FzIGluZGV0ZXJtaW5hdGUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkluZGV0ZXJtaW5hdGUgRC5ERTE2NSI6CiAgZXhpc3RzICJJbmRldGVybWluYXRlIEQuREUxNjUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJJbmRldGVybWluYXRlIEQuREUxNjUgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW5kZXRlcm1pbmF0ZSBELkRFMTY1IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkluZGV0ZXJtaW5hdGUgLSBISVYuRC5ERTE2NSJdCmRlZmluZSAiSW5kZXRlcm1pbmF0ZSBELkRFMTY1IE9ic2VydmF0aW9uIjoKICAiSEJzQWcgdGVzdCByZXN1bHQgRC5ERTE2MiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW5kZXRlcm1pbmF0ZSAtIEhJVi5ELkRFMTY1IgovKiBFbmQgb2YgSW5kZXRlcm1pbmF0ZSBELkRFMTY1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTY3IC0gSEJWIHRyZWF0bWVudCBUREYgc3RhcnQgZGF0ZQpAYWN0aXZpdHk6IEhJVi5EMTIgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNjcmVlbmluZ3MgYW5kIHRlc3RzCkBkZXNjcmlwdGlvbjogRGF0ZSB3aGVuIGNsaWVudCBzdGFydGVkIHRyZWF0bWVudCAoVERGKSBmb3IgaGVwYXRpdGlzIEIgdmlydXMgKEhCVikKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhCViB0cmVhdG1lbnQgVERGIHN0YXJ0IGRhdGUiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhCViB0cmVhdG1lbnQgVERGIHN0YXJ0IGRhdGUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkhCViB0cmVhdG1lbnQgVERGIHN0YXJ0IGRhdGUgVmFsdWUiOgogICJIQlYgdHJlYXRtZW50IFRERiBzdGFydCBkYXRlIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIEhCViB0cmVhdG1lbnQgVERGIHN0YXJ0IGRhdGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxNjkgLSBIQ1YgdGVzdCBkYXRlCkBhY3Rpdml0eTogSElWLkQxMiBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2NyZWVuaW5ncyBhbmQgdGVzdHMKQGRlc2NyaXB0aW9uOiBEYXRlIGNsaWVudCB3YXMgdGVzdGVkIGZvciBoZXBhdGl0aXMgQyB2aXJ1cyAoSENWIGFudGlib2R5LCBIQ1YgUk5BIG9yIEhDViBjb3JlIGFudGlnZW4pCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIQ1YgdGVzdCBkYXRlIEQuREUxNjkiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhDViB0ZXN0IGRhdGUgLSBISVYuRC5ERTE2OSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiSENWIHRlc3QgZGF0ZSBELkRFMTY5IFZhbHVlIjoKICAiSENWIHRlc3QgZGF0ZSBELkRFMTY5IiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIEhDViB0ZXN0IGRhdGUgRC5ERTE2OSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE3MCAtIEhDViB0ZXN0IHJlc3VsdApAYWN0aXZpdHk6IEhJVi5EMTIgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNjcmVlbmluZ3MgYW5kIHRlc3RzCkBkZXNjcmlwdGlvbjogSGVwYXRpdGlzIEMgdmlydXMgdGVzdCByZXN1bHQgKEhDViBhbnRpYm9keSwgSENWIFJOQSBvciBIQ1YgY29yZSBhbnRpZ2VuKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSENWIHRlc3QgcmVzdWx0IEQuREUxNzAiOgogIGV4aXN0cyAiSENWIHRlc3QgcmVzdWx0IEQuREUxNzAgT2JzZXJ2YXRpb24iCmRlZmluZSAiSENWIHRlc3QgcmVzdWx0IEQuREUxNzAgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhDViB0ZXN0IHJlc3VsdCAtIEhJVi5ELkRFMTcwIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEhDViB0ZXN0IHJlc3VsdCBELkRFMTcwICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTcxIC0gUG9zaXRpdmUKQGFjdGl2aXR5OiBISVYuRDEyIERldGVybWluZSByZWNvbW1lbmRlZCBzY3JlZW5pbmdzIGFuZCB0ZXN0cwpAZGVzY3JpcHRpb246IEhDViB0ZXN0IHJlc3VsdCB3YXMgcG9zaXRpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBvc2l0aXZlIEQuREUxNzEiOgogIGV4aXN0cyAiUG9zaXRpdmUgRC5ERTE3MSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlBvc2l0aXZlIEQuREUxNzEgT2JzZXJ2YXRpb24iCmRlZmluZSAiUG9zaXRpdmUgRC5ERTE3MSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQb3NpdGl2ZSAtIEhJVi5ELkRFMTcxIl0KZGVmaW5lICJQb3NpdGl2ZSBELkRFMTcxIE9ic2VydmF0aW9uIjoKICAiSENWIHRlc3QgcmVzdWx0IEQuREUxNzAgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlBvc2l0aXZlIC0gSElWLkQuREUxNzEiCi8qIEVuZCBvZiBQb3NpdGl2ZSBELkRFMTcxICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTcyIC0gTmVnYXRpdmUKQGFjdGl2aXR5OiBISVYuRDEyIERldGVybWluZSByZWNvbW1lbmRlZCBzY3JlZW5pbmdzIGFuZCB0ZXN0cwpAZGVzY3JpcHRpb246IEhDViB0ZXN0IHJlc3VsdCB3YXMgbmVnYXRpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk5lZ2F0aXZlIEQuREUxNzIiOgogIGV4aXN0cyAiTmVnYXRpdmUgRC5ERTE3MiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk5lZ2F0aXZlIEQuREUxNzIgT2JzZXJ2YXRpb24iCmRlZmluZSAiTmVnYXRpdmUgRC5ERTE3MiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOZWdhdGl2ZSAtIEhJVi5ELkRFMTcyIl0KZGVmaW5lICJOZWdhdGl2ZSBELkRFMTcyIE9ic2VydmF0aW9uIjoKICAiSENWIHRlc3QgcmVzdWx0IEQuREUxNzAgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5lZ2F0aXZlIC0gSElWLkQuREUxNzIiCi8qIEVuZCBvZiBOZWdhdGl2ZSBELkRFMTcyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTczIC0gSW5kZXRlcm1pbmF0ZQpAYWN0aXZpdHk6IEhJVi5EMTIgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNjcmVlbmluZ3MgYW5kIHRlc3RzCkBkZXNjcmlwdGlvbjogSENWIHRlc3QgcmVzdWx0IHdhcyBpbmRldGVybWluYXRlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJJbmRldGVybWluYXRlIEQuREUxNzMiOgogIGV4aXN0cyAiSW5kZXRlcm1pbmF0ZSBELkRFMTczIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW5kZXRlcm1pbmF0ZSBELkRFMTczIE9ic2VydmF0aW9uIgpkZWZpbmUgIkluZGV0ZXJtaW5hdGUgRC5ERTE3MyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJJbmRldGVybWluYXRlIC0gSElWLkQuREUxNzMiXQpkZWZpbmUgIkluZGV0ZXJtaW5hdGUgRC5ERTE3MyBPYnNlcnZhdGlvbiI6CiAgIkhDViB0ZXN0IHJlc3VsdCBELkRFMTcwIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJJbmRldGVybWluYXRlIC0gSElWLkQuREUxNzMiCi8qIEVuZCBvZiBJbmRldGVybWluYXRlIEQuREUxNzMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxNzUgLSBIQ1YgdHJlYXRtZW50IHN0YXJ0IGRhdGUKQGFjdGl2aXR5OiBISVYuRDEyIERldGVybWluZSByZWNvbW1lbmRlZCBzY3JlZW5pbmdzIGFuZCB0ZXN0cwpAZGVzY3JpcHRpb246IERhdGUgd2hlbiBjbGllbnQgc3RhcnRlZCB0cmVhdG1lbnQgZm9yIGhlcGF0aXRpcyBDIHZpcnVzIChIQ1YpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIQ1YgdHJlYXRtZW50IHN0YXJ0IGRhdGUiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhDViB0cmVhdG1lbnQgc3RhcnQgZGF0ZSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiSENWIHRyZWF0bWVudCBzdGFydCBkYXRlIFZhbHVlIjoKICAiSENWIHRyZWF0bWVudCBzdGFydCBkYXRlIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIEhDViB0cmVhdG1lbnQgc3RhcnQgZGF0ZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE3NiAtIEhDViB0cmVhdG1lbnQgY29tcGxldGlvbiBkYXRlCkBhY3Rpdml0eTogSElWLkQxMiBEZXRlcm1pbmUgcmVjb21tZW5kZWQgc2NyZWVuaW5ncyBhbmQgdGVzdHMKQGRlc2NyaXB0aW9uOiBEYXRlIHdoZW4gY2xpZW50IGNvbXBsZXRlZCB0cmVhdG1lbnQgZm9yIGhlcGF0aXRpcyBDIHZpcnVzIChIQ1YpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIQ1YgdHJlYXRtZW50IGNvbXBsZXRpb24gZGF0ZSI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSENWIHRyZWF0bWVudCBjb21wbGV0aW9uIGRhdGUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkhDViB0cmVhdG1lbnQgY29tcGxldGlvbiBkYXRlIFZhbHVlIjoKICAiSENWIHRyZWF0bWVudCBjb21wbGV0aW9uIGRhdGUiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgSENWIHRyZWF0bWVudCBjb21wbGV0aW9uIGRhdGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxNzggLSBIQ1YgdmlyYWwgbG9hZCB0ZXN0IGRhdGUKQGFjdGl2aXR5OiBISVYuRDEyIERldGVybWluZSByZWNvbW1lbmRlZCBzY3JlZW5pbmdzIGFuZCB0ZXN0cwpAZGVzY3JpcHRpb246IEhlcGF0aXRpcyBDIHZpcmFsIGxvYWQgdGVzdCBkYXRlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIQ1YgdmlyYWwgbG9hZCB0ZXN0IGRhdGUgRC5ERTE3OCI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSENWIHZpcmFsIGxvYWQgdGVzdCBkYXRlIC0gSElWLkQuREUxNzgiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkhDViB2aXJhbCBsb2FkIHRlc3QgZGF0ZSBELkRFMTc4IFZhbHVlIjoKICAiSENWIHZpcmFsIGxvYWQgdGVzdCBkYXRlIEQuREUxNzgiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgSENWIHZpcmFsIGxvYWQgdGVzdCBkYXRlIEQuREUxNzggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxNzkgLSBIQ1YgdmlyYWwgbG9hZCB0ZXN0IHJlc3VsdApAYWN0aXZpdHk6IEhJVi5EMTIgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNjcmVlbmluZ3MgYW5kIHRlc3RzCkBkZXNjcmlwdGlvbjogSGVwYXRpdGlzIEMgdmlyYWwgbG9hZCB0ZXN0IHJlc3VsdCAocXVhbGl0YXRpdmUpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIQ1YgdmlyYWwgbG9hZCB0ZXN0IHJlc3VsdCBELkRFMTc5IjoKICBleGlzdHMgIkhDViB2aXJhbCBsb2FkIHRlc3QgcmVzdWx0IEQuREUxNzkgT2JzZXJ2YXRpb24iCmRlZmluZSAiSENWIHZpcmFsIGxvYWQgdGVzdCByZXN1bHQgRC5ERTE3OSBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSENWIHZpcmFsIGxvYWQgdGVzdCByZXN1bHQgLSBISVYuRC5ERTE3OSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBIQ1YgdmlyYWwgbG9hZCB0ZXN0IHJlc3VsdCBELkRFMTc5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTgwIC0gRGV0ZWN0ZWQKQGFjdGl2aXR5OiBISVYuRDEyIERldGVybWluZSByZWNvbW1lbmRlZCBzY3JlZW5pbmdzIGFuZCB0ZXN0cwpAZGVzY3JpcHRpb246IEhDViB3YXMgZGV0ZWN0ZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkRldGVjdGVkIEQuREUxODAiOgogIGV4aXN0cyAiRGV0ZWN0ZWQgRC5ERTE4MCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkRldGVjdGVkIEQuREUxODAgT2JzZXJ2YXRpb24iCmRlZmluZSAiRGV0ZWN0ZWQgRC5ERTE4MCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJEZXRlY3RlZCAtIEhJVi5ELkRFMTgwIl0KZGVmaW5lICJEZXRlY3RlZCBELkRFMTgwIE9ic2VydmF0aW9uIjoKICAiSENWIHZpcmFsIGxvYWQgdGVzdCByZXN1bHQgRC5ERTE3OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRGV0ZWN0ZWQgLSBISVYuRC5ERTE4MCIKLyogRW5kIG9mIERldGVjdGVkIEQuREUxODAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxODEgLSBOb3QgZGV0ZWN0ZWQKQGFjdGl2aXR5OiBISVYuRDEyIERldGVybWluZSByZWNvbW1lbmRlZCBzY3JlZW5pbmdzIGFuZCB0ZXN0cwpAZGVzY3JpcHRpb246IEhDViB3YXMgbm90IGRldGVjdGVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOb3QgZGV0ZWN0ZWQgRC5ERTE4MSI6CiAgZXhpc3RzICJOb3QgZGV0ZWN0ZWQgRC5ERTE4MSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk5vdCBkZXRlY3RlZCBELkRFMTgxIE9ic2VydmF0aW9uIgpkZWZpbmUgIk5vdCBkZXRlY3RlZCBELkRFMTgxIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5vdCBkZXRlY3RlZCAtIEhJVi5ELkRFMTgxIl0KZGVmaW5lICJOb3QgZGV0ZWN0ZWQgRC5ERTE4MSBPYnNlcnZhdGlvbiI6CiAgIkhDViB2aXJhbCBsb2FkIHRlc3QgcmVzdWx0IEQuREUxNzkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5vdCBkZXRlY3RlZCAtIEhJVi5ELkRFMTgxIgovKiBFbmQgb2YgTm90IGRldGVjdGVkIEQuREUxODEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxODIgLSBIQ1YgbWVkaWNpbmUgdHlwZQpAYWN0aXZpdHk6IEhJVi5EMTIgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNjcmVlbmluZ3MgYW5kIHRlc3RzCkBkZXNjcmlwdGlvbjogVHlwZSBvZiBtZWRpY2luZSBjbGllbnQgaXMgcHJlc2NyaWJlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSENWIG1lZGljaW5lIHR5cGUiOgogIGV4aXN0cyAiSENWIG1lZGljaW5lIHR5cGUgT2JzZXJ2YXRpb24iCmRlZmluZSAiSENWIG1lZGljaW5lIHR5cGUgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhDViBtZWRpY2luZSB0eXBlIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEhDViBtZWRpY2luZSB0eXBlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTgzIC0gSW50ZXJmZXJvbgpAYWN0aXZpdHk6IEhJVi5EMTIgRGV0ZXJtaW5lIHJlY29tbWVuZGVkIHNjcmVlbmluZ3MgYW5kIHRlc3RzCkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIHByZXNjcmliZWQgaW50ZXJmZXJvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW50ZXJmZXJvbiI6CiAgZXhpc3RzICJJbnRlcmZlcm9uIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW50ZXJmZXJvbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJJbnRlcmZlcm9uIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkludGVyZmVyb24iXQpkZWZpbmUgIkludGVyZmVyb24gT2JzZXJ2YXRpb24iOgogICJIQ1YgbWVkaWNpbmUgdHlwZSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW50ZXJmZXJvbiIKLyogRW5kIG9mIEludGVyZmVyb24gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxODQgLSBEaXJlY3QgYWN0aW5nIGFudGl2aXJhbHMKQGFjdGl2aXR5OiBISVYuRDEyIERldGVybWluZSByZWNvbW1lbmRlZCBzY3JlZW5pbmdzIGFuZCB0ZXN0cwpAZGVzY3JpcHRpb246IENsaWVudCBpcyBwcmVzY3JpYmVkIGRpcmVjdCBhY3RpbmcgYW50aXZpcmFscwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGlyZWN0IGFjdGluZyBhbnRpdmlyYWxzIjoKICBleGlzdHMgIkRpcmVjdCBhY3RpbmcgYW50aXZpcmFscyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkRpcmVjdCBhY3RpbmcgYW50aXZpcmFscyBPYnNlcnZhdGlvbiIKZGVmaW5lICJEaXJlY3QgYWN0aW5nIGFudGl2aXJhbHMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRGlyZWN0IGFjdGluZyBhbnRpdmlyYWxzIl0KZGVmaW5lICJEaXJlY3QgYWN0aW5nIGFudGl2aXJhbHMgT2JzZXJ2YXRpb24iOgogICJIQ1YgbWVkaWNpbmUgdHlwZSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRGlyZWN0IGFjdGluZyBhbnRpdmlyYWxzIgovKiBFbmQgb2YgRGlyZWN0IGFjdGluZyBhbnRpdmlyYWxzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTg1IC0gQ3VycmVudGx5IG9uIFRERi1iYXNlZCBBUlQKQGFjdGl2aXR5OiBISVYuRDEyIERldGVybWluZSByZWNvbW1lbmRlZCBzY3JlZW5pbmdzIGFuZCB0ZXN0cwpAZGVzY3JpcHRpb246IENsaWVudCBpcyBjdXJyZW50bHkgb24gVERGLWJhc2VkIEFSVCByZWdpbWVuCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDdXJyZW50bHkgb24gVERGLWJhc2VkIEFSVCI6CiAgZXhpc3RzICJDdXJyZW50bHkgb24gVERGLWJhc2VkIEFSVCBPYnNlcnZhdGlvbiIKZGVmaW5lICJDdXJyZW50bHkgb24gVERGLWJhc2VkIEFSVCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQ3VycmVudGx5IG9uIFRERi1iYXNlZCBBUlQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBDdXJyZW50bHkgb24gVERGLWJhc2VkIEFSVCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE4NiAtIEhJViBjbGluaWNhbCBzdGFnZQpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFdITyBjbGluaWNhbCBzdGFnZSBvZiBjbGllbnQgYmFzZWQgb24gc2lnbnMgYW5kIHN5bXB0b21zLiBXSE8gY2xpbmljYWwgc3RhZ2luZyBpcyBhIHdheSB0byBjYXRlZ29yaXplIEhJViBkaXNlYXNlIHNldmVyaXR5IGJhc2VkIG9uIG5ldyBvciByZWN1cnJlbnQgY2xpbmljYWwgZXZlbnRzLiBUaGVyZSBhcmUgNCBXSE8gY2xpbmljYWwgc3RhZ2VzIHRoYXQgcmFuZ2UgZnJvbSBtaWxkIHN5bXB0b21zIChXSE8gY2xpbmljYWwgc3RhZ2UgMSkgdG8gc2V2ZXJlIHN5bXB0b21zIChXSE8gY2xpbmljYWwgc3RhZ2UgNCkuCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYgY2xpbmljYWwgc3RhZ2UgRC5ERTE4NiI6CiAgZXhpc3RzICJISVYgY2xpbmljYWwgc3RhZ2UgRC5ERTE4NiBPYnNlcnZhdGlvbiIKZGVmaW5lICJISVYgY2xpbmljYWwgc3RhZ2UgRC5ERTE4NiBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSElWIGNsaW5pY2FsIHN0YWdlIC0gSElWLkQuREUxODYiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgSElWIGNsaW5pY2FsIHN0YWdlIEQuREUxODYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxODcgLSBXSE8gSElWIGNsaW5pY2FsIHN0YWdlIDEKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgY3VycmVudGx5IGFzc2Vzc2VkIHRvIGJlIGF0IGEgY2xpbmljYWwgc3RhZ2UgMSwgYmFzZWQgb24gY2xpbmljYWwgYXNzZXNzbWVudCBhbmQgZGlhZ25vc3RpY3MKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgMSI6CiAgZXhpc3RzICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIDEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIDEgT2JzZXJ2YXRpb24iCmRlZmluZSAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSAxIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIldITyBISVYgY2xpbmljYWwgc3RhZ2UgMSJdCmRlZmluZSAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSAxIE9ic2VydmF0aW9uIjoKICAiSElWIGNsaW5pY2FsIHN0YWdlIEQuREUxODYgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIldITyBISVYgY2xpbmljYWwgc3RhZ2UgMSIKLyogRW5kIG9mIFdITyBISVYgY2xpbmljYWwgc3RhZ2UgMSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE4OCAtIFdITyBISVYgY2xpbmljYWwgc3RhZ2UgMgpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCBpcyBjdXJyZW50bHkgYXNzZXNzZWQgdG8gYmUgYXQgYSBjbGluaWNhbCBzdGFnZSAyLCBiYXNlZCBvbiBjbGluaWNhbCBhc3Nlc3NtZW50IGFuZCBkaWFnbm9zdGljcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSAyIjoKICBleGlzdHMgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgMiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgMiBPYnNlcnZhdGlvbiIKZGVmaW5lICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIDIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iV0hPIEhJViBjbGluaWNhbCBzdGFnZSAyIl0KZGVmaW5lICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIDIgT2JzZXJ2YXRpb24iOgogICJISVYgY2xpbmljYWwgc3RhZ2UgRC5ERTE4NiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iV0hPIEhJViBjbGluaWNhbCBzdGFnZSAyIgovKiBFbmQgb2YgV0hPIEhJViBjbGluaWNhbCBzdGFnZSAyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTg5IC0gV0hPIEhJViBjbGluaWNhbCBzdGFnZSAzCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGN1cnJlbnRseSBhc3Nlc3NlZCB0byBiZSBhdCBhIGNsaW5pY2FsIHN0YWdlIDMsIGJhc2VkIG9uIGNsaW5pY2FsIGFzc2Vzc21lbnQgYW5kIGRpYWdub3N0aWNzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIDMiOgogIGV4aXN0cyAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSAzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSAzIE9ic2VydmF0aW9uIgpkZWZpbmUgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgMyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIDMiXQpkZWZpbmUgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgMyBPYnNlcnZhdGlvbiI6CiAgIkhJViBjbGluaWNhbCBzdGFnZSBELkRFMTg2IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIDMiCi8qIEVuZCBvZiBXSE8gSElWIGNsaW5pY2FsIHN0YWdlIDMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxOTAgLSBXSE8gSElWIGNsaW5pY2FsIHN0YWdlIDQKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgY3VycmVudGx5IGFzc2Vzc2VkIHRvIGJlIGF0IGEgY2xpbmljYWwgc3RhZ2UgNCwgYmFzZWQgb24gY2xpbmljYWwgYXNzZXNzbWVudCBhbmQgZGlhZ25vc3RpY3MKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgNCI6CiAgZXhpc3RzICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIDQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIDQgT2JzZXJ2YXRpb24iCmRlZmluZSAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSA0IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIldITyBISVYgY2xpbmljYWwgc3RhZ2UgNCJdCmRlZmluZSAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSA0IE9ic2VydmF0aW9uIjoKICAiSElWIGNsaW5pY2FsIHN0YWdlIEQuREUxODYgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIldITyBISVYgY2xpbmljYWwgc3RhZ2UgNCIKLyogRW5kIG9mIFdITyBISVYgY2xpbmljYWwgc3RhZ2UgNCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE5MyAtIERhdGUgdmlyYWwgbG9hZCB0ZXN0IHJlc3VsdHMgcmVjZWl2ZWQgYnkgY2xpZW50CkBhY3Rpdml0eTogSElWLkQxMCBDb3Vuc2VsIHJldHVybmluZyBjbGllbnQKQGRlc2NyaXB0aW9uOiBUaGUgZGF0ZSBvbiB3aGljaCB0aGUgY2xpZW50IHJlY2VpdmVkIHJlc3VsdHMgZnJvbSB2aXJhbCBsb2FkIHRlc3QKKi8KCmRlZmluZSAiRGF0ZSB2aXJhbCBsb2FkIHRlc3QgcmVzdWx0cyByZWNlaXZlZCBieSBjbGllbnQgRC5ERTE5MyI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iVmlyYWwgbG9hZCB0ZXN0IHJlc3VsdCAtIEhJVi5ELkRFMzg3Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIERhdGUgdmlyYWwgbG9hZCB0ZXN0IHJlc3VsdHMgcmVjZWl2ZWQgYnkgY2xpZW50IEQuREUxOTMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxOTQgLSBEYXRlIG9mIHZpcmFsIGxvYWQgc2FtcGxlIGNvbGxlY3Rpb24KQGFjdGl2aXR5OiBISVYuRDEwIENvdW5zZWwgcmV0dXJuaW5nIGNsaWVudApAZGVzY3JpcHRpb246IERhdGUgYW5kIHRpbWUgd2hlbiB0aGUgc2FtcGxlIHdhcyBjb2xsZWN0ZWQgdG8gdGVzdCB0aGUgY2xpZW50J3MgSElWIHZpcmFsIGxvYWQKKi8KCmRlZmluZSAiRGF0ZSBvZiB2aXJhbCBsb2FkIHNhbXBsZSBjb2xsZWN0aW9uIEQuREUxOTQiOgogIFtQcm9jZWR1cmVdIFAKICB3aGVyZSBQLnN0YXR1cyA9ICdjb21wbGV0ZWQnCiAgYW5kIFAuY29kZSB+IENvbmNlcHRzQ3VzdG9tLiJ2aXJhbCBsb2FkIHRlc3QiCi8qIEVuZCBvZiBEYXRlIG9mIHZpcmFsIGxvYWQgc2FtcGxlIGNvbGxlY3Rpb24gRC5ERTE5NCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTE5NSAtIERhdGUgb2Ygc2NoZWR1bGVkIHJldmlldyBvZiB2aXJhbCBsb2FkIHRlc3QgcmVzdWx0cwpAYWN0aXZpdHk6IEhJVi5EMTAgQ291bnNlbCByZXR1cm5pbmcgY2xpZW50CkBkZXNjcmlwdGlvbjogRXhwZWN0ZWQgZGF0ZSB3aGVuIGNsaWVudCdzIHZpcmFsIGxvYWQgdGVzdCByZXN1bHRzIHdpbGwgYmUgcmV0dXJuZWQgYW5kIHJldmlld2VkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEYXRlIG9mIHNjaGVkdWxlZCByZXZpZXcgb2YgdmlyYWwgbG9hZCB0ZXN0IHJlc3VsdHMiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkRhdGUgb2Ygc2NoZWR1bGVkIHJldmlldyBvZiB2aXJhbCBsb2FkIHRlc3QgcmVzdWx0cyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRGF0ZSBvZiBzY2hlZHVsZWQgcmV2aWV3IG9mIHZpcmFsIGxvYWQgdGVzdCByZXN1bHRzIFZhbHVlIjoKICAiRGF0ZSBvZiBzY2hlZHVsZWQgcmV2aWV3IG9mIHZpcmFsIGxvYWQgdGVzdCByZXN1bHRzIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIERhdGUgb2Ygc2NoZWR1bGVkIHJldmlldyBvZiB2aXJhbCBsb2FkIHRlc3QgcmVzdWx0cyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTIxNyAtIFJlYXNvbiBBUlQgc3RvcHBlZApAYWN0aXZpdHk6IEhJVi5EMTAgQ291bnNlbCByZXR1cm5pbmcgY2xpZW50CkBkZXNjcmlwdGlvbjogUmVhc29uIGNsaWVudCBpbnRlbnRpb25hbGx5IHN0b3BwZWQgQVJUCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZWFzb24gQVJUIHN0b3BwZWQgRC5ERTIxNyI6CiAgZXhpc3RzICJSZWFzb24gQVJUIHN0b3BwZWQgRC5ERTIxNyBPYnNlcnZhdGlvbiIKZGVmaW5lICJSZWFzb24gQVJUIHN0b3BwZWQgRC5ERTIxNyBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iUmVhc29uIEFSVCBzdG9wcGVkIC0gSElWLkQuREUyMTciXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgUmVhc29uIEFSVCBzdG9wcGVkIEQuREUyMTcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUyMTggLSBUb3hpY2l0eS9zaWRlIGVmZmVjdHMKQGFjdGl2aXR5OiBISVYuRDEwIENvdW5zZWwgcmV0dXJuaW5nIGNsaWVudApAZGVzY3JpcHRpb246IENsaWVudCBzdG9wcGVkIEFSVCBiZWNhdXNlIG9mIHRveGljaXR5L3NpZGUgZWZmZWN0cwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVG94aWNpdHkvc2lkZSBlZmZlY3RzIEQuREUyMTgiOgogIGV4aXN0cyAiVG94aWNpdHkvc2lkZSBlZmZlY3RzIEQuREUyMTggQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJUb3hpY2l0eS9zaWRlIGVmZmVjdHMgRC5ERTIxOCBPYnNlcnZhdGlvbiIKZGVmaW5lICJUb3hpY2l0eS9zaWRlIGVmZmVjdHMgRC5ERTIxOCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJUb3hpY2l0eS9zaWRlIGVmZmVjdHMgLSBISVYuRC5ERTIxOCJdCmRlZmluZSAiVG94aWNpdHkvc2lkZSBlZmZlY3RzIEQuREUyMTggT2JzZXJ2YXRpb24iOgogICJSZWFzb24gQVJUIHN0b3BwZWQgRC5ERTIxNyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVG94aWNpdHkvc2lkZSBlZmZlY3RzIC0gSElWLkQuREUyMTgiCi8qIEVuZCBvZiBUb3hpY2l0eS9zaWRlIGVmZmVjdHMgRC5ERTIxOCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTIxOSAtIFNldmVyZSBpbGxuZXNzLCBob3NwaXRhbGl6YXRpb24KQGFjdGl2aXR5OiBISVYuRDEwIENvdW5zZWwgcmV0dXJuaW5nIGNsaWVudApAZGVzY3JpcHRpb246IENsaWVudCBzdG9wcGVkIEFSVCBiZWNhdXNlIG9mIHNldmVyZSBpbGxuZXNzLCBob3NwaXRhbGl6YXRpb24KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlNldmVyZSBpbGxuZXNzLCBob3NwaXRhbGl6YXRpb24gRC5ERTIxOSI6CiAgZXhpc3RzICJTZXZlcmUgaWxsbmVzcywgaG9zcGl0YWxpemF0aW9uIEQuREUyMTkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJTZXZlcmUgaWxsbmVzcywgaG9zcGl0YWxpemF0aW9uIEQuREUyMTkgT2JzZXJ2YXRpb24iCmRlZmluZSAiU2V2ZXJlIGlsbG5lc3MsIGhvc3BpdGFsaXphdGlvbiBELkRFMjE5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlNldmVyZSBpbGxuZXNzLCBob3NwaXRhbGl6YXRpb24gLSBISVYuRC5ERTIxOSJdCmRlZmluZSAiU2V2ZXJlIGlsbG5lc3MsIGhvc3BpdGFsaXphdGlvbiBELkRFMjE5IE9ic2VydmF0aW9uIjoKICAiUmVhc29uIEFSVCBzdG9wcGVkIEQuREUyMTcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlNldmVyZSBpbGxuZXNzLCBob3NwaXRhbGl6YXRpb24gLSBISVYuRC5ERTIxOSIKLyogRW5kIG9mIFNldmVyZSBpbGxuZXNzLCBob3NwaXRhbGl6YXRpb24gRC5ERTIxOSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTIyMCAtIERydWdzIG91dCBvZiBzdG9jawpAYWN0aXZpdHk6IEhJVi5EMTAgQ291bnNlbCByZXR1cm5pbmcgY2xpZW50CkBkZXNjcmlwdGlvbjogQ2xpZW50IHN0b3BwZWQgQVJUIGJlY2F1c2UgZHJ1Z3Mgd2VyZSBvdXQgb2Ygc3RvY2sKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkRydWdzIG91dCBvZiBzdG9jayI6CiAgZXhpc3RzICJEcnVncyBvdXQgb2Ygc3RvY2sgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJEcnVncyBvdXQgb2Ygc3RvY2sgT2JzZXJ2YXRpb24iCmRlZmluZSAiRHJ1Z3Mgb3V0IG9mIHN0b2NrIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkRydWdzIG91dCBvZiBzdG9jayJdCmRlZmluZSAiRHJ1Z3Mgb3V0IG9mIHN0b2NrIE9ic2VydmF0aW9uIjoKICAiUmVhc29uIEFSVCBzdG9wcGVkIEQuREUyMTcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkRydWdzIG91dCBvZiBzdG9jayIKLyogRW5kIG9mIERydWdzIG91dCBvZiBzdG9jayAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTIyMSAtIENsaWVudCBsYWNrcyBmaW5hbmNlcwpAYWN0aXZpdHk6IEhJVi5EMTAgQ291bnNlbCByZXR1cm5pbmcgY2xpZW50CkBkZXNjcmlwdGlvbjogQ2xpZW50IHN0b3BwZWQgQVJUIGJlY2F1c2Ugb2YgbGFjayBvZiBmaW5hbmNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ2xpZW50IGxhY2tzIGZpbmFuY2VzIjoKICBleGlzdHMgIkNsaWVudCBsYWNrcyBmaW5hbmNlcyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNsaWVudCBsYWNrcyBmaW5hbmNlcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJDbGllbnQgbGFja3MgZmluYW5jZXMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ2xpZW50IGxhY2tzIGZpbmFuY2VzIl0KZGVmaW5lICJDbGllbnQgbGFja3MgZmluYW5jZXMgT2JzZXJ2YXRpb24iOgogICJSZWFzb24gQVJUIHN0b3BwZWQgRC5ERTIxNyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ2xpZW50IGxhY2tzIGZpbmFuY2VzIgovKiBFbmQgb2YgQ2xpZW50IGxhY2tzIGZpbmFuY2VzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMjIyIC0gRXhjbHVkZWQgSElWIGluZmVjdGlvbiBpbiBpbmZhbnQKQGFjdGl2aXR5OiBISVYuRDEwIENvdW5zZWwgcmV0dXJuaW5nIGNsaWVudApAZGVzY3JpcHRpb246IENsaWVudCBzdG9wcGVkIEFSVCBiZWNhdXNlIEhJViBpbmZlY3Rpb24gaW4gaW5mYW50IHdhcyBleGNsdWRlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRXhjbHVkZWQgSElWIGluZmVjdGlvbiBpbiBpbmZhbnQgRC5ERTIyMiI6CiAgZXhpc3RzICJFeGNsdWRlZCBISVYgaW5mZWN0aW9uIGluIGluZmFudCBELkRFMjIyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRXhjbHVkZWQgSElWIGluZmVjdGlvbiBpbiBpbmZhbnQgRC5ERTIyMiBPYnNlcnZhdGlvbiIKZGVmaW5lICJFeGNsdWRlZCBISVYgaW5mZWN0aW9uIGluIGluZmFudCBELkRFMjIyIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkV4Y2x1ZGVkIEhJViBpbmZlY3Rpb24gaW4gaW5mYW50IC0gSElWLkQuREUyMjIiXQpkZWZpbmUgIkV4Y2x1ZGVkIEhJViBpbmZlY3Rpb24gaW4gaW5mYW50IEQuREUyMjIgT2JzZXJ2YXRpb24iOgogICJSZWFzb24gQVJUIHN0b3BwZWQgRC5ERTIxNyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRXhjbHVkZWQgSElWIGluZmVjdGlvbiBpbiBpbmZhbnQgLSBISVYuRC5ERTIyMiIKLyogRW5kIG9mIEV4Y2x1ZGVkIEhJViBpbmZlY3Rpb24gaW4gaW5mYW50IEQuREUyMjIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUyMjMgLSBPdGhlciByZWFzb24gZm9yIHN0b3BwaW5nIEFSVApAYWN0aXZpdHk6IEhJVi5EMTAgQ291bnNlbCByZXR1cm5pbmcgY2xpZW50CkBkZXNjcmlwdGlvbjogQ2xpZW50IHN0b3BwZWQgQVJUIGJlY2F1c2Ugb2Ygb3RoZXIgcmVhc29uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPdGhlciByZWFzb24gZm9yIHN0b3BwaW5nIEFSVCBELkRFMjIzIjoKICBleGlzdHMgIk90aGVyIHJlYXNvbiBmb3Igc3RvcHBpbmcgQVJUIEQuREUyMjMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPdGhlciByZWFzb24gZm9yIHN0b3BwaW5nIEFSVCBELkRFMjIzIE9ic2VydmF0aW9uIgpkZWZpbmUgIk90aGVyIHJlYXNvbiBmb3Igc3RvcHBpbmcgQVJUIEQuREUyMjMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iT3RoZXIgcmVhc29uIGZvciBzdG9wcGluZyBBUlQgLSBISVYuRC5ERTIyMyJdCmRlZmluZSAiT3RoZXIgcmVhc29uIGZvciBzdG9wcGluZyBBUlQgRC5ERTIyMyBPYnNlcnZhdGlvbiI6CiAgIlJlYXNvbiBBUlQgc3RvcHBlZCBELkRFMjE3IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJPdGhlciByZWFzb24gZm9yIHN0b3BwaW5nIEFSVCAtIEhJVi5ELkRFMjIzIgovKiBFbmQgb2YgT3RoZXIgcmVhc29uIGZvciBzdG9wcGluZyBBUlQgRC5ERTIyMyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTIyNSAtIFRyZWF0bWVudCBmYWlsdXJlCkBhY3Rpdml0eTogSElWLkQxNyBDaGVjayBmb3Igc2lnbnMgb2YgdHJlYXRtZW50IGZhaWx1cmUKQGRlc2NyaXB0aW9uOiBBUlQgdHJlYXRtZW50IGZhaWx1cmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlRyZWF0bWVudCBmYWlsdXJlIjoKICBleGlzdHMgIlRyZWF0bWVudCBmYWlsdXJlIE9ic2VydmF0aW9uIgpkZWZpbmUgIlRyZWF0bWVudCBmYWlsdXJlIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJUcmVhdG1lbnQgZmFpbHVyZSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBUcmVhdG1lbnQgZmFpbHVyZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTIyNiAtIENsaW5pY2FsIGZhaWx1cmUKQGFjdGl2aXR5OiBISVYuRDE3IENoZWNrIGZvciBzaWducyBvZiB0cmVhdG1lbnQgZmFpbHVyZQpAZGVzY3JpcHRpb246IE5ldyBvciByZWN1cnJlbnQgY2xpbmljYWwgZXZlbnQgaW5kaWNhdGluZyBzZXZlcmUgaW1tdW5vZGVmaWNpZW5jeSBpbiBhZHVsdHMgb3IgYWR2YW5jZWQgb3Igc2V2ZXJlIGltbXVub2RlZmljaWVuY3kgaW4gY2hpbGRyZW4KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNsaW5pY2FsIGZhaWx1cmUiOgogIGV4aXN0cyAiQ2xpbmljYWwgZmFpbHVyZSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNsaW5pY2FsIGZhaWx1cmUgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ2xpbmljYWwgZmFpbHVyZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDbGluaWNhbCBmYWlsdXJlIl0KZGVmaW5lICJDbGluaWNhbCBmYWlsdXJlIE9ic2VydmF0aW9uIjoKICAiVHJlYXRtZW50IGZhaWx1cmUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNsaW5pY2FsIGZhaWx1cmUiCi8qIEVuZCBvZiBDbGluaWNhbCBmYWlsdXJlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMjI3IC0gSW1tdW5vbG9naWNhbCBmYWlsdXJlCkBhY3Rpdml0eTogSElWLkQxNyBDaGVjayBmb3Igc2lnbnMgb2YgdHJlYXRtZW50IGZhaWx1cmUKQGRlc2NyaXB0aW9uOiBDRDQgY291bnQgYXQgb3IgYmVsb3cgMjUwIGNlbGxzL21tMyBmb2xsb3dpbmcgY2xpbmljYWwgZmFpbHVyZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW1tdW5vbG9naWNhbCBmYWlsdXJlIjoKICBleGlzdHMgIkltbXVub2xvZ2ljYWwgZmFpbHVyZSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkltbXVub2xvZ2ljYWwgZmFpbHVyZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJJbW11bm9sb2dpY2FsIGZhaWx1cmUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW1tdW5vbG9naWNhbCBmYWlsdXJlIl0KZGVmaW5lICJJbW11bm9sb2dpY2FsIGZhaWx1cmUgT2JzZXJ2YXRpb24iOgogICJUcmVhdG1lbnQgZmFpbHVyZSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW1tdW5vbG9naWNhbCBmYWlsdXJlIgovKiBFbmQgb2YgSW1tdW5vbG9naWNhbCBmYWlsdXJlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMjI4IC0gVmlyb2xvZ2ljYWwgZmFpbHVyZQpAYWN0aXZpdHk6IEhJVi5EMTcgQ2hlY2sgZm9yIHNpZ25zIG9mIHRyZWF0bWVudCBmYWlsdXJlCkBkZXNjcmlwdGlvbjogVGhlIGluYWJpbGl0eSB0byBhY2hpZXZlIG9yIG1haW50YWluIHZpcmFsIHN1cHByZXNzaW9uIGJlbG93IGEgY2VydGFpbiB0aHJlc2hvbGQgaW5kaWNhdGVkIGJ5IHZpcmFsIGxvYWQgYWJvdmUgMTAwMCBjb3BpZXMvbUwgYmFzZWQgb24gdHdvIGNvbnNlY3V0aXZlIHZpcmFsIGxvYWQgbWVhc3VyZW1lbnRzIGluIDMgbW9udGhzLCB3aXRoIGFkaGVyZW5jZSBzdXBwb3J0IGZvbGxvd2luZyB0aGUgZmlyc3QgdmlyYWwgbG9hZCB0ZXN0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJWaXJvbG9naWNhbCBmYWlsdXJlIjoKICBleGlzdHMgIlZpcm9sb2dpY2FsIGZhaWx1cmUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJWaXJvbG9naWNhbCBmYWlsdXJlIE9ic2VydmF0aW9uIgpkZWZpbmUgIlZpcm9sb2dpY2FsIGZhaWx1cmUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVmlyb2xvZ2ljYWwgZmFpbHVyZSJdCmRlZmluZSAiVmlyb2xvZ2ljYWwgZmFpbHVyZSBPYnNlcnZhdGlvbiI6CiAgIlRyZWF0bWVudCBmYWlsdXJlIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJWaXJvbG9naWNhbCBmYWlsdXJlIgovKiBFbmQgb2YgVmlyb2xvZ2ljYWwgZmFpbHVyZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTI1OSAtIFJpc2sgZmFjdG9ycywgY29tb3JiaWRpdGllcyBhbmQgY29pbmZlY3Rpb25zIHNpZ25zIGFuZCBzeW1wdG9tcwpAYWN0aXZpdHk6IEhJVi5EMTQgUHJldmVudCwgc2NyZWVuLCBhbmQgbWFuYWdlIGNvbW9yYmlkaXRpZXMgYW5kIGNvaW5mZWN0aW9ucwpAZGVzY3JpcHRpb246IFNpZ25zIGFuZCBzeW1wdG9tcyBvZiBvcHBvcnR1bmlzdGljIGluZmVjdGlvbnMgb3Igb3RoZXIgY29tb3JiaWRpdGllcyBleHBlcmllbmNlZCBieSBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlJpc2sgZmFjdG9ycywgY29tb3JiaWRpdGllcyBhbmQgY29pbmZlY3Rpb25zIHNpZ25zIGFuZCBzeW1wdG9tcyI6CiAgZXhpc3RzICJSaXNrIGZhY3RvcnMsIGNvbW9yYmlkaXRpZXMgYW5kIGNvaW5mZWN0aW9ucyBzaWducyBhbmQgc3ltcHRvbXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiUmlzayBmYWN0b3JzLCBjb21vcmJpZGl0aWVzIGFuZCBjb2luZmVjdGlvbnMgc2lnbnMgYW5kIHN5bXB0b21zIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJSaXNrIGZhY3RvcnMsIGNvbW9yYmlkaXRpZXMgYW5kIGNvaW5mZWN0aW9ucyBzaWducyBhbmQgc3ltcHRvbXMiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgUmlzayBmYWN0b3JzLCBjb21vcmJpZGl0aWVzIGFuZCBjb2luZmVjdGlvbnMgc2lnbnMgYW5kIHN5bXB0b21zICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMjgyIC0gUHJlc3VtcHRpdmUgVEIKQGFjdGl2aXR5OiBISVYuRDE0IFByZXZlbnQsIHNjcmVlbiwgYW5kIG1hbmFnZSBjb21vcmJpZGl0aWVzIGFuZCBjb2luZmVjdGlvbnMKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBjb21vcmJpZGl0aWVzIG9yIGNvaW5mZWN0aW9ucyBvciBzeW1wdG9tcyBvZiB0aGVzZSBpbmNsdWRlIHByZXN1bXB0aXZlIFRCCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQcmVzdW1wdGl2ZSBUQiBELkRFMjgyIjoKICBleGlzdHMgIlByZXN1bXB0aXZlIFRCIEQuREUyODIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQcmVzdW1wdGl2ZSBUQiBELkRFMjgyIE9ic2VydmF0aW9uIgpkZWZpbmUgIlByZXN1bXB0aXZlIFRCIEQuREUyODIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUHJlc3VtcHRpdmUgVEIgLSBISVYuRC5ERTI4MiJdCmRlZmluZSAiUHJlc3VtcHRpdmUgVEIgRC5ERTI4MiBPYnNlcnZhdGlvbiI6CiAgIlJpc2sgZmFjdG9ycywgY29tb3JiaWRpdGllcyBhbmQgY29pbmZlY3Rpb25zIHNpZ25zIGFuZCBzeW1wdG9tcyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHJlc3VtcHRpdmUgVEIgLSBISVYuRC5ERTI4MiIKLyogRW5kIG9mIFByZXN1bXB0aXZlIFRCIEQuREUyODIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUyODkgLSBXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogTmV3IG9yIHJlY3VycmVudCBjbGluaWNhbCBldmVudHMgdXNlZCB0byBjYXRlZ29yaXplIEhJViBkaXNlYXNlIHNldmVyaXR5IGJhc2VkIGF0IGJhc2VsaW5lIGFuZCBmb2xsb3cgdXAKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSI6CiAgZXhpc3RzICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iCmRlZmluZSAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIC0gSElWLkQuREUyODkiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMjkwIC0gQXN5bXB0b21hdGljCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogTm8gSElWLXJlbGF0ZWQgc3ltcHRvbXMgcmVwb3J0ZWQgYW5kIG5vIGNsaW5pY2FsIHNpZ25zIG9uIGV4YW1pbmF0aW9uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBc3ltcHRvbWF0aWMiOgogIGV4aXN0cyAiQXN5bXB0b21hdGljIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQXN5bXB0b21hdGljIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFzeW1wdG9tYXRpYyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBc3ltcHRvbWF0aWMiXQpkZWZpbmUgIkFzeW1wdG9tYXRpYyBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQXN5bXB0b21hdGljIgovKiBFbmQgb2YgQXN5bXB0b21hdGljICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMjkxIC0gUGVyc2lzdGVudCBnZW5lcmFsaXplZCBseW1waGFkZW5vcGF0aHkKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBQZXJzaXN0ZW50IGVubGFyZ2VkIGx5bXBoIG5vZGVzID4xIGNtIGF0IHR3byBvciBtb3JlIG5vbi1jb250aWd1b3VzIHNpdGVzIChleGNsdWRpbmcgaW5ndWluYWwpIHdpdGhvdXQga25vd24gY2F1c2UKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBlcnNpc3RlbnQgZ2VuZXJhbGl6ZWQgbHltcGhhZGVub3BhdGh5IjoKICBleGlzdHMgIlBlcnNpc3RlbnQgZ2VuZXJhbGl6ZWQgbHltcGhhZGVub3BhdGh5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUGVyc2lzdGVudCBnZW5lcmFsaXplZCBseW1waGFkZW5vcGF0aHkgT2JzZXJ2YXRpb24iCmRlZmluZSAiUGVyc2lzdGVudCBnZW5lcmFsaXplZCBseW1waGFkZW5vcGF0aHkgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUGVyc2lzdGVudCBnZW5lcmFsaXplZCBseW1waGFkZW5vcGF0aHkiXQpkZWZpbmUgIlBlcnNpc3RlbnQgZ2VuZXJhbGl6ZWQgbHltcGhhZGVub3BhdGh5IE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQZXJzaXN0ZW50IGdlbmVyYWxpemVkIGx5bXBoYWRlbm9wYXRoeSIKLyogRW5kIG9mIFBlcnNpc3RlbnQgZ2VuZXJhbGl6ZWQgbHltcGhhZGVub3BhdGh5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMjkyIC0gTW9kZXJhdGUgdW5leHBsYWluZWQgd2VpZ2h0IGxvc3MKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBNb2RlcmF0ZSB1bmV4cGxhaW5lZCB3ZWlnaHQgbG9zcyAoPDEwJSBvZiBwcmVzdW1lZCBvciBtZWFzdXJlZCBib2R5IHdlaWdodCkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk1vZGVyYXRlIHVuZXhwbGFpbmVkIHdlaWdodCBsb3NzIjoKICBleGlzdHMgIk1vZGVyYXRlIHVuZXhwbGFpbmVkIHdlaWdodCBsb3NzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTW9kZXJhdGUgdW5leHBsYWluZWQgd2VpZ2h0IGxvc3MgT2JzZXJ2YXRpb24iCmRlZmluZSAiTW9kZXJhdGUgdW5leHBsYWluZWQgd2VpZ2h0IGxvc3MgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTW9kZXJhdGUgdW5leHBsYWluZWQgd2VpZ2h0IGxvc3MiXQpkZWZpbmUgIk1vZGVyYXRlIHVuZXhwbGFpbmVkIHdlaWdodCBsb3NzIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJNb2RlcmF0ZSB1bmV4cGxhaW5lZCB3ZWlnaHQgbG9zcyIKLyogRW5kIG9mIE1vZGVyYXRlIHVuZXhwbGFpbmVkIHdlaWdodCBsb3NzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMjkzIC0gUmVjdXJyZW50IHJlc3BpcmF0b3J5IHRyYWN0IGluZmVjdGlvbnMKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIHJlY3VycmVudCByZXNwaXJhdG9yeSB0cmFjdCBpbmZlY3Rpb25zIGluY2x1ZGluZyBzaW51c2l0aXMsIHRvbnNpbGxpdGlzLCBvdGl0aXMgbWVkaWEgb3IgcGhhcnluZ2l0aXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlJlY3VycmVudCByZXNwaXJhdG9yeSB0cmFjdCBpbmZlY3Rpb25zIjoKICBleGlzdHMgIlJlY3VycmVudCByZXNwaXJhdG9yeSB0cmFjdCBpbmZlY3Rpb25zIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUmVjdXJyZW50IHJlc3BpcmF0b3J5IHRyYWN0IGluZmVjdGlvbnMgT2JzZXJ2YXRpb24iCmRlZmluZSAiUmVjdXJyZW50IHJlc3BpcmF0b3J5IHRyYWN0IGluZmVjdGlvbnMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUmVjdXJyZW50IHJlc3BpcmF0b3J5IHRyYWN0IGluZmVjdGlvbnMiXQpkZWZpbmUgIlJlY3VycmVudCByZXNwaXJhdG9yeSB0cmFjdCBpbmZlY3Rpb25zIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJSZWN1cnJlbnQgcmVzcGlyYXRvcnkgdHJhY3QgaW5mZWN0aW9ucyIKLyogRW5kIG9mIFJlY3VycmVudCByZXNwaXJhdG9yeSB0cmFjdCBpbmZlY3Rpb25zICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMjk0IC0gVW5leHBsYWluZWQgcGVyc2lzdGVudCBoZXBhdG9zcGxlbm9tZWdhbHkKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIHVuZXhwbGFpbmVkIHBlcnNpc3RlbnQgaGVwYXRvc3BsZW5vbWVnYWx5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJVbmV4cGxhaW5lZCBwZXJzaXN0ZW50IGhlcGF0b3NwbGVub21lZ2FseSI6CiAgZXhpc3RzICJVbmV4cGxhaW5lZCBwZXJzaXN0ZW50IGhlcGF0b3NwbGVub21lZ2FseSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlVuZXhwbGFpbmVkIHBlcnNpc3RlbnQgaGVwYXRvc3BsZW5vbWVnYWx5IE9ic2VydmF0aW9uIgpkZWZpbmUgIlVuZXhwbGFpbmVkIHBlcnNpc3RlbnQgaGVwYXRvc3BsZW5vbWVnYWx5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlVuZXhwbGFpbmVkIHBlcnNpc3RlbnQgaGVwYXRvc3BsZW5vbWVnYWx5Il0KZGVmaW5lICJVbmV4cGxhaW5lZCBwZXJzaXN0ZW50IGhlcGF0b3NwbGVub21lZ2FseSBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVW5leHBsYWluZWQgcGVyc2lzdGVudCBoZXBhdG9zcGxlbm9tZWdhbHkiCi8qIEVuZCBvZiBVbmV4cGxhaW5lZCBwZXJzaXN0ZW50IGhlcGF0b3NwbGVub21lZ2FseSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTI5NSAtIEhlcnBlcyB6b3N0ZXIKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIGhlcnBlcyB6b3N0ZXIKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhlcnBlcyB6b3N0ZXIiOgogIGV4aXN0cyAiSGVycGVzIHpvc3RlciBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhlcnBlcyB6b3N0ZXIgT2JzZXJ2YXRpb24iCmRlZmluZSAiSGVycGVzIHpvc3RlciBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIZXJwZXMgem9zdGVyIl0KZGVmaW5lICJIZXJwZXMgem9zdGVyIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJIZXJwZXMgem9zdGVyIgovKiBFbmQgb2YgSGVycGVzIHpvc3RlciAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTI5NiAtIEFuZ3VsYXIgY2hlaWxpdGlzCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSBhbmd1bGFyIGNoZWlsaXRpcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQW5ndWxhciBjaGVpbGl0aXMiOgogIGV4aXN0cyAiQW5ndWxhciBjaGVpbGl0aXMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBbmd1bGFyIGNoZWlsaXRpcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJBbmd1bGFyIGNoZWlsaXRpcyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBbmd1bGFyIGNoZWlsaXRpcyJdCmRlZmluZSAiQW5ndWxhciBjaGVpbGl0aXMgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkFuZ3VsYXIgY2hlaWxpdGlzIgovKiBFbmQgb2YgQW5ndWxhciBjaGVpbGl0aXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUyOTcgLSBMaW5lYXIgZ2luZ2l2YWwgZXJ5dGhlbWEKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIGxpbmVhciBnaW5naXZhbCBlcnl0aGVtYQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTGluZWFyIGdpbmdpdmFsIGVyeXRoZW1hIjoKICBleGlzdHMgIkxpbmVhciBnaW5naXZhbCBlcnl0aGVtYSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkxpbmVhciBnaW5naXZhbCBlcnl0aGVtYSBPYnNlcnZhdGlvbiIKZGVmaW5lICJMaW5lYXIgZ2luZ2l2YWwgZXJ5dGhlbWEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTGluZWFyIGdpbmdpdmFsIGVyeXRoZW1hIl0KZGVmaW5lICJMaW5lYXIgZ2luZ2l2YWwgZXJ5dGhlbWEgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkxpbmVhciBnaW5naXZhbCBlcnl0aGVtYSIKLyogRW5kIG9mIExpbmVhciBnaW5naXZhbCBlcnl0aGVtYSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTI5OCAtIFJlY3VycmVudCBvcmFsIHVsY2VyYXRpb24KQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIHJlY3VycmVudCBvcmFsIHVsY2VyYXRpb24KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlJlY3VycmVudCBvcmFsIHVsY2VyYXRpb24iOgogIGV4aXN0cyAiUmVjdXJyZW50IG9yYWwgdWxjZXJhdGlvbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlJlY3VycmVudCBvcmFsIHVsY2VyYXRpb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiUmVjdXJyZW50IG9yYWwgdWxjZXJhdGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJSZWN1cnJlbnQgb3JhbCB1bGNlcmF0aW9uIl0KZGVmaW5lICJSZWN1cnJlbnQgb3JhbCB1bGNlcmF0aW9uIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJSZWN1cnJlbnQgb3JhbCB1bGNlcmF0aW9uIgovKiBFbmQgb2YgUmVjdXJyZW50IG9yYWwgdWxjZXJhdGlvbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTI5OSAtIFBhcHVsYXIgcHJ1cml0aWMgZXJ1cHRpb24KQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIHBhcHVsYXIgcHJ1cml0aWMgZXJ1cHRpb24KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBhcHVsYXIgcHJ1cml0aWMgZXJ1cHRpb24iOgogIGV4aXN0cyAiUGFwdWxhciBwcnVyaXRpYyBlcnVwdGlvbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlBhcHVsYXIgcHJ1cml0aWMgZXJ1cHRpb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiUGFwdWxhciBwcnVyaXRpYyBlcnVwdGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQYXB1bGFyIHBydXJpdGljIGVydXB0aW9uIl0KZGVmaW5lICJQYXB1bGFyIHBydXJpdGljIGVydXB0aW9uIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQYXB1bGFyIHBydXJpdGljIGVydXB0aW9uIgovKiBFbmQgb2YgUGFwdWxhciBwcnVyaXRpYyBlcnVwdGlvbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTMwMCAtIEZ1bmdhbCBuYWlsIGluZmVjdGlvbnMKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIGZ1bmdhbCBuYWlsIGluZmVjdGlvbnMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkZ1bmdhbCBuYWlsIGluZmVjdGlvbnMiOgogIGV4aXN0cyAiRnVuZ2FsIG5haWwgaW5mZWN0aW9ucyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkZ1bmdhbCBuYWlsIGluZmVjdGlvbnMgT2JzZXJ2YXRpb24iCmRlZmluZSAiRnVuZ2FsIG5haWwgaW5mZWN0aW9ucyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJGdW5nYWwgbmFpbCBpbmZlY3Rpb25zIl0KZGVmaW5lICJGdW5nYWwgbmFpbCBpbmZlY3Rpb25zIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJGdW5nYWwgbmFpbCBpbmZlY3Rpb25zIgovKiBFbmQgb2YgRnVuZ2FsIG5haWwgaW5mZWN0aW9ucyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTMwMSAtIFNlYm9ycmhvZWljIGRlcm1hdGl0aXMKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIHNlYm9ycmhvZWljIGRlcm1hdGl0aXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlNlYm9ycmhvZWljIGRlcm1hdGl0aXMiOgogIGV4aXN0cyAiU2Vib3JyaG9laWMgZGVybWF0aXRpcyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlNlYm9ycmhvZWljIGRlcm1hdGl0aXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiU2Vib3JyaG9laWMgZGVybWF0aXRpcyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTZWJvcnJob2VpYyBkZXJtYXRpdGlzIl0KZGVmaW5lICJTZWJvcnJob2VpYyBkZXJtYXRpdGlzIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTZWJvcnJob2VpYyBkZXJtYXRpdGlzIgovKiBFbmQgb2YgU2Vib3JyaG9laWMgZGVybWF0aXRpcyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTMwMiAtIEV4dGVuc2l2ZSB3YXJ0IHZpcnVzIGluZmVjdGlvbgpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgZXh0ZW5zaXZlIHdhcnQgdmlydXMgaW5mZWN0aW9uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJFeHRlbnNpdmUgd2FydCB2aXJ1cyBpbmZlY3Rpb24iOgogIGV4aXN0cyAiRXh0ZW5zaXZlIHdhcnQgdmlydXMgaW5mZWN0aW9uIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRXh0ZW5zaXZlIHdhcnQgdmlydXMgaW5mZWN0aW9uIE9ic2VydmF0aW9uIgpkZWZpbmUgIkV4dGVuc2l2ZSB3YXJ0IHZpcnVzIGluZmVjdGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJFeHRlbnNpdmUgd2FydCB2aXJ1cyBpbmZlY3Rpb24iXQpkZWZpbmUgIkV4dGVuc2l2ZSB3YXJ0IHZpcnVzIGluZmVjdGlvbiBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRXh0ZW5zaXZlIHdhcnQgdmlydXMgaW5mZWN0aW9uIgovKiBFbmQgb2YgRXh0ZW5zaXZlIHdhcnQgdmlydXMgaW5mZWN0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzAzIC0gRXh0ZW5zaXZlIG1vbGx1c2N1bSBjb250YWdpb3N1bQpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgZXh0ZW5zaXZlIG1vbGx1c2N1bSBjb250YWdpb3N1bQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRXh0ZW5zaXZlIG1vbGx1c2N1bSBjb250YWdpb3N1bSI6CiAgZXhpc3RzICJFeHRlbnNpdmUgbW9sbHVzY3VtIGNvbnRhZ2lvc3VtIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRXh0ZW5zaXZlIG1vbGx1c2N1bSBjb250YWdpb3N1bSBPYnNlcnZhdGlvbiIKZGVmaW5lICJFeHRlbnNpdmUgbW9sbHVzY3VtIGNvbnRhZ2lvc3VtIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkV4dGVuc2l2ZSBtb2xsdXNjdW0gY29udGFnaW9zdW0iXQpkZWZpbmUgIkV4dGVuc2l2ZSBtb2xsdXNjdW0gY29udGFnaW9zdW0gT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkV4dGVuc2l2ZSBtb2xsdXNjdW0gY29udGFnaW9zdW0iCi8qIEVuZCBvZiBFeHRlbnNpdmUgbW9sbHVzY3VtIGNvbnRhZ2lvc3VtICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzA0IC0gVW5leHBsYWluZWQgcGVyc2lzdGVudCBwYXJvdGlkIGVubGFyZ2VtZW50CkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSB1bmV4cGxhaW5lZCBwZXJzaXN0ZW50IHBhcm90aWQgZW5sYXJnZW1lbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlVuZXhwbGFpbmVkIHBlcnNpc3RlbnQgcGFyb3RpZCBlbmxhcmdlbWVudCI6CiAgZXhpc3RzICJVbmV4cGxhaW5lZCBwZXJzaXN0ZW50IHBhcm90aWQgZW5sYXJnZW1lbnQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVbmV4cGxhaW5lZCBwZXJzaXN0ZW50IHBhcm90aWQgZW5sYXJnZW1lbnQgT2JzZXJ2YXRpb24iCmRlZmluZSAiVW5leHBsYWluZWQgcGVyc2lzdGVudCBwYXJvdGlkIGVubGFyZ2VtZW50IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlVuZXhwbGFpbmVkIHBlcnNpc3RlbnQgcGFyb3RpZCBlbmxhcmdlbWVudCJdCmRlZmluZSAiVW5leHBsYWluZWQgcGVyc2lzdGVudCBwYXJvdGlkIGVubGFyZ2VtZW50IE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJVbmV4cGxhaW5lZCBwZXJzaXN0ZW50IHBhcm90aWQgZW5sYXJnZW1lbnQiCi8qIEVuZCBvZiBVbmV4cGxhaW5lZCBwZXJzaXN0ZW50IHBhcm90aWQgZW5sYXJnZW1lbnQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMDUgLSBVbmV4cGxhaW5lZCBzZXZlcmUgd2VpZ2h0IGxvc3MgaW4gYWR1bHRzCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogVW5leHBsYWluZWQgc2V2ZXJlIHdlaWdodCBsb3NzICg+MTAlIG9mIHByZXN1bWVkIG9yIG1lYXN1cmVkIGJvZHkgd2VpZ2h0KQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVW5leHBsYWluZWQgc2V2ZXJlIHdlaWdodCBsb3NzIGluIGFkdWx0cyI6CiAgZXhpc3RzICJVbmV4cGxhaW5lZCBzZXZlcmUgd2VpZ2h0IGxvc3MgaW4gYWR1bHRzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVW5leHBsYWluZWQgc2V2ZXJlIHdlaWdodCBsb3NzIGluIGFkdWx0cyBPYnNlcnZhdGlvbiIKZGVmaW5lICJVbmV4cGxhaW5lZCBzZXZlcmUgd2VpZ2h0IGxvc3MgaW4gYWR1bHRzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlVuZXhwbGFpbmVkIHNldmVyZSB3ZWlnaHQgbG9zcyBpbiBhZHVsdHMiXQpkZWZpbmUgIlVuZXhwbGFpbmVkIHNldmVyZSB3ZWlnaHQgbG9zcyBpbiBhZHVsdHMgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlVuZXhwbGFpbmVkIHNldmVyZSB3ZWlnaHQgbG9zcyBpbiBhZHVsdHMiCi8qIEVuZCBvZiBVbmV4cGxhaW5lZCBzZXZlcmUgd2VpZ2h0IGxvc3MgaW4gYWR1bHRzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzA2IC0gVW5leHBsYWluZWQgbW9kZXJhdGUgbWFsbnV0cml0aW9uIG5vdCBhZGVxdWF0ZWx5IHJlc3BvbmRpbmcgdG8gc3RhbmRhcmQgdGhlcmFweQpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IERlZmluZWQgYXMgd2VpZ2h0LWZvci1oZWlnaHQgPCAtIDIgei1zY29yZSBvciBtaWQtdXBwZXIgYXJtIGNpcmN1bWZlcmVuY2UgMTE1IG1tIHRvIDwxMjUgbW0uIEZvciBjaGlsZHJlbiB5b3VuZ2VyIHRoYW4gZml2ZSB5ZWFycyBvZiBhZ2U6IHN0dW50aW5nIGlzIGRlZmluZWQgYXMgc2V2ZXJlIGFjdXRlIG1hbG51dHJpdGlvbiAtIGVpdGhlciB3ZWlnaHQgZm9yIGhlaWdodCA8IC0zIHotc2NvcmUgb3IgbWlkLXVwcGVyIGFybSBjaXJjdW1mZXJlbmNlIDwxMTUgbW0gb3IgdGhlIHByZXNlbmNlIG9mIG9lZGVtYS4KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlVuZXhwbGFpbmVkIG1vZGVyYXRlIG1hbG51dHJpdGlvbiBub3QgYWRlcXVhdGVseSByZXNwb25kaW5nIHRvIHN0YW5kYXJkIHRoZXJhcHkiOgogIGV4aXN0cyAiVW5leHBsYWluZWQgbW9kZXJhdGUgbWFsbnV0cml0aW9uIG5vdCBhZGVxdWF0ZWx5IHJlc3BvbmRpbmcgdG8gc3RhbmRhcmQgdGhlcmFweSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlVuZXhwbGFpbmVkIG1vZGVyYXRlIG1hbG51dHJpdGlvbiBub3QgYWRlcXVhdGVseSByZXNwb25kaW5nIHRvIHN0YW5kYXJkIHRoZXJhcHkgT2JzZXJ2YXRpb24iCmRlZmluZSAiVW5leHBsYWluZWQgbW9kZXJhdGUgbWFsbnV0cml0aW9uIG5vdCBhZGVxdWF0ZWx5IHJlc3BvbmRpbmcgdG8gc3RhbmRhcmQgdGhlcmFweSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJVbmV4cGxhaW5lZCBtb2RlcmF0ZSBtYWxudXRyaXRpb24gbm90IGFkZXF1YXRlbHkgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5Il0KZGVmaW5lICJVbmV4cGxhaW5lZCBtb2RlcmF0ZSBtYWxudXRyaXRpb24gbm90IGFkZXF1YXRlbHkgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5IE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJVbmV4cGxhaW5lZCBtb2RlcmF0ZSBtYWxudXRyaXRpb24gbm90IGFkZXF1YXRlbHkgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5IgovKiBFbmQgb2YgVW5leHBsYWluZWQgbW9kZXJhdGUgbWFsbnV0cml0aW9uIG5vdCBhZGVxdWF0ZWx5IHJlc3BvbmRpbmcgdG8gc3RhbmRhcmQgdGhlcmFweSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTMwNyAtIFVuZXhwbGFpbmVkIGNocm9uaWMgZGlhcnJob2VhIGZvciBsb25nZXIgdGhhbiAxIG1vbnRoCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSB1bmV4cGxhaW5lZCBjaHJvbmljIGRpYXJyaG9lYSBmb3IgbG9uZ2VyIHRoYW4gMSBtb250aAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVW5leHBsYWluZWQgY2hyb25pYyBkaWFycmhvZWEgZm9yIGxvbmdlciB0aGFuIDEgbW9udGgiOgogIGV4aXN0cyAiVW5leHBsYWluZWQgY2hyb25pYyBkaWFycmhvZWEgZm9yIGxvbmdlciB0aGFuIDEgbW9udGggQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVbmV4cGxhaW5lZCBjaHJvbmljIGRpYXJyaG9lYSBmb3IgbG9uZ2VyIHRoYW4gMSBtb250aCBPYnNlcnZhdGlvbiIKZGVmaW5lICJVbmV4cGxhaW5lZCBjaHJvbmljIGRpYXJyaG9lYSBmb3IgbG9uZ2VyIHRoYW4gMSBtb250aCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJVbmV4cGxhaW5lZCBjaHJvbmljIGRpYXJyaG9lYSBmb3IgbG9uZ2VyIHRoYW4gMSBtb250aCJdCmRlZmluZSAiVW5leHBsYWluZWQgY2hyb25pYyBkaWFycmhvZWEgZm9yIGxvbmdlciB0aGFuIDEgbW9udGggT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlVuZXhwbGFpbmVkIGNocm9uaWMgZGlhcnJob2VhIGZvciBsb25nZXIgdGhhbiAxIG1vbnRoIgovKiBFbmQgb2YgVW5leHBsYWluZWQgY2hyb25pYyBkaWFycmhvZWEgZm9yIGxvbmdlciB0aGFuIDEgbW9udGggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMDggLSBVbmV4cGxhaW5lZCBwZXJzaXN0ZW50IGRpYXJyaG9lYSAxNCBkYXlzIG9yIG1vcmUKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIHVuZXhwbGFpbmVkIHBlcnNpc3RlbnQgZGlhcnJob2VhICgxNCBkYXlzIG9yIG1vcmUpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJVbmV4cGxhaW5lZCBwZXJzaXN0ZW50IGRpYXJyaG9lYSAxNCBkYXlzIG9yIG1vcmUiOgogIGV4aXN0cyAiVW5leHBsYWluZWQgcGVyc2lzdGVudCBkaWFycmhvZWEgMTQgZGF5cyBvciBtb3JlIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVW5leHBsYWluZWQgcGVyc2lzdGVudCBkaWFycmhvZWEgMTQgZGF5cyBvciBtb3JlIE9ic2VydmF0aW9uIgpkZWZpbmUgIlVuZXhwbGFpbmVkIHBlcnNpc3RlbnQgZGlhcnJob2VhIDE0IGRheXMgb3IgbW9yZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJVbmV4cGxhaW5lZCBwZXJzaXN0ZW50IGRpYXJyaG9lYSAxNCBkYXlzIG9yIG1vcmUiXQpkZWZpbmUgIlVuZXhwbGFpbmVkIHBlcnNpc3RlbnQgZGlhcnJob2VhIDE0IGRheXMgb3IgbW9yZSBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVW5leHBsYWluZWQgcGVyc2lzdGVudCBkaWFycmhvZWEgMTQgZGF5cyBvciBtb3JlIgovKiBFbmQgb2YgVW5leHBsYWluZWQgcGVyc2lzdGVudCBkaWFycmhvZWEgMTQgZGF5cyBvciBtb3JlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzA5IC0gVW5leHBsYWluZWQgcGVyc2lzdGVudCBmZXZlciBhYm92ZSAzNy41IEMsIGludGVybWl0dGVudCBvciBjb25zdGFudCwgZm9yIGxvbmdlciB0aGFuIG9uZSAxIG1vbnRoCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSB1bmV4cGxhaW5lZCBwZXJzaXN0ZW50IGZldmVyIChhYm92ZSAzNy41IEMsIGludGVybWl0dGVudCBvciBjb25zdGFudCwgZm9yIGxvbmdlciB0aGFuIG9uZSAxIG1vbnRoKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVW5leHBsYWluZWQgcGVyc2lzdGVudCBmZXZlciBhYm92ZSAzNy41IEMsIGludGVybWl0dGVudCBvciBjb25zdGFudCwgZm9yIGxvbmdlciB0aGFuIG9uZSAxIG1vbnRoIjoKICBleGlzdHMgIlVuZXhwbGFpbmVkIHBlcnNpc3RlbnQgZmV2ZXIgYWJvdmUgMzcuNSBDLCBpbnRlcm1pdHRlbnQgb3IgY29uc3RhbnQsIGZvciBsb25nZXIgdGhhbiBvbmUgMSBtb250aCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlVuZXhwbGFpbmVkIHBlcnNpc3RlbnQgZmV2ZXIgYWJvdmUgMzcuNSBDLCBpbnRlcm1pdHRlbnQgb3IgY29uc3RhbnQsIGZvciBsb25nZXIgdGhhbiBvbmUgMSBtb250aCBPYnNlcnZhdGlvbiIKZGVmaW5lICJVbmV4cGxhaW5lZCBwZXJzaXN0ZW50IGZldmVyIGFib3ZlIDM3LjUgQywgaW50ZXJtaXR0ZW50IG9yIGNvbnN0YW50LCBmb3IgbG9uZ2VyIHRoYW4gb25lIDEgbW9udGggQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVW5leHBsYWluZWQgcGVyc2lzdGVudCBmZXZlciBhYm92ZSAzNy41IEMsIGludGVybWl0dGVudCBvciBjb25zdGFudCwgZm9yIGxvbmdlciB0aGFuIG9uZSAxIG1vbnRoIl0KZGVmaW5lICJVbmV4cGxhaW5lZCBwZXJzaXN0ZW50IGZldmVyIGFib3ZlIDM3LjUgQywgaW50ZXJtaXR0ZW50IG9yIGNvbnN0YW50LCBmb3IgbG9uZ2VyIHRoYW4gb25lIDEgbW9udGggT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlVuZXhwbGFpbmVkIHBlcnNpc3RlbnQgZmV2ZXIgYWJvdmUgMzcuNSBDLCBpbnRlcm1pdHRlbnQgb3IgY29uc3RhbnQsIGZvciBsb25nZXIgdGhhbiBvbmUgMSBtb250aCIKLyogRW5kIG9mIFVuZXhwbGFpbmVkIHBlcnNpc3RlbnQgZmV2ZXIgYWJvdmUgMzcuNSBDLCBpbnRlcm1pdHRlbnQgb3IgY29uc3RhbnQsIGZvciBsb25nZXIgdGhhbiBvbmUgMSBtb250aCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTMxMCAtIFBlcnNpc3RlbnQgb3JhbCBjYW5kaWRpYXNpcwpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgcGVyc2lzdGVudCBvcmFsIGNhbmRpZGlhc2lzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQZXJzaXN0ZW50IG9yYWwgY2FuZGlkaWFzaXMiOgogIGV4aXN0cyAiUGVyc2lzdGVudCBvcmFsIGNhbmRpZGlhc2lzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUGVyc2lzdGVudCBvcmFsIGNhbmRpZGlhc2lzIE9ic2VydmF0aW9uIgpkZWZpbmUgIlBlcnNpc3RlbnQgb3JhbCBjYW5kaWRpYXNpcyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQZXJzaXN0ZW50IG9yYWwgY2FuZGlkaWFzaXMiXQpkZWZpbmUgIlBlcnNpc3RlbnQgb3JhbCBjYW5kaWRpYXNpcyBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUGVyc2lzdGVudCBvcmFsIGNhbmRpZGlhc2lzIgovKiBFbmQgb2YgUGVyc2lzdGVudCBvcmFsIGNhbmRpZGlhc2lzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzExIC0gT3JhbCBoYWlyeSBsZXVrb3BsYWtpYQpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCBoYXMgZmluZSB3aGl0ZSBzbWFsbCBsaW5lYXIgb3IgY29ycnVnYXRlZCBsZXNpb25zIG9uIGxhdGVyYWwgYm9yZGVycyBvZiB0aGUgdG9uZ3VlIHRoYXQgZG8gbm90IHNjcmFwZSBvZmYKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk9yYWwgaGFpcnkgbGV1a29wbGFraWEiOgogIGV4aXN0cyAiT3JhbCBoYWlyeSBsZXVrb3BsYWtpYSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk9yYWwgaGFpcnkgbGV1a29wbGFraWEgT2JzZXJ2YXRpb24iCmRlZmluZSAiT3JhbCBoYWlyeSBsZXVrb3BsYWtpYSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPcmFsIGhhaXJ5IGxldWtvcGxha2lhIl0KZGVmaW5lICJPcmFsIGhhaXJ5IGxldWtvcGxha2lhIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJPcmFsIGhhaXJ5IGxldWtvcGxha2lhIgovKiBFbmQgb2YgT3JhbCBoYWlyeSBsZXVrb3BsYWtpYSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTMxMiAtIFB1bG1vbmFyeSBUQgpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgcHVsbW9uYXJ5IFRCCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQdWxtb25hcnkgVEIgRC5ERTMxMiI6CiAgZXhpc3RzICJQdWxtb25hcnkgVEIgRC5ERTMxMiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlB1bG1vbmFyeSBUQiBELkRFMzEyIE9ic2VydmF0aW9uIgpkZWZpbmUgIlB1bG1vbmFyeSBUQiBELkRFMzEyIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlB1bG1vbmFyeSBUQiAtIEhJVi5ELkRFMzEyIl0KZGVmaW5lICJQdWxtb25hcnkgVEIgRC5ERTMxMiBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHVsbW9uYXJ5IFRCIC0gSElWLkQuREUzMTIiCi8qIEVuZCBvZiBQdWxtb25hcnkgVEIgRC5ERTMxMiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTMxMyAtIEx5bXBoIG5vZGUgVEIKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIGx5bXBoIG5vZGUgVEIKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkx5bXBoIG5vZGUgVEIgRC5ERTMxMyI6CiAgZXhpc3RzICJMeW1waCBub2RlIFRCIEQuREUzMTMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJMeW1waCBub2RlIFRCIEQuREUzMTMgT2JzZXJ2YXRpb24iCmRlZmluZSAiTHltcGggbm9kZSBUQiBELkRFMzEzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkx5bXBoIG5vZGUgVEIgLSBISVYuRC5ERTMxMyJdCmRlZmluZSAiTHltcGggbm9kZSBUQiBELkRFMzEzIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJMeW1waCBub2RlIFRCIC0gSElWLkQuREUzMTMiCi8qIEVuZCBvZiBMeW1waCBub2RlIFRCIEQuREUzMTMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMTQgLSBTZXZlcmUgYmFjdGVyaWFsIGluZmVjdGlvbnMgc3VjaCBhcyBwbmV1bW9uaWEsIGVtcHllbWEsIHB5b215b3NpdGlzLCBib25lIG9yIGpvaW50IGluZmVjdGlvbiwgbWVuaW5naXRpcywgYmFjdGVyYWVtaWEKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIHNldmVyZSBiYWN0ZXJpYWwgaW5mZWN0aW9ucyAoc3VjaCBhcyBwbmV1bW9uaWEsIGVtcHllbWEsIHB5b215b3NpdGlzLCBib25lIG9yIGpvaW50IGluZmVjdGlvbiwgbWVuaW5naXRpcywgYmFjdGVyYWVtaWEpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZXZlcmUgYmFjdGVyaWFsIGluZmVjdGlvbnMgc3VjaCBhcyBwbmV1bW9uaWEsIGVtcHllbWEsIHB5b215b3NpdGlzLCBib25lIG9yIGpvaW50IGluZmVjdGlvbiwgbWVuaW5naXRpcywgYmFjdGVyYWVtaWEiOgogIGV4aXN0cyAiU2V2ZXJlIGJhY3RlcmlhbCBpbmZlY3Rpb25zIHN1Y2ggYXMgcG5ldW1vbmlhLCBlbXB5ZW1hLCBweW9teW9zaXRpcywgYm9uZSBvciBqb2ludCBpbmZlY3Rpb24sIG1lbmluZ2l0aXMsIGJhY3RlcmFlbWlhIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2V2ZXJlIGJhY3RlcmlhbCBpbmZlY3Rpb25zIHN1Y2ggYXMgcG5ldW1vbmlhLCBlbXB5ZW1hLCBweW9teW9zaXRpcywgYm9uZSBvciBqb2ludCBpbmZlY3Rpb24sIG1lbmluZ2l0aXMsIGJhY3RlcmFlbWlhIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNldmVyZSBiYWN0ZXJpYWwgaW5mZWN0aW9ucyBzdWNoIGFzIHBuZXVtb25pYSwgZW1weWVtYSwgcHlvbXlvc2l0aXMsIGJvbmUgb3Igam9pbnQgaW5mZWN0aW9uLCBtZW5pbmdpdGlzLCBiYWN0ZXJhZW1pYSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTZXZlcmUgYmFjdGVyaWFsIGluZmVjdGlvbnMgc3VjaCBhcyBwbmV1bW9uaWEsIGVtcHllbWEsIHB5b215b3NpdGlzLCBib25lIG9yIGpvaW50IGluZmVjdGlvbiwgbWVuaW5naXRpcywgYmFjdGVyYWVtaWEiXQpkZWZpbmUgIlNldmVyZSBiYWN0ZXJpYWwgaW5mZWN0aW9ucyBzdWNoIGFzIHBuZXVtb25pYSwgZW1weWVtYSwgcHlvbXlvc2l0aXMsIGJvbmUgb3Igam9pbnQgaW5mZWN0aW9uLCBtZW5pbmdpdGlzLCBiYWN0ZXJhZW1pYSBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU2V2ZXJlIGJhY3RlcmlhbCBpbmZlY3Rpb25zIHN1Y2ggYXMgcG5ldW1vbmlhLCBlbXB5ZW1hLCBweW9teW9zaXRpcywgYm9uZSBvciBqb2ludCBpbmZlY3Rpb24sIG1lbmluZ2l0aXMsIGJhY3RlcmFlbWlhIgovKiBFbmQgb2YgU2V2ZXJlIGJhY3RlcmlhbCBpbmZlY3Rpb25zIHN1Y2ggYXMgcG5ldW1vbmlhLCBlbXB5ZW1hLCBweW9teW9zaXRpcywgYm9uZSBvciBqb2ludCBpbmZlY3Rpb24sIG1lbmluZ2l0aXMsIGJhY3RlcmFlbWlhICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzE1IC0gU2V2ZXJlIHJlY3VycmVudCBiYWN0ZXJpYWwgcG5ldW1vbmlhCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSBzZXZlcmUgcmVjdXJyZW50IGJhY3RlcmlhbCBwbmV1bW9uaWEKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlNldmVyZSByZWN1cnJlbnQgYmFjdGVyaWFsIHBuZXVtb25pYSI6CiAgZXhpc3RzICJTZXZlcmUgcmVjdXJyZW50IGJhY3RlcmlhbCBwbmV1bW9uaWEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJTZXZlcmUgcmVjdXJyZW50IGJhY3RlcmlhbCBwbmV1bW9uaWEgT2JzZXJ2YXRpb24iCmRlZmluZSAiU2V2ZXJlIHJlY3VycmVudCBiYWN0ZXJpYWwgcG5ldW1vbmlhIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlNldmVyZSByZWN1cnJlbnQgYmFjdGVyaWFsIHBuZXVtb25pYSJdCmRlZmluZSAiU2V2ZXJlIHJlY3VycmVudCBiYWN0ZXJpYWwgcG5ldW1vbmlhIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTZXZlcmUgcmVjdXJyZW50IGJhY3RlcmlhbCBwbmV1bW9uaWEiCi8qIEVuZCBvZiBTZXZlcmUgcmVjdXJyZW50IGJhY3RlcmlhbCBwbmV1bW9uaWEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMTYgLSBBY3V0ZSBuZWNyb3RpemluZyB1bGNlcmF0aXZlIHN0b21hdGl0aXMKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIGFjdXRlIG5lY3JvdGl6aW5nIHVsY2VyYXRpdmUgc3RvbWF0aXRpcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQWN1dGUgbmVjcm90aXppbmcgdWxjZXJhdGl2ZSBzdG9tYXRpdGlzIjoKICBleGlzdHMgIkFjdXRlIG5lY3JvdGl6aW5nIHVsY2VyYXRpdmUgc3RvbWF0aXRpcyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkFjdXRlIG5lY3JvdGl6aW5nIHVsY2VyYXRpdmUgc3RvbWF0aXRpcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJBY3V0ZSBuZWNyb3RpemluZyB1bGNlcmF0aXZlIHN0b21hdGl0aXMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQWN1dGUgbmVjcm90aXppbmcgdWxjZXJhdGl2ZSBzdG9tYXRpdGlzIl0KZGVmaW5lICJBY3V0ZSBuZWNyb3RpemluZyB1bGNlcmF0aXZlIHN0b21hdGl0aXMgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkFjdXRlIG5lY3JvdGl6aW5nIHVsY2VyYXRpdmUgc3RvbWF0aXRpcyIKLyogRW5kIG9mIEFjdXRlIG5lY3JvdGl6aW5nIHVsY2VyYXRpdmUgc3RvbWF0aXRpcyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTMxNyAtIEFjdXRlIG5lY3JvdGl6aW5nIHVsY2VyYXRpdmUgZ2luZ2l2aXRpcwpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgYWN1dGUgbmVjcm90aXppbmcgdWxjZXJhdGl2ZSBnaW5naXZpdGlzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBY3V0ZSBuZWNyb3RpemluZyB1bGNlcmF0aXZlIGdpbmdpdml0aXMiOgogIGV4aXN0cyAiQWN1dGUgbmVjcm90aXppbmcgdWxjZXJhdGl2ZSBnaW5naXZpdGlzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQWN1dGUgbmVjcm90aXppbmcgdWxjZXJhdGl2ZSBnaW5naXZpdGlzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFjdXRlIG5lY3JvdGl6aW5nIHVsY2VyYXRpdmUgZ2luZ2l2aXRpcyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBY3V0ZSBuZWNyb3RpemluZyB1bGNlcmF0aXZlIGdpbmdpdml0aXMiXQpkZWZpbmUgIkFjdXRlIG5lY3JvdGl6aW5nIHVsY2VyYXRpdmUgZ2luZ2l2aXRpcyBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQWN1dGUgbmVjcm90aXppbmcgdWxjZXJhdGl2ZSBnaW5naXZpdGlzIgovKiBFbmQgb2YgQWN1dGUgbmVjcm90aXppbmcgdWxjZXJhdGl2ZSBnaW5naXZpdGlzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzE4IC0gQWN1dGUgbmVjcm90aXppbmcgdWxjZXJhdGl2ZSBwZXJpb2RvbnRpdGlzCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSBhY3V0ZSBuZWNyb3RpemluZyB1bGNlcmF0aXZlIHBlcmlvZG9udGl0aXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFjdXRlIG5lY3JvdGl6aW5nIHVsY2VyYXRpdmUgcGVyaW9kb250aXRpcyI6CiAgZXhpc3RzICJBY3V0ZSBuZWNyb3RpemluZyB1bGNlcmF0aXZlIHBlcmlvZG9udGl0aXMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBY3V0ZSBuZWNyb3RpemluZyB1bGNlcmF0aXZlIHBlcmlvZG9udGl0aXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiQWN1dGUgbmVjcm90aXppbmcgdWxjZXJhdGl2ZSBwZXJpb2RvbnRpdGlzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFjdXRlIG5lY3JvdGl6aW5nIHVsY2VyYXRpdmUgcGVyaW9kb250aXRpcyJdCmRlZmluZSAiQWN1dGUgbmVjcm90aXppbmcgdWxjZXJhdGl2ZSBwZXJpb2RvbnRpdGlzIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBY3V0ZSBuZWNyb3RpemluZyB1bGNlcmF0aXZlIHBlcmlvZG9udGl0aXMiCi8qIEVuZCBvZiBBY3V0ZSBuZWNyb3RpemluZyB1bGNlcmF0aXZlIHBlcmlvZG9udGl0aXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMTkgLSBVbmV4cGxhaW5lZCBhbmFlbWlhIDw4IGcvZEwKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIHVuZXhwbGFpbmVkIGFuYWVtaWEgKDw4IGcvZEwpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJVbmV4cGxhaW5lZCBhbmFlbWlhIDw4IGcvZEwiOgogIGV4aXN0cyAiVW5leHBsYWluZWQgYW5hZW1pYSA8OCBnL2RMIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVW5leHBsYWluZWQgYW5hZW1pYSA8OCBnL2RMIE9ic2VydmF0aW9uIgpkZWZpbmUgIlVuZXhwbGFpbmVkIGFuYWVtaWEgPDggZy9kTCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJVbmV4cGxhaW5lZCBhbmFlbWlhIDw4IGcvZEwiXQpkZWZpbmUgIlVuZXhwbGFpbmVkIGFuYWVtaWEgPDggZy9kTCBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVW5leHBsYWluZWQgYW5hZW1pYSA8OCBnL2RMIgovKiBFbmQgb2YgVW5leHBsYWluZWQgYW5hZW1pYSA8OCBnL2RMICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzIwIC0gTmV1dHJvcGFlbmlhIDwwLjUgeCAxMF45L0wKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIG5ldXRyb3BhZW5pYSAoPDAuNSB4IDEwXjkvTCkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk5ldXRyb3BhZW5pYSA8MC41IHggMTBeOS9MIjoKICBleGlzdHMgIk5ldXRyb3BhZW5pYSA8MC41IHggMTBeOS9MIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTmV1dHJvcGFlbmlhIDwwLjUgeCAxMF45L0wgT2JzZXJ2YXRpb24iCmRlZmluZSAiTmV1dHJvcGFlbmlhIDwwLjUgeCAxMF45L0wgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTmV1dHJvcGFlbmlhIDwwLjUgeCAxMF45L0wiXQpkZWZpbmUgIk5ldXRyb3BhZW5pYSA8MC41IHggMTBeOS9MIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJOZXV0cm9wYWVuaWEgPDAuNSB4IDEwXjkvTCIKLyogRW5kIG9mIE5ldXRyb3BhZW5pYSA8MC41IHggMTBeOS9MICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzIxIC0gQ2hyb25pYyB0aHJvbWJvY3l0b3BhZW5pYSA8NTAgeCAxMF45L0wKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIGNocm9uaWMgdGhyb21ib2N5dG9wYWVuaWEgKDw1MCB4IDEwXjkvTCkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNocm9uaWMgdGhyb21ib2N5dG9wYWVuaWEgPDUwIHggMTBeOS9MIjoKICBleGlzdHMgIkNocm9uaWMgdGhyb21ib2N5dG9wYWVuaWEgPDUwIHggMTBeOS9MIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ2hyb25pYyB0aHJvbWJvY3l0b3BhZW5pYSA8NTAgeCAxMF45L0wgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ2hyb25pYyB0aHJvbWJvY3l0b3BhZW5pYSA8NTAgeCAxMF45L0wgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ2hyb25pYyB0aHJvbWJvY3l0b3BhZW5pYSA8NTAgeCAxMF45L0wiXQpkZWZpbmUgIkNocm9uaWMgdGhyb21ib2N5dG9wYWVuaWEgPDUwIHggMTBeOS9MIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDaHJvbmljIHRocm9tYm9jeXRvcGFlbmlhIDw1MCB4IDEwXjkvTCIKLyogRW5kIG9mIENocm9uaWMgdGhyb21ib2N5dG9wYWVuaWEgPDUwIHggMTBeOS9MICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzIyIC0gU3ltcHRvbWF0aWMgbHltcGhvaWQgaW50ZXJzdGl0aWFsIHBuZXVtb25pdGlzCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSBzeW1wdG9tYXRpYyBseW1waG9pZCBpbnRlcnN0aXRpYWwgcG5ldW1vbml0aXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlN5bXB0b21hdGljIGx5bXBob2lkIGludGVyc3RpdGlhbCBwbmV1bW9uaXRpcyI6CiAgZXhpc3RzICJTeW1wdG9tYXRpYyBseW1waG9pZCBpbnRlcnN0aXRpYWwgcG5ldW1vbml0aXMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJTeW1wdG9tYXRpYyBseW1waG9pZCBpbnRlcnN0aXRpYWwgcG5ldW1vbml0aXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiU3ltcHRvbWF0aWMgbHltcGhvaWQgaW50ZXJzdGl0aWFsIHBuZXVtb25pdGlzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlN5bXB0b21hdGljIGx5bXBob2lkIGludGVyc3RpdGlhbCBwbmV1bW9uaXRpcyJdCmRlZmluZSAiU3ltcHRvbWF0aWMgbHltcGhvaWQgaW50ZXJzdGl0aWFsIHBuZXVtb25pdGlzIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTeW1wdG9tYXRpYyBseW1waG9pZCBpbnRlcnN0aXRpYWwgcG5ldW1vbml0aXMiCi8qIEVuZCBvZiBTeW1wdG9tYXRpYyBseW1waG9pZCBpbnRlcnN0aXRpYWwgcG5ldW1vbml0aXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMjMgLSBDaHJvbmljIEhJVi1hc3NvY2lhdGVkIGx1bmcgZGlzZWFzZSwgaW5jbHVkaW5nIGJyb25jaGllY3Rhc2lzCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSBjaHJvbmljIEhJVi1hc3NvY2lhdGVkIGx1bmcgZGlzZWFzZSwgaW5jbHVkaW5nIGJyb25jaGllY3Rhc2lzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDaHJvbmljIEhJVi1hc3NvY2lhdGVkIGx1bmcgZGlzZWFzZSwgaW5jbHVkaW5nIGJyb25jaGllY3Rhc2lzIjoKICBleGlzdHMgIkNocm9uaWMgSElWLWFzc29jaWF0ZWQgbHVuZyBkaXNlYXNlLCBpbmNsdWRpbmcgYnJvbmNoaWVjdGFzaXMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDaHJvbmljIEhJVi1hc3NvY2lhdGVkIGx1bmcgZGlzZWFzZSwgaW5jbHVkaW5nIGJyb25jaGllY3Rhc2lzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNocm9uaWMgSElWLWFzc29jaWF0ZWQgbHVuZyBkaXNlYXNlLCBpbmNsdWRpbmcgYnJvbmNoaWVjdGFzaXMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ2hyb25pYyBISVYtYXNzb2NpYXRlZCBsdW5nIGRpc2Vhc2UsIGluY2x1ZGluZyBicm9uY2hpZWN0YXNpcyJdCmRlZmluZSAiQ2hyb25pYyBISVYtYXNzb2NpYXRlZCBsdW5nIGRpc2Vhc2UsIGluY2x1ZGluZyBicm9uY2hpZWN0YXNpcyBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ2hyb25pYyBISVYtYXNzb2NpYXRlZCBsdW5nIGRpc2Vhc2UsIGluY2x1ZGluZyBicm9uY2hpZWN0YXNpcyIKLyogRW5kIG9mIENocm9uaWMgSElWLWFzc29jaWF0ZWQgbHVuZyBkaXNlYXNlLCBpbmNsdWRpbmcgYnJvbmNoaWVjdGFzaXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMjQgLSBISVYgd2FzdGluZyBzeW5kcm9tZQpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IFVuZXhwbGFpbmVkIGludm9sdW50YXJ5IHdlaWdodCBsb3NzICg+MTAlIGJhc2VsaW5lIGJvZHkgd2VpZ2h0KSwgd2l0aCBvYnZpb3VzIHdhc3Rpbmcgb3IgYm9keSBtYXNzIGluZGV4IDwxOC41OyBQTFVTIEVJVEhFUiB1bmV4cGxhaW5lZCBjaHJvbmljIHJlcG9ydGVkIGZvciBsb25nZXIgdGhhbiBvbmUgbW9udGg7IE9SIHJlcG9ydHMgb2YgZmV2ZXIgb3IgbmlnaHQgc3dlYXRzIGZvciBtb3JlIHRoYW4gb25lIG1vbnRoIHdpdGhvdXQgb3RoZXIgY2F1c2UgYW5kIGxhY2sgb2YgcmVzcG9uc2UgdG8gYW50aWJpb3RpY3Mgb3IgYW50aW1hbGFyaWFsIGFnZW50czsgbWFsYXJpYSBtdXN0IGJlIGV4Y2x1ZGVkIGluIG1hbGFyaW91cyBhcmVhcy4KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhJViB3YXN0aW5nIHN5bmRyb21lIjoKICBleGlzdHMgIkhJViB3YXN0aW5nIHN5bmRyb21lIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSElWIHdhc3Rpbmcgc3luZHJvbWUgT2JzZXJ2YXRpb24iCmRlZmluZSAiSElWIHdhc3Rpbmcgc3luZHJvbWUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSElWIHdhc3Rpbmcgc3luZHJvbWUiXQpkZWZpbmUgIkhJViB3YXN0aW5nIHN5bmRyb21lIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJISVYgd2FzdGluZyBzeW5kcm9tZSIKLyogRW5kIG9mIEhJViB3YXN0aW5nIHN5bmRyb21lICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzI1IC0gVW5leHBsYWluZWQgc2V2ZXJlIHdhc3Rpbmcgbm90IHJlc3BvbmRpbmcgdG8gc3RhbmRhcmQgdGhlcmFweQpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCBoYXMgdW5leHBsYWluZWQgc2V2ZXJlIHdhc3Rpbmcgbm90IHJlc3BvbmRpbmcgdG8gc3RhbmRhcmQgdGhlcmFweSAuIEZvciB1bmRlciA1IHllYXJzIG9sZCwgZGVmaW5lZCBhcyB3ZWlnaHQtZm9yLWhlaWdodCA8IC0zIHotc2NvcmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlVuZXhwbGFpbmVkIHNldmVyZSB3YXN0aW5nIG5vdCByZXNwb25kaW5nIHRvIHN0YW5kYXJkIHRoZXJhcHkiOgogIGV4aXN0cyAiVW5leHBsYWluZWQgc2V2ZXJlIHdhc3Rpbmcgbm90IHJlc3BvbmRpbmcgdG8gc3RhbmRhcmQgdGhlcmFweSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlVuZXhwbGFpbmVkIHNldmVyZSB3YXN0aW5nIG5vdCByZXNwb25kaW5nIHRvIHN0YW5kYXJkIHRoZXJhcHkgT2JzZXJ2YXRpb24iCmRlZmluZSAiVW5leHBsYWluZWQgc2V2ZXJlIHdhc3Rpbmcgbm90IHJlc3BvbmRpbmcgdG8gc3RhbmRhcmQgdGhlcmFweSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJVbmV4cGxhaW5lZCBzZXZlcmUgd2FzdGluZyBub3QgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5Il0KZGVmaW5lICJVbmV4cGxhaW5lZCBzZXZlcmUgd2FzdGluZyBub3QgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5IE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJVbmV4cGxhaW5lZCBzZXZlcmUgd2FzdGluZyBub3QgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5IgovKiBFbmQgb2YgVW5leHBsYWluZWQgc2V2ZXJlIHdhc3Rpbmcgbm90IHJlc3BvbmRpbmcgdG8gc3RhbmRhcmQgdGhlcmFweSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTMyNiAtIFVuZXhwbGFpbmVkIHN0dW50aW5nIG5vdCByZXNwb25kaW5nIHRvIHN0YW5kYXJkIHRoZXJhcHkKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQgaGFzIHVuZXhwbGFpbmVkIHN0dW50aW5nIG5vdCByZXNwb25kaW5nIHRvIHN0YW5kYXJkIHRoZXJhcHkgLiBGb3IgdW5kZXIgNSB5ZWFycyBvbGQsIGRlZmluZWQgYXMgbGVuZ3RoLWZvci0gYWdlL2hlaWdodC1mb3ItYWdlIDwgLTIgei1zY29yZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVW5leHBsYWluZWQgc3R1bnRpbmcgbm90IHJlc3BvbmRpbmcgdG8gc3RhbmRhcmQgdGhlcmFweSI6CiAgZXhpc3RzICJVbmV4cGxhaW5lZCBzdHVudGluZyBub3QgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVW5leHBsYWluZWQgc3R1bnRpbmcgbm90IHJlc3BvbmRpbmcgdG8gc3RhbmRhcmQgdGhlcmFweSBPYnNlcnZhdGlvbiIKZGVmaW5lICJVbmV4cGxhaW5lZCBzdHVudGluZyBub3QgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlVuZXhwbGFpbmVkIHN0dW50aW5nIG5vdCByZXNwb25kaW5nIHRvIHN0YW5kYXJkIHRoZXJhcHkiXQpkZWZpbmUgIlVuZXhwbGFpbmVkIHN0dW50aW5nIG5vdCByZXNwb25kaW5nIHRvIHN0YW5kYXJkIHRoZXJhcHkgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlVuZXhwbGFpbmVkIHN0dW50aW5nIG5vdCByZXNwb25kaW5nIHRvIHN0YW5kYXJkIHRoZXJhcHkiCi8qIEVuZCBvZiBVbmV4cGxhaW5lZCBzdHVudGluZyBub3QgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzI3IC0gVW5leHBsYWluZWQgc2V2ZXJlIG1hbG51dHJpdGlvbiBub3QgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5CkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50IGhhcyB1bmV4cGxhaW5lZCBzZXZlcmUgbWFsbnV0cml0aW9uIG5vdCByZXNwb25kaW5nIHRvIHN0YW5kYXJkIHRoZXJhcHkgLiBGb3IgdW5kZXIgNSB5ZWFycyBvbGQsIHdlaWdodCBmb3IgaGVpZ2h0IDwgLTMgei1zY29yZSBvciBtaWQtdXBwZXIgYXJtIGNpcmN1bWZlcmVuY2UgPDExNSBtbSBvciB0aGUgcHJlc2VuY2Ugb2Ygb2VkZW1hCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJVbmV4cGxhaW5lZCBzZXZlcmUgbWFsbnV0cml0aW9uIG5vdCByZXNwb25kaW5nIHRvIHN0YW5kYXJkIHRoZXJhcHkiOgogIGV4aXN0cyAiVW5leHBsYWluZWQgc2V2ZXJlIG1hbG51dHJpdGlvbiBub3QgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVW5leHBsYWluZWQgc2V2ZXJlIG1hbG51dHJpdGlvbiBub3QgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5IE9ic2VydmF0aW9uIgpkZWZpbmUgIlVuZXhwbGFpbmVkIHNldmVyZSBtYWxudXRyaXRpb24gbm90IHJlc3BvbmRpbmcgdG8gc3RhbmRhcmQgdGhlcmFweSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJVbmV4cGxhaW5lZCBzZXZlcmUgbWFsbnV0cml0aW9uIG5vdCByZXNwb25kaW5nIHRvIHN0YW5kYXJkIHRoZXJhcHkiXQpkZWZpbmUgIlVuZXhwbGFpbmVkIHNldmVyZSBtYWxudXRyaXRpb24gbm90IHJlc3BvbmRpbmcgdG8gc3RhbmRhcmQgdGhlcmFweSBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVW5leHBsYWluZWQgc2V2ZXJlIG1hbG51dHJpdGlvbiBub3QgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5IgovKiBFbmQgb2YgVW5leHBsYWluZWQgc2V2ZXJlIG1hbG51dHJpdGlvbiBub3QgcmVzcG9uZGluZyB0byBzdGFuZGFyZCB0aGVyYXB5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzI4IC0gUG5ldW1vY3lzdGlzIGppcm92ZWNpaSBwbmV1bW9uaWEKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIHBuZXVtb2N5c3RpcyAoamlyb3ZlY2lpKSBwbmV1bW9uaWEKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBuZXVtb2N5c3RpcyBqaXJvdmVjaWkgcG5ldW1vbmlhIjoKICBleGlzdHMgIlBuZXVtb2N5c3RpcyBqaXJvdmVjaWkgcG5ldW1vbmlhIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUG5ldW1vY3lzdGlzIGppcm92ZWNpaSBwbmV1bW9uaWEgT2JzZXJ2YXRpb24iCmRlZmluZSAiUG5ldW1vY3lzdGlzIGppcm92ZWNpaSBwbmV1bW9uaWEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUG5ldW1vY3lzdGlzIGppcm92ZWNpaSBwbmV1bW9uaWEiXQpkZWZpbmUgIlBuZXVtb2N5c3RpcyBqaXJvdmVjaWkgcG5ldW1vbmlhIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQbmV1bW9jeXN0aXMgamlyb3ZlY2lpIHBuZXVtb25pYSIKLyogRW5kIG9mIFBuZXVtb2N5c3RpcyBqaXJvdmVjaWkgcG5ldW1vbmlhICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzI5IC0gUmVjdXJyZW50IHNldmVyZSBiYWN0ZXJpYWwgcG5ldW1vbmlhCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSByZWN1cnJlbnQgc2V2ZXJlIGJhY3RlcmlhbCBwbmV1bW9uaWEKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlJlY3VycmVudCBzZXZlcmUgYmFjdGVyaWFsIHBuZXVtb25pYSI6CiAgZXhpc3RzICJSZWN1cnJlbnQgc2V2ZXJlIGJhY3RlcmlhbCBwbmV1bW9uaWEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSZWN1cnJlbnQgc2V2ZXJlIGJhY3RlcmlhbCBwbmV1bW9uaWEgT2JzZXJ2YXRpb24iCmRlZmluZSAiUmVjdXJyZW50IHNldmVyZSBiYWN0ZXJpYWwgcG5ldW1vbmlhIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlJlY3VycmVudCBzZXZlcmUgYmFjdGVyaWFsIHBuZXVtb25pYSJdCmRlZmluZSAiUmVjdXJyZW50IHNldmVyZSBiYWN0ZXJpYWwgcG5ldW1vbmlhIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJSZWN1cnJlbnQgc2V2ZXJlIGJhY3RlcmlhbCBwbmV1bW9uaWEiCi8qIEVuZCBvZiBSZWN1cnJlbnQgc2V2ZXJlIGJhY3RlcmlhbCBwbmV1bW9uaWEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMzAgLSBSZWN1cnJlbnQgc2V2ZXJlIGJhY3RlcmlhbCBpbmZlY3Rpb25zIHN1Y2ggYXMgZW1weWVtYSwgcHlvbXlvc2l0aXMsIGJvbmUgb3Igam9pbnQgaW5mZWN0aW9uLCBtZW5pbmdpdGlzLCBidXQgZXhjbHVkaW5nIHBuZXVtb25pYQpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgcmVjdXJyZW50IHNldmVyZSBiYWN0ZXJpYWwgaW5mZWN0aW9ucyAoc3VjaCBhcyBlbXB5ZW1hLCBweW9teW9zaXRpcywgYm9uZSBvciBqb2ludCBpbmZlY3Rpb24sIG1lbmluZ2l0aXMsIGJ1dCBleGNsdWRpbmcgcG5ldW1vbmlhKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmVjdXJyZW50IHNldmVyZSBiYWN0ZXJpYWwgaW5mZWN0aW9ucyBzdWNoIGFzIGVtcHllbWEsIHB5b215b3NpdGlzLCBib25lIG9yIGpvaW50IGluZmVjdGlvbiwgbWVuaW5naXRpcywgYnV0IGV4Y2x1ZGluZyBwbmV1bW9uaWEiOgogIGV4aXN0cyAiUmVjdXJyZW50IHNldmVyZSBiYWN0ZXJpYWwgaW5mZWN0aW9ucyBzdWNoIGFzIGVtcHllbWEsIHB5b215b3NpdGlzLCBib25lIG9yIGpvaW50IGluZmVjdGlvbiwgbWVuaW5naXRpcywgYnV0IGV4Y2x1ZGluZyBwbmV1bW9uaWEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSZWN1cnJlbnQgc2V2ZXJlIGJhY3RlcmlhbCBpbmZlY3Rpb25zIHN1Y2ggYXMgZW1weWVtYSwgcHlvbXlvc2l0aXMsIGJvbmUgb3Igam9pbnQgaW5mZWN0aW9uLCBtZW5pbmdpdGlzLCBidXQgZXhjbHVkaW5nIHBuZXVtb25pYSBPYnNlcnZhdGlvbiIKZGVmaW5lICJSZWN1cnJlbnQgc2V2ZXJlIGJhY3RlcmlhbCBpbmZlY3Rpb25zIHN1Y2ggYXMgZW1weWVtYSwgcHlvbXlvc2l0aXMsIGJvbmUgb3Igam9pbnQgaW5mZWN0aW9uLCBtZW5pbmdpdGlzLCBidXQgZXhjbHVkaW5nIHBuZXVtb25pYSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJSZWN1cnJlbnQgc2V2ZXJlIGJhY3RlcmlhbCBpbmZlY3Rpb25zIHN1Y2ggYXMgZW1weWVtYSwgcHlvbXlvc2l0aXMsIGJvbmUgb3Igam9pbnQgaW5mZWN0aW9uLCBtZW5pbmdpdGlzLCBidXQgZXhjbHVkaW5nIHBuZXVtb25pYSJdCmRlZmluZSAiUmVjdXJyZW50IHNldmVyZSBiYWN0ZXJpYWwgaW5mZWN0aW9ucyBzdWNoIGFzIGVtcHllbWEsIHB5b215b3NpdGlzLCBib25lIG9yIGpvaW50IGluZmVjdGlvbiwgbWVuaW5naXRpcywgYnV0IGV4Y2x1ZGluZyBwbmV1bW9uaWEgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlJlY3VycmVudCBzZXZlcmUgYmFjdGVyaWFsIGluZmVjdGlvbnMgc3VjaCBhcyBlbXB5ZW1hLCBweW9teW9zaXRpcywgYm9uZSBvciBqb2ludCBpbmZlY3Rpb24sIG1lbmluZ2l0aXMsIGJ1dCBleGNsdWRpbmcgcG5ldW1vbmlhIgovKiBFbmQgb2YgUmVjdXJyZW50IHNldmVyZSBiYWN0ZXJpYWwgaW5mZWN0aW9ucyBzdWNoIGFzIGVtcHllbWEsIHB5b215b3NpdGlzLCBib25lIG9yIGpvaW50IGluZmVjdGlvbiwgbWVuaW5naXRpcywgYnV0IGV4Y2x1ZGluZyBwbmV1bW9uaWEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMzEgLSBFbXB5ZW1hCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSByZWN1cnJlbnQgZW1weWVtYQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRW1weWVtYSI6CiAgZXhpc3RzICJFbXB5ZW1hIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRW1weWVtYSBPYnNlcnZhdGlvbiIKZGVmaW5lICJFbXB5ZW1hIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkVtcHllbWEiXQpkZWZpbmUgIkVtcHllbWEgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkVtcHllbWEiCi8qIEVuZCBvZiBFbXB5ZW1hICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzMyIC0gUHlvbXlvc2l0aXMKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIHJlY3VycmVudCBweW9teW9zaXRpcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUHlvbXlvc2l0aXMiOgogIGV4aXN0cyAiUHlvbXlvc2l0aXMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQeW9teW9zaXRpcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJQeW9teW9zaXRpcyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQeW9teW9zaXRpcyJdCmRlZmluZSAiUHlvbXlvc2l0aXMgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlB5b215b3NpdGlzIgovKiBFbmQgb2YgUHlvbXlvc2l0aXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMzMgLSBCb25lIG9yIGpvaW50IGluZmVjdGlvbgpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgcmVjdXJyZW50IGJvbmUgb3Igam9pbnQgaW5mZWN0aW9ucwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQm9uZSBvciBqb2ludCBpbmZlY3Rpb24iOgogIGV4aXN0cyAiQm9uZSBvciBqb2ludCBpbmZlY3Rpb24gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJCb25lIG9yIGpvaW50IGluZmVjdGlvbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJCb25lIG9yIGpvaW50IGluZmVjdGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJCb25lIG9yIGpvaW50IGluZmVjdGlvbiJdCmRlZmluZSAiQm9uZSBvciBqb2ludCBpbmZlY3Rpb24gT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkJvbmUgb3Igam9pbnQgaW5mZWN0aW9uIgovKiBFbmQgb2YgQm9uZSBvciBqb2ludCBpbmZlY3Rpb24gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMzQgLSBNZW5pbmdpdGlzCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSByZWN1cnJlbnQgbWVuaW5naXRpcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTWVuaW5naXRpcyI6CiAgZXhpc3RzICJNZW5pbmdpdGlzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTWVuaW5naXRpcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJNZW5pbmdpdGlzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk1lbmluZ2l0aXMiXQpkZWZpbmUgIk1lbmluZ2l0aXMgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk1lbmluZ2l0aXMiCi8qIEVuZCBvZiBNZW5pbmdpdGlzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzM1IC0gQ2hyb25pYyBoZXJwZXMgc2ltcGxleCBpbmZlY3Rpb24gb3JvbGFiaWFsIG9yIGN1dGFuZW91cyBvZiBtb3JlIHRoYW4gMSBtb250aCBkdXJhdGlvbiBvciB2aXNjZXJhbCBhdCBhbnkgc2l0ZQpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgY2hyb25pYyBoZXJwZXMgc2ltcGxleCBpbmZlY3Rpb24gKG9yb2xhYmlhbCBvciBjdXRhbmVvdXMgb2YgbW9yZSB0aGFuIDEgbW9udGggZHVyYXRpb24gb3IgdmlzY2VyYWwgYXQgYW55IHNpdGUpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDaHJvbmljIGhlcnBlcyBzaW1wbGV4IGluZmVjdGlvbiBvcm9sYWJpYWwgb3IgY3V0YW5lb3VzIG9mIG1vcmUgdGhhbiAxIG1vbnRoIGR1cmF0aW9uIG9yIHZpc2NlcmFsIGF0IGFueSBzaXRlIjoKICBleGlzdHMgIkNocm9uaWMgaGVycGVzIHNpbXBsZXggaW5mZWN0aW9uIG9yb2xhYmlhbCBvciBjdXRhbmVvdXMgb2YgbW9yZSB0aGFuIDEgbW9udGggZHVyYXRpb24gb3IgdmlzY2VyYWwgYXQgYW55IHNpdGUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDaHJvbmljIGhlcnBlcyBzaW1wbGV4IGluZmVjdGlvbiBvcm9sYWJpYWwgb3IgY3V0YW5lb3VzIG9mIG1vcmUgdGhhbiAxIG1vbnRoIGR1cmF0aW9uIG9yIHZpc2NlcmFsIGF0IGFueSBzaXRlIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNocm9uaWMgaGVycGVzIHNpbXBsZXggaW5mZWN0aW9uIG9yb2xhYmlhbCBvciBjdXRhbmVvdXMgb2YgbW9yZSB0aGFuIDEgbW9udGggZHVyYXRpb24gb3IgdmlzY2VyYWwgYXQgYW55IHNpdGUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ2hyb25pYyBoZXJwZXMgc2ltcGxleCBpbmZlY3Rpb24gb3JvbGFiaWFsIG9yIGN1dGFuZW91cyBvZiBtb3JlIHRoYW4gMSBtb250aCBkdXJhdGlvbiBvciB2aXNjZXJhbCBhdCBhbnkgc2l0ZSJdCmRlZmluZSAiQ2hyb25pYyBoZXJwZXMgc2ltcGxleCBpbmZlY3Rpb24gb3JvbGFiaWFsIG9yIGN1dGFuZW91cyBvZiBtb3JlIHRoYW4gMSBtb250aCBkdXJhdGlvbiBvciB2aXNjZXJhbCBhdCBhbnkgc2l0ZSBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ2hyb25pYyBoZXJwZXMgc2ltcGxleCBpbmZlY3Rpb24gb3JvbGFiaWFsIG9yIGN1dGFuZW91cyBvZiBtb3JlIHRoYW4gMSBtb250aCBkdXJhdGlvbiBvciB2aXNjZXJhbCBhdCBhbnkgc2l0ZSIKLyogRW5kIG9mIENocm9uaWMgaGVycGVzIHNpbXBsZXggaW5mZWN0aW9uIG9yb2xhYmlhbCBvciBjdXRhbmVvdXMgb2YgbW9yZSB0aGFuIDEgbW9udGggZHVyYXRpb24gb3IgdmlzY2VyYWwgYXQgYW55IHNpdGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMzYgLSBDaHJvbmljIGhlcnBlcyBzaW1wbGV4IGluZmVjdGlvbiBvcm9sYWJpYWwsIGdlbml0YWwgb3IgYW5vcmVjdGFsIG9mIG1vcmUgdGhhbiAxIG1vbnRoIGluIGR1cmF0aW9uIG9yIHZpc2NlcmFsIGF0IGFueSBzaXRlCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSBjaHJvbmljIGhlcnBlcyBzaW1wbGV4IGluZmVjdGlvbiAob3JvbGFiaWFsLCBnZW5pdGFsIG9yIGFub3JlY3RhbCBvZiBtb3JlIHRoYW4gb25lIG1vbnRoIGluIGR1cmF0aW9uIG9yIHZpc2NlcmFsIGF0IGFueSBzaXRlKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ2hyb25pYyBoZXJwZXMgc2ltcGxleCBpbmZlY3Rpb24gb3JvbGFiaWFsLCBnZW5pdGFsIG9yIGFub3JlY3RhbCBvZiBtb3JlIHRoYW4gMSBtb250aCBpbiBkdXJhdGlvbiBvciB2aXNjZXJhbCBhdCBhbnkgc2l0ZSI6CiAgZXhpc3RzICJDaHJvbmljIGhlcnBlcyBzaW1wbGV4IGluZmVjdGlvbiBvcm9sYWJpYWwsIGdlbml0YWwgb3IgYW5vcmVjdGFsIG9mIG1vcmUgdGhhbiAxIG1vbnRoIGluIGR1cmF0aW9uIG9yIHZpc2NlcmFsIGF0IGFueSBzaXRlIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ2hyb25pYyBoZXJwZXMgc2ltcGxleCBpbmZlY3Rpb24gb3JvbGFiaWFsLCBnZW5pdGFsIG9yIGFub3JlY3RhbCBvZiBtb3JlIHRoYW4gMSBtb250aCBpbiBkdXJhdGlvbiBvciB2aXNjZXJhbCBhdCBhbnkgc2l0ZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJDaHJvbmljIGhlcnBlcyBzaW1wbGV4IGluZmVjdGlvbiBvcm9sYWJpYWwsIGdlbml0YWwgb3IgYW5vcmVjdGFsIG9mIG1vcmUgdGhhbiAxIG1vbnRoIGluIGR1cmF0aW9uIG9yIHZpc2NlcmFsIGF0IGFueSBzaXRlIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNocm9uaWMgaGVycGVzIHNpbXBsZXggaW5mZWN0aW9uIG9yb2xhYmlhbCwgZ2VuaXRhbCBvciBhbm9yZWN0YWwgb2YgbW9yZSB0aGFuIDEgbW9udGggaW4gZHVyYXRpb24gb3IgdmlzY2VyYWwgYXQgYW55IHNpdGUiXQpkZWZpbmUgIkNocm9uaWMgaGVycGVzIHNpbXBsZXggaW5mZWN0aW9uIG9yb2xhYmlhbCwgZ2VuaXRhbCBvciBhbm9yZWN0YWwgb2YgbW9yZSB0aGFuIDEgbW9udGggaW4gZHVyYXRpb24gb3IgdmlzY2VyYWwgYXQgYW55IHNpdGUgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNocm9uaWMgaGVycGVzIHNpbXBsZXggaW5mZWN0aW9uIG9yb2xhYmlhbCwgZ2VuaXRhbCBvciBhbm9yZWN0YWwgb2YgbW9yZSB0aGFuIDEgbW9udGggaW4gZHVyYXRpb24gb3IgdmlzY2VyYWwgYXQgYW55IHNpdGUiCi8qIEVuZCBvZiBDaHJvbmljIGhlcnBlcyBzaW1wbGV4IGluZmVjdGlvbiBvcm9sYWJpYWwsIGdlbml0YWwgb3IgYW5vcmVjdGFsIG9mIG1vcmUgdGhhbiAxIG1vbnRoIGluIGR1cmF0aW9uIG9yIHZpc2NlcmFsIGF0IGFueSBzaXRlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzM3IC0gT2Vzb3BoYWdlYWwgY2FuZGlkaWFzaXMgb3IgY2FuZGlkaWFzaXMgb2YgdHJhY2hlYSwgYnJvbmNoaSBvciBsdW5ncwpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgb2Vzb3BoYWdlYWwgY2FuZGlkaWFzaXMgKG9yIGNhbmRpZGlhc2lzIG9mIHRyYWNoZWEsIGJyb25jaGkgb3IgbHVuZ3MpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPZXNvcGhhZ2VhbCBjYW5kaWRpYXNpcyBvciBjYW5kaWRpYXNpcyBvZiB0cmFjaGVhLCBicm9uY2hpIG9yIGx1bmdzIjoKICBleGlzdHMgIk9lc29waGFnZWFsIGNhbmRpZGlhc2lzIG9yIGNhbmRpZGlhc2lzIG9mIHRyYWNoZWEsIGJyb25jaGkgb3IgbHVuZ3MgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPZXNvcGhhZ2VhbCBjYW5kaWRpYXNpcyBvciBjYW5kaWRpYXNpcyBvZiB0cmFjaGVhLCBicm9uY2hpIG9yIGx1bmdzIE9ic2VydmF0aW9uIgpkZWZpbmUgIk9lc29waGFnZWFsIGNhbmRpZGlhc2lzIG9yIGNhbmRpZGlhc2lzIG9mIHRyYWNoZWEsIGJyb25jaGkgb3IgbHVuZ3MgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iT2Vzb3BoYWdlYWwgY2FuZGlkaWFzaXMgb3IgY2FuZGlkaWFzaXMgb2YgdHJhY2hlYSwgYnJvbmNoaSBvciBsdW5ncyJdCmRlZmluZSAiT2Vzb3BoYWdlYWwgY2FuZGlkaWFzaXMgb3IgY2FuZGlkaWFzaXMgb2YgdHJhY2hlYSwgYnJvbmNoaSBvciBsdW5ncyBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iT2Vzb3BoYWdlYWwgY2FuZGlkaWFzaXMgb3IgY2FuZGlkaWFzaXMgb2YgdHJhY2hlYSwgYnJvbmNoaSBvciBsdW5ncyIKLyogRW5kIG9mIE9lc29waGFnZWFsIGNhbmRpZGlhc2lzIG9yIGNhbmRpZGlhc2lzIG9mIHRyYWNoZWEsIGJyb25jaGkgb3IgbHVuZ3MgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMzggLSBFeHRyYXB1bG1vbmFyeSBUQgpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgZXh0cmFwdWxtb25hcnkgdHViZXJjdWxvc2lzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJFeHRyYXB1bG1vbmFyeSBUQiBELkRFMzM4IjoKICBleGlzdHMgIkV4dHJhcHVsbW9uYXJ5IFRCIEQuREUzMzggQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJFeHRyYXB1bG1vbmFyeSBUQiBELkRFMzM4IE9ic2VydmF0aW9uIgpkZWZpbmUgIkV4dHJhcHVsbW9uYXJ5IFRCIEQuREUzMzggQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRXh0cmFwdWxtb25hcnkgVEIgLSBISVYuRC5ERTMzOCJdCmRlZmluZSAiRXh0cmFwdWxtb25hcnkgVEIgRC5ERTMzOCBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRXh0cmFwdWxtb25hcnkgVEIgLSBISVYuRC5ERTMzOCIKLyogRW5kIG9mIEV4dHJhcHVsbW9uYXJ5IFRCIEQuREUzMzggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzMzkgLSBLYXBvc2kgc2FyY29tYQpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgS2Fwb3NpIHNhcmNvbWEKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkthcG9zaSBzYXJjb21hIjoKICBleGlzdHMgIkthcG9zaSBzYXJjb21hIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiS2Fwb3NpIHNhcmNvbWEgT2JzZXJ2YXRpb24iCmRlZmluZSAiS2Fwb3NpIHNhcmNvbWEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iS2Fwb3NpIHNhcmNvbWEiXQpkZWZpbmUgIkthcG9zaSBzYXJjb21hIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJLYXBvc2kgc2FyY29tYSIKLyogRW5kIG9mIEthcG9zaSBzYXJjb21hICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzQwIC0gQ3l0b21lZ2Fsb3ZpcnVzIGluZmVjdGlvbiByZXRpbml0aXMgb3IgaW5mZWN0aW9uIG9mIG90aGVyIG9yZ2FucwpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgY3l0b21lZ2Fsb3ZpcnVzIGluZmVjdGlvbiAocmV0aW5pdGlzIG9yIGluZmVjdGlvbiBvZiBvdGhlciBvcmdhbnMpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDeXRvbWVnYWxvdmlydXMgaW5mZWN0aW9uIHJldGluaXRpcyBvciBpbmZlY3Rpb24gb2Ygb3RoZXIgb3JnYW5zIjoKICBleGlzdHMgIkN5dG9tZWdhbG92aXJ1cyBpbmZlY3Rpb24gcmV0aW5pdGlzIG9yIGluZmVjdGlvbiBvZiBvdGhlciBvcmdhbnMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDeXRvbWVnYWxvdmlydXMgaW5mZWN0aW9uIHJldGluaXRpcyBvciBpbmZlY3Rpb24gb2Ygb3RoZXIgb3JnYW5zIE9ic2VydmF0aW9uIgpkZWZpbmUgIkN5dG9tZWdhbG92aXJ1cyBpbmZlY3Rpb24gcmV0aW5pdGlzIG9yIGluZmVjdGlvbiBvZiBvdGhlciBvcmdhbnMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ3l0b21lZ2Fsb3ZpcnVzIGluZmVjdGlvbiByZXRpbml0aXMgb3IgaW5mZWN0aW9uIG9mIG90aGVyIG9yZ2FucyJdCmRlZmluZSAiQ3l0b21lZ2Fsb3ZpcnVzIGluZmVjdGlvbiByZXRpbml0aXMgb3IgaW5mZWN0aW9uIG9mIG90aGVyIG9yZ2FucyBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ3l0b21lZ2Fsb3ZpcnVzIGluZmVjdGlvbiByZXRpbml0aXMgb3IgaW5mZWN0aW9uIG9mIG90aGVyIG9yZ2FucyIKLyogRW5kIG9mIEN5dG9tZWdhbG92aXJ1cyBpbmZlY3Rpb24gcmV0aW5pdGlzIG9yIGluZmVjdGlvbiBvZiBvdGhlciBvcmdhbnMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzNDEgLSBDZW50cmFsIG5lcnZvdXMgc3lzdGVtIHRveG9wbGFzbW9zaXMKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIGNlbnRyYWwgbmVydm91cyBzeXN0ZW0gdG94b3BsYXNtb3NpcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ2VudHJhbCBuZXJ2b3VzIHN5c3RlbSB0b3hvcGxhc21vc2lzIjoKICBleGlzdHMgIkNlbnRyYWwgbmVydm91cyBzeXN0ZW0gdG94b3BsYXNtb3NpcyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNlbnRyYWwgbmVydm91cyBzeXN0ZW0gdG94b3BsYXNtb3NpcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJDZW50cmFsIG5lcnZvdXMgc3lzdGVtIHRveG9wbGFzbW9zaXMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ2VudHJhbCBuZXJ2b3VzIHN5c3RlbSB0b3hvcGxhc21vc2lzIl0KZGVmaW5lICJDZW50cmFsIG5lcnZvdXMgc3lzdGVtIHRveG9wbGFzbW9zaXMgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNlbnRyYWwgbmVydm91cyBzeXN0ZW0gdG94b3BsYXNtb3NpcyIKLyogRW5kIG9mIENlbnRyYWwgbmVydm91cyBzeXN0ZW0gdG94b3BsYXNtb3NpcyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTM0MiAtIEhJViBlbmNlcGhhbG9wYXRoeQpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgSElWIGVuY2VwaGFsb3BhdGh5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYgZW5jZXBoYWxvcGF0aHkiOgogIGV4aXN0cyAiSElWIGVuY2VwaGFsb3BhdGh5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSElWIGVuY2VwaGFsb3BhdGh5IE9ic2VydmF0aW9uIgpkZWZpbmUgIkhJViBlbmNlcGhhbG9wYXRoeSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJISVYgZW5jZXBoYWxvcGF0aHkiXQpkZWZpbmUgIkhJViBlbmNlcGhhbG9wYXRoeSBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSElWIGVuY2VwaGFsb3BhdGh5IgovKiBFbmQgb2YgSElWIGVuY2VwaGFsb3BhdGh5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzQzIC0gRXh0cmFwdWxtb25hcnkgY3J5cHRvY29jY29zaXMsIGluY2x1ZGluZyBtZW5pbmdpdGlzCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSBleHRyYXB1bG1vbmFyeSBjcnlwdG9jb2Njb3NpcywgaW5jbHVkaW5nIG1lbmluZ2l0aXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkV4dHJhcHVsbW9uYXJ5IGNyeXB0b2NvY2Nvc2lzLCBpbmNsdWRpbmcgbWVuaW5naXRpcyI6CiAgZXhpc3RzICJFeHRyYXB1bG1vbmFyeSBjcnlwdG9jb2Njb3NpcywgaW5jbHVkaW5nIG1lbmluZ2l0aXMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJFeHRyYXB1bG1vbmFyeSBjcnlwdG9jb2Njb3NpcywgaW5jbHVkaW5nIG1lbmluZ2l0aXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiRXh0cmFwdWxtb25hcnkgY3J5cHRvY29jY29zaXMsIGluY2x1ZGluZyBtZW5pbmdpdGlzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkV4dHJhcHVsbW9uYXJ5IGNyeXB0b2NvY2Nvc2lzLCBpbmNsdWRpbmcgbWVuaW5naXRpcyJdCmRlZmluZSAiRXh0cmFwdWxtb25hcnkgY3J5cHRvY29jY29zaXMsIGluY2x1ZGluZyBtZW5pbmdpdGlzIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJFeHRyYXB1bG1vbmFyeSBjcnlwdG9jb2Njb3NpcywgaW5jbHVkaW5nIG1lbmluZ2l0aXMiCi8qIEVuZCBvZiBFeHRyYXB1bG1vbmFyeSBjcnlwdG9jb2Njb3NpcywgaW5jbHVkaW5nIG1lbmluZ2l0aXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzNDQgLSBEaXNzZW1pbmF0ZWQgbm9udHViZXJjdWxvdXMgbXljb2JhY3RlcmlhbCBpbmZlY3Rpb24KQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIGRpc3NlbWluYXRlZCBub250dWJlcmN1bG91cyBteWNvYmFjdGVyaWFsIGluZmVjdGlvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGlzc2VtaW5hdGVkIG5vbnR1YmVyY3Vsb3VzIG15Y29iYWN0ZXJpYWwgaW5mZWN0aW9uIjoKICBleGlzdHMgIkRpc3NlbWluYXRlZCBub250dWJlcmN1bG91cyBteWNvYmFjdGVyaWFsIGluZmVjdGlvbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkRpc3NlbWluYXRlZCBub250dWJlcmN1bG91cyBteWNvYmFjdGVyaWFsIGluZmVjdGlvbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJEaXNzZW1pbmF0ZWQgbm9udHViZXJjdWxvdXMgbXljb2JhY3RlcmlhbCBpbmZlY3Rpb24gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRGlzc2VtaW5hdGVkIG5vbnR1YmVyY3Vsb3VzIG15Y29iYWN0ZXJpYWwgaW5mZWN0aW9uIl0KZGVmaW5lICJEaXNzZW1pbmF0ZWQgbm9udHViZXJjdWxvdXMgbXljb2JhY3RlcmlhbCBpbmZlY3Rpb24gT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkRpc3NlbWluYXRlZCBub250dWJlcmN1bG91cyBteWNvYmFjdGVyaWFsIGluZmVjdGlvbiIKLyogRW5kIG9mIERpc3NlbWluYXRlZCBub250dWJlcmN1bG91cyBteWNvYmFjdGVyaWFsIGluZmVjdGlvbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTM0NSAtIFByb2dyZXNzaXZlIG11bHRpZm9jYWwgbGV1a29lbmNlcGhhbG9wYXRoeQpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgcHJvZ3Jlc3NpdmUgbXVsdGlmb2NhbCBsZXVrb2VuY2VwaGFsb3BhdGh5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQcm9ncmVzc2l2ZSBtdWx0aWZvY2FsIGxldWtvZW5jZXBoYWxvcGF0aHkiOgogIGV4aXN0cyAiUHJvZ3Jlc3NpdmUgbXVsdGlmb2NhbCBsZXVrb2VuY2VwaGFsb3BhdGh5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUHJvZ3Jlc3NpdmUgbXVsdGlmb2NhbCBsZXVrb2VuY2VwaGFsb3BhdGh5IE9ic2VydmF0aW9uIgpkZWZpbmUgIlByb2dyZXNzaXZlIG11bHRpZm9jYWwgbGV1a29lbmNlcGhhbG9wYXRoeSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQcm9ncmVzc2l2ZSBtdWx0aWZvY2FsIGxldWtvZW5jZXBoYWxvcGF0aHkiXQpkZWZpbmUgIlByb2dyZXNzaXZlIG11bHRpZm9jYWwgbGV1a29lbmNlcGhhbG9wYXRoeSBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHJvZ3Jlc3NpdmUgbXVsdGlmb2NhbCBsZXVrb2VuY2VwaGFsb3BhdGh5IgovKiBFbmQgb2YgUHJvZ3Jlc3NpdmUgbXVsdGlmb2NhbCBsZXVrb2VuY2VwaGFsb3BhdGh5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzQ2IC0gQ2hyb25pYyBjcnlwdG9zcG9yaWRpb3NpcwpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgY2hyb25pYyBjcnlwdG9zcG9yaWRpb3NpcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ2hyb25pYyBjcnlwdG9zcG9yaWRpb3NpcyI6CiAgZXhpc3RzICJDaHJvbmljIGNyeXB0b3Nwb3JpZGlvc2lzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ2hyb25pYyBjcnlwdG9zcG9yaWRpb3NpcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJDaHJvbmljIGNyeXB0b3Nwb3JpZGlvc2lzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNocm9uaWMgY3J5cHRvc3BvcmlkaW9zaXMiXQpkZWZpbmUgIkNocm9uaWMgY3J5cHRvc3BvcmlkaW9zaXMgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNocm9uaWMgY3J5cHRvc3BvcmlkaW9zaXMiCi8qIEVuZCBvZiBDaHJvbmljIGNyeXB0b3Nwb3JpZGlvc2lzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzQ3IC0gQ2hyb25pYyBjcnlwdG9zcG9yaWRpb3NpcyB3aXRoIGRpYXJyaG9lYQpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgY2hyb25pYyBjcnlwdG9zcG9yaWRpb3NpcyAod2l0aCBkaWFycmhvZWEpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDaHJvbmljIGNyeXB0b3Nwb3JpZGlvc2lzIHdpdGggZGlhcnJob2VhIjoKICBleGlzdHMgIkNocm9uaWMgY3J5cHRvc3BvcmlkaW9zaXMgd2l0aCBkaWFycmhvZWEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDaHJvbmljIGNyeXB0b3Nwb3JpZGlvc2lzIHdpdGggZGlhcnJob2VhIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNocm9uaWMgY3J5cHRvc3BvcmlkaW9zaXMgd2l0aCBkaWFycmhvZWEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ2hyb25pYyBjcnlwdG9zcG9yaWRpb3NpcyB3aXRoIGRpYXJyaG9lYSJdCmRlZmluZSAiQ2hyb25pYyBjcnlwdG9zcG9yaWRpb3NpcyB3aXRoIGRpYXJyaG9lYSBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ2hyb25pYyBjcnlwdG9zcG9yaWRpb3NpcyB3aXRoIGRpYXJyaG9lYSIKLyogRW5kIG9mIENocm9uaWMgY3J5cHRvc3BvcmlkaW9zaXMgd2l0aCBkaWFycmhvZWEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzNDggLSBDaHJvbmljIGlzb3Nwb3JpYXNpcwpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgY2hyb25pYyBpc29zcG9yaWFzaXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNocm9uaWMgaXNvc3Bvcmlhc2lzIjoKICBleGlzdHMgIkNocm9uaWMgaXNvc3Bvcmlhc2lzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ2hyb25pYyBpc29zcG9yaWFzaXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ2hyb25pYyBpc29zcG9yaWFzaXMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ2hyb25pYyBpc29zcG9yaWFzaXMiXQpkZWZpbmUgIkNocm9uaWMgaXNvc3Bvcmlhc2lzIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDaHJvbmljIGlzb3Nwb3JpYXNpcyIKLyogRW5kIG9mIENocm9uaWMgaXNvc3Bvcmlhc2lzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzQ5IC0gRGlzc2VtaW5hdGVkIG15Y29zaXMgZXh0cmFwdWxtb25hcnkgaGlzdG9wbGFzbW9zaXMsIGNvY2NpZGlvaWRvbXljb3NpcwpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgZGlzc2VtaW5hdGVkIG15Y29zaXMgKGV4dHJhcHVsbW9uYXJ5IGhpc3RvcGxhc21vc2lzLCBjb2NjaWRpb2lkb215Y29zaXMpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEaXNzZW1pbmF0ZWQgbXljb3NpcyBleHRyYXB1bG1vbmFyeSBoaXN0b3BsYXNtb3NpcywgY29jY2lkaW9pZG9teWNvc2lzIjoKICBleGlzdHMgIkRpc3NlbWluYXRlZCBteWNvc2lzIGV4dHJhcHVsbW9uYXJ5IGhpc3RvcGxhc21vc2lzLCBjb2NjaWRpb2lkb215Y29zaXMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJEaXNzZW1pbmF0ZWQgbXljb3NpcyBleHRyYXB1bG1vbmFyeSBoaXN0b3BsYXNtb3NpcywgY29jY2lkaW9pZG9teWNvc2lzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkRpc3NlbWluYXRlZCBteWNvc2lzIGV4dHJhcHVsbW9uYXJ5IGhpc3RvcGxhc21vc2lzLCBjb2NjaWRpb2lkb215Y29zaXMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRGlzc2VtaW5hdGVkIG15Y29zaXMgZXh0cmFwdWxtb25hcnkgaGlzdG9wbGFzbW9zaXMsIGNvY2NpZGlvaWRvbXljb3NpcyJdCmRlZmluZSAiRGlzc2VtaW5hdGVkIG15Y29zaXMgZXh0cmFwdWxtb25hcnkgaGlzdG9wbGFzbW9zaXMsIGNvY2NpZGlvaWRvbXljb3NpcyBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRGlzc2VtaW5hdGVkIG15Y29zaXMgZXh0cmFwdWxtb25hcnkgaGlzdG9wbGFzbW9zaXMsIGNvY2NpZGlvaWRvbXljb3NpcyIKLyogRW5kIG9mIERpc3NlbWluYXRlZCBteWNvc2lzIGV4dHJhcHVsbW9uYXJ5IGhpc3RvcGxhc21vc2lzLCBjb2NjaWRpb2lkb215Y29zaXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzNTAgLSBEaXNzZW1pbmF0ZWQgZW5kZW1pYyBteWNvc2lzIGV4dHJhcHVsbW9uYXJ5IGhpc3RvcGxhc21vc2lzLCBjb2NjaWRpb2lkb215Y29zaXMsIHBlbmljaWxsaW9zaXMKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIGRpc3NlbWluYXRlZCBlbmRlbWljIG15Y29zaXMgKGV4dHJhcHVsbW9uYXJ5IGhpc3RvcGxhc21vc2lzLCBjb2NjaWRpb2lkb215Y29zaXMsIHBlbmljaWxsaW9zaXMpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEaXNzZW1pbmF0ZWQgZW5kZW1pYyBteWNvc2lzIGV4dHJhcHVsbW9uYXJ5IGhpc3RvcGxhc21vc2lzLCBjb2NjaWRpb2lkb215Y29zaXMsIHBlbmljaWxsaW9zaXMiOgogIGV4aXN0cyAiRGlzc2VtaW5hdGVkIGVuZGVtaWMgbXljb3NpcyBleHRyYXB1bG1vbmFyeSBoaXN0b3BsYXNtb3NpcywgY29jY2lkaW9pZG9teWNvc2lzLCBwZW5pY2lsbGlvc2lzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRGlzc2VtaW5hdGVkIGVuZGVtaWMgbXljb3NpcyBleHRyYXB1bG1vbmFyeSBoaXN0b3BsYXNtb3NpcywgY29jY2lkaW9pZG9teWNvc2lzLCBwZW5pY2lsbGlvc2lzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkRpc3NlbWluYXRlZCBlbmRlbWljIG15Y29zaXMgZXh0cmFwdWxtb25hcnkgaGlzdG9wbGFzbW9zaXMsIGNvY2NpZGlvaWRvbXljb3NpcywgcGVuaWNpbGxpb3NpcyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJEaXNzZW1pbmF0ZWQgZW5kZW1pYyBteWNvc2lzIGV4dHJhcHVsbW9uYXJ5IGhpc3RvcGxhc21vc2lzLCBjb2NjaWRpb2lkb215Y29zaXMsIHBlbmljaWxsaW9zaXMiXQpkZWZpbmUgIkRpc3NlbWluYXRlZCBlbmRlbWljIG15Y29zaXMgZXh0cmFwdWxtb25hcnkgaGlzdG9wbGFzbW9zaXMsIGNvY2NpZGlvaWRvbXljb3NpcywgcGVuaWNpbGxpb3NpcyBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRGlzc2VtaW5hdGVkIGVuZGVtaWMgbXljb3NpcyBleHRyYXB1bG1vbmFyeSBoaXN0b3BsYXNtb3NpcywgY29jY2lkaW9pZG9teWNvc2lzLCBwZW5pY2lsbGlvc2lzIgovKiBFbmQgb2YgRGlzc2VtaW5hdGVkIGVuZGVtaWMgbXljb3NpcyBleHRyYXB1bG1vbmFyeSBoaXN0b3BsYXNtb3NpcywgY29jY2lkaW9pZG9teWNvc2lzLCBwZW5pY2lsbGlvc2lzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzUxIC0gQ2VyZWJyYWwgbHltcGhvbWEKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIGNlcmVicmFsIGx5bXBob21hCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDZXJlYnJhbCBseW1waG9tYSI6CiAgZXhpc3RzICJDZXJlYnJhbCBseW1waG9tYSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNlcmVicmFsIGx5bXBob21hIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNlcmVicmFsIGx5bXBob21hIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNlcmVicmFsIGx5bXBob21hIl0KZGVmaW5lICJDZXJlYnJhbCBseW1waG9tYSBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ2VyZWJyYWwgbHltcGhvbWEiCi8qIEVuZCBvZiBDZXJlYnJhbCBseW1waG9tYSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTM1MiAtIEItY2VsbCBub24tSG9kZ2tpbiBseW1waG9tYQpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgYi1jZWxsIG5vbi1Ib2Rna2luIGx5bXBob21hCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJCLWNlbGwgbm9uLUhvZGdraW4gbHltcGhvbWEiOgogIGV4aXN0cyAiQi1jZWxsIG5vbi1Ib2Rna2luIGx5bXBob21hIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQi1jZWxsIG5vbi1Ib2Rna2luIGx5bXBob21hIE9ic2VydmF0aW9uIgpkZWZpbmUgIkItY2VsbCBub24tSG9kZ2tpbiBseW1waG9tYSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJCLWNlbGwgbm9uLUhvZGdraW4gbHltcGhvbWEiXQpkZWZpbmUgIkItY2VsbCBub24tSG9kZ2tpbiBseW1waG9tYSBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQi1jZWxsIG5vbi1Ib2Rna2luIGx5bXBob21hIgovKiBFbmQgb2YgQi1jZWxsIG5vbi1Ib2Rna2luIGx5bXBob21hICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzUzIC0gSElWLWFzc29jaWF0ZWQgbmVwaHJvcGF0aHkgb3IgY2FyZGlvbXlvcGF0aHkKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIEhJVi0gYXNzb2NpYXRlZCBuZXBocm9wYXRoeSBvciBjYXJkaW9teW9wYXRoeQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSElWLWFzc29jaWF0ZWQgbmVwaHJvcGF0aHkgb3IgY2FyZGlvbXlvcGF0aHkiOgogIGV4aXN0cyAiSElWLWFzc29jaWF0ZWQgbmVwaHJvcGF0aHkgb3IgY2FyZGlvbXlvcGF0aHkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJISVYtYXNzb2NpYXRlZCBuZXBocm9wYXRoeSBvciBjYXJkaW9teW9wYXRoeSBPYnNlcnZhdGlvbiIKZGVmaW5lICJISVYtYXNzb2NpYXRlZCBuZXBocm9wYXRoeSBvciBjYXJkaW9teW9wYXRoeSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJISVYtYXNzb2NpYXRlZCBuZXBocm9wYXRoeSBvciBjYXJkaW9teW9wYXRoeSJdCmRlZmluZSAiSElWLWFzc29jaWF0ZWQgbmVwaHJvcGF0aHkgb3IgY2FyZGlvbXlvcGF0aHkgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkhJVi1hc3NvY2lhdGVkIG5lcGhyb3BhdGh5IG9yIGNhcmRpb215b3BhdGh5IgovKiBFbmQgb2YgSElWLWFzc29jaWF0ZWQgbmVwaHJvcGF0aHkgb3IgY2FyZGlvbXlvcGF0aHkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzNTQgLSBSZWN1cnJlbnQgc2VwdGljYWVtaWEgaW5jbHVkaW5nIG5vbnR5cGhvaWRhbCBTYWxtb25lbGxhCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSByZWN1cnJlbnQgYmFjdGVyYWVtaWEgKHNlcHRpY2FlbWlhKSAoaW5jbHVkaW5nIG5vbnR5cGhvaWRhbCBzYWxtb25lbGxhKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmVjdXJyZW50IHNlcHRpY2FlbWlhIGluY2x1ZGluZyBub250eXBob2lkYWwgU2FsbW9uZWxsYSI6CiAgZXhpc3RzICJSZWN1cnJlbnQgc2VwdGljYWVtaWEgaW5jbHVkaW5nIG5vbnR5cGhvaWRhbCBTYWxtb25lbGxhIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUmVjdXJyZW50IHNlcHRpY2FlbWlhIGluY2x1ZGluZyBub250eXBob2lkYWwgU2FsbW9uZWxsYSBPYnNlcnZhdGlvbiIKZGVmaW5lICJSZWN1cnJlbnQgc2VwdGljYWVtaWEgaW5jbHVkaW5nIG5vbnR5cGhvaWRhbCBTYWxtb25lbGxhIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlJlY3VycmVudCBzZXB0aWNhZW1pYSBpbmNsdWRpbmcgbm9udHlwaG9pZGFsIFNhbG1vbmVsbGEiXQpkZWZpbmUgIlJlY3VycmVudCBzZXB0aWNhZW1pYSBpbmNsdWRpbmcgbm9udHlwaG9pZGFsIFNhbG1vbmVsbGEgT2JzZXJ2YXRpb24iOgogICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREUyODkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlJlY3VycmVudCBzZXB0aWNhZW1pYSBpbmNsdWRpbmcgbm9udHlwaG9pZGFsIFNhbG1vbmVsbGEiCi8qIEVuZCBvZiBSZWN1cnJlbnQgc2VwdGljYWVtaWEgaW5jbHVkaW5nIG5vbnR5cGhvaWRhbCBTYWxtb25lbGxhICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzU1IC0gSW52YXNpdmUgY2VydmljYWwgY2FyY2lub21hCkBhY3Rpdml0eTogSElWLkQxNSBEZXRlcm1pbmUgY2xpbmljYWwgc3RhZ2Ugb2YgSElWCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc3ltcHRvbXMgaW5jbHVkZSBpbnZhc2l2ZSBjZXJ2aWNhbCBjYXJjaW5vbWEKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkludmFzaXZlIGNlcnZpY2FsIGNhcmNpbm9tYSI6CiAgZXhpc3RzICJJbnZhc2l2ZSBjZXJ2aWNhbCBjYXJjaW5vbWEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJJbnZhc2l2ZSBjZXJ2aWNhbCBjYXJjaW5vbWEgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW52YXNpdmUgY2VydmljYWwgY2FyY2lub21hIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkludmFzaXZlIGNlcnZpY2FsIGNhcmNpbm9tYSJdCmRlZmluZSAiSW52YXNpdmUgY2VydmljYWwgY2FyY2lub21hIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJJbnZhc2l2ZSBjZXJ2aWNhbCBjYXJjaW5vbWEiCi8qIEVuZCBvZiBJbnZhc2l2ZSBjZXJ2aWNhbCBjYXJjaW5vbWEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzNTYgLSBBdHlwaWNhbCBkaXNzZW1pbmF0ZWQgbGVpc2htYW5pYXNpcwpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgYXR5cGljYWwgZGlzc2VtaW5hdGVkIGxlaXNobWFuaWFzaXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkF0eXBpY2FsIGRpc3NlbWluYXRlZCBsZWlzaG1hbmlhc2lzIjoKICBleGlzdHMgIkF0eXBpY2FsIGRpc3NlbWluYXRlZCBsZWlzaG1hbmlhc2lzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQXR5cGljYWwgZGlzc2VtaW5hdGVkIGxlaXNobWFuaWFzaXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiQXR5cGljYWwgZGlzc2VtaW5hdGVkIGxlaXNobWFuaWFzaXMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQXR5cGljYWwgZGlzc2VtaW5hdGVkIGxlaXNobWFuaWFzaXMiXQpkZWZpbmUgIkF0eXBpY2FsIGRpc3NlbWluYXRlZCBsZWlzaG1hbmlhc2lzIE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFMjg5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBdHlwaWNhbCBkaXNzZW1pbmF0ZWQgbGVpc2htYW5pYXNpcyIKLyogRW5kIG9mIEF0eXBpY2FsIGRpc3NlbWluYXRlZCBsZWlzaG1hbmlhc2lzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzU3IC0gTmV1dHJvcGVuaWEKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIG5ldXRyb3BlbmlhLCBhbiBhYm5vcm1hbGx5IGxvdyBjb3VudCBvZiBhIHR5cGUgb2Ygd2hpdGUgYmxvb2QgY2VsbCAobmV1dHJvcGhpbHMpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOZXV0cm9wZW5pYSI6CiAgZXhpc3RzICJOZXV0cm9wZW5pYSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk5ldXRyb3BlbmlhIE9ic2VydmF0aW9uIgpkZWZpbmUgIk5ldXRyb3BlbmlhIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5ldXRyb3BlbmlhIl0KZGVmaW5lICJOZXV0cm9wZW5pYSBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTI4OSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTmV1dHJvcGVuaWEiCi8qIEVuZCBvZiBOZXV0cm9wZW5pYSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTM2NCAtIENENCBjb3VudApAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBDRDQgY2VsbCBjb3VudCBpbiBjZWxscy9tbV4zCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDRDQgY291bnQgRC5ERTM2NCI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQ0Q0IGNvdW50IC0gSElWLkQuREUzNjQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkNENCBjb3VudCBELkRFMzY0IFZhbHVlIjoKICAiQ0Q0IGNvdW50IEQuREUzNjQiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgQ0Q0IGNvdW50IEQuREUzNjQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzNjcgLSBCYXNlbGluZSBDRDQgY291bnQKQGFjdGl2aXR5OiBISVYuRDIwIERpYWdub3N0aWNzCkBkZXNjcmlwdGlvbjogQ0Q0IGNvdW50IHBlcmZvcm1lZCBhdCBISVYgZGlhZ25vc2lzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJCYXNlbGluZSBDRDQgY291bnQgRC5ERTM2NyI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQmFzZWxpbmUgQ0Q0IGNvdW50IC0gSElWLkQuREUzNjciXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkJhc2VsaW5lIENENCBjb3VudCBELkRFMzY3IFZhbHVlIjoKICAiQmFzZWxpbmUgQ0Q0IGNvdW50IEQuREUzNjciIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgQmFzZWxpbmUgQ0Q0IGNvdW50IEQuREUzNjcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzNjggLSBEYXRlIG9mIGJhc2VsaW5lIENENCBjb3VudCB0ZXN0CkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IERhdGUgYW5kIHRpbWUgd2hlbiBiYXNlbGluZSBDRDQgY291bnQgdGVzdCB3YXMgY29uZHVjdGVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEYXRlIG9mIGJhc2VsaW5lIENENCBjb3VudCB0ZXN0IEQuREUzNjgiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkRhdGUgb2YgYmFzZWxpbmUgQ0Q0IGNvdW50IHRlc3QgLSBISVYuRC5ERTM2OCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRGF0ZSBvZiBiYXNlbGluZSBDRDQgY291bnQgdGVzdCBELkRFMzY4IFZhbHVlIjoKICAiRGF0ZSBvZiBiYXNlbGluZSBDRDQgY291bnQgdGVzdCBELkRFMzY4IiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIERhdGUgb2YgYmFzZWxpbmUgQ0Q0IGNvdW50IHRlc3QgRC5ERTM2OCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTM4MyAtIFRpbWUgdG8gc3RhcnQgQVJUCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGltZSBmcm9tIEhJViBkaWFnbm9zaXMgdG8gd2hlbiBjbGllbnQgc3RhcnRlZCBBUlQKKi8KZGVmaW5lICJUaW1lIHRvIHN0YXJ0IEFSVCI6CiAgY2FzZSAKICAgICAgd2hlbiBkaWZmZXJlbmNlIGluIGRheXMgYmV0d2VlbiBzdGFydCBvZiAiRmlyc3QgSElWIFRyZWF0bWVudCIuZWZmZWN0aXZlLnRvSW50ZXJ2YWwoKSBhbmQgc3RhcnQgb2YgIkZpcnN0IEhJViBQb3NpdGl2ZSBDb25kaXRpb24iLm9uc2V0LnRvSW50ZXJ2YWwoKSA8PSA3IHRoZW4gQ29uY2VwdHMuIldpdGhpbiA3IGRheXMgb2YgSElWIGRpYWdub3NpcyIKICAgICAgd2hlbiBkaWZmZXJlbmNlIGluIGRheXMgYmV0d2VlbiBzdGFydCBvZiAiRmlyc3QgSElWIFRyZWF0bWVudCIuZWZmZWN0aXZlLnRvSW50ZXJ2YWwoKSBhbmQgc3RhcnQgb2YgIkZpcnN0IEhJViBQb3NpdGl2ZSBDb25kaXRpb24iLm9uc2V0LnRvSW50ZXJ2YWwoKSA8PSAzMCB0aGVuIENvbmNlcHRzLiJXaXRoaW4gMzAgZGF5cyBvZiBISVYgZGlhZ25vc2lzIgogICAgICB3aGVuIGRpZmZlcmVuY2UgaW4gZGF5cyBiZXR3ZWVuIHN0YXJ0IG9mICJGaXJzdCBISVYgVHJlYXRtZW50Ii5lZmZlY3RpdmUudG9JbnRlcnZhbCgpIGFuZCBzdGFydCBvZiAiRmlyc3QgSElWIFBvc2l0aXZlIENvbmRpdGlvbiIub25zZXQudG9JbnRlcnZhbCgpIDw9IDkwIHRoZW4gQ29uY2VwdHMuIldpdGhpbiA5MCBkYXlzIG9mIEhJViBkaWFnbm9zaXMiCiAgZWxzZSBudWxsCiAgZW5kCi8qIEVuZCBvZiBUaW1lIHRvIHN0YXJ0IEFSVCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTM4NyAtIFZpcmFsIGxvYWQgdGVzdCByZXN1bHQKQGFjdGl2aXR5OiBISVYuRDIwIERpYWdub3N0aWNzCkBkZXNjcmlwdGlvbjogUmVzdWx0IGZyb20gdGhlIHZpcmFsIGxvYWQgdGVzdCBpbiBudW1iZXIgb2YgY29waWVzL21MCiovCgpkZWZpbmUgIlZpcmFsIGxvYWQgdGVzdCByZXN1bHQgRC5ERTM4NyI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iVmlyYWwgbG9hZCB0ZXN0IHJlc3VsdCAtIEhJVi5ELkRFMzg3Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJWaXJhbCBsb2FkIHRlc3QgcmVzdWx0IEQuREUzODcgVmFsdWUiOgogICJWaXJhbCBsb2FkIHRlc3QgcmVzdWx0IEQuREUzODciIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgVmlyYWwgbG9hZCB0ZXN0IHJlc3VsdCBELkRFMzg3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMzkxIC0gUmVhc29uIGZvciBISVYgdmlyYWwgbG9hZCB0ZXN0CkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IFdoZXRoZXIgdGhlIHZpcmFsIGxvYWQgaXMgYmVpbmcgdGVzdGVkIGZvciByb3V0aW5lIG1vbml0b3Jpbmcgb24gYSBzZXQgc2NoZWR1bGUgb3IgZm9yIHRhcmdldGVkIG1vbml0b3JpbmcgZm9yIHN1c3BlY3RlZCB0cmVhdG1lbnQgZmFpbHVyZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmVhc29uIGZvciBISVYgdmlyYWwgbG9hZCB0ZXN0IjoKICBleGlzdHMgIlJlYXNvbiBmb3IgSElWIHZpcmFsIGxvYWQgdGVzdCBPYnNlcnZhdGlvbiIKZGVmaW5lICJSZWFzb24gZm9yIEhJViB2aXJhbCBsb2FkIHRlc3QgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlJlYXNvbiBmb3IgSElWIHZpcmFsIGxvYWQgdGVzdCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBSZWFzb24gZm9yIEhJViB2aXJhbCBsb2FkIHRlc3QgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzOTIgLSBSb3V0aW5lIHZpcmFsIGxvYWQgdGVzdApAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBSb3V0aW5lIHJlZmVycyB0byB2aXJhbCBsb2FkIHRlc3RzIG9idGFpbmVkIGF0IHN0YW5kYXJkIGludGVydmFscyBmb2xsb3dpbmcgQVJUIGluaXRpYXRpb24gdG8gbW9uaXRvciB2aXJhbCBsb2FkIHJlc3BvbnNlIHRvIEFSVAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUm91dGluZSB2aXJhbCBsb2FkIHRlc3QiOgogIGV4aXN0cyAiUm91dGluZSB2aXJhbCBsb2FkIHRlc3QgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSb3V0aW5lIHZpcmFsIGxvYWQgdGVzdCBPYnNlcnZhdGlvbiIKZGVmaW5lICJSb3V0aW5lIHZpcmFsIGxvYWQgdGVzdCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJSb3V0aW5lIHZpcmFsIGxvYWQgdGVzdCJdCmRlZmluZSAiUm91dGluZSB2aXJhbCBsb2FkIHRlc3QgT2JzZXJ2YXRpb24iOgogICJSZWFzb24gZm9yIEhJViB2aXJhbCBsb2FkIHRlc3QgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlJvdXRpbmUgdmlyYWwgbG9hZCB0ZXN0IgovKiBFbmQgb2YgUm91dGluZSB2aXJhbCBsb2FkIHRlc3QgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzOTMgLSBUYXJnZXRlZCB2aXJhbCBsb2FkIG1vbml0b3JpbmcKQGFjdGl2aXR5OiBISVYuRDIwIERpYWdub3N0aWNzCkBkZXNjcmlwdGlvbjogVGFyZ2V0ZWQgcmVmZXJzIHRvIHZpcmFsIGxvYWQgdGVzdHMgb2J0YWluZWQgYmFzZWQgb24gYSBzcGVjaWZpYyBjbGluaWNhbCBpbmRpY2F0aW9uIChzdWNoIGFzIGNvbmNlcm4gYWJvdXQgZGlzZWFzZSBwcm9ncmVzc2lvbiBvciBmYWlsdXJlIHRvIHJlc3BvbmQgdG8gQVJUKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVGFyZ2V0ZWQgdmlyYWwgbG9hZCBtb25pdG9yaW5nIjoKICBleGlzdHMgIlRhcmdldGVkIHZpcmFsIGxvYWQgbW9uaXRvcmluZyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlRhcmdldGVkIHZpcmFsIGxvYWQgbW9uaXRvcmluZyBPYnNlcnZhdGlvbiIKZGVmaW5lICJUYXJnZXRlZCB2aXJhbCBsb2FkIG1vbml0b3JpbmcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVGFyZ2V0ZWQgdmlyYWwgbG9hZCBtb25pdG9yaW5nIl0KZGVmaW5lICJUYXJnZXRlZCB2aXJhbCBsb2FkIG1vbml0b3JpbmcgT2JzZXJ2YXRpb24iOgogICJSZWFzb24gZm9yIEhJViB2aXJhbCBsb2FkIHRlc3QgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlRhcmdldGVkIHZpcmFsIGxvYWQgbW9uaXRvcmluZyIKLyogRW5kIG9mIFRhcmdldGVkIHZpcmFsIGxvYWQgbW9uaXRvcmluZyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTM5NCAtIEluaXRpYWwgdmlyYWwgbG9hZCB0ZXN0CkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IFRoZSBmaXJzdCB2aXJhbCBsb2FkIHRlc3Qgb2YgdGhlIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW5pdGlhbCB2aXJhbCBsb2FkIHRlc3QiOgogIGV4aXN0cyAiSW5pdGlhbCB2aXJhbCBsb2FkIHRlc3QgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJJbml0aWFsIHZpcmFsIGxvYWQgdGVzdCBPYnNlcnZhdGlvbiIKZGVmaW5lICJJbml0aWFsIHZpcmFsIGxvYWQgdGVzdCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJJbml0aWFsIHZpcmFsIGxvYWQgdGVzdCJdCmRlZmluZSAiSW5pdGlhbCB2aXJhbCBsb2FkIHRlc3QgT2JzZXJ2YXRpb24iOgogICJSZWFzb24gZm9yIEhJViB2aXJhbCBsb2FkIHRlc3QgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkluaXRpYWwgdmlyYWwgbG9hZCB0ZXN0IgovKiBFbmQgb2YgSW5pdGlhbCB2aXJhbCBsb2FkIHRlc3QgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzOTUgLSBGb2xsb3ctdXAgdmlyYWwgbG9hZCB0ZXN0IGFmdGVyIHJlY2VpdmluZyBlbmhhbmNlZCBhZGhlcmVuY2UgY291bnNlbGxpbmcKQGFjdGl2aXR5OiBISVYuRDIwIERpYWdub3N0aWNzCkBkZXNjcmlwdGlvbjogQSBmb2xsb3ctdXAgdmlyYWwgbG9hZCB0ZXN0IHdpdGhpbiAzLTYgbW9udGhzIGFmdGVyIGVuaGFuY2VkIGFkaGVyZW5jZSBjb3Vuc2VsbGluZyBhZnRlciBjbGllbnQgcmVjZWl2ZWQgYSBoaWdoIHZpcmFsIGxvYWQgdGVzdCByZXN1bHQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkZvbGxvdy11cCB2aXJhbCBsb2FkIHRlc3QgYWZ0ZXIgcmVjZWl2aW5nIGVuaGFuY2VkIGFkaGVyZW5jZSBjb3Vuc2VsbGluZyI6CiAgZXhpc3RzICJGb2xsb3ctdXAgdmlyYWwgbG9hZCB0ZXN0IGFmdGVyIHJlY2VpdmluZyBlbmhhbmNlZCBhZGhlcmVuY2UgY291bnNlbGxpbmcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJGb2xsb3ctdXAgdmlyYWwgbG9hZCB0ZXN0IGFmdGVyIHJlY2VpdmluZyBlbmhhbmNlZCBhZGhlcmVuY2UgY291bnNlbGxpbmcgT2JzZXJ2YXRpb24iCmRlZmluZSAiRm9sbG93LXVwIHZpcmFsIGxvYWQgdGVzdCBhZnRlciByZWNlaXZpbmcgZW5oYW5jZWQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkZvbGxvdy11cCB2aXJhbCBsb2FkIHRlc3QgYWZ0ZXIgcmVjZWl2aW5nIGVuaGFuY2VkIGFkaGVyZW5jZSBjb3Vuc2VsbGluZyJdCmRlZmluZSAiRm9sbG93LXVwIHZpcmFsIGxvYWQgdGVzdCBhZnRlciByZWNlaXZpbmcgZW5oYW5jZWQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nIE9ic2VydmF0aW9uIjoKICAiUmVhc29uIGZvciBISVYgdmlyYWwgbG9hZCB0ZXN0IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJGb2xsb3ctdXAgdmlyYWwgbG9hZCB0ZXN0IGFmdGVyIHJlY2VpdmluZyBlbmhhbmNlZCBhZGhlcmVuY2UgY291bnNlbGxpbmciCi8qIEVuZCBvZiBGb2xsb3ctdXAgdmlyYWwgbG9hZCB0ZXN0IGFmdGVyIHJlY2VpdmluZyBlbmhhbmNlZCBhZGhlcmVuY2UgY291bnNlbGxpbmcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUzOTkgLSBNb25pdG9yaW5nIGV4YW1pbmF0aW9ucwpAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBOYW1lIG9mIGV4YW1pbmF0aW9ucywgdGVzdCBhbmQgcmVzdWx0cyBmb3IgYW55IHJlbGV2YW50IGludmVzdGlnYXRpb25zIGNhcnJpZWQgb3V0IGZvciBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk1vbml0b3JpbmcgZXhhbWluYXRpb25zIjoKICBleGlzdHMgIk1vbml0b3JpbmcgZXhhbWluYXRpb25zIE9ic2VydmF0aW9uIgpkZWZpbmUgIk1vbml0b3JpbmcgZXhhbWluYXRpb25zIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJNb25pdG9yaW5nIGV4YW1pbmF0aW9ucyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBNb25pdG9yaW5nIGV4YW1pbmF0aW9ucyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQwMCAtIEhhZW1vZ2xvYmluIEhiCkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IFByb3ZpZGVyIG9yZGVyZWQgYSBIYWVtb2dsb2JpbiAoSGIpIHRlc3QsIG51bWJlciBpbiBnL2RMIHRlc3QKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhhZW1vZ2xvYmluIEhiIjoKICBleGlzdHMgIkhhZW1vZ2xvYmluIEhiIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSGFlbW9nbG9iaW4gSGIgT2JzZXJ2YXRpb24iCmRlZmluZSAiSGFlbW9nbG9iaW4gSGIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSGFlbW9nbG9iaW4gSGIiXQpkZWZpbmUgIkhhZW1vZ2xvYmluIEhiIE9ic2VydmF0aW9uIjoKICAiTW9uaXRvcmluZyBleGFtaW5hdGlvbnMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkhhZW1vZ2xvYmluIEhiIgovKiBFbmQgb2YgSGFlbW9nbG9iaW4gSGIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0MDEgLSBQcmVnbmFuY3kgdGVzdApAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBQcm92aWRlciBvcmRlcmVkIGEgcHJlZ25hbmN5IHRlc3QgZm9yIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUHJlZ25hbmN5IHRlc3QiOgogIGV4aXN0cyAiUHJlZ25hbmN5IHRlc3QgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQcmVnbmFuY3kgdGVzdCBPYnNlcnZhdGlvbiIKZGVmaW5lICJQcmVnbmFuY3kgdGVzdCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQcmVnbmFuY3kgdGVzdCJdCmRlZmluZSAiUHJlZ25hbmN5IHRlc3QgT2JzZXJ2YXRpb24iOgogICJNb25pdG9yaW5nIGV4YW1pbmF0aW9ucyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHJlZ25hbmN5IHRlc3QiCi8qIEVuZCBvZiBQcmVnbmFuY3kgdGVzdCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQwMiAtIFN5cGhpbGlzIHRlc3QKQGFjdGl2aXR5OiBISVYuRDIwIERpYWdub3N0aWNzCkBkZXNjcmlwdGlvbjogUHJvdmlkZXIgb3JkZXJlZCBhIHN5cGhpbGlzIHRlc3QKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlN5cGhpbGlzIHRlc3QiOgogIGV4aXN0cyAiU3lwaGlsaXMgdGVzdCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlN5cGhpbGlzIHRlc3QgT2JzZXJ2YXRpb24iCmRlZmluZSAiU3lwaGlsaXMgdGVzdCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTeXBoaWxpcyB0ZXN0Il0KZGVmaW5lICJTeXBoaWxpcyB0ZXN0IE9ic2VydmF0aW9uIjoKICAiTW9uaXRvcmluZyBleGFtaW5hdGlvbnMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlN5cGhpbGlzIHRlc3QiCi8qIEVuZCBvZiBTeXBoaWxpcyB0ZXN0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDAzIC0gQ2hlc3QgWC1yYXkgQ1hSCkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IFByb3ZpZGVyIG9yZGVyZWQgYSBjaGVzdCBYLXJheSAoQ1hSKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ2hlc3QgWC1yYXkgQ1hSIjoKICBleGlzdHMgIkNoZXN0IFgtcmF5IENYUiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNoZXN0IFgtcmF5IENYUiBPYnNlcnZhdGlvbiIKZGVmaW5lICJDaGVzdCBYLXJheSBDWFIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ2hlc3QgWC1yYXkgQ1hSIl0KZGVmaW5lICJDaGVzdCBYLXJheSBDWFIgT2JzZXJ2YXRpb24iOgogICJNb25pdG9yaW5nIGV4YW1pbmF0aW9ucyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ2hlc3QgWC1yYXkgQ1hSIgovKiBFbmQgb2YgQ2hlc3QgWC1yYXkgQ1hSICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDA0IC0gU3B1dHVtIG9yIGN1bHR1cmUgZm9yIFRCCkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IFByb3ZpZGVyIG9yZGVyZWQgc3B1dHVtIG9yIGN1bHR1cmUgZm9yIFRCCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTcHV0dW0gb3IgY3VsdHVyZSBmb3IgVEIiOgogIGV4aXN0cyAiU3B1dHVtIG9yIGN1bHR1cmUgZm9yIFRCIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU3B1dHVtIG9yIGN1bHR1cmUgZm9yIFRCIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNwdXR1bSBvciBjdWx0dXJlIGZvciBUQiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTcHV0dW0gb3IgY3VsdHVyZSBmb3IgVEIiXQpkZWZpbmUgIlNwdXR1bSBvciBjdWx0dXJlIGZvciBUQiBPYnNlcnZhdGlvbiI6CiAgIk1vbml0b3JpbmcgZXhhbWluYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTcHV0dW0gb3IgY3VsdHVyZSBmb3IgVEIiCi8qIEVuZCBvZiBTcHV0dW0gb3IgY3VsdHVyZSBmb3IgVEIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0MDUgLSBIQnNBZyB0ZXN0IEhCVgpAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBQcm92aWRlciBvcmRlcmVkIGFuIEhCc0FnIHRlc3QgKEhCVikgdGVzdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSEJzQWcgdGVzdCBIQlYiOgogIGV4aXN0cyAiSEJzQWcgdGVzdCBIQlYgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJIQnNBZyB0ZXN0IEhCViBPYnNlcnZhdGlvbiIKZGVmaW5lICJIQnNBZyB0ZXN0IEhCViBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIQnNBZyB0ZXN0IEhCViJdCmRlZmluZSAiSEJzQWcgdGVzdCBIQlYgT2JzZXJ2YXRpb24iOgogICJNb25pdG9yaW5nIGV4YW1pbmF0aW9ucyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSEJzQWcgdGVzdCBIQlYiCi8qIEVuZCBvZiBIQnNBZyB0ZXN0IEhCViAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQwNiAtIEhJViB2aXJhbCBsb2FkIHRlc3Qgb3JkZXJlZApAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBQcm92aWRlciBvcmRlcmVkIGFuIEhJViB2aXJhbCBsb2FkIHRlc3QKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhJViB2aXJhbCBsb2FkIHRlc3Qgb3JkZXJlZCI6CiAgZXhpc3RzICJISVYgdmlyYWwgbG9hZCB0ZXN0IG9yZGVyZWQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJISVYgdmlyYWwgbG9hZCB0ZXN0IG9yZGVyZWQgT2JzZXJ2YXRpb24iCmRlZmluZSAiSElWIHZpcmFsIGxvYWQgdGVzdCBvcmRlcmVkIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhJViB2aXJhbCBsb2FkIHRlc3Qgb3JkZXJlZCJdCmRlZmluZSAiSElWIHZpcmFsIGxvYWQgdGVzdCBvcmRlcmVkIE9ic2VydmF0aW9uIjoKICAiTW9uaXRvcmluZyBleGFtaW5hdGlvbnMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkhJViB2aXJhbCBsb2FkIHRlc3Qgb3JkZXJlZCIKLyogRW5kIG9mIEhJViB2aXJhbCBsb2FkIHRlc3Qgb3JkZXJlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQwNyAtIEhJViB2aXJhbCBsb2FkIHRlc3Qgc2NoZWR1bGVkCkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IFNjaGVkdWxlZCBhbiBISVYgdmlyYWwgbG9hZCB0ZXN0IHdpdGggY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYgdmlyYWwgbG9hZCB0ZXN0IHNjaGVkdWxlZCI6CiAgZXhpc3RzICJISVYgdmlyYWwgbG9hZCB0ZXN0IHNjaGVkdWxlZCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhJViB2aXJhbCBsb2FkIHRlc3Qgc2NoZWR1bGVkIE9ic2VydmF0aW9uIgpkZWZpbmUgIkhJViB2aXJhbCBsb2FkIHRlc3Qgc2NoZWR1bGVkIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhJViB2aXJhbCBsb2FkIHRlc3Qgc2NoZWR1bGVkIl0KZGVmaW5lICJISVYgdmlyYWwgbG9hZCB0ZXN0IHNjaGVkdWxlZCBPYnNlcnZhdGlvbiI6CiAgIk1vbml0b3JpbmcgZXhhbWluYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJISVYgdmlyYWwgbG9hZCB0ZXN0IHNjaGVkdWxlZCIKLyogRW5kIG9mIEhJViB2aXJhbCBsb2FkIHRlc3Qgc2NoZWR1bGVkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDA4IC0gQ0Q0IGNvdW50IG9yZGVyZWQKQGFjdGl2aXR5OiBISVYuRDIwIERpYWdub3N0aWNzCkBkZXNjcmlwdGlvbjogUHJvdmlkZXIgb3JkZXJlZCBhIENENCBjZWxsIGNvdW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDRDQgY291bnQgb3JkZXJlZCI6CiAgZXhpc3RzICJDRDQgY291bnQgb3JkZXJlZCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNENCBjb3VudCBvcmRlcmVkIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNENCBjb3VudCBvcmRlcmVkIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNENCBjb3VudCBvcmRlcmVkIl0KZGVmaW5lICJDRDQgY291bnQgb3JkZXJlZCBPYnNlcnZhdGlvbiI6CiAgIk1vbml0b3JpbmcgZXhhbWluYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDRDQgY291bnQgb3JkZXJlZCIKLyogRW5kIG9mIENENCBjb3VudCBvcmRlcmVkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDA5IC0gQ0Q0IGNvdW50IHRlc3Qgc2NoZWR1bGVkCkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IFNjaGVkdWxlZCBhIENENCB0ZXN0IHdpdGggY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDRDQgY291bnQgdGVzdCBzY2hlZHVsZWQiOgogIGV4aXN0cyAiQ0Q0IGNvdW50IHRlc3Qgc2NoZWR1bGVkIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ0Q0IGNvdW50IHRlc3Qgc2NoZWR1bGVkIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNENCBjb3VudCB0ZXN0IHNjaGVkdWxlZCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDRDQgY291bnQgdGVzdCBzY2hlZHVsZWQiXQpkZWZpbmUgIkNENCBjb3VudCB0ZXN0IHNjaGVkdWxlZCBPYnNlcnZhdGlvbiI6CiAgIk1vbml0b3JpbmcgZXhhbWluYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDRDQgY291bnQgdGVzdCBzY2hlZHVsZWQiCi8qIEVuZCBvZiBDRDQgY291bnQgdGVzdCBzY2hlZHVsZWQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0MTAgLSBDcnlwdG9jb2NjYWwgYW50aWdlbiB0ZXN0CkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IFByb3ZpZGVyIG9yZGVyZWQgYSBjcnlwdG9jb2NjYWwgYW50aWdlbiB0ZXN0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDcnlwdG9jb2NjYWwgYW50aWdlbiB0ZXN0IjoKICBleGlzdHMgIkNyeXB0b2NvY2NhbCBhbnRpZ2VuIHRlc3QgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDcnlwdG9jb2NjYWwgYW50aWdlbiB0ZXN0IE9ic2VydmF0aW9uIgpkZWZpbmUgIkNyeXB0b2NvY2NhbCBhbnRpZ2VuIHRlc3QgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ3J5cHRvY29jY2FsIGFudGlnZW4gdGVzdCJdCmRlZmluZSAiQ3J5cHRvY29jY2FsIGFudGlnZW4gdGVzdCBPYnNlcnZhdGlvbiI6CiAgIk1vbml0b3JpbmcgZXhhbWluYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDcnlwdG9jb2NjYWwgYW50aWdlbiB0ZXN0IgovKiBFbmQgb2YgQ3J5cHRvY29jY2FsIGFudGlnZW4gdGVzdCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQxMSAtIEhpc3RvcGxhc21vc2lzIGFudGlnZW4gdGVzdApAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBQcm92aWRlciBvcmRlcmVkIGEgaGlzdG9wbGFzbW9zaXMgYW50aWdlbiB0ZXN0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIaXN0b3BsYXNtb3NpcyBhbnRpZ2VuIHRlc3QiOgogIGV4aXN0cyAiSGlzdG9wbGFzbW9zaXMgYW50aWdlbiB0ZXN0IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSGlzdG9wbGFzbW9zaXMgYW50aWdlbiB0ZXN0IE9ic2VydmF0aW9uIgpkZWZpbmUgIkhpc3RvcGxhc21vc2lzIGFudGlnZW4gdGVzdCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIaXN0b3BsYXNtb3NpcyBhbnRpZ2VuIHRlc3QiXQpkZWZpbmUgIkhpc3RvcGxhc21vc2lzIGFudGlnZW4gdGVzdCBPYnNlcnZhdGlvbiI6CiAgIk1vbml0b3JpbmcgZXhhbWluYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJIaXN0b3BsYXNtb3NpcyBhbnRpZ2VuIHRlc3QiCi8qIEVuZCBvZiBIaXN0b3BsYXNtb3NpcyBhbnRpZ2VuIHRlc3QgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0MTIgLSBDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIHNjaGVkdWxlZApAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBTY2hlZHVsZWQgY2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyB3aXRoIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBzY2hlZHVsZWQiOgogIGV4aXN0cyAiQ2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBzY2hlZHVsZWQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIHNjaGVkdWxlZCBPYnNlcnZhdGlvbiIKZGVmaW5lICJDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIHNjaGVkdWxlZCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIHNjaGVkdWxlZCJdCmRlZmluZSAiQ2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBzY2hlZHVsZWQgT2JzZXJ2YXRpb24iOgogICJNb25pdG9yaW5nIGV4YW1pbmF0aW9ucyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBzY2hlZHVsZWQiCi8qIEVuZCBvZiBDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIHNjaGVkdWxlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQxMyAtIERhdGUgb2Ygc2NoZWR1bGVkIG1vbml0b3JpbmcgZXhhbWluYXRpb24KQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogRGF0ZSBvZiBzY2hlZHVsZWQgbW9uaXRvcmluZyBleGFtaW5hdGlvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGF0ZSBvZiBzY2hlZHVsZWQgbW9uaXRvcmluZyBleGFtaW5hdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iRGF0ZSBvZiBzY2hlZHVsZWQgbW9uaXRvcmluZyBleGFtaW5hdGlvbiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRGF0ZSBvZiBzY2hlZHVsZWQgbW9uaXRvcmluZyBleGFtaW5hdGlvbiBWYWx1ZSI6CiAgIkRhdGUgb2Ygc2NoZWR1bGVkIG1vbml0b3JpbmcgZXhhbWluYXRpb24iIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgRGF0ZSBvZiBzY2hlZHVsZWQgbW9uaXRvcmluZyBleGFtaW5hdGlvbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQxNyAtIERhdGUgdmlyYWwgbG9hZCB0ZXN0IHJlc3VsdHMgcmVjZWl2ZWQgYnkgY2xpZW50CkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IFRoZSBkYXRlIG9uIHdoaWNoIHRoZSBjbGllbnQgcmVjZWl2ZWQgcmVzdWx0cyBmcm9tIGEgdmlyYWwgbG9hZCB0ZXN0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEYXRlIHZpcmFsIGxvYWQgdGVzdCByZXN1bHRzIHJlY2VpdmVkIGJ5IGNsaWVudCBELkRFNDE3IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJEYXRlIHZpcmFsIGxvYWQgdGVzdCByZXN1bHRzIHJlY2VpdmVkIGJ5IGNsaWVudCAtIEhJVi5ELkRFNDE3Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJEYXRlIHZpcmFsIGxvYWQgdGVzdCByZXN1bHRzIHJlY2VpdmVkIGJ5IGNsaWVudCBELkRFNDE3IFZhbHVlIjoKICAiRGF0ZSB2aXJhbCBsb2FkIHRlc3QgcmVzdWx0cyByZWNlaXZlZCBieSBjbGllbnQgRC5ERTQxNyIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBEYXRlIHZpcmFsIGxvYWQgdGVzdCByZXN1bHRzIHJlY2VpdmVkIGJ5IGNsaWVudCBELkRFNDE3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDE4IC0gUmVhc29uIGZvciBBUlYgZHJ1ZyByZWdpbWVuIHN1YnN0aXR1dGlvbgpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogUmVhc29uIHdoeSBhIHN1YnN0aXR1dGlvbiB3YXMgbWFkZSB0byB0aGUgYW50aXJldHJvdmlyYWwgKEFSVikgZHJ1ZyByZWdpbWVuCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZWFzb24gZm9yIEFSViBkcnVnIHJlZ2ltZW4gc3Vic3RpdHV0aW9uIjoKICBleGlzdHMgIlJlYXNvbiBmb3IgQVJWIGRydWcgcmVnaW1lbiBzdWJzdGl0dXRpb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiUmVhc29uIGZvciBBUlYgZHJ1ZyByZWdpbWVuIHN1YnN0aXR1dGlvbiBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iUmVhc29uIGZvciBBUlYgZHJ1ZyByZWdpbWVuIHN1YnN0aXR1dGlvbiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBSZWFzb24gZm9yIEFSViBkcnVnIHJlZ2ltZW4gc3Vic3RpdHV0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDE5IC0gVG94aWNpdHkvc2lkZSBlZmZlY3RzCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBBIHN1YnN0aXR1dGlvbiB3YXMgbWFkZSB0byB0aGUgcmVnaW1lbiBiZWNhdXNlIG9mIHRveGljaXR5L3NpZGUgZWZmZWN0cwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVG94aWNpdHkvc2lkZSBlZmZlY3RzIEQuREU0MTkiOgogIGV4aXN0cyAiVG94aWNpdHkvc2lkZSBlZmZlY3RzIEQuREU0MTkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJUb3hpY2l0eS9zaWRlIGVmZmVjdHMgRC5ERTQxOSBPYnNlcnZhdGlvbiIKZGVmaW5lICJUb3hpY2l0eS9zaWRlIGVmZmVjdHMgRC5ERTQxOSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJUb3hpY2l0eS9zaWRlIGVmZmVjdHMgLSBISVYuRC5ERTQxOSJdCmRlZmluZSAiVG94aWNpdHkvc2lkZSBlZmZlY3RzIEQuREU0MTkgT2JzZXJ2YXRpb24iOgogICJSZWFzb24gZm9yIEFSViBkcnVnIHJlZ2ltZW4gc3Vic3RpdHV0aW9uIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJUb3hpY2l0eS9zaWRlIGVmZmVjdHMgLSBISVYuRC5ERTQxOSIKLyogRW5kIG9mIFRveGljaXR5L3NpZGUgZWZmZWN0cyBELkRFNDE5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDIwIC0gRHJ1Zy1kcnVnIGludGVyYWN0aW9uCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBBIHN1YnN0aXR1dGlvbiB3YXMgbWFkZSB0byB0aGUgcmVnaW1lbiBiZWNhdXNlIG9mIGEgZHJ1Zy1kcnVnIGludGVyYWN0aW9uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEcnVnLWRydWcgaW50ZXJhY3Rpb24iOgogIGV4aXN0cyAiRHJ1Zy1kcnVnIGludGVyYWN0aW9uIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRHJ1Zy1kcnVnIGludGVyYWN0aW9uIE9ic2VydmF0aW9uIgpkZWZpbmUgIkRydWctZHJ1ZyBpbnRlcmFjdGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJEcnVnLWRydWcgaW50ZXJhY3Rpb24iXQpkZWZpbmUgIkRydWctZHJ1ZyBpbnRlcmFjdGlvbiBPYnNlcnZhdGlvbiI6CiAgIlJlYXNvbiBmb3IgQVJWIGRydWcgcmVnaW1lbiBzdWJzdGl0dXRpb24gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkRydWctZHJ1ZyBpbnRlcmFjdGlvbiIKLyogRW5kIG9mIERydWctZHJ1ZyBpbnRlcmFjdGlvbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQyMSAtIFByZWduYW5jeQpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogQSBzdWJzdGl0dXRpb24gd2FzIG1hZGUgdG8gdGhlIHJlZ2ltZW4gYmVjYXVzZSBvZiBwcmVnbmFuY3kKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlByZWduYW5jeSI6CiAgZXhpc3RzICJQcmVnbmFuY3kgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQcmVnbmFuY3kgT2JzZXJ2YXRpb24iCmRlZmluZSAiUHJlZ25hbmN5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlByZWduYW5jeSJdCmRlZmluZSAiUHJlZ25hbmN5IE9ic2VydmF0aW9uIjoKICAiUmVhc29uIGZvciBBUlYgZHJ1ZyByZWdpbWVuIHN1YnN0aXR1dGlvbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHJlZ25hbmN5IgovKiBFbmQgb2YgUHJlZ25hbmN5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDIyIC0gTmV3IFRCCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBBIHN1YnN0aXR1dGlvbiB3YXMgbWFkZSB0byB0aGUgcmVnaW1lbiBiZWNhdXNlIG9mIG5ldyB0dWJlcmN1bG9zaXMgKFRCKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTmV3IFRCIjoKICBleGlzdHMgIk5ldyBUQiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk5ldyBUQiBPYnNlcnZhdGlvbiIKZGVmaW5lICJOZXcgVEIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTmV3IFRCIl0KZGVmaW5lICJOZXcgVEIgT2JzZXJ2YXRpb24iOgogICJSZWFzb24gZm9yIEFSViBkcnVnIHJlZ2ltZW4gc3Vic3RpdHV0aW9uIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJOZXcgVEIiCi8qIEVuZCBvZiBOZXcgVEIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0MjMgLSBOZXcgZHJ1ZyBhdmFpbGFibGUKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IEEgc3Vic3RpdHV0aW9uIHdhcyBtYWRlIHRvIHRoZSByZWdpbWVuIGJlY2F1c2UgYSBuZXcgZHJ1ZyB3YXMgYXZhaWxhYmxlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOZXcgZHJ1ZyBhdmFpbGFibGUiOgogIGV4aXN0cyAiTmV3IGRydWcgYXZhaWxhYmxlIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTmV3IGRydWcgYXZhaWxhYmxlIE9ic2VydmF0aW9uIgpkZWZpbmUgIk5ldyBkcnVnIGF2YWlsYWJsZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOZXcgZHJ1ZyBhdmFpbGFibGUiXQpkZWZpbmUgIk5ldyBkcnVnIGF2YWlsYWJsZSBPYnNlcnZhdGlvbiI6CiAgIlJlYXNvbiBmb3IgQVJWIGRydWcgcmVnaW1lbiBzdWJzdGl0dXRpb24gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5ldyBkcnVnIGF2YWlsYWJsZSIKLyogRW5kIG9mIE5ldyBkcnVnIGF2YWlsYWJsZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQyNCAtIERydWcgb3V0IG9mIHN0b2NrCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBBIHN1YnN0aXR1dGlvbiB3YXMgbWFkZSB0byB0aGUgcmVnaW1lbiBiZWNhdXNlIGRydWcgd2FzIG91dCBvZiBzdG9jawoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRHJ1ZyBvdXQgb2Ygc3RvY2siOgogIGV4aXN0cyAiRHJ1ZyBvdXQgb2Ygc3RvY2sgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJEcnVnIG91dCBvZiBzdG9jayBPYnNlcnZhdGlvbiIKZGVmaW5lICJEcnVnIG91dCBvZiBzdG9jayBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJEcnVnIG91dCBvZiBzdG9jayJdCmRlZmluZSAiRHJ1ZyBvdXQgb2Ygc3RvY2sgT2JzZXJ2YXRpb24iOgogICJSZWFzb24gZm9yIEFSViBkcnVnIHJlZ2ltZW4gc3Vic3RpdHV0aW9uIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJEcnVnIG91dCBvZiBzdG9jayIKLyogRW5kIG9mIERydWcgb3V0IG9mIHN0b2NrICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDI1IC0gT3RoZXIgcmVhc29uIGZvciByZWdpbWVuIHN1YnN0aXR1dGlvbgpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogQSBzdWJzdGl0dXRpb24gd2FzIG1hZGUgZm9yIGFub3RoZXIgcmVhc29uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPdGhlciByZWFzb24gZm9yIHJlZ2ltZW4gc3Vic3RpdHV0aW9uIjoKICBleGlzdHMgIk90aGVyIHJlYXNvbiBmb3IgcmVnaW1lbiBzdWJzdGl0dXRpb24gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPdGhlciByZWFzb24gZm9yIHJlZ2ltZW4gc3Vic3RpdHV0aW9uIE9ic2VydmF0aW9uIgpkZWZpbmUgIk90aGVyIHJlYXNvbiBmb3IgcmVnaW1lbiBzdWJzdGl0dXRpb24gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iT3RoZXIgcmVhc29uIGZvciByZWdpbWVuIHN1YnN0aXR1dGlvbiJdCmRlZmluZSAiT3RoZXIgcmVhc29uIGZvciByZWdpbWVuIHN1YnN0aXR1dGlvbiBPYnNlcnZhdGlvbiI6CiAgIlJlYXNvbiBmb3IgQVJWIGRydWcgcmVnaW1lbiBzdWJzdGl0dXRpb24gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk90aGVyIHJlYXNvbiBmb3IgcmVnaW1lbiBzdWJzdGl0dXRpb24iCi8qIEVuZCBvZiBPdGhlciByZWFzb24gZm9yIHJlZ2ltZW4gc3Vic3RpdHV0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDI3IC0gU3dpdGNoIHRvIHNlY29uZC1saW5lIEFSVCByZWdpbWVuIHJlY29tbWVuZGVkCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBBIHN3aXRjaCB0byBzZWNvbmQtbGluZSBBUlQgcmVnaW1lbiBpcyByZWNvbW1lbmRlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU3dpdGNoIHRvIHNlY29uZC1saW5lIEFSVCByZWdpbWVuIHJlY29tbWVuZGVkIjoKICBleGlzdHMgIlN3aXRjaCB0byBzZWNvbmQtbGluZSBBUlQgcmVnaW1lbiByZWNvbW1lbmRlZCBPYnNlcnZhdGlvbiIKZGVmaW5lICJTd2l0Y2ggdG8gc2Vjb25kLWxpbmUgQVJUIHJlZ2ltZW4gcmVjb21tZW5kZWQgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlN3aXRjaCB0byBzZWNvbmQtbGluZSBBUlQgcmVnaW1lbiByZWNvbW1lbmRlZCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIFN3aXRjaCB0byBzZWNvbmQtbGluZSBBUlQgcmVnaW1lbiByZWNvbW1lbmRlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQzNiAtIFJlZ2ltZW4gc3Vic3RpdHV0aW9uIHJlY29tbWVuZGVkCkBhY3Rpdml0eTogSElWLkQyMyBQcmVzY3JpYmUKQGRlc2NyaXB0aW9uOiBBIGRydWcgc3Vic3RpdHV0aW9uIGlzIHJlY29tbWVuZGVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZWdpbWVuIHN1YnN0aXR1dGlvbiByZWNvbW1lbmRlZCI6CiAgZXhpc3RzICJSZWdpbWVuIHN1YnN0aXR1dGlvbiByZWNvbW1lbmRlZCBPYnNlcnZhdGlvbiIKZGVmaW5lICJSZWdpbWVuIHN1YnN0aXR1dGlvbiByZWNvbW1lbmRlZCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iUmVnaW1lbiBzdWJzdGl0dXRpb24gcmVjb21tZW5kZWQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBSZWdpbWVuIHN1YnN0aXR1dGlvbiByZWNvbW1lbmRlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQzNyAtIERvc2UgYWRqdXN0bWVudCByZWNvbW1lbmRlZApAYWN0aXZpdHk6IEhJVi5EMjMgUHJlc2NyaWJlCkBkZXNjcmlwdGlvbjogQSBkb3NhZ2UgY2hhbmdlIGlzIHJlY29tbWVuZGVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEb3NlIGFkanVzdG1lbnQgcmVjb21tZW5kZWQiOgogIGV4aXN0cyAiRG9zZSBhZGp1c3RtZW50IHJlY29tbWVuZGVkIE9ic2VydmF0aW9uIgpkZWZpbmUgIkRvc2UgYWRqdXN0bWVudCByZWNvbW1lbmRlZCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iRG9zZSBhZGp1c3RtZW50IHJlY29tbWVuZGVkIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgaXMgdHJ1ZQovKiBFbmQgb2YgRG9zZSBhZGp1c3RtZW50IHJlY29tbWVuZGVkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDQzIC0gU3VzcGljaW9uIG9mIHRyZWF0bWVudCBmYWlsdXJlIG9yIGludGVycnVwdGlvbgpAYWN0aXZpdHk6IEhJVi5EMjMgUHJlc2NyaWJlCkBkZXNjcmlwdGlvbjogQ2xpZW50IGhhcyBiZWVuIG9uIEFSVCwgYnV0IGhhcyBzdG9wcGVkIHRha2luZyBpdCBvciBhIHRyZWF0bWVudCBmYWlsdXJlIGlzIHN1c3BlY3RlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU3VzcGljaW9uIG9mIHRyZWF0bWVudCBmYWlsdXJlIG9yIGludGVycnVwdGlvbiI6CiAgZXhpc3RzICJTdXNwaWNpb24gb2YgdHJlYXRtZW50IGZhaWx1cmUgb3IgaW50ZXJydXB0aW9uIE9ic2VydmF0aW9uIgpkZWZpbmUgIlN1c3BpY2lvbiBvZiB0cmVhdG1lbnQgZmFpbHVyZSBvciBpbnRlcnJ1cHRpb24gT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlN1c3BpY2lvbiBvZiB0cmVhdG1lbnQgZmFpbHVyZSBvciBpbnRlcnJ1cHRpb24iXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBTdXNwaWNpb24gb2YgdHJlYXRtZW50IGZhaWx1cmUgb3IgaW50ZXJydXB0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDU3IC0gTWVkaWNhdGlvbnMgcHJlc2NyaWJlZApAYWN0aXZpdHk6IEhJVi5EMjMgUHJlc2NyaWJlCkBkZXNjcmlwdGlvbjogTmFtZSBvciByZWdpbWVuIGNvZGUgb2YgYWxsIG90aGVyIG1lZGljYXRpb25zIHByZXNjcmliZWQgZHVyaW5nIHRoZSB2aXNpdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTWVkaWNhdGlvbnMgcHJlc2NyaWJlZCBELkRFNDU3IjoKICBleGlzdHMgIk1lZGljYXRpb25zIHByZXNjcmliZWQgRC5ERTQ1NyBPYnNlcnZhdGlvbiIKZGVmaW5lICJNZWRpY2F0aW9ucyBwcmVzY3JpYmVkIEQuREU0NTcgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIk1lZGljYXRpb25zIHByZXNjcmliZWQgLSBISVYuRC5ERTQ1NyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBNZWRpY2F0aW9ucyBwcmVzY3JpYmVkIEQuREU0NTcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0NTggLSBEYXRlIG1lZGljYXRpb25zIHByZXNjcmliZWQKQGFjdGl2aXR5OiBISVYuRDIzIFByZXNjcmliZQpAZGVzY3JpcHRpb246IERhdGUgdGhlIG1lZGljYXRpb25zIHdlcmUgcHJlc2NyaWJlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGF0ZSBtZWRpY2F0aW9ucyBwcmVzY3JpYmVkIEQuREU0NTgiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkRhdGUgbWVkaWNhdGlvbnMgcHJlc2NyaWJlZCAtIEhJVi5ELkRFNDU4Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJEYXRlIG1lZGljYXRpb25zIHByZXNjcmliZWQgRC5ERTQ1OCBWYWx1ZSI6CiAgIkRhdGUgbWVkaWNhdGlvbnMgcHJlc2NyaWJlZCBELkRFNDU4IiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIERhdGUgbWVkaWNhdGlvbnMgcHJlc2NyaWJlZCBELkRFNDU4ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDU5IC0gRG9zZSBvZiBtZWRpY2F0aW9ucyBwcmVzY3JpYmVkCkBhY3Rpdml0eTogSElWLkQyMyBQcmVzY3JpYmUKQGRlc2NyaXB0aW9uOiBOdW1iZXIgb2YgZG9zZXMgKHF1YW50aXR5IHRha2VuIGF0IGEgc2luZ2xlIHBvaW50IGluIHRpbWUpIG9mIGRydWdzIHByZXNjcmliZWQvZGlzcGVuc2VkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEb3NlIG9mIG1lZGljYXRpb25zIHByZXNjcmliZWQiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkRvc2Ugb2YgbWVkaWNhdGlvbnMgcHJlc2NyaWJlZCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRG9zZSBvZiBtZWRpY2F0aW9ucyBwcmVzY3JpYmVkIFZhbHVlIjoKICAiRG9zZSBvZiBtZWRpY2F0aW9ucyBwcmVzY3JpYmVkIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIERvc2Ugb2YgbWVkaWNhdGlvbnMgcHJlc2NyaWJlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQ2MCAtIE51bWJlciBvZiBkYXlzIG1lZGljYXRpb25zIHByZXNjcmliZWQKQGFjdGl2aXR5OiBISVYuRDIzIFByZXNjcmliZQpAZGVzY3JpcHRpb246IE51bWJlciBvZiBkYXlzIHN1cHBseSBvZiBlYWNoIG1lZGljYXRpb24gb3IgcmVnaW1lbiBwcmVzY3JpYmVkIGR1cmluZyB0aGUgdmlzaXQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk51bWJlciBvZiBkYXlzIG1lZGljYXRpb25zIHByZXNjcmliZWQiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIk51bWJlciBvZiBkYXlzIG1lZGljYXRpb25zIHByZXNjcmliZWQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIk51bWJlciBvZiBkYXlzIG1lZGljYXRpb25zIHByZXNjcmliZWQgVmFsdWUiOgogICJOdW1iZXIgb2YgZGF5cyBtZWRpY2F0aW9ucyBwcmVzY3JpYmVkIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIE51bWJlciBvZiBkYXlzIG1lZGljYXRpb25zIHByZXNjcmliZWQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0NjUgLSBBZGhlcmVuY2UgY291bnNlbGxpbmcgcHJvdmlkZWQKQGFjdGl2aXR5OiBISVYuRDI0IENvdW5zZWwKQGRlc2NyaXB0aW9uOiBDb3Vuc2VsbGluZyB3YXMgY2FycmllZCBvdXQgZHVyaW5nIHZpc2l0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBZGhlcmVuY2UgY291bnNlbGxpbmcgcHJvdmlkZWQgRC5ERTQ2NSI6CiAgZXhpc3RzICJBZGhlcmVuY2UgY291bnNlbGxpbmcgcHJvdmlkZWQgRC5ERTQ2NSBPYnNlcnZhdGlvbiIKZGVmaW5lICJBZGhlcmVuY2UgY291bnNlbGxpbmcgcHJvdmlkZWQgRC5ERTQ2NSBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQWRoZXJlbmNlIGNvdW5zZWxsaW5nIHByb3ZpZGVkIC0gSElWLkQuREU0NjUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBBZGhlcmVuY2UgY291bnNlbGxpbmcgcHJvdmlkZWQgRC5ERTQ2NSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQ2NiAtIFR5cGUgb2YgdHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5CkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBUeXBlIG9mIHRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBleHBlcmllbmNlZCBieSBjbGllbnQuIFRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBpcyBkZWZpbmVkIGFzIGEgc2VyaW91cyBhZHZlcnNlIGRydWcgcmVhY3Rpb24gdGhhdCByZXN1bHRzIGluIGRydWcgZGlzY29udGludWF0aW9uIG9yIHN1YnN0aXR1dGlvbi4gSW4gYWRkaXRpb24sIGFueSByZWFjdGlvbiB0aGF0IGxlYWRzIHRvIHRyZWF0bWVudCBpbnRlcnJ1cHRpb24gb3IgcmVxdWlyZXMgY2hhbmdpbmcgdGhlIGRydWcgb3IgcmVnaW1lbiBiZWNhdXNlIG9mIGFuIGFkdmVyc2UgZHJ1ZyByZWFjdGlvbiBpcyBhbHNvIGNvbnNpZGVyZWQgYSBzZXJpb3VzIGFkdmVyc2UgZHJ1ZyByZWFjdGlvbi4KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlR5cGUgb2YgdHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IjoKICBleGlzdHMgIlR5cGUgb2YgdHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IE9ic2VydmF0aW9uIgpkZWZpbmUgIlR5cGUgb2YgdHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJUeXBlIG9mIHRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBUeXBlIG9mIHRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQ2NyAtIEdhc3Ryb2ludGVzdGluYWwKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IFRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBkdWUgdG8gR0kgaXNzdWVzIChuYXVzZWEsIGRpYXJyaG9lYSwgYWJkb21pbmFsIHBhaW4sIHZvbWl0aW5nKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiR2FzdHJvaW50ZXN0aW5hbCI6CiAgZXhpc3RzICJHYXN0cm9pbnRlc3RpbmFsIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiR2FzdHJvaW50ZXN0aW5hbCBPYnNlcnZhdGlvbiIKZGVmaW5lICJHYXN0cm9pbnRlc3RpbmFsIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkdhc3Ryb2ludGVzdGluYWwiXQpkZWZpbmUgIkdhc3Ryb2ludGVzdGluYWwgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIHRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iR2FzdHJvaW50ZXN0aW5hbCIKLyogRW5kIG9mIEdhc3Ryb2ludGVzdGluYWwgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0NjggLSBTa2luIGlzc3VlcwpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogVHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IGR1ZSB0byBza2luIGlzc3VlcyAocmFzaCwgaHlwZXJzZW5zaXRpdml0eSByZWFjdGlvbikKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlNraW4gaXNzdWVzIjoKICBleGlzdHMgIlNraW4gaXNzdWVzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2tpbiBpc3N1ZXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiU2tpbiBpc3N1ZXMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU2tpbiBpc3N1ZXMiXQpkZWZpbmUgIlNraW4gaXNzdWVzIE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiB0cmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlNraW4gaXNzdWVzIgovKiBFbmQgb2YgU2tpbiBpc3N1ZXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0NjkgLSBQZXJpcGhlcmFsIG5ldXJvcGF0aHkKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IFRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBkdWUgdG8gcGVyaXBoZXJhbCBuZXVyb3BhdGh5IChidXJuaW5nL251bWJuZXNzLyB0aW5nbGluZykKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBlcmlwaGVyYWwgbmV1cm9wYXRoeSI6CiAgZXhpc3RzICJQZXJpcGhlcmFsIG5ldXJvcGF0aHkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQZXJpcGhlcmFsIG5ldXJvcGF0aHkgT2JzZXJ2YXRpb24iCmRlZmluZSAiUGVyaXBoZXJhbCBuZXVyb3BhdGh5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlBlcmlwaGVyYWwgbmV1cm9wYXRoeSJdCmRlZmluZSAiUGVyaXBoZXJhbCBuZXVyb3BhdGh5IE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiB0cmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlBlcmlwaGVyYWwgbmV1cm9wYXRoeSIKLyogRW5kIG9mIFBlcmlwaGVyYWwgbmV1cm9wYXRoeSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQ3MCAtIENlbnRyYWwgbmVydm91cyBzeXN0ZW0gc3ltcHRvbXMKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IFRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBkdWUgdG8gY2VudHJhbCBuZXJ2b3VzIHN5c3RlbSBzeW1wdG9tcyAoZGl6enksIGFueGlldHksIG5pZ2h0bWFyZSwgZGVwcmVzc2lvbiwgc2VpenVyZXMpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDZW50cmFsIG5lcnZvdXMgc3lzdGVtIHN5bXB0b21zIjoKICBleGlzdHMgIkNlbnRyYWwgbmVydm91cyBzeXN0ZW0gc3ltcHRvbXMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDZW50cmFsIG5lcnZvdXMgc3lzdGVtIHN5bXB0b21zIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNlbnRyYWwgbmVydm91cyBzeXN0ZW0gc3ltcHRvbXMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ2VudHJhbCBuZXJ2b3VzIHN5c3RlbSBzeW1wdG9tcyJdCmRlZmluZSAiQ2VudHJhbCBuZXJ2b3VzIHN5c3RlbSBzeW1wdG9tcyBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2YgdHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDZW50cmFsIG5lcnZvdXMgc3lzdGVtIHN5bXB0b21zIgovKiBFbmQgb2YgQ2VudHJhbCBuZXJ2b3VzIHN5c3RlbSBzeW1wdG9tcyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQ3MSAtIFdlaWdodCBnYWluCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBUcmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgZHVlIHRvIHdlaWdodCBnYWluCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJXZWlnaHQgZ2FpbiI6CiAgZXhpc3RzICJXZWlnaHQgZ2FpbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIldlaWdodCBnYWluIE9ic2VydmF0aW9uIgpkZWZpbmUgIldlaWdodCBnYWluIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIldlaWdodCBnYWluIl0KZGVmaW5lICJXZWlnaHQgZ2FpbiBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2YgdHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJXZWlnaHQgZ2FpbiIKLyogRW5kIG9mIFdlaWdodCBnYWluICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDcyIC0gSGVwYXRpYyBkeXNmdW5jdGlvbgpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogVHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IGR1ZSB0byBoZXBhdGljIGR5c2Z1bmN0aW9uIChqYXVuZGljZSkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhlcGF0aWMgZHlzZnVuY3Rpb24iOgogIGV4aXN0cyAiSGVwYXRpYyBkeXNmdW5jdGlvbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhlcGF0aWMgZHlzZnVuY3Rpb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiSGVwYXRpYyBkeXNmdW5jdGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIZXBhdGljIGR5c2Z1bmN0aW9uIl0KZGVmaW5lICJIZXBhdGljIGR5c2Z1bmN0aW9uIE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiB0cmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkhlcGF0aWMgZHlzZnVuY3Rpb24iCi8qIEVuZCBvZiBIZXBhdGljIGR5c2Z1bmN0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDczIC0gSGFlbWF0b2xvZ2ljYWwgZGlzb3JkZXJzCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBUcmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgZHVlIHRvIGhhZW1hdG9sb2dpY2FsIChhbmFlbWlhLCBuZXV0cm9wZW5pYSkgZGlzb3JkZXJzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIYWVtYXRvbG9naWNhbCBkaXNvcmRlcnMiOgogIGV4aXN0cyAiSGFlbWF0b2xvZ2ljYWwgZGlzb3JkZXJzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSGFlbWF0b2xvZ2ljYWwgZGlzb3JkZXJzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkhhZW1hdG9sb2dpY2FsIGRpc29yZGVycyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIYWVtYXRvbG9naWNhbCBkaXNvcmRlcnMiXQpkZWZpbmUgIkhhZW1hdG9sb2dpY2FsIGRpc29yZGVycyBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2YgdHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJIYWVtYXRvbG9naWNhbCBkaXNvcmRlcnMiCi8qIEVuZCBvZiBIYWVtYXRvbG9naWNhbCBkaXNvcmRlcnMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0NzQgLSBGYXRpZ3VlCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBUcmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgZHVlIHRvIGZhdGlndWUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkZhdGlndWUiOgogIGV4aXN0cyAiRmF0aWd1ZSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkZhdGlndWUgT2JzZXJ2YXRpb24iCmRlZmluZSAiRmF0aWd1ZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJGYXRpZ3VlIl0KZGVmaW5lICJGYXRpZ3VlIE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiB0cmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkZhdGlndWUiCi8qIEVuZCBvZiBGYXRpZ3VlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDc1IC0gSGVhZGFjaGUKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IFRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBkdWUgdG8gaGVhZGFjaGUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhlYWRhY2hlIEQuREU0NzUiOgogIGV4aXN0cyAiSGVhZGFjaGUgRC5ERTQ3NSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhlYWRhY2hlIEQuREU0NzUgT2JzZXJ2YXRpb24iCmRlZmluZSAiSGVhZGFjaGUgRC5ERTQ3NSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIZWFkYWNoZSAtIEhJVi5ELkRFNDc1Il0KZGVmaW5lICJIZWFkYWNoZSBELkRFNDc1IE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiB0cmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkhlYWRhY2hlIC0gSElWLkQuREU0NzUiCi8qIEVuZCBvZiBIZWFkYWNoZSBELkRFNDc1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDc2IC0gQm9uZSBkeXNmdW5jdGlvbgpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogVHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IGR1ZSB0byBib25lIGR5c2Z1bmN0aW9uIChmcmFjdHVyZXMsIG9zdGVvcGVuaWEpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJCb25lIGR5c2Z1bmN0aW9uIjoKICBleGlzdHMgIkJvbmUgZHlzZnVuY3Rpb24gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJCb25lIGR5c2Z1bmN0aW9uIE9ic2VydmF0aW9uIgpkZWZpbmUgIkJvbmUgZHlzZnVuY3Rpb24gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQm9uZSBkeXNmdW5jdGlvbiJdCmRlZmluZSAiQm9uZSBkeXNmdW5jdGlvbiBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2YgdHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJCb25lIGR5c2Z1bmN0aW9uIgovKiBFbmQgb2YgQm9uZSBkeXNmdW5jdGlvbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTQ3NyAtIE1ldGFib2xpYyBzeW1wdG9tcwpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogVHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IGR1ZSB0byBtZXRhYm9saWMgc3ltcHRvbXMgKGJvZHkgZmF0IGNoYW5nZXMsIGh5cGVyZ2x5Y2FlbWlhLCBkeXNsaXBpZGFlbWlhKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTWV0YWJvbGljIHN5bXB0b21zIjoKICBleGlzdHMgIk1ldGFib2xpYyBzeW1wdG9tcyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk1ldGFib2xpYyBzeW1wdG9tcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJNZXRhYm9saWMgc3ltcHRvbXMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTWV0YWJvbGljIHN5bXB0b21zIl0KZGVmaW5lICJNZXRhYm9saWMgc3ltcHRvbXMgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIHRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTWV0YWJvbGljIHN5bXB0b21zIgovKiBFbmQgb2YgTWV0YWJvbGljIHN5bXB0b21zICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDc4IC0gS2lkbmV5IGR5c2Z1bmN0aW9uCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBUcmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgZHVlIHRvIGtpZG5leSBkeXNmdW5jdGlvbiAobmVwaHJvbGl0aGlhc2lzLCByZW5hbCBpbnN1ZmZpY2llbmN5KQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiS2lkbmV5IGR5c2Z1bmN0aW9uIjoKICBleGlzdHMgIktpZG5leSBkeXNmdW5jdGlvbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIktpZG5leSBkeXNmdW5jdGlvbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJLaWRuZXkgZHlzZnVuY3Rpb24gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iS2lkbmV5IGR5c2Z1bmN0aW9uIl0KZGVmaW5lICJLaWRuZXkgZHlzZnVuY3Rpb24gT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIHRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iS2lkbmV5IGR5c2Z1bmN0aW9uIgovKiBFbmQgb2YgS2lkbmV5IGR5c2Z1bmN0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNDc5IC0gVW5leHBlY3RlZCBhZHZlcnNlIGRydWcgcmVhY3Rpb24KQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IENsaWVudCBleHBlcmllbmNlZCBhbiB1bmV4cGVjdGVkIGFkdmVyc2UgZHJ1ZyByZWFjdGlvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVW5leHBlY3RlZCBhZHZlcnNlIGRydWcgcmVhY3Rpb24iOgogIGV4aXN0cyAiVW5leHBlY3RlZCBhZHZlcnNlIGRydWcgcmVhY3Rpb24gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVbmV4cGVjdGVkIGFkdmVyc2UgZHJ1ZyByZWFjdGlvbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJVbmV4cGVjdGVkIGFkdmVyc2UgZHJ1ZyByZWFjdGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJVbmV4cGVjdGVkIGFkdmVyc2UgZHJ1ZyByZWFjdGlvbiJdCmRlZmluZSAiVW5leHBlY3RlZCBhZHZlcnNlIGRydWcgcmVhY3Rpb24gT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIHRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVW5leHBlY3RlZCBhZHZlcnNlIGRydWcgcmVhY3Rpb24iCi8qIEVuZCBvZiBVbmV4cGVjdGVkIGFkdmVyc2UgZHJ1ZyByZWFjdGlvbiAqLwoKLyoKSElWLkQuREU0ODUKTmV3IHJlZ2ltZW4gYWZ0ZXIgc3dpdGNoIHRvIHNlY29uZC1saW5lIHJlZ2ltZW4KKi8KCmRlZmluZSAiTmV3IHJlZ2ltZW4gYWZ0ZXIgc3dpdGNoIHRvIHNlY29uZC1saW5lIHJlZ2ltZW4iOgogIFtNZWRpY2F0aW9uU3RhdGVtZW50XSBNUwogICAgd2hlcmUgZXhpc3RzKE1TLnJlYXNvbkNvZGUgQyB3aGVyZSBDIH4gQ29uY2VwdHMuIk5ldyByZWdpbWVuIGFmdGVyIHN3aXRjaCB0byBzZWNvbmQtbGluZSByZWdpbWVuIikKICAgIHNvcnQgYnkgc3RhcnQgb2YgZWZmZWN0aXZlLnRvSW50ZXJ2YWwoKQoKCi8qCkhJVi5ELkRFNDkxCk5ldyByZWdpbWVuIGFmdGVyIHN3aXRjaCB0byB0aGlyZC1saW5lIHJlZ2ltZW4KKi8KCmRlZmluZSAiTmV3IHJlZ2ltZW4gYWZ0ZXIgc3dpdGNoIHRvIHRoaXJkLWxpbmUgcmVnaW1lbiI6CiAgW01lZGljYXRpb25TdGF0ZW1lbnRdIE1TCiAgICB3aGVyZSBleGlzdHMoTVMucmVhc29uQ29kZSBDIHdoZXJlIEMgfiBDb25jZXB0cy4iTmV3IHJlZ2ltZW4gYWZ0ZXIgc3dpdGNoIHRvIHRoaXJkLWxpbmUgcmVnaW1lbiIpCiAgICBzb3J0IGJ5IHN0YXJ0IG9mIGVmZmVjdGl2ZS50b0ludGVydmFsKCkKCgovKgpISVYuRC5ERTQ4OQlOZXcgcmVnaW1lbihzKSBhZnRlciBzdWJzdGl0dXRpb24gd2l0aGluIHNlY29uZC1saW5lIHJlZ2ltZW4KKi8KCmRlZmluZSAiTmV3IHJlZ2ltZW4gYWZ0ZXIgc3Vic3RpdHV0aW9uIHdpdGhpbiBzZWNvbmQtbGluZSByZWdpbWVuIjoKICBbTWVkaWNhdGlvblN0YXRlbWVudF0gTVMKICAgIHdoZXJlIGV4aXN0cyhNUy5yZWFzb25Db2RlIEMgd2hlcmUgQyB+IENvbmNlcHRzLiJOZXcgcmVnaW1lbiBhZnRlciBzd2l0Y2ggdG8gc2Vjb25kLWxpbmUgcmVnaW1lbiIpCiAgICBzb3J0IGJ5IHN0YXJ0IG9mIGVmZmVjdGl2ZS50b0ludGVydmFsKCkKCgovKgpISVYuRC5ERTQ5NQlOZXcgcmVnaW1lbihzKSBhZnRlciBzdWJzdGl0dXRpb24gd2l0aGluIHRoaXJkLWxpbmUgcmVnaW1lbgoqLwoKZGVmaW5lICJOZXcgcmVnaW1lbiBhZnRlciBzdWJzdGl0dXRpb24gd2l0aGluIHRoaXJkLWxpbmUgcmVnaW1lbiI6CiAgW01lZGljYXRpb25TdGF0ZW1lbnRdIE1TCiAgICB3aGVyZSBleGlzdHMoTVMucmVhc29uQ29kZSBDIHdoZXJlIEMgfiBDb25jZXB0cy4iTmV3IHJlZ2ltZW4gYWZ0ZXIgc3dpdGNoIHRvIHRoaXJkLWxpbmUgcmVnaW1lbiIpCiAgICBzb3J0IGJ5IHN0YXJ0IG9mIGVmZmVjdGl2ZS50b0ludGVydmFsKCkKCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0ODcgLSBEYXRlcyBvZiBzdWJzdGl0dXRpb24gd2l0aGluIHNlY29uZC1saW5lIHJlZ2ltZW4KQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IERhdGUgb24gd2hpY2ggQVJWIGRydWcgcmVnaW1lbiBmb3IgY2xpZW50IHdhcyBjaGFuZ2VkIHdpdGhpbiB0aGUgc2Vjb25kLWxpbmUgcmVnaW1lbiAoc3Vic3RpdHV0aW9uKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGF0ZXMgb2Ygc3Vic3RpdHV0aW9uIHdpdGhpbiBzZWNvbmQtbGluZSByZWdpbWVuIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJEYXRlcyBvZiBzdWJzdGl0dXRpb24gd2l0aGluIHNlY29uZC1saW5lIHJlZ2ltZW4iXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkRhdGVzIG9mIHN1YnN0aXR1dGlvbiB3aXRoaW4gc2Vjb25kLWxpbmUgcmVnaW1lbiBWYWx1ZSI6CiAgIkRhdGVzIG9mIHN1YnN0aXR1dGlvbiB3aXRoaW4gc2Vjb25kLWxpbmUgcmVnaW1lbiIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBEYXRlcyBvZiBzdWJzdGl0dXRpb24gd2l0aGluIHNlY29uZC1saW5lIHJlZ2ltZW4gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0OTMgLSBEYXRlcyBvZiBzdWJzdGl0dXRpb24gd2l0aGluIHRoaXJkLWxpbmUgcmVnaW1lbgpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogRGF0ZSBvbiB3aGljaCBBUlYgZHJ1ZyByZWdpbWVuIGZvciBjbGllbnQgd2FzIGNoYW5nZWQgd2l0aGluIHRoZSB0aGlyZC1saW5lIChzdWJzdGl0dXRpb24pCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEYXRlcyBvZiBzdWJzdGl0dXRpb24gd2l0aGluIHRoaXJkLWxpbmUgcmVnaW1lbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iRGF0ZXMgb2Ygc3Vic3RpdHV0aW9uIHdpdGhpbiB0aGlyZC1saW5lIHJlZ2ltZW4iXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkRhdGVzIG9mIHN1YnN0aXR1dGlvbiB3aXRoaW4gdGhpcmQtbGluZSByZWdpbWVuIFZhbHVlIjoKICAiRGF0ZXMgb2Ygc3Vic3RpdHV0aW9uIHdpdGhpbiB0aGlyZC1saW5lIHJlZ2ltZW4iIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgRGF0ZXMgb2Ygc3Vic3RpdHV0aW9uIHdpdGhpbiB0aGlyZC1saW5lIHJlZ2ltZW4gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU0OTYgLSBFbmhhbmNlZCBhZGhlcmVuY2UgY291bnNlbGxpbmcgcHJvdmlkZWQKQGFjdGl2aXR5OiBISVYuRDI0IENvdW5zZWwKQGRlc2NyaXB0aW9uOiBFbmhhbmNlZCBhZGhlcmVuY2UgY291bnNlbGxpbmcgd2FzIHByb3ZpZGVkIHRvIHRoZSBjbGllbnQgZHVyaW5nIHRoZSB2aXNpdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRW5oYW5jZWQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nIHByb3ZpZGVkIjoKICBleGlzdHMgIkVuaGFuY2VkIGFkaGVyZW5jZSBjb3Vuc2VsbGluZyBwcm92aWRlZCBPYnNlcnZhdGlvbiIKZGVmaW5lICJFbmhhbmNlZCBhZGhlcmVuY2UgY291bnNlbGxpbmcgcHJvdmlkZWQgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkVuaGFuY2VkIGFkaGVyZW5jZSBjb3Vuc2VsbGluZyBwcm92aWRlZCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIEVuaGFuY2VkIGFkaGVyZW5jZSBjb3Vuc2VsbGluZyBwcm92aWRlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTUwNyAtIENvdW5zZWxsaW5nIHByb3ZpZGVkIG9uIGRpYWdub3NlcwpAYWN0aXZpdHk6IEhJVi5EMjQgQ291bnNlbApAZGVzY3JpcHRpb246IENvdW5zZWxsaW5nIHByb3ZpZGVkIG9uIGRpYWdub3NlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ291bnNlbGxpbmcgcHJvdmlkZWQgb24gZGlhZ25vc2VzIjoKICBleGlzdHMgIkNvdW5zZWxsaW5nIHByb3ZpZGVkIG9uIGRpYWdub3NlcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJDb3Vuc2VsbGluZyBwcm92aWRlZCBvbiBkaWFnbm9zZXMgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkNvdW5zZWxsaW5nIHByb3ZpZGVkIG9uIGRpYWdub3NlcyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIENvdW5zZWxsaW5nIHByb3ZpZGVkIG9uIGRpYWdub3NlcyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTUxMCAtIFN5cGhpbGlzIGNvdW5zZWxsaW5nIGFuZCB0cmVhdG1lbnQKQGFjdGl2aXR5OiBISVYuRDI0IENvdW5zZWwKQGRlc2NyaXB0aW9uOiBXaGV0aGVyIGNvdW5zZWxsaW5nIGFuZCB0cmVhdG1lbnQgd2FzIHByb3ZpZGVkIHRvIGEgY2xpZW50IHdobyBoYXMgYmVlbiBkaWFnbm9zZWQgd2l0aCBzeXBoaWxpcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU3lwaGlsaXMgY291bnNlbGxpbmcgYW5kIHRyZWF0bWVudCI6CiAgZXhpc3RzICJTeXBoaWxpcyBjb3Vuc2VsbGluZyBhbmQgdHJlYXRtZW50IE9ic2VydmF0aW9uIgpkZWZpbmUgIlN5cGhpbGlzIGNvdW5zZWxsaW5nIGFuZCB0cmVhdG1lbnQgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlN5cGhpbGlzIGNvdW5zZWxsaW5nIGFuZCB0cmVhdG1lbnQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBTeXBoaWxpcyBjb3Vuc2VsbGluZyBhbmQgdHJlYXRtZW50ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNTE5IC0gT3RoZXIgc3VwcG9ydCBzZXJ2aWNlcwpAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3Igb3RoZXIgc3VwcG9ydCBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT3RoZXIgc3VwcG9ydCBzZXJ2aWNlcyBELkRFNTE5IjoKICBleGlzdHMgIk90aGVyIHN1cHBvcnQgc2VydmljZXMgRC5ERTUxOSBPYnNlcnZhdGlvbiIKZGVmaW5lICJPdGhlciBzdXBwb3J0IHNlcnZpY2VzIEQuREU1MTkgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIk90aGVyIHN1cHBvcnQgc2VydmljZXMgLSBISVYuRC5ERTUxOSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBPdGhlciBzdXBwb3J0IHNlcnZpY2VzIEQuREU1MTkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU1MjAgLSBNZW50YWwgaGVhbHRoIHNlcnZpY2VzCkBhY3Rpdml0eTogSElWLkQyOCBPZmZlciBvdGhlciBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE9mZmVyIG9yIHJlZmVyIGZvciBtZW50YWwgaGVhbHRoIHNlcnZpY2VzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJNZW50YWwgaGVhbHRoIHNlcnZpY2VzIEQuREU1MjAiOgogIGV4aXN0cyAiTWVudGFsIGhlYWx0aCBzZXJ2aWNlcyBELkRFNTIwIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTWVudGFsIGhlYWx0aCBzZXJ2aWNlcyBELkRFNTIwIE9ic2VydmF0aW9uIgpkZWZpbmUgIk1lbnRhbCBoZWFsdGggc2VydmljZXMgRC5ERTUyMCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJNZW50YWwgaGVhbHRoIHNlcnZpY2VzIC0gSElWLkQuREU1MjAiXQpkZWZpbmUgIk1lbnRhbCBoZWFsdGggc2VydmljZXMgRC5ERTUyMCBPYnNlcnZhdGlvbiI6CiAgIk90aGVyIHN1cHBvcnQgc2VydmljZXMgRC5ERTUxOSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTWVudGFsIGhlYWx0aCBzZXJ2aWNlcyAtIEhJVi5ELkRFNTIwIgovKiBFbmQgb2YgTWVudGFsIGhlYWx0aCBzZXJ2aWNlcyBELkRFNTIwICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNTIxIC0gUHN5Y2hvc29jaWFsIGNvdW5zZWxsaW5nLCBzdXBwb3J0IGFuZCB0cmVhdG1lbnQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nCkBhY3Rpdml0eTogSElWLkQyOCBPZmZlciBvdGhlciBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE9mZmVyIG9yIHJlZmVyIGZvciBwc3ljaG9zb2NpYWwgY291bnNlbGxpbmcsIHN1cHBvcnQgYW5kIHRyZWF0bWVudCBhZGhlcmVuY2UgY291bnNlbGxpbmcKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBzeWNob3NvY2lhbCBjb3Vuc2VsbGluZywgc3VwcG9ydCBhbmQgdHJlYXRtZW50IGFkaGVyZW5jZSBjb3Vuc2VsbGluZyBELkRFNTIxIjoKICBleGlzdHMgIlBzeWNob3NvY2lhbCBjb3Vuc2VsbGluZywgc3VwcG9ydCBhbmQgdHJlYXRtZW50IGFkaGVyZW5jZSBjb3Vuc2VsbGluZyBELkRFNTIxIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUHN5Y2hvc29jaWFsIGNvdW5zZWxsaW5nLCBzdXBwb3J0IGFuZCB0cmVhdG1lbnQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nIEQuREU1MjEgT2JzZXJ2YXRpb24iCmRlZmluZSAiUHN5Y2hvc29jaWFsIGNvdW5zZWxsaW5nLCBzdXBwb3J0IGFuZCB0cmVhdG1lbnQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nIEQuREU1MjEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUHN5Y2hvc29jaWFsIGNvdW5zZWxsaW5nLCBzdXBwb3J0IGFuZCB0cmVhdG1lbnQgYWRoZXJlbmNlIGNvdW5zZWxsaW5nIC0gSElWLkQuREU1MjEiXQpkZWZpbmUgIlBzeWNob3NvY2lhbCBjb3Vuc2VsbGluZywgc3VwcG9ydCBhbmQgdHJlYXRtZW50IGFkaGVyZW5jZSBjb3Vuc2VsbGluZyBELkRFNTIxIE9ic2VydmF0aW9uIjoKICAiT3RoZXIgc3VwcG9ydCBzZXJ2aWNlcyBELkRFNTE5IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQc3ljaG9zb2NpYWwgY291bnNlbGxpbmcsIHN1cHBvcnQgYW5kIHRyZWF0bWVudCBhZGhlcmVuY2UgY291bnNlbGxpbmcgLSBISVYuRC5ERTUyMSIKLyogRW5kIG9mIFBzeWNob3NvY2lhbCBjb3Vuc2VsbGluZywgc3VwcG9ydCBhbmQgdHJlYXRtZW50IGFkaGVyZW5jZSBjb3Vuc2VsbGluZyBELkRFNTIxICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNTIyIC0gTGVnYWwgYW5kIHNvY2lhbCBzZXJ2aWNlcwpAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3IgbGVnYWwgYW5kIHNvY2lhbCBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTGVnYWwgYW5kIHNvY2lhbCBzZXJ2aWNlcyBELkRFNTIyIjoKICBleGlzdHMgIkxlZ2FsIGFuZCBzb2NpYWwgc2VydmljZXMgRC5ERTUyMiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkxlZ2FsIGFuZCBzb2NpYWwgc2VydmljZXMgRC5ERTUyMiBPYnNlcnZhdGlvbiIKZGVmaW5lICJMZWdhbCBhbmQgc29jaWFsIHNlcnZpY2VzIEQuREU1MjIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTGVnYWwgYW5kIHNvY2lhbCBzZXJ2aWNlcyAtIEhJVi5ELkRFNTIyIl0KZGVmaW5lICJMZWdhbCBhbmQgc29jaWFsIHNlcnZpY2VzIEQuREU1MjIgT2JzZXJ2YXRpb24iOgogICJPdGhlciBzdXBwb3J0IHNlcnZpY2VzIEQuREU1MTkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkxlZ2FsIGFuZCBzb2NpYWwgc2VydmljZXMgLSBISVYuRC5ERTUyMiIKLyogRW5kIG9mIExlZ2FsIGFuZCBzb2NpYWwgc2VydmljZXMgRC5ERTUyMiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTUyMyAtIFNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4KQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgZm9yIHNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4sIGluY2x1ZGluZyBmaXJzdC1saW5lIHN1cHBvcnQgYW5kIHBzeWNob3NvY2lhbCBzdXBwb3J0LCBwb3N0LXJhcGUgY2FyZSBhbmQgb3RoZXIgc3VwcG9ydCBzZXJ2aWNlcyBpbmNsdWRpbmcgc2hlbHRlcnMsIGxlZ2FsIHNlcnZpY2VzIGFuZCB3b21lbiBhbmQgY2hpbGQgcHJvdGVjdGlvbiBzZXJ2aWNlcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU2VydmljZXMgZm9yIHJlc3BvbmRpbmcgdG8gdmlvbGVuY2UgYWdhaW5zdCB3b21lbiBELkRFNTIzIjoKICBleGlzdHMgIlNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4gRC5ERTUyMyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4gRC5ERTUyMyBPYnNlcnZhdGlvbiIKZGVmaW5lICJTZXJ2aWNlcyBmb3IgcmVzcG9uZGluZyB0byB2aW9sZW5jZSBhZ2FpbnN0IHdvbWVuIEQuREU1MjMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU2VydmljZXMgZm9yIHJlc3BvbmRpbmcgdG8gdmlvbGVuY2UgYWdhaW5zdCB3b21lbiAtIEhJVi5ELkRFNTIzIl0KZGVmaW5lICJTZXJ2aWNlcyBmb3IgcmVzcG9uZGluZyB0byB2aW9sZW5jZSBhZ2FpbnN0IHdvbWVuIEQuREU1MjMgT2JzZXJ2YXRpb24iOgogICJPdGhlciBzdXBwb3J0IHNlcnZpY2VzIEQuREU1MTkgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4gLSBISVYuRC5ERTUyMyIKLyogRW5kIG9mIFNlcnZpY2VzIGZvciByZXNwb25kaW5nIHRvIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4gRC5ERTUyMyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTUyNCAtIERhdGUvdGltZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQKQGFjdGl2aXR5OiBISVYuRDI5IFNjaGVkdWxlIGZvbGxvdy11cApAZGVzY3JpcHRpb246IERhdGUgdGhlIGNsaWVudCBpcyB0byByZXR1cm4gZm9yIG1vbml0b3JpbmcsIHJlLXN1cHBseSBvciBhbnkgb3RoZXIgcmVhc29uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEYXRlL3RpbWUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IEQuREU1MjQiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkRhdGUvdGltZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQgLSBISVYuRC5ERTUyNCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRGF0ZS90aW1lIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCBELkRFNTI0IFZhbHVlIjoKICAiRGF0ZS90aW1lIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCBELkRFNTI0IiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIERhdGUvdGltZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQgRC5ERTUyNCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTUyNSAtIFR5cGUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50CkBhY3Rpdml0eTogSElWLkQyOSBTY2hlZHVsZSBmb2xsb3ctdXAKQGRlc2NyaXB0aW9uOiBXaGV0aGVyIHRoZSB2aXNpdCB3aWxsIGJlIGNsaW5pY2FsIG9ubHksIEFSViBkcnVnIHBpY2stdXAgb3Igb3RoZXIuIENsaWVudCBtYXkgaGF2ZSBtdWx0aXBsZSBmb2xsb3ctdXBzIHNjaGVkdWxlZC4KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlR5cGUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IEQuREU1MjUiOgogIGV4aXN0cyAiVHlwZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQgRC5ERTUyNSBPYnNlcnZhdGlvbiIKZGVmaW5lICJUeXBlIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCBELkRFNTI1IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJUeXBlIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCAtIEhJVi5ELkRFNTI1Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFR5cGUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IEQuREU1MjUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU1MjYgLSBDbGluaWNhbCB2aXNpdApAYWN0aXZpdHk6IEhJVi5EMjkgU2NoZWR1bGUgZm9sbG93LXVwCkBkZXNjcmlwdGlvbjogQXBwb2ludG1lbnQgZm9yIGNsaW5pY2FsIGNhcmUgYnkgYSBwcm92aWRlcgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ2xpbmljYWwgdmlzaXQgRC5ERTUyNiI6CiAgZXhpc3RzICJDbGluaWNhbCB2aXNpdCBELkRFNTI2IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ2xpbmljYWwgdmlzaXQgRC5ERTUyNiBPYnNlcnZhdGlvbiIKZGVmaW5lICJDbGluaWNhbCB2aXNpdCBELkRFNTI2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNsaW5pY2FsIHZpc2l0IC0gSElWLkQuREU1MjYiXQpkZWZpbmUgIkNsaW5pY2FsIHZpc2l0IEQuREU1MjYgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCBELkRFNTI1IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDbGluaWNhbCB2aXNpdCAtIEhJVi5ELkRFNTI2IgovKiBFbmQgb2YgQ2xpbmljYWwgdmlzaXQgRC5ERTUyNiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTUyNyAtIEFudGlyZXRyb3ZpcmFsIGRydWcgcGljayB1cApAYWN0aXZpdHk6IEhJVi5EMjkgU2NoZWR1bGUgZm9sbG93LXVwCkBkZXNjcmlwdGlvbjogQXBwb2ludG1lbnQgZm9yIGEgZHJ1ZyBwaWNrIHVwCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBbnRpcmV0cm92aXJhbCBkcnVnIHBpY2sgdXAiOgogIGV4aXN0cyAiQW50aXJldHJvdmlyYWwgZHJ1ZyBwaWNrIHVwIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQW50aXJldHJvdmlyYWwgZHJ1ZyBwaWNrIHVwIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFudGlyZXRyb3ZpcmFsIGRydWcgcGljayB1cCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBbnRpcmV0cm92aXJhbCBkcnVnIHBpY2sgdXAiXQpkZWZpbmUgIkFudGlyZXRyb3ZpcmFsIGRydWcgcGljayB1cCBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2YgZm9sbG93LXVwIGFwcG9pbnRtZW50IEQuREU1MjUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkFudGlyZXRyb3ZpcmFsIGRydWcgcGljayB1cCIKLyogRW5kIG9mIEFudGlyZXRyb3ZpcmFsIGRydWcgcGljayB1cCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTUyOCAtIFBvc3QtdHJlYXRtZW50IGZvbGxvdy11cCB2aXNpdCBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMgb3IgaW52YXNpdmUgY2VydmljYWwgY2FuY2VyCkBhY3Rpdml0eTogSElWLkQyOSBTY2hlZHVsZSBmb2xsb3ctdXAKQGRlc2NyaXB0aW9uOiBBcHBvaW50bWVudCBmb3IgYSBwb3N0LXRyZWF0bWVudCBmb2xsb3ctdXAgdmlzaXQgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIG9yIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlcgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUG9zdC10cmVhdG1lbnQgZm9sbG93LXVwIHZpc2l0IGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBvciBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgRC5ERTUyOCI6CiAgZXhpc3RzICJQb3N0LXRyZWF0bWVudCBmb2xsb3ctdXAgdmlzaXQgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIG9yIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlciBELkRFNTI4IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUG9zdC10cmVhdG1lbnQgZm9sbG93LXVwIHZpc2l0IGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBvciBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgRC5ERTUyOCBPYnNlcnZhdGlvbiIKZGVmaW5lICJQb3N0LXRyZWF0bWVudCBmb2xsb3ctdXAgdmlzaXQgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIG9yIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlciBELkRFNTI4IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlBvc3QtdHJlYXRtZW50IGZvbGxvdy11cCB2aXNpdCBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMgb3IgaW52YXNpdmUgY2VydmljYWwgY2FuY2VyIC0gSElWLkQuREU1MjgiXQpkZWZpbmUgIlBvc3QtdHJlYXRtZW50IGZvbGxvdy11cCB2aXNpdCBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMgb3IgaW52YXNpdmUgY2VydmljYWwgY2FuY2VyIEQuREU1MjggT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIGZvbGxvdy11cCBhcHBvaW50bWVudCBELkRFNTI1IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQb3N0LXRyZWF0bWVudCBmb2xsb3ctdXAgdmlzaXQgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIG9yIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlciAtIEhJVi5ELkRFNTI4IgovKiBFbmQgb2YgUG9zdC10cmVhdG1lbnQgZm9sbG93LXVwIHZpc2l0IGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBvciBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgRC5ERTUyOCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTUyOSAtIE90aGVyCkBhY3Rpdml0eTogSElWLkQyOSBTY2hlZHVsZSBmb2xsb3ctdXAKQGRlc2NyaXB0aW9uOiBPdGhlciByZWFzb24gZm9yIHRoZSBmb2xsb3ctdXAgYXBwb2ludG1lbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk90aGVyIEQuREU1MjkiOgogIGV4aXN0cyAiT3RoZXIgRC5ERTUyOSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk90aGVyIEQuREU1MjkgT2JzZXJ2YXRpb24iCmRlZmluZSAiT3RoZXIgRC5ERTUyOSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPdGhlciAtIEhJVi5ELkRFNTI5Il0KZGVmaW5lICJPdGhlciBELkRFNTI5IE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiBmb2xsb3ctdXAgYXBwb2ludG1lbnQgRC5ERTUyNSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iT3RoZXIgLSBISVYuRC5ERTUyOSIKLyogRW5kIG9mIE90aGVyIEQuREU1MjkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU1MzEgLSBGb2xsb3ctdXAgdGVzdCByZWNvbW1lbmRlZCBkYXRlCkBhY3Rpdml0eTogSElWLkQyOSBTY2hlZHVsZSBmb2xsb3ctdXAKQGRlc2NyaXB0aW9uOiBBIHRlc3Qgb3Igc2NyZWVuaW5nIHJlY29tbWVuZGVkIGZvciB0aGUgY2xpZW50J3MgY2FyZSBwbGFuIGF0IGEgZnV0dXJlIGRhdGUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkZvbGxvdy11cCB0ZXN0IHJlY29tbWVuZGVkIGRhdGUiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkZvbGxvdy11cCB0ZXN0IHJlY29tbWVuZGVkIGRhdGUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkZvbGxvdy11cCB0ZXN0IHJlY29tbWVuZGVkIGRhdGUgVmFsdWUiOgogICJGb2xsb3ctdXAgdGVzdCByZWNvbW1lbmRlZCBkYXRlIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIEZvbGxvdy11cCB0ZXN0IHJlY29tbWVuZGVkIGRhdGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU1MzcgLSBDdXJyZW50IG1lZGljYXRpb25zCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogTGlzdCBvZiBhbGwgb2YgdGhlIG1lZGljYXRpb25zIHRoZSBjbGllbnQgaXMgY3VycmVudGx5IHRha2luZwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ3VycmVudCBtZWRpY2F0aW9ucyI6CiAgZXhpc3RzICJDdXJyZW50IG1lZGljYXRpb25zIE9ic2VydmF0aW9uIgpkZWZpbmUgIkN1cnJlbnQgbWVkaWNhdGlvbnMgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkN1cnJlbnQgbWVkaWNhdGlvbnMiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgQ3VycmVudCBtZWRpY2F0aW9ucyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTUzOCAtIE5vIG1lZGljYXRpb25zCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGhlIGNsaWVudCBpcyBjdXJyZW50bHkgbm90IG9uIGFueSBtZWRpY2F0aW9ucwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTm8gbWVkaWNhdGlvbnMiOgogIGV4aXN0cyAiTm8gbWVkaWNhdGlvbnMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJObyBtZWRpY2F0aW9ucyBPYnNlcnZhdGlvbiIKZGVmaW5lICJObyBtZWRpY2F0aW9ucyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJObyBtZWRpY2F0aW9ucyJdCmRlZmluZSAiTm8gbWVkaWNhdGlvbnMgT2JzZXJ2YXRpb24iOgogICJDdXJyZW50IG1lZGljYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJObyBtZWRpY2F0aW9ucyIKLyogRW5kIG9mIE5vIG1lZGljYXRpb25zICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNTM5IC0gRG9udCBrbm93IG9mIGFueSBjdXJyZW50IG1lZGljYXRpb25zCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGhlIGNsaWVudCBkb2VzIG5vdCBrbm93IGlmIHNoZSBpcyBvbiBhbnkgbWVkaWNhdGlvbnMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkRvbnQga25vdyBvZiBhbnkgY3VycmVudCBtZWRpY2F0aW9ucyI6CiAgZXhpc3RzICJEb250IGtub3cgb2YgYW55IGN1cnJlbnQgbWVkaWNhdGlvbnMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJEb250IGtub3cgb2YgYW55IGN1cnJlbnQgbWVkaWNhdGlvbnMgT2JzZXJ2YXRpb24iCmRlZmluZSAiRG9udCBrbm93IG9mIGFueSBjdXJyZW50IG1lZGljYXRpb25zIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkRvbnQga25vdyBvZiBhbnkgY3VycmVudCBtZWRpY2F0aW9ucyJdCmRlZmluZSAiRG9udCBrbm93IG9mIGFueSBjdXJyZW50IG1lZGljYXRpb25zIE9ic2VydmF0aW9uIjoKICAiQ3VycmVudCBtZWRpY2F0aW9ucyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRG9udCBrbm93IG9mIGFueSBjdXJyZW50IG1lZGljYXRpb25zIgovKiBFbmQgb2YgRG9udCBrbm93IG9mIGFueSBjdXJyZW50IG1lZGljYXRpb25zICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNTQwIC0gQW5hbGdlc2ljCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQW5hbGdlc2ljIG1lZGljYXRpb24gKHBhaW5raWxsZXIpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBbmFsZ2VzaWMiOgogIGV4aXN0cyAiQW5hbGdlc2ljIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQW5hbGdlc2ljIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFuYWxnZXNpYyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBbmFsZ2VzaWMiXQpkZWZpbmUgIkFuYWxnZXNpYyBPYnNlcnZhdGlvbiI6CiAgIkN1cnJlbnQgbWVkaWNhdGlvbnMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkFuYWxnZXNpYyIKLyogRW5kIG9mIEFuYWxnZXNpYyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTU0MSAtIEFudGFjaWRzCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQW50YWNpZHMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFudGFjaWRzIjoKICBleGlzdHMgIkFudGFjaWRzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQW50YWNpZHMgT2JzZXJ2YXRpb24iCmRlZmluZSAiQW50YWNpZHMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQW50YWNpZHMiXQpkZWZpbmUgIkFudGFjaWRzIE9ic2VydmF0aW9uIjoKICAiQ3VycmVudCBtZWRpY2F0aW9ucyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQW50YWNpZHMiCi8qIEVuZCBvZiBBbnRhY2lkcyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTU0MiAtIEFudGliaW90aWNzIGJyb2FkLXNwZWN0cnVtCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGN1cnJlbnRseSB0YWtpbmcgYnJvYWQtc3BlY3RydW0gYW50aWJpb3RpY3MKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFudGliaW90aWNzIGJyb2FkLXNwZWN0cnVtIjoKICBleGlzdHMgIkFudGliaW90aWNzIGJyb2FkLXNwZWN0cnVtIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQW50aWJpb3RpY3MgYnJvYWQtc3BlY3RydW0gT2JzZXJ2YXRpb24iCmRlZmluZSAiQW50aWJpb3RpY3MgYnJvYWQtc3BlY3RydW0gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQW50aWJpb3RpY3MgYnJvYWQtc3BlY3RydW0iXQpkZWZpbmUgIkFudGliaW90aWNzIGJyb2FkLXNwZWN0cnVtIE9ic2VydmF0aW9uIjoKICAiQ3VycmVudCBtZWRpY2F0aW9ucyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQW50aWJpb3RpY3MgYnJvYWQtc3BlY3RydW0iCi8qIEVuZCBvZiBBbnRpYmlvdGljcyBicm9hZC1zcGVjdHJ1bSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTU0MyAtIEFudGljb252dWxzaXZlCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQW50aWNvbnZ1bHNpdmUgbWVkaWNhdGlvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQW50aWNvbnZ1bHNpdmUiOgogIGV4aXN0cyAiQW50aWNvbnZ1bHNpdmUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBbnRpY29udnVsc2l2ZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJBbnRpY29udnVsc2l2ZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBbnRpY29udnVsc2l2ZSJdCmRlZmluZSAiQW50aWNvbnZ1bHNpdmUgT2JzZXJ2YXRpb24iOgogICJDdXJyZW50IG1lZGljYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBbnRpY29udnVsc2l2ZSIKLyogRW5kIG9mIEFudGljb252dWxzaXZlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNTQ0IC0gQW50aWRpYWJldGljCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQW50aWRpYWJldGljIG1lZGljYXRpb24KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFudGlkaWFiZXRpYyI6CiAgZXhpc3RzICJBbnRpZGlhYmV0aWMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBbnRpZGlhYmV0aWMgT2JzZXJ2YXRpb24iCmRlZmluZSAiQW50aWRpYWJldGljIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFudGlkaWFiZXRpYyJdCmRlZmluZSAiQW50aWRpYWJldGljIE9ic2VydmF0aW9uIjoKICAiQ3VycmVudCBtZWRpY2F0aW9ucyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQW50aWRpYWJldGljIgovKiBFbmQgb2YgQW50aWRpYWJldGljICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNTQ1IC0gQW50aWZ1bmdhbHMKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgY3VycmVudGx5IHRha2luZyBhbnRpZnVuZ2FscwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQW50aWZ1bmdhbHMiOgogIGV4aXN0cyAiQW50aWZ1bmdhbHMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBbnRpZnVuZ2FscyBPYnNlcnZhdGlvbiIKZGVmaW5lICJBbnRpZnVuZ2FscyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBbnRpZnVuZ2FscyJdCmRlZmluZSAiQW50aWZ1bmdhbHMgT2JzZXJ2YXRpb24iOgogICJDdXJyZW50IG1lZGljYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBbnRpZnVuZ2FscyIKLyogRW5kIG9mIEFudGlmdW5nYWxzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNTQ2IC0gQW50aWhlbG1pbnRpYwpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IEFudGloZWxtaW50aWMgb3IgYW50aXBhcmFzaXRpYyBtZWRpY2F0aW9uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBbnRpaGVsbWludGljIjoKICBleGlzdHMgIkFudGloZWxtaW50aWMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBbnRpaGVsbWludGljIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFudGloZWxtaW50aWMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQW50aWhlbG1pbnRpYyJdCmRlZmluZSAiQW50aWhlbG1pbnRpYyBPYnNlcnZhdGlvbiI6CiAgIkN1cnJlbnQgbWVkaWNhdGlvbnMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkFudGloZWxtaW50aWMiCi8qIEVuZCBvZiBBbnRpaGVsbWludGljICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNTQ3IC0gQW50aWh5cGVydGVuc2l2ZQpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IEFudGloeXBlcnRlbnNpdmUgbWVkaWNhdGlvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQW50aWh5cGVydGVuc2l2ZSI6CiAgZXhpc3RzICJBbnRpaHlwZXJ0ZW5zaXZlIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQW50aWh5cGVydGVuc2l2ZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJBbnRpaHlwZXJ0ZW5zaXZlIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFudGloeXBlcnRlbnNpdmUiXQpkZWZpbmUgIkFudGloeXBlcnRlbnNpdmUgT2JzZXJ2YXRpb24iOgogICJDdXJyZW50IG1lZGljYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBbnRpaHlwZXJ0ZW5zaXZlIgovKiBFbmQgb2YgQW50aWh5cGVydGVuc2l2ZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTU0OCAtIEFudGltYWxhcmlhbHMKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBBbnRpbWFsYXJpYWwgbWVkaWNhdGlvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQW50aW1hbGFyaWFscyI6CiAgZXhpc3RzICJBbnRpbWFsYXJpYWxzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQW50aW1hbGFyaWFscyBPYnNlcnZhdGlvbiIKZGVmaW5lICJBbnRpbWFsYXJpYWxzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFudGltYWxhcmlhbHMiXQpkZWZpbmUgIkFudGltYWxhcmlhbHMgT2JzZXJ2YXRpb24iOgogICJDdXJyZW50IG1lZGljYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBbnRpbWFsYXJpYWxzIgovKiBFbmQgb2YgQW50aW1hbGFyaWFscyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTU0OSAtIEFudGlyZXRyb3ZpcmFscyBBUlZzCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQW50aXJldHJvdmlyYWxzIChBUlZzKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQW50aXJldHJvdmlyYWxzIEFSVnMiOgogIGV4aXN0cyAiQW50aXJldHJvdmlyYWxzIEFSVnMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBbnRpcmV0cm92aXJhbHMgQVJWcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJBbnRpcmV0cm92aXJhbHMgQVJWcyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBbnRpcmV0cm92aXJhbHMgQVJWcyJdCmRlZmluZSAiQW50aXJldHJvdmlyYWxzIEFSVnMgT2JzZXJ2YXRpb24iOgogICJDdXJyZW50IG1lZGljYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBbnRpcmV0cm92aXJhbHMgQVJWcyIKLyogRW5kIG9mIEFudGlyZXRyb3ZpcmFscyBBUlZzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNTUwIC0gQW50aXBhcmFzaXRpY3MKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgY3VycmVudGx5IHRha2luZyBhbnRpcGFyYXNpdGljcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQW50aXBhcmFzaXRpY3MiOgogIGV4aXN0cyAiQW50aXBhcmFzaXRpY3MgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBbnRpcGFyYXNpdGljcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJBbnRpcGFyYXNpdGljcyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBbnRpcGFyYXNpdGljcyJdCmRlZmluZSAiQW50aXBhcmFzaXRpY3MgT2JzZXJ2YXRpb24iOgogICJDdXJyZW50IG1lZGljYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBbnRpcGFyYXNpdGljcyIKLyogRW5kIG9mIEFudGlwYXJhc2l0aWNzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNTUxIC0gQW50aXZpcmFscwpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IEFudGl2aXJhbCBtZWRpY2F0aW9uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBbnRpdmlyYWxzIjoKICBleGlzdHMgIkFudGl2aXJhbHMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBbnRpdmlyYWxzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFudGl2aXJhbHMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQW50aXZpcmFscyJdCmRlZmluZSAiQW50aXZpcmFscyBPYnNlcnZhdGlvbiI6CiAgIkN1cnJlbnQgbWVkaWNhdGlvbnMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkFudGl2aXJhbHMiCi8qIEVuZCBvZiBBbnRpdmlyYWxzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNTUyIC0gQnVwcmVub3JwaGluZQpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IE9waW9pZCBzdWJzdGl0dXRpb24gdG8gdHJlYXQgb3Bpb2lkIGRlcGVuZGVuY2UKKi8KZGVmaW5lICJidXByZW5vcnBoaW5lX3ByZXNjcmliZWQiOgpbTWVkaWNhdGlvblJlcXVlc3RdIE1SCiAgICAgICAgd2hlcmUgTVIuc3RhdHVzID0gJ2NvbXBsZXRlZCcKICAgICAgICBhbmQgTVIuaW50ZW50ID0gJ29yZGVyJwogICAgICAgIGFuZCBNUi5tZWRpY2F0aW9uIH4gQ29uY2VwdHNDdXN0b20uImJ1cHJlbm9ycGhpbmUiCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJCdXByZW5vcnBoaW5lIEQuREU1NTIiOgogIGV4aXN0cyAiQnVwcmVub3JwaGluZSBELkRFNTUyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQnVwcmVub3JwaGluZSBELkRFNTUyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkJ1cHJlbm9ycGhpbmUgRC5ERTU1MiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJCdXByZW5vcnBoaW5lIC0gSElWLkQuREU1NTIiXQpkZWZpbmUgIkJ1cHJlbm9ycGhpbmUgRC5ERTU1MiBPYnNlcnZhdGlvbiI6CiAgIkN1cnJlbnQgbWVkaWNhdGlvbnMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkJ1cHJlbm9ycGhpbmUgLSBISVYuRC5ERTU1MiIKLyogRW5kIG9mIEJ1cHJlbm9ycGhpbmUgRC5ERTU1MiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTU1MyAtIENvLXRyaW1veGF6b2xlIHByZXZlbnRpdmUgdGhlcmFweSBDUFQKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDb21iaW5hdGlvbiBvZiB0d28gYW50aW1pY3JvYmlhbCBkcnVncyAoc3VsZmFtZXRob3hhem9sZSBhbmQgdHJpbWV0aG9wcmltKSB0aGF0IGNvdmVycyBhIHZhcmlldHkgb2YgYmFjdGVyaWFsLCBmdW5nYWwgYW5kIHByb3Rvem9hbiBpbmZlY3Rpb25zCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDby10cmltb3hhem9sZSBwcmV2ZW50aXZlIHRoZXJhcHkgQ1BUIjoKICBleGlzdHMgIkNvLXRyaW1veGF6b2xlIHByZXZlbnRpdmUgdGhlcmFweSBDUFQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDby10cmltb3hhem9sZSBwcmV2ZW50aXZlIHRoZXJhcHkgQ1BUIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNvLXRyaW1veGF6b2xlIHByZXZlbnRpdmUgdGhlcmFweSBDUFQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ28tdHJpbW94YXpvbGUgcHJldmVudGl2ZSB0aGVyYXB5IENQVCJdCmRlZmluZSAiQ28tdHJpbW94YXpvbGUgcHJldmVudGl2ZSB0aGVyYXB5IENQVCBPYnNlcnZhdGlvbiI6CiAgIkN1cnJlbnQgbWVkaWNhdGlvbnMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNvLXRyaW1veGF6b2xlIHByZXZlbnRpdmUgdGhlcmFweSBDUFQiCi8qIEVuZCBvZiBDby10cmltb3hhem9sZSBwcmV2ZW50aXZlIHRoZXJhcHkgQ1BUICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNTU0IC0gSG9ybW9uYWwgZmFtaWx5IHBsYW5uaW5nIG1ldGhvZApAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IEhvcm1vbmFsIGZhbWlseSBwbGFubmluZyBtZXRob2QKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhvcm1vbmFsIGZhbWlseSBwbGFubmluZyBtZXRob2QiOgogIGV4aXN0cyAiSG9ybW9uYWwgZmFtaWx5IHBsYW5uaW5nIG1ldGhvZCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhvcm1vbmFsIGZhbWlseSBwbGFubmluZyBtZXRob2QgT2JzZXJ2YXRpb24iCmRlZmluZSAiSG9ybW9uYWwgZmFtaWx5IHBsYW5uaW5nIG1ldGhvZCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIb3Jtb25hbCBmYW1pbHkgcGxhbm5pbmcgbWV0aG9kIl0KZGVmaW5lICJIb3Jtb25hbCBmYW1pbHkgcGxhbm5pbmcgbWV0aG9kIE9ic2VydmF0aW9uIjoKICAiQ3VycmVudCBtZWRpY2F0aW9ucyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSG9ybW9uYWwgZmFtaWx5IHBsYW5uaW5nIG1ldGhvZCIKLyogRW5kIG9mIEhvcm1vbmFsIGZhbWlseSBwbGFubmluZyBtZXRob2QgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU1NTUgLSBNZXRoYWRvbmUKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBPcGlvaWQgc3Vic3RpdHV0aW9uIHRvIHRyZWF0IG9waW9pZCBkZXBlbmRlbmNlCiovCmRlZmluZSAibWV0aGFkb25lX3ByZXNjcmliZWQiOgpbTWVkaWNhdGlvblJlcXVlc3RdIE1SCiAgICAgICAgd2hlcmUgTVIuc3RhdHVzID0gJ2NvbXBsZXRlZCcKICAgICAgICBhbmQgTVIuaW50ZW50ID0gJ29yZGVyJwogICAgICAgIGFuZCBNUi5tZWRpY2F0aW9uIH4gQ29uY2VwdHNDdXN0b20uIm1ldGhhZG9uZSIKCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJNZXRoYWRvbmUgRC5ERTU1NSI6CiAgZXhpc3RzICJNZXRoYWRvbmUgRC5ERTU1NSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk1ldGhhZG9uZSBELkRFNTU1IE9ic2VydmF0aW9uIgpkZWZpbmUgIk1ldGhhZG9uZSBELkRFNTU1IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk1ldGhhZG9uZSAtIEhJVi5ELkRFNTU1Il0KZGVmaW5lICJNZXRoYWRvbmUgRC5ERTU1NSBPYnNlcnZhdGlvbiI6CiAgIkN1cnJlbnQgbWVkaWNhdGlvbnMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk1ldGhhZG9uZSAtIEhJVi5ELkRFNTU1IgovKiBFbmQgb2YgTWV0aGFkb25lIEQuREU1NTUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU1NTYgLSBQckVQIHRvIHByZXZlbnQgSElWCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogUHJlLWV4cG9zdXJlIHByb3BoeWxheGlzIChQckVQKSBtZWRpY2F0aW9uIGZvciBwcmV2ZW50aW5nIHRoZSBhY3F1aXNpdGlvbiBvZiBISVYKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlByRVAgdG8gcHJldmVudCBISVYiOgogIGV4aXN0cyAiUHJFUCB0byBwcmV2ZW50IEhJViBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlByRVAgdG8gcHJldmVudCBISVYgT2JzZXJ2YXRpb24iCmRlZmluZSAiUHJFUCB0byBwcmV2ZW50IEhJViBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQckVQIHRvIHByZXZlbnQgSElWIl0KZGVmaW5lICJQckVQIHRvIHByZXZlbnQgSElWIE9ic2VydmF0aW9uIjoKICAiQ3VycmVudCBtZWRpY2F0aW9ucyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHJFUCB0byBwcmV2ZW50IEhJViIKLyogRW5kIG9mIFByRVAgdG8gcHJldmVudCBISVYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU1NTcgLSBPdGhlciBhbnRpYmlvdGljcwpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IE90aGVyIGFudGliaW90aWNzIG5vdCBsaXN0ZWQgYWJvdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk90aGVyIGFudGliaW90aWNzIjoKICBleGlzdHMgIk90aGVyIGFudGliaW90aWNzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiT3RoZXIgYW50aWJpb3RpY3MgT2JzZXJ2YXRpb24iCmRlZmluZSAiT3RoZXIgYW50aWJpb3RpY3MgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iT3RoZXIgYW50aWJpb3RpY3MiXQpkZWZpbmUgIk90aGVyIGFudGliaW90aWNzIE9ic2VydmF0aW9uIjoKICAiQ3VycmVudCBtZWRpY2F0aW9ucyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iT3RoZXIgYW50aWJpb3RpY3MiCi8qIEVuZCBvZiBPdGhlciBhbnRpYmlvdGljcyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTU1OCAtIE90aGVyIG1lZGljYXRpb25zCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogT3RoZXIgbWVkaWNhdGlvbnMgb3Igc3VwcGxlbWVudHMgdGhhdCBhcmUgbm90IGxpc3RlZCBhYm92ZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT3RoZXIgbWVkaWNhdGlvbnMiOgogIGV4aXN0cyAiT3RoZXIgbWVkaWNhdGlvbnMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPdGhlciBtZWRpY2F0aW9ucyBPYnNlcnZhdGlvbiIKZGVmaW5lICJPdGhlciBtZWRpY2F0aW9ucyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPdGhlciBtZWRpY2F0aW9ucyJdCmRlZmluZSAiT3RoZXIgbWVkaWNhdGlvbnMgT2JzZXJ2YXRpb24iOgogICJDdXJyZW50IG1lZGljYXRpb25zIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJPdGhlciBtZWRpY2F0aW9ucyIKLyogRW5kIG9mIE90aGVyIG1lZGljYXRpb25zICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNjU2IC0gRGF0ZSBvZiBjZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIHRlc3QKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogRGF0ZSBvZiBjZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIHRlc3QKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkRhdGUgb2YgY2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyB0ZXN0IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJEYXRlIG9mIGNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgdGVzdCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRGF0ZSBvZiBjZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIHRlc3QgVmFsdWUiOgogICJEYXRlIG9mIGNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgdGVzdCIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBEYXRlIG9mIGNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgdGVzdCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTY1NyAtIExpZmV0aW1lIHNjcmVlbmluZyB0ZXN0IG51bWJlcgpAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBsaWZldGltZSBudW1iZXIgb2Ygc2NyZWVuaW5ncyBmb3IgY2VydmljYWwgY2FuY2VyCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJMaWZldGltZSBzY3JlZW5pbmcgdGVzdCBudW1iZXIiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkxpZmV0aW1lIHNjcmVlbmluZyB0ZXN0IG51bWJlciJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiTGlmZXRpbWUgc2NyZWVuaW5nIHRlc3QgbnVtYmVyIFZhbHVlIjoKICAiTGlmZXRpbWUgc2NyZWVuaW5nIHRlc3QgbnVtYmVyIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIExpZmV0aW1lIHNjcmVlbmluZyB0ZXN0IG51bWJlciAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTY1OCAtIENlcnZpY2FsIGNhbmNlciBwcmltYXJ5IHNjcmVlbmluZyB0ZXN0IHR5cGUKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogVHlwZSBvZiBjZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIHRlc3QgdXNlZCBpbiBwcmltYXJ5IHNjcmVlbmluZwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ2VydmljYWwgY2FuY2VyIHByaW1hcnkgc2NyZWVuaW5nIHRlc3QgdHlwZSI6CiAgZXhpc3RzICJDZXJ2aWNhbCBjYW5jZXIgcHJpbWFyeSBzY3JlZW5pbmcgdGVzdCB0eXBlIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNlcnZpY2FsIGNhbmNlciBwcmltYXJ5IHNjcmVlbmluZyB0ZXN0IHR5cGUgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkNlcnZpY2FsIGNhbmNlciBwcmltYXJ5IHNjcmVlbmluZyB0ZXN0IHR5cGUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgQ2VydmljYWwgY2FuY2VyIHByaW1hcnkgc2NyZWVuaW5nIHRlc3QgdHlwZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTY1OSAtIEhQVi1ETkEKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogU2NyZWVuZWQgZm9yIGNlcnZpY2FsIGNhbmNlciB1c2luZyBIUFYtRE5BIHRlc3QKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhQVi1ETkEiOgogIGV4aXN0cyAiSFBWLUROQSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhQVi1ETkEgT2JzZXJ2YXRpb24iCmRlZmluZSAiSFBWLUROQSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIUFYtRE5BIl0KZGVmaW5lICJIUFYtRE5BIE9ic2VydmF0aW9uIjoKICAiQ2VydmljYWwgY2FuY2VyIHByaW1hcnkgc2NyZWVuaW5nIHRlc3QgdHlwZSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSFBWLUROQSIKLyogRW5kIG9mIEhQVi1ETkEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU2NjAgLSBWSUEKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogU2NyZWVuZWQgZm9yIGNlcnZpY2FsIGNhbmNlciB1c2luZyB2aXN1YWwgaW5zcGVjdGlvbiB3aXRoIGFjZXRpYyBhY2lkIChWSUEpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJWSUEiOgogIGV4aXN0cyAiVklBIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVklBIE9ic2VydmF0aW9uIgpkZWZpbmUgIlZJQSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJWSUEiXQpkZWZpbmUgIlZJQSBPYnNlcnZhdGlvbiI6CiAgIkNlcnZpY2FsIGNhbmNlciBwcmltYXJ5IHNjcmVlbmluZyB0ZXN0IHR5cGUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlZJQSIKLyogRW5kIG9mIFZJQSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTY2MSAtIENlcnZpY2FsIGN5dG9sb2d5CkBhY3Rpdml0eTogSElWLkQyOCBPZmZlciBvdGhlciBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IFNjcmVlbmVkIGZvciBjZXJ2aWNhbCBjYW5jZXIgdXNpbmcgY2VydmljYWwgY3l0b2xvZ3kKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNlcnZpY2FsIGN5dG9sb2d5IjoKICBleGlzdHMgIkNlcnZpY2FsIGN5dG9sb2d5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ2VydmljYWwgY3l0b2xvZ3kgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ2VydmljYWwgY3l0b2xvZ3kgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ2VydmljYWwgY3l0b2xvZ3kiXQpkZWZpbmUgIkNlcnZpY2FsIGN5dG9sb2d5IE9ic2VydmF0aW9uIjoKICAiQ2VydmljYWwgY2FuY2VyIHByaW1hcnkgc2NyZWVuaW5nIHRlc3QgdHlwZSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ2VydmljYWwgY3l0b2xvZ3kiCi8qIEVuZCBvZiBDZXJ2aWNhbCBjeXRvbG9neSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTY2MiAtIE90aGVyCkBhY3Rpdml0eTogSElWLkQyOCBPZmZlciBvdGhlciBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IFNjcmVlbmVkIGZvciBjZXJ2aWNhbCBjYW5jZXIgdXNpbmcgb3RoZXIgbWV0aG9kCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPdGhlciBELkRFNjYyIjoKICBleGlzdHMgIk90aGVyIEQuREU2NjIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPdGhlciBELkRFNjYyIE9ic2VydmF0aW9uIgpkZWZpbmUgIk90aGVyIEQuREU2NjIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iT3RoZXIgLSBISVYuRC5ERTY2MiJdCmRlZmluZSAiT3RoZXIgRC5ERTY2MiBPYnNlcnZhdGlvbiI6CiAgIkNlcnZpY2FsIGNhbmNlciBwcmltYXJ5IHNjcmVlbmluZyB0ZXN0IHR5cGUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk90aGVyIC0gSElWLkQuREU2NjIiCi8qIEVuZCBvZiBPdGhlciBELkRFNjYyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzA1IC0gRGF0ZSBvZiBkaWFnbm9zaXMgb2YgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMgb3IgaW52YXNpdmUgY2VydmljYWwgY2FuY2VyCkBhY3Rpdml0eTogSElWLkQyOCBPZmZlciBvdGhlciBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IERhdGUgb2YgZGlhZ25vc2lzIG9mIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIG9yIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlcgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGF0ZSBvZiBkaWFnbm9zaXMgb2YgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMgb3IgaW52YXNpdmUgY2VydmljYWwgY2FuY2VyIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJEYXRlIG9mIGRpYWdub3NpcyBvZiBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBvciBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkRhdGUgb2YgZGlhZ25vc2lzIG9mIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIG9yIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlciBWYWx1ZSI6CiAgIkRhdGUgb2YgZGlhZ25vc2lzIG9mIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIG9yIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlciIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBEYXRlIG9mIGRpYWdub3NpcyBvZiBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBvciBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3MDYgLSBDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIG91dGNvbWUKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2xpZW50J3Mgc2NyZWVuaW5nIG91dGNvbWUgZm9yIGNlcnZpY2FsIGNhbmNlcgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBvdXRjb21lIjoKICBleGlzdHMgIkNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgb3V0Y29tZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIG91dGNvbWUgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgb3V0Y29tZSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIG91dGNvbWUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3MDcgLSBQb3NpdGl2ZSBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogU2NyZWVuaW5nIG91dGNvbWUgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIGlzIHBvc2l0aXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQb3NpdGl2ZSBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMiOgogIGV4aXN0cyAiUG9zaXRpdmUgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUG9zaXRpdmUgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIE9ic2VydmF0aW9uIgpkZWZpbmUgIlBvc2l0aXZlIGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQb3NpdGl2ZSBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMiXQpkZWZpbmUgIlBvc2l0aXZlIGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBPYnNlcnZhdGlvbiI6CiAgIkNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgb3V0Y29tZSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUG9zaXRpdmUgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIgovKiBFbmQgb2YgUG9zaXRpdmUgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzA4IC0gTmVnYXRpdmUgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zCkBhY3Rpdml0eTogSElWLkQyOCBPZmZlciBvdGhlciBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IFNjcmVlbmluZyBvdXRjb21lIGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBpcyBuZWdhdGl2ZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTmVnYXRpdmUgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIjoKICBleGlzdHMgIk5lZ2F0aXZlIGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk5lZ2F0aXZlIGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBPYnNlcnZhdGlvbiIKZGVmaW5lICJOZWdhdGl2ZSBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTmVnYXRpdmUgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIl0KZGVmaW5lICJOZWdhdGl2ZSBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMgT2JzZXJ2YXRpb24iOgogICJDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIG91dGNvbWUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5lZ2F0aXZlIGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyIKLyogRW5kIG9mIE5lZ2F0aXZlIGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTcwOSAtIENlcnZpY2FsIGNhbmNlciBkaWFnbm9zaXMKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogVHlwZSBvZiBjZXJ2aWNhbCBjYW5jZXIgZGlhZ25vc2lzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDZXJ2aWNhbCBjYW5jZXIgZGlhZ25vc2lzIjoKICBleGlzdHMgIkNlcnZpY2FsIGNhbmNlciBkaWFnbm9zaXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ2VydmljYWwgY2FuY2VyIGRpYWdub3NpcyBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQ2VydmljYWwgY2FuY2VyIGRpYWdub3NpcyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBDZXJ2aWNhbCBjYW5jZXIgZGlhZ25vc2lzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzEwIC0gQ2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGRpYWdub3NlZCB3aXRoIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyI6CiAgZXhpc3RzICJDZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIl0KZGVmaW5lICJDZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBPYnNlcnZhdGlvbiI6CiAgIkNlcnZpY2FsIGNhbmNlciBkaWFnbm9zaXMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIgovKiBFbmQgb2YgQ2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3MTEgLSBJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGRpYWdub3NlZCB3aXRoIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlciBkaXNlYXNlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIiOgogIGV4aXN0cyAiSW52YXNpdmUgY2VydmljYWwgY2FuY2VyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW52YXNpdmUgY2VydmljYWwgY2FuY2VyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkludmFzaXZlIGNlcnZpY2FsIGNhbmNlciBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIiXQpkZWZpbmUgIkludmFzaXZlIGNlcnZpY2FsIGNhbmNlciBPYnNlcnZhdGlvbiI6CiAgIkNlcnZpY2FsIGNhbmNlciBkaWFnbm9zaXMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkludmFzaXZlIGNlcnZpY2FsIGNhbmNlciIKLyogRW5kIG9mIEludmFzaXZlIGNlcnZpY2FsIGNhbmNlciAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTcxMiAtIENlcnZpY2FsIGNhbmNlciBzdGFnZSBhdCBkaWFnbm9zaXMKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2VydmljYWwgY2FuY2VyIHN0YWdlIGF0IGRpYWdub3NpcyBvZiBjZXJ2aWNhbCBjYW5jZXIKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNlcnZpY2FsIGNhbmNlciBzdGFnZSBhdCBkaWFnbm9zaXMiOgogIGV4aXN0cyAiQ2VydmljYWwgY2FuY2VyIHN0YWdlIGF0IGRpYWdub3NpcyBPYnNlcnZhdGlvbiIKZGVmaW5lICJDZXJ2aWNhbCBjYW5jZXIgc3RhZ2UgYXQgZGlhZ25vc2lzIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJDZXJ2aWNhbCBjYW5jZXIgc3RhZ2UgYXQgZGlhZ25vc2lzIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIENlcnZpY2FsIGNhbmNlciBzdGFnZSBhdCBkaWFnbm9zaXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3MTMgLSBTdGFnZSAwCkBhY3Rpdml0eTogSElWLkQyOCBPZmZlciBvdGhlciBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IFN0YWdlIDAgY2VydmljYWwgY2FuY2VyIGF0IGRpYWdub3NpcyBvZiBjZXJ2aWNhbCBjYW5jZXIKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlN0YWdlIDAiOgogIGV4aXN0cyAiU3RhZ2UgMCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlN0YWdlIDAgT2JzZXJ2YXRpb24iCmRlZmluZSAiU3RhZ2UgMCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTdGFnZSAwIl0KZGVmaW5lICJTdGFnZSAwIE9ic2VydmF0aW9uIjoKICAiQ2VydmljYWwgY2FuY2VyIHN0YWdlIGF0IGRpYWdub3NpcyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU3RhZ2UgMCIKLyogRW5kIG9mIFN0YWdlIDAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3MTQgLSBTdGFnZSBJCkBhY3Rpdml0eTogSElWLkQyOCBPZmZlciBvdGhlciBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IFN0YWdlIEkgY2VydmljYWwgY2FuY2VyIGF0IGRpYWdub3NpcyBvZiBjZXJ2aWNhbCBjYW5jZXIKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlN0YWdlIEkiOgogIGV4aXN0cyAiU3RhZ2UgSSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlN0YWdlIEkgT2JzZXJ2YXRpb24iCmRlZmluZSAiU3RhZ2UgSSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTdGFnZSBJIl0KZGVmaW5lICJTdGFnZSBJIE9ic2VydmF0aW9uIjoKICAiQ2VydmljYWwgY2FuY2VyIHN0YWdlIGF0IGRpYWdub3NpcyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU3RhZ2UgSSIKLyogRW5kIG9mIFN0YWdlIEkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3MTUgLSBTdGFnZSBJSQpAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBTdGFnZSBJSSBjZXJ2aWNhbCBjYW5jZXIgYXQgZGlhZ25vc2lzIG9mIGNlcnZpY2FsIGNhbmNlcgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU3RhZ2UgSUkiOgogIGV4aXN0cyAiU3RhZ2UgSUkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJTdGFnZSBJSSBPYnNlcnZhdGlvbiIKZGVmaW5lICJTdGFnZSBJSSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTdGFnZSBJSSJdCmRlZmluZSAiU3RhZ2UgSUkgT2JzZXJ2YXRpb24iOgogICJDZXJ2aWNhbCBjYW5jZXIgc3RhZ2UgYXQgZGlhZ25vc2lzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTdGFnZSBJSSIKLyogRW5kIG9mIFN0YWdlIElJICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzE2IC0gU3RhZ2UgSUlJCkBhY3Rpdml0eTogSElWLkQyOCBPZmZlciBvdGhlciBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IFN0YWdlIElJSSBjZXJ2aWNhbCBjYW5jZXIgYXQgZGlhZ25vc2lzIG9mIGNlcnZpY2FsIGNhbmNlcgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU3RhZ2UgSUlJIjoKICBleGlzdHMgIlN0YWdlIElJSSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlN0YWdlIElJSSBPYnNlcnZhdGlvbiIKZGVmaW5lICJTdGFnZSBJSUkgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU3RhZ2UgSUlJIl0KZGVmaW5lICJTdGFnZSBJSUkgT2JzZXJ2YXRpb24iOgogICJDZXJ2aWNhbCBjYW5jZXIgc3RhZ2UgYXQgZGlhZ25vc2lzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTdGFnZSBJSUkiCi8qIEVuZCBvZiBTdGFnZSBJSUkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3MTcgLSBTdGFnZSBJVgpAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBTdGFnZSBJViBjZXJ2aWNhbCBjYW5jZXIgYXQgZGlhZ25vc2lzIG9mIGNlcnZpY2FsIGNhbmNlcgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU3RhZ2UgSVYiOgogIGV4aXN0cyAiU3RhZ2UgSVYgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJTdGFnZSBJViBPYnNlcnZhdGlvbiIKZGVmaW5lICJTdGFnZSBJViBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTdGFnZSBJViJdCmRlZmluZSAiU3RhZ2UgSVYgT2JzZXJ2YXRpb24iOgogICJDZXJ2aWNhbCBjYW5jZXIgc3RhZ2UgYXQgZGlhZ25vc2lzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTdGFnZSBJViIKLyogRW5kIG9mIFN0YWdlIElWICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzE4IC0gRGF0ZSBvZiB0cmVhdG1lbnQgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zCkBhY3Rpdml0eTogSElWLkQyOCBPZmZlciBvdGhlciBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IERhdGUgb2YgdHJlYXRtZW50IGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGF0ZSBvZiB0cmVhdG1lbnQgZm9yIGNlcnZpY2FsIHByZWNhbmNlciBsZXNpb25zIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJEYXRlIG9mIHRyZWF0bWVudCBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkRhdGUgb2YgdHJlYXRtZW50IGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyBWYWx1ZSI6CiAgIkRhdGUgb2YgdHJlYXRtZW50IGZvciBjZXJ2aWNhbCBwcmVjYW5jZXIgbGVzaW9ucyIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBEYXRlIG9mIHRyZWF0bWVudCBmb3IgY2VydmljYWwgcHJlY2FuY2VyIGxlc2lvbnMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3MzAgLSBJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgdHJlYXRtZW50IGVwaXNvZGUKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2xpZW50J3MgbGlmZXRpbWUgbnVtYmVyIG9mIHRyZWF0bWVudHMgZm9yIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlcgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW52YXNpdmUgY2VydmljYWwgY2FuY2VyIHRyZWF0bWVudCBlcGlzb2RlIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgdHJlYXRtZW50IGVwaXNvZGUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkludmFzaXZlIGNlcnZpY2FsIGNhbmNlciB0cmVhdG1lbnQgZXBpc29kZSBWYWx1ZSI6CiAgIkludmFzaXZlIGNlcnZpY2FsIGNhbmNlciB0cmVhdG1lbnQgZXBpc29kZSIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgdHJlYXRtZW50IGVwaXNvZGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3MzEgLSBJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgdHJlYXRtZW50IG1ldGhvZApAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgdHJlYXRtZW50IG1ldGhvZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW52YXNpdmUgY2VydmljYWwgY2FuY2VyIHRyZWF0bWVudCBtZXRob2QiOgogIGV4aXN0cyAiSW52YXNpdmUgY2VydmljYWwgY2FuY2VyIHRyZWF0bWVudCBtZXRob2QgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW52YXNpdmUgY2VydmljYWwgY2FuY2VyIHRyZWF0bWVudCBtZXRob2QgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkludmFzaXZlIGNlcnZpY2FsIGNhbmNlciB0cmVhdG1lbnQgbWV0aG9kIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEludmFzaXZlIGNlcnZpY2FsIGNhbmNlciB0cmVhdG1lbnQgbWV0aG9kICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzMyIC0gQ29uaXphdGlvbgpAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgdHJlYXRtZW50IG1ldGhvZCBpcyBhIGNvbml6YXRpb24KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNvbml6YXRpb24iOgogIGV4aXN0cyAiQ29uaXphdGlvbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNvbml6YXRpb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiQ29uaXphdGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDb25pemF0aW9uIl0KZGVmaW5lICJDb25pemF0aW9uIE9ic2VydmF0aW9uIjoKICAiSW52YXNpdmUgY2VydmljYWwgY2FuY2VyIHRyZWF0bWVudCBtZXRob2QgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNvbml6YXRpb24iCi8qIEVuZCBvZiBDb25pemF0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzMzIC0gVHJhY2hlbGVjdG9teQpAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgdHJlYXRtZW50IG1ldGhvZCBpcyBhIHRyYWNoZWxlY3RvbXkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlRyYWNoZWxlY3RvbXkiOgogIGV4aXN0cyAiVHJhY2hlbGVjdG9teSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlRyYWNoZWxlY3RvbXkgT2JzZXJ2YXRpb24iCmRlZmluZSAiVHJhY2hlbGVjdG9teSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJUcmFjaGVsZWN0b215Il0KZGVmaW5lICJUcmFjaGVsZWN0b215IE9ic2VydmF0aW9uIjoKICAiSW52YXNpdmUgY2VydmljYWwgY2FuY2VyIHRyZWF0bWVudCBtZXRob2QgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlRyYWNoZWxlY3RvbXkiCi8qIEVuZCBvZiBUcmFjaGVsZWN0b215ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzM0IC0gSHlzdGVyZWN0b215CkBhY3Rpdml0eTogSElWLkQyOCBPZmZlciBvdGhlciBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IEludmFzaXZlIGNlcnZpY2FsIGNhbmNlciB0cmVhdG1lbnQgbWV0aG9kIGlzIGEgaHlzdGVyZWN0b215CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIeXN0ZXJlY3RvbXkiOgogIGV4aXN0cyAiSHlzdGVyZWN0b215IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSHlzdGVyZWN0b215IE9ic2VydmF0aW9uIgpkZWZpbmUgIkh5c3RlcmVjdG9teSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIeXN0ZXJlY3RvbXkiXQpkZWZpbmUgIkh5c3RlcmVjdG9teSBPYnNlcnZhdGlvbiI6CiAgIkludmFzaXZlIGNlcnZpY2FsIGNhbmNlciB0cmVhdG1lbnQgbWV0aG9kIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJIeXN0ZXJlY3RvbXkiCi8qIEVuZCBvZiBIeXN0ZXJlY3RvbXkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3MzUgLSBNYW5hZ2VtZW50IG9mIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlcgpAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgdHJlYXRtZW50IG1ldGhvZCBpcyBtYW5hZ2VtZW50IG9mIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlcgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTWFuYWdlbWVudCBvZiBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIiOgogIGV4aXN0cyAiTWFuYWdlbWVudCBvZiBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJNYW5hZ2VtZW50IG9mIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlciBPYnNlcnZhdGlvbiIKZGVmaW5lICJNYW5hZ2VtZW50IG9mIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlciBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJNYW5hZ2VtZW50IG9mIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlciJdCmRlZmluZSAiTWFuYWdlbWVudCBvZiBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgT2JzZXJ2YXRpb24iOgogICJJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgdHJlYXRtZW50IG1ldGhvZCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTWFuYWdlbWVudCBvZiBpbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIiCi8qIEVuZCBvZiBNYW5hZ2VtZW50IG9mIGludmFzaXZlIGNlcnZpY2FsIGNhbmNlciAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTczNiAtIFJhZGlvdGhlcmFweQpAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgdHJlYXRtZW50IG1ldGhvZCBpcyBhIHJhZGlvdGhlcmFweQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmFkaW90aGVyYXB5IjoKICBleGlzdHMgIlJhZGlvdGhlcmFweSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlJhZGlvdGhlcmFweSBPYnNlcnZhdGlvbiIKZGVmaW5lICJSYWRpb3RoZXJhcHkgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUmFkaW90aGVyYXB5Il0KZGVmaW5lICJSYWRpb3RoZXJhcHkgT2JzZXJ2YXRpb24iOgogICJJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgdHJlYXRtZW50IG1ldGhvZCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUmFkaW90aGVyYXB5IgovKiBFbmQgb2YgUmFkaW90aGVyYXB5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzM3IC0gQ2hlbW90aGVyYXB5CkBhY3Rpdml0eTogSElWLkQyOCBPZmZlciBvdGhlciBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IEludmFzaXZlIGNlcnZpY2FsIGNhbmNlciB0cmVhdG1lbnQgbWV0aG9kIGlzIGEgY2hlbW90aGVyYXB5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDaGVtb3RoZXJhcHkiOgogIGV4aXN0cyAiQ2hlbW90aGVyYXB5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ2hlbW90aGVyYXB5IE9ic2VydmF0aW9uIgpkZWZpbmUgIkNoZW1vdGhlcmFweSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDaGVtb3RoZXJhcHkiXQpkZWZpbmUgIkNoZW1vdGhlcmFweSBPYnNlcnZhdGlvbiI6CiAgIkludmFzaXZlIGNlcnZpY2FsIGNhbmNlciB0cmVhdG1lbnQgbWV0aG9kIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDaGVtb3RoZXJhcHkiCi8qIEVuZCBvZiBDaGVtb3RoZXJhcHkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3MzggLSBDaGVtb3JhZGlhdGlvbgpAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgdHJlYXRtZW50IG1ldGhvZCBpcyBhIGNoZW1vcmFkaWF0aW9uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDaGVtb3JhZGlhdGlvbiI6CiAgZXhpc3RzICJDaGVtb3JhZGlhdGlvbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNoZW1vcmFkaWF0aW9uIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNoZW1vcmFkaWF0aW9uIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNoZW1vcmFkaWF0aW9uIl0KZGVmaW5lICJDaGVtb3JhZGlhdGlvbiBPYnNlcnZhdGlvbiI6CiAgIkludmFzaXZlIGNlcnZpY2FsIGNhbmNlciB0cmVhdG1lbnQgbWV0aG9kIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDaGVtb3JhZGlhdGlvbiIKLyogRW5kIG9mIENoZW1vcmFkaWF0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzM5IC0gT3RoZXIKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogSW52YXNpdmUgY2VydmljYWwgY2FuY2VyIHRyZWF0bWVudCBtZXRob2QgaXMgYSBub3QgaW4gbGlzdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT3RoZXIgRC5ERTczOSI6CiAgZXhpc3RzICJPdGhlciBELkRFNzM5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiT3RoZXIgRC5ERTczOSBPYnNlcnZhdGlvbiIKZGVmaW5lICJPdGhlciBELkRFNzM5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk90aGVyIC0gSElWLkQuREU3MzkiXQpkZWZpbmUgIk90aGVyIEQuREU3MzkgT2JzZXJ2YXRpb24iOgogICJJbnZhc2l2ZSBjZXJ2aWNhbCBjYW5jZXIgdHJlYXRtZW50IG1ldGhvZCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iT3RoZXIgLSBISVYuRC5ERTczOSIKLyogRW5kIG9mIE90aGVyIEQuREU3MzkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3NDUgLSBDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIGludGVydmFsIGFtb25nc3QgV0xISVYKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ291bnRyeS1zcGVjaWZpYyBpbnRlcnZhbCBiZXR3ZWVuIGNhbmNlciBzY3JlZW5pbmdzIGFtb25nc3Qgd29tZW4gbGl2aW5nIHdpdGggSElWICh0eXBpY2FsbHkgMyBvciA1IHllYXJzKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ2VydmljYWwgY2FuY2VyIHNjcmVlbmluZyBpbnRlcnZhbCBhbW9uZ3N0IFdMSElWIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIGludGVydmFsIGFtb25nc3QgV0xISVYiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgaW50ZXJ2YWwgYW1vbmdzdCBXTEhJViBWYWx1ZSI6CiAgIkNlcnZpY2FsIGNhbmNlciBzY3JlZW5pbmcgaW50ZXJ2YWwgYW1vbmdzdCBXTEhJViIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBDZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIGludGVydmFsIGFtb25nc3QgV0xISVYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3NTMgLSBPZmZlciBvdGhlciBjbGluaWNhbCBzZXJ2aWNlcwpAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPdGhlciBjbGluaWNhbCBzZXJ2aWNlcyBvZmZlcmVkIG9yIHJlZmVycmFscyBnaXZlbiB0byB0aGUgY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPZmZlciBvdGhlciBjbGluaWNhbCBzZXJ2aWNlcyBELkRFNzUzIjoKICBleGlzdHMgIk9mZmVyIG90aGVyIGNsaW5pY2FsIHNlcnZpY2VzIEQuREU3NTMgT2JzZXJ2YXRpb24iCmRlZmluZSAiT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMgRC5ERTc1MyBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMgLSBISVYuRC5ERTc1MyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBPZmZlciBvdGhlciBjbGluaWNhbCBzZXJ2aWNlcyBELkRFNzUzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzU0IC0gQXNzZXNzbWVudCBhbmQgcHJvdmlzaW9uIG9mIHZhY2NpbmF0aW9ucwpAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBBc3Nlc3NtZW50IGFuZCBwcm92aXNpb24gb2YgdmFjY2luYXRpb25zLCBzdWNoIGFzIGZvciBwZW9wbGUgZnJvbSBLZXkgcG9wdWxhdGlvbiBtZW1iZXIgdHlwZSwgcHJlZ25hbnQgd29tZW4gYW5kIGluZmFudHM7IGFuZCwgd2hlcmUgYXBwcm9wcmlhdGUsIHRldGFudXMgdmFjY2luYXRpb24gZm9yIGFkb2xlc2NlbnQgYm95cyBhbmQgbWVuIHJlY2VpdmluZyBWTU1DCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBc3Nlc3NtZW50IGFuZCBwcm92aXNpb24gb2YgdmFjY2luYXRpb25zIEQuREU3NTQiOgogIGV4aXN0cyAiQXNzZXNzbWVudCBhbmQgcHJvdmlzaW9uIG9mIHZhY2NpbmF0aW9ucyBELkRFNzU0IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQXNzZXNzbWVudCBhbmQgcHJvdmlzaW9uIG9mIHZhY2NpbmF0aW9ucyBELkRFNzU0IE9ic2VydmF0aW9uIgpkZWZpbmUgIkFzc2Vzc21lbnQgYW5kIHByb3Zpc2lvbiBvZiB2YWNjaW5hdGlvbnMgRC5ERTc1NCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBc3Nlc3NtZW50IGFuZCBwcm92aXNpb24gb2YgdmFjY2luYXRpb25zIC0gSElWLkQuREU3NTQiXQpkZWZpbmUgIkFzc2Vzc21lbnQgYW5kIHByb3Zpc2lvbiBvZiB2YWNjaW5hdGlvbnMgRC5ERTc1NCBPYnNlcnZhdGlvbiI6CiAgIk9mZmVyIG90aGVyIGNsaW5pY2FsIHNlcnZpY2VzIEQuREU3NTMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkFzc2Vzc21lbnQgYW5kIHByb3Zpc2lvbiBvZiB2YWNjaW5hdGlvbnMgLSBISVYuRC5ERTc1NCIKLyogRW5kIG9mIEFzc2Vzc21lbnQgYW5kIHByb3Zpc2lvbiBvZiB2YWNjaW5hdGlvbnMgRC5ERTc1NCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTc1NSAtIEhlcGF0aXRpcyBCIEhCViBhbmQgaGVwYXRpdGlzIEMgdmlydXMgSENWIHRlc3RpbmcgYW5kIHRyZWF0bWVudApAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3IgSEJWIGFuZC9vciBIQ1YgdGVzdGluZyBhbmQgdHJlYXRtZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIZXBhdGl0aXMgQiBIQlYgYW5kIGhlcGF0aXRpcyBDIHZpcnVzIEhDViB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQiOgogIGV4aXN0cyAiSGVwYXRpdGlzIEIgSEJWIGFuZCBoZXBhdGl0aXMgQyB2aXJ1cyBIQ1YgdGVzdGluZyBhbmQgdHJlYXRtZW50IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSGVwYXRpdGlzIEIgSEJWIGFuZCBoZXBhdGl0aXMgQyB2aXJ1cyBIQ1YgdGVzdGluZyBhbmQgdHJlYXRtZW50IE9ic2VydmF0aW9uIgpkZWZpbmUgIkhlcGF0aXRpcyBCIEhCViBhbmQgaGVwYXRpdGlzIEMgdmlydXMgSENWIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIZXBhdGl0aXMgQiBIQlYgYW5kIGhlcGF0aXRpcyBDIHZpcnVzIEhDViB0ZXN0aW5nIGFuZCB0cmVhdG1lbnQiXQpkZWZpbmUgIkhlcGF0aXRpcyBCIEhCViBhbmQgaGVwYXRpdGlzIEMgdmlydXMgSENWIHRlc3RpbmcgYW5kIHRyZWF0bWVudCBPYnNlcnZhdGlvbiI6CiAgIk9mZmVyIG90aGVyIGNsaW5pY2FsIHNlcnZpY2VzIEQuREU3NTMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkhlcGF0aXRpcyBCIEhCViBhbmQgaGVwYXRpdGlzIEMgdmlydXMgSENWIHRlc3RpbmcgYW5kIHRyZWF0bWVudCIKLyogRW5kIG9mIEhlcGF0aXRpcyBCIEhCViBhbmQgaGVwYXRpdGlzIEMgdmlydXMgSENWIHRlc3RpbmcgYW5kIHRyZWF0bWVudCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTc1NiAtIENvLXRyaW1veGF6b2xlIGNoZW1vcHJvcGh5bGF4aXMgdG8gcHJldmVudCBwbmV1bW9jeXN0aXMgY2FyaW5paSBwbmV1bW9uaWEKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgZm9yIGNvLXRyaW1veGF6b2xlIGNoZW1vcHJvcGh5bGF4aXMgdG8gcHJldmVudCBwbmV1bW9jeXN0aXMgY2FyaW5paSBwbmV1bW9uaWEKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNvLXRyaW1veGF6b2xlIGNoZW1vcHJvcGh5bGF4aXMgdG8gcHJldmVudCBwbmV1bW9jeXN0aXMgY2FyaW5paSBwbmV1bW9uaWEgRC5ERTc1NiI6CiAgZXhpc3RzICJDby10cmltb3hhem9sZSBjaGVtb3Byb3BoeWxheGlzIHRvIHByZXZlbnQgcG5ldW1vY3lzdGlzIGNhcmluaWkgcG5ldW1vbmlhIEQuREU3NTYgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDby10cmltb3hhem9sZSBjaGVtb3Byb3BoeWxheGlzIHRvIHByZXZlbnQgcG5ldW1vY3lzdGlzIGNhcmluaWkgcG5ldW1vbmlhIEQuREU3NTYgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ28tdHJpbW94YXpvbGUgY2hlbW9wcm9waHlsYXhpcyB0byBwcmV2ZW50IHBuZXVtb2N5c3RpcyBjYXJpbmlpIHBuZXVtb25pYSBELkRFNzU2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNvLXRyaW1veGF6b2xlIGNoZW1vcHJvcGh5bGF4aXMgdG8gcHJldmVudCBwbmV1bW9jeXN0aXMgY2FyaW5paSBwbmV1bW9uaWEgLSBISVYuRC5ERTc1NiJdCmRlZmluZSAiQ28tdHJpbW94YXpvbGUgY2hlbW9wcm9waHlsYXhpcyB0byBwcmV2ZW50IHBuZXVtb2N5c3RpcyBjYXJpbmlpIHBuZXVtb25pYSBELkRFNzU2IE9ic2VydmF0aW9uIjoKICAiT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMgRC5ERTc1MyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ28tdHJpbW94YXpvbGUgY2hlbW9wcm9waHlsYXhpcyB0byBwcmV2ZW50IHBuZXVtb2N5c3RpcyBjYXJpbmlpIHBuZXVtb25pYSAtIEhJVi5ELkRFNzU2IgovKiBFbmQgb2YgQ28tdHJpbW94YXpvbGUgY2hlbW9wcm9waHlsYXhpcyB0byBwcmV2ZW50IHBuZXVtb2N5c3RpcyBjYXJpbmlpIHBuZXVtb25pYSBELkRFNzU2ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzU3IC0gSW50ZW5zaWZpZWQgVEIgY2FzZSBmaW5kaW5nIGFuZCBsaW5rYWdlIHRvIFRCIHRyZWF0bWVudApAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3IgaW50ZW5zaWZpZWQgVEIgY2FzZSBmaW5kaW5nIGFuZCBsaW5rYWdlIHRvIFRCIHRyZWF0bWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW50ZW5zaWZpZWQgVEIgY2FzZSBmaW5kaW5nIGFuZCBsaW5rYWdlIHRvIFRCIHRyZWF0bWVudCBELkRFNzU3IjoKICBleGlzdHMgIkludGVuc2lmaWVkIFRCIGNhc2UgZmluZGluZyBhbmQgbGlua2FnZSB0byBUQiB0cmVhdG1lbnQgRC5ERTc1NyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkludGVuc2lmaWVkIFRCIGNhc2UgZmluZGluZyBhbmQgbGlua2FnZSB0byBUQiB0cmVhdG1lbnQgRC5ERTc1NyBPYnNlcnZhdGlvbiIKZGVmaW5lICJJbnRlbnNpZmllZCBUQiBjYXNlIGZpbmRpbmcgYW5kIGxpbmthZ2UgdG8gVEIgdHJlYXRtZW50IEQuREU3NTcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW50ZW5zaWZpZWQgVEIgY2FzZSBmaW5kaW5nIGFuZCBsaW5rYWdlIHRvIFRCIHRyZWF0bWVudCAtIEhJVi5ELkRFNzU3Il0KZGVmaW5lICJJbnRlbnNpZmllZCBUQiBjYXNlIGZpbmRpbmcgYW5kIGxpbmthZ2UgdG8gVEIgdHJlYXRtZW50IEQuREU3NTcgT2JzZXJ2YXRpb24iOgogICJPZmZlciBvdGhlciBjbGluaWNhbCBzZXJ2aWNlcyBELkRFNzUzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJJbnRlbnNpZmllZCBUQiBjYXNlIGZpbmRpbmcgYW5kIGxpbmthZ2UgdG8gVEIgdHJlYXRtZW50IC0gSElWLkQuREU3NTciCi8qIEVuZCBvZiBJbnRlbnNpZmllZCBUQiBjYXNlIGZpbmRpbmcgYW5kIGxpbmthZ2UgdG8gVEIgdHJlYXRtZW50IEQuREU3NTcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3NTggLSBQcm92aXNpb24gb2YgaXNvbmlhemlkIHByZXZlbnRpdmUgdGhlcmFweSBpZiBwZXJzb24gZG9lcyBub3QgaGF2ZSBUQgpAYWN0aXZpdHk6IEhJVi5EMjggT2ZmZXIgb3RoZXIgc2VydmljZXMKQGRlc2NyaXB0aW9uOiBPZmZlciBvciByZWZlciBmb3IgcHJvdmlzaW9uIG9mIGlzb25pYXppZCBwcmV2ZW50aXZlIHRoZXJhcHkgaWYgcGVyc29uIGRvZXMgbm90IGhhdmUgVEIKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlByb3Zpc2lvbiBvZiBpc29uaWF6aWQgcHJldmVudGl2ZSB0aGVyYXB5IGlmIHBlcnNvbiBkb2VzIG5vdCBoYXZlIFRCIEQuREU3NTgiOgogIGV4aXN0cyAiUHJvdmlzaW9uIG9mIGlzb25pYXppZCBwcmV2ZW50aXZlIHRoZXJhcHkgaWYgcGVyc29uIGRvZXMgbm90IGhhdmUgVEIgRC5ERTc1OCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlByb3Zpc2lvbiBvZiBpc29uaWF6aWQgcHJldmVudGl2ZSB0aGVyYXB5IGlmIHBlcnNvbiBkb2VzIG5vdCBoYXZlIFRCIEQuREU3NTggT2JzZXJ2YXRpb24iCmRlZmluZSAiUHJvdmlzaW9uIG9mIGlzb25pYXppZCBwcmV2ZW50aXZlIHRoZXJhcHkgaWYgcGVyc29uIGRvZXMgbm90IGhhdmUgVEIgRC5ERTc1OCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQcm92aXNpb24gb2YgaXNvbmlhemlkIHByZXZlbnRpdmUgdGhlcmFweSBpZiBwZXJzb24gZG9lcyBub3QgaGF2ZSBUQiAtIEhJVi5ELkRFNzU4Il0KZGVmaW5lICJQcm92aXNpb24gb2YgaXNvbmlhemlkIHByZXZlbnRpdmUgdGhlcmFweSBpZiBwZXJzb24gZG9lcyBub3QgaGF2ZSBUQiBELkRFNzU4IE9ic2VydmF0aW9uIjoKICAiT2ZmZXIgb3RoZXIgY2xpbmljYWwgc2VydmljZXMgRC5ERTc1MyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHJvdmlzaW9uIG9mIGlzb25pYXppZCBwcmV2ZW50aXZlIHRoZXJhcHkgaWYgcGVyc29uIGRvZXMgbm90IGhhdmUgVEIgLSBISVYuRC5ERTc1OCIKLyogRW5kIG9mIFByb3Zpc2lvbiBvZiBpc29uaWF6aWQgcHJldmVudGl2ZSB0aGVyYXB5IGlmIHBlcnNvbiBkb2VzIG5vdCBoYXZlIFRCIEQuREU3NTggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3NTkgLSBNYWxhcmlhIHByZXZlbnRpb24gc3VjaCBhcyBiZWQgbmV0cyBhbmQgcHJvcGh5bGF4aXMsIGRlcGVuZGluZyBvbiBlcGlkZW1pb2xvZ3kKQGFjdGl2aXR5OiBISVYuRDI4IE9mZmVyIG90aGVyIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT2ZmZXIgb3IgcmVmZXIgZm9yIG1hbGFyaWEgcHJldmVudGlvbiAoc3VjaCBhcyBiZWQgbmV0cyBhbmQgcHJvcGh5bGF4aXMpLCBkZXBlbmRpbmcgb24gZXBpZGVtaW9sb2d5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJNYWxhcmlhIHByZXZlbnRpb24gc3VjaCBhcyBiZWQgbmV0cyBhbmQgcHJvcGh5bGF4aXMsIGRlcGVuZGluZyBvbiBlcGlkZW1pb2xvZ3kgRC5ERTc1OSI6CiAgZXhpc3RzICJNYWxhcmlhIHByZXZlbnRpb24gc3VjaCBhcyBiZWQgbmV0cyBhbmQgcHJvcGh5bGF4aXMsIGRlcGVuZGluZyBvbiBlcGlkZW1pb2xvZ3kgRC5ERTc1OSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk1hbGFyaWEgcHJldmVudGlvbiBzdWNoIGFzIGJlZCBuZXRzIGFuZCBwcm9waHlsYXhpcywgZGVwZW5kaW5nIG9uIGVwaWRlbWlvbG9neSBELkRFNzU5IE9ic2VydmF0aW9uIgpkZWZpbmUgIk1hbGFyaWEgcHJldmVudGlvbiBzdWNoIGFzIGJlZCBuZXRzIGFuZCBwcm9waHlsYXhpcywgZGVwZW5kaW5nIG9uIGVwaWRlbWlvbG9neSBELkRFNzU5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk1hbGFyaWEgcHJldmVudGlvbiBzdWNoIGFzIGJlZCBuZXRzIGFuZCBwcm9waHlsYXhpcywgZGVwZW5kaW5nIG9uIGVwaWRlbWlvbG9neSAtIEhJVi5ELkRFNzU5Il0KZGVmaW5lICJNYWxhcmlhIHByZXZlbnRpb24gc3VjaCBhcyBiZWQgbmV0cyBhbmQgcHJvcGh5bGF4aXMsIGRlcGVuZGluZyBvbiBlcGlkZW1pb2xvZ3kgRC5ERTc1OSBPYnNlcnZhdGlvbiI6CiAgIk9mZmVyIG90aGVyIGNsaW5pY2FsIHNlcnZpY2VzIEQuREU3NTMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk1hbGFyaWEgcHJldmVudGlvbiBzdWNoIGFzIGJlZCBuZXRzIGFuZCBwcm9waHlsYXhpcywgZGVwZW5kaW5nIG9uIGVwaWRlbWlvbG9neSAtIEhJVi5ELkRFNzU5IgovKiBFbmQgb2YgTWFsYXJpYSBwcmV2ZW50aW9uIHN1Y2ggYXMgYmVkIG5ldHMgYW5kIHByb3BoeWxheGlzLCBkZXBlbmRpbmcgb24gZXBpZGVtaW9sb2d5IEQuREU3NTkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3NjAgLSBFbGlnaWJsZSBmb3IgRFNEIEFSVApAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGVsaWdpYmxlIGZvciBkaWZmZXJlbnRpYXRlZCBzZXJ2aWNlIGRlbGl2ZXJ5IChEU0QpIGZvciBBUlQKKi8KCmRlZmluZSAiRWxpZ2libGUgZm9yIERTRCBBUlQiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkVsaWdpYmxlIGZvciBEU0QgQVJUIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgaXMgdHJ1ZQovKiBFbmQgb2YgRWxpZ2libGUgZm9yIERTRCBBUlQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3NjEgLSBEYXRlIERTRCBBUlQgZWxpZ2liaWxpdHkgYXNzZXNzZWQKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IERhdGUgY2xpZW50IHdhcyBhc3Nlc3NlZCBmb3IgZWxpZ2liaWxpdHkgZm9yIGRpZmZlcmVudGlhdGVkIHNlcnZpY2UgZGVsaXZlcnkgKERTRCkgZm9yIEFSVAoqLwoKZGVmaW5lICJEYXRlIERTRCBBUlQgZWxpZ2liaWxpdHkgYXNzZXNzZWQiOgogIFtQcm9jZWR1cmU6IEN1c3RvbUNvbmNlcHRzLiJEU0QgQVJUIGVsaWdpYmlsaXR5IGFzc2Vzc2VkIl0gUAogICAgd2hlcmUgUC5zdGF0dXMgaW4geyAnY29tcGxldGVkJyB9CiAgcmV0dXJuIFAucGVyZm9ybWVkLnRvSW50ZXJ2YWwoKQovKiBFbmQgb2YgRGF0ZSBEU0QgQVJUIGVsaWdpYmlsaXR5IGFzc2Vzc2VkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzYyIC0gQ3VycmVudGx5IGVucm9sbGVkIGluIERTRCBBUlQgbW9kZWwKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IENsaWVudCBjdXJyZW50bHkgZW5yb2xsZWQgaW4gZGlmZmVyZW50aWF0ZWQgc2VydmljZSBkZWxpdmVyeSAoRFNEKSBBUlQgbW9kZWwKKi8KCmRlZmluZSAiQ3VycmVudGx5IGVucm9sbGVkIGluIERTRCBBUlQgbW9kZWwiOgogIFtFcGlzb2RlT2ZDYXJlXSBFT0MKICAgIHdoZXJlIGV4aXN0cyhFT0MudHlwZSBUIHdoZXJlIFQgfiBDb25jZXB0cy4iQ3VycmVudGx5IGVucm9sbGVkIGluIERTRCBBUlQgbW9kZWwiKQogIAovKiBFbmQgb2YgQ3VycmVudGx5IGVucm9sbGVkIGluIERTRCBBUlQgbW9kZWwgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3NjMgLSBEU0QgQVJUIHN0YXJ0IGRhdGUKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IERhdGUgY2xpZW50IHN0YXJ0ZWQgb24gZGlmZmVyZW50aWF0ZWQgc2VydmljZSBkZWxpdmVyeSAoRFNEKSBmb3IgQVJUCiovCgpkZWZpbmUgIkRTRCBBUlQgc3RhcnQgZGF0ZSI6CiAgZmxhdHRlbnsiRFNEIEFSVCBzdGF0dXMiLCJEU0QgQVJUIHN0YXR1c0hpc3RvcnkiLnN0YXR1c0hpc3RvcnkucGVyaW9kfQoKZGVmaW5lICJEU0QgQVJUIHN0YXR1cyI6CiAgICBbRXBpc29kZU9mQ2FyZV0gRU9DCiAgICB3aGVyZSBleGlzdHMoRU9DLnR5cGUgVCB3aGVyZSBUIH4gQ29uY2VwdHMuIkN1cnJlbnRseSBlbnJvbGxlZCBpbiBEU0QgQVJUIG1vZGVsIikKICAgICAgYW5kIEVPQy5zdGF0dXMgPSAnZmluaXNoZWQnCiAgICByZXR1cm4gRU9DLnBlcmlvZAoKZGVmaW5lICJEU0QgQVJUIHN0YXR1c0hpc3RvcnkiOgogICAgW0VwaXNvZGVPZkNhcmVdIEVPQwogICAgd2hlcmUgZXhpc3RzKEVPQy50eXBlIFQgd2hlcmUgVCB+IENvbmNlcHRzLiJDdXJyZW50bHkgZW5yb2xsZWQgaW4gRFNEIEFSVCBtb2RlbCIpIAogICAgYW5kIChleGlzdHMgKAogICAgICBFT0Muc3RhdHVzSGlzdG9yeSBICiAgICAgIHdoZXJlIEguc3RhdHVzID0gJ2ZpbmlzaGVkJwogICAgICBhbmQgSC5wZXJpb2QgaXMgbm90IG51bGwpKQovKiBFbmQgb2YgRFNEIEFSVCBzdGFydCBkYXRlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzY0IC0gRFNEIEFSVCBtb2RlbHMKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IFR5cGUgb2YgRFNEIEFSVCBtb2RlbCBjbGllbnQgaXMgZW5yb2xsZWQgaW4gKGNvdW50cnktc3BlY2lmaWMpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEU0QgQVJUIG1vZGVscyI6CiAgZXhpc3RzICJEU0QgQVJUIG1vZGVscyBPYnNlcnZhdGlvbiIKZGVmaW5lICJEU0QgQVJUIG1vZGVscyBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iRFNEIEFSVCBtb2RlbHMiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgRFNEIEFSVCBtb2RlbHMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3NjUgLSBGYXN0IHRyYWNrIEFSVCByZWZpbGwKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IENsaWVudCBpcyBlbnJvbGxlZCBpbiBmYXN0IHRyYWNrIEFSVCByZWZpbGwgKERTRCBBUlQgbW9kZWwpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJGYXN0IHRyYWNrIEFSVCByZWZpbGwiOgogIGV4aXN0cyAiRmFzdCB0cmFjayBBUlQgcmVmaWxsIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRmFzdCB0cmFjayBBUlQgcmVmaWxsIE9ic2VydmF0aW9uIgpkZWZpbmUgIkZhc3QgdHJhY2sgQVJUIHJlZmlsbCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJGYXN0IHRyYWNrIEFSVCByZWZpbGwiXQpkZWZpbmUgIkZhc3QgdHJhY2sgQVJUIHJlZmlsbCBPYnNlcnZhdGlvbiI6CiAgIkRTRCBBUlQgbW9kZWxzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJGYXN0IHRyYWNrIEFSVCByZWZpbGwiCi8qIEVuZCBvZiBGYXN0IHRyYWNrIEFSVCByZWZpbGwgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3NjYgLSBGYWNpbGl0eSBhZGhlcmVuY2UgY2x1YgpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGVucm9sbGVkIGluIGZhY2lsaXR5IGFkaGVyZW5jZSBjbHViIChEU0QgQVJUIG1vZGVsKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRmFjaWxpdHkgYWRoZXJlbmNlIGNsdWIiOgogIGV4aXN0cyAiRmFjaWxpdHkgYWRoZXJlbmNlIGNsdWIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJGYWNpbGl0eSBhZGhlcmVuY2UgY2x1YiBPYnNlcnZhdGlvbiIKZGVmaW5lICJGYWNpbGl0eSBhZGhlcmVuY2UgY2x1YiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJGYWNpbGl0eSBhZGhlcmVuY2UgY2x1YiJdCmRlZmluZSAiRmFjaWxpdHkgYWRoZXJlbmNlIGNsdWIgT2JzZXJ2YXRpb24iOgogICJEU0QgQVJUIG1vZGVscyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRmFjaWxpdHkgYWRoZXJlbmNlIGNsdWIiCi8qIEVuZCBvZiBGYWNpbGl0eSBhZGhlcmVuY2UgY2x1YiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTc2NyAtIENvbW11bml0eSBBUlQgZGlzdHJpYnV0aW9uIHBvaW50CkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgZW5yb2xsZWQgaW4gY29tbXVuaXR5IEFSVCBkaXN0cmlidXRpb24gcG9pbnQgKERTRCBBUlQgbW9kZWwpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDb21tdW5pdHkgQVJUIGRpc3RyaWJ1dGlvbiBwb2ludCI6CiAgZXhpc3RzICJDb21tdW5pdHkgQVJUIGRpc3RyaWJ1dGlvbiBwb2ludCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNvbW11bml0eSBBUlQgZGlzdHJpYnV0aW9uIHBvaW50IE9ic2VydmF0aW9uIgpkZWZpbmUgIkNvbW11bml0eSBBUlQgZGlzdHJpYnV0aW9uIHBvaW50IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNvbW11bml0eSBBUlQgZGlzdHJpYnV0aW9uIHBvaW50Il0KZGVmaW5lICJDb21tdW5pdHkgQVJUIGRpc3RyaWJ1dGlvbiBwb2ludCBPYnNlcnZhdGlvbiI6CiAgIkRTRCBBUlQgbW9kZWxzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDb21tdW5pdHkgQVJUIGRpc3RyaWJ1dGlvbiBwb2ludCIKLyogRW5kIG9mIENvbW11bml0eSBBUlQgZGlzdHJpYnV0aW9uIHBvaW50ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzY4IC0gQ0hXL3BlZXIgZWR1Y2F0b3IgY29tbXVuaXR5IEFSVCBncm91cApAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGVucm9sbGVkIGluIGNvbW11bml0eSBoZWFsdGggd29ya2VyL3BlZXIgZWR1Y2F0b3IgY29tbXVuaXR5IEFSVCBncm91cCAoRFNEIEFSVCBtb2RlbCkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNIVy9wZWVyIGVkdWNhdG9yIGNvbW11bml0eSBBUlQgZ3JvdXAiOgogIGV4aXN0cyAiQ0hXL3BlZXIgZWR1Y2F0b3IgY29tbXVuaXR5IEFSVCBncm91cCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNIVy9wZWVyIGVkdWNhdG9yIGNvbW11bml0eSBBUlQgZ3JvdXAgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ0hXL3BlZXIgZWR1Y2F0b3IgY29tbXVuaXR5IEFSVCBncm91cCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDSFcvcGVlciBlZHVjYXRvciBjb21tdW5pdHkgQVJUIGdyb3VwIl0KZGVmaW5lICJDSFcvcGVlciBlZHVjYXRvciBjb21tdW5pdHkgQVJUIGdyb3VwIE9ic2VydmF0aW9uIjoKICAiRFNEIEFSVCBtb2RlbHMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNIVy9wZWVyIGVkdWNhdG9yIGNvbW11bml0eSBBUlQgZ3JvdXAiCi8qIEVuZCBvZiBDSFcvcGVlciBlZHVjYXRvciBjb21tdW5pdHkgQVJUIGdyb3VwICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzY5IC0gUGF0aWVudC9jbGllbnQgY29tbXVuaXR5IEFSVCBncm91cApAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGVucm9sbGVkIGluIHBhdGllbnQvY2xpZW50IGNvbW11bml0eSBBUlQgZ3JvdXAgKERTRCBBUlQgbW9kZWwpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQYXRpZW50L2NsaWVudCBjb21tdW5pdHkgQVJUIGdyb3VwIjoKICBleGlzdHMgIlBhdGllbnQvY2xpZW50IGNvbW11bml0eSBBUlQgZ3JvdXAgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQYXRpZW50L2NsaWVudCBjb21tdW5pdHkgQVJUIGdyb3VwIE9ic2VydmF0aW9uIgpkZWZpbmUgIlBhdGllbnQvY2xpZW50IGNvbW11bml0eSBBUlQgZ3JvdXAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUGF0aWVudC9jbGllbnQgY29tbXVuaXR5IEFSVCBncm91cCJdCmRlZmluZSAiUGF0aWVudC9jbGllbnQgY29tbXVuaXR5IEFSVCBncm91cCBPYnNlcnZhdGlvbiI6CiAgIkRTRCBBUlQgbW9kZWxzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQYXRpZW50L2NsaWVudCBjb21tdW5pdHkgQVJUIGdyb3VwIgovKiBFbmQgb2YgUGF0aWVudC9jbGllbnQgY29tbXVuaXR5IEFSVCBncm91cCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTc3MCAtIE90aGVyIERTRCBBUlQgbW9kZWwKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IENsaWVudCBpcyBlbnJvbGxlZCBpbiBhbm90aGVyIERTRCBBUlQgbW9kZWwKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk90aGVyIERTRCBBUlQgbW9kZWwiOgogIGV4aXN0cyAiT3RoZXIgRFNEIEFSVCBtb2RlbCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk90aGVyIERTRCBBUlQgbW9kZWwgT2JzZXJ2YXRpb24iCmRlZmluZSAiT3RoZXIgRFNEIEFSVCBtb2RlbCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPdGhlciBEU0QgQVJUIG1vZGVsIl0KZGVmaW5lICJPdGhlciBEU0QgQVJUIG1vZGVsIE9ic2VydmF0aW9uIjoKICAiRFNEIEFSVCBtb2RlbHMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk90aGVyIERTRCBBUlQgbW9kZWwiCi8qIEVuZCBvZiBPdGhlciBEU0QgQVJUIG1vZGVsICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzc4IC0gU3luZHJvbWUvU1RJIGRpYWdub3NlZApAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogU3luZHJvbWUgb3IgU1RJIGZvciB3aGljaCBjbGllbnQgaXMgZGlhZ25vc2VkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTeW5kcm9tZS9TVEkgZGlhZ25vc2VkIEQuREU3NzgiOgogIGV4aXN0cyAiU3luZHJvbWUvU1RJIGRpYWdub3NlZCBELkRFNzc4IE9ic2VydmF0aW9uIgpkZWZpbmUgIlN5bmRyb21lL1NUSSBkaWFnbm9zZWQgRC5ERTc3OCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iU3luZHJvbWUvU1RJIGRpYWdub3NlZCAtIEhJVi5ELkRFNzc4Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFN5bmRyb21lL1NUSSBkaWFnbm9zZWQgRC5ERTc3OCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTc3OSAtIFVyZXRocmFsIGRpc2NoYXJnZSBzeW5kcm9tZQpAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2xpZW50IGRpYWdub3NlZCB3aXRoIHVyZXRocmFsIGRpc2NoYXJnZSBzeW5kcm9tZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVXJldGhyYWwgZGlzY2hhcmdlIHN5bmRyb21lIEQuREU3NzkiOgogIGV4aXN0cyAiVXJldGhyYWwgZGlzY2hhcmdlIHN5bmRyb21lIEQuREU3NzkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVcmV0aHJhbCBkaXNjaGFyZ2Ugc3luZHJvbWUgRC5ERTc3OSBPYnNlcnZhdGlvbiIKZGVmaW5lICJVcmV0aHJhbCBkaXNjaGFyZ2Ugc3luZHJvbWUgRC5ERTc3OSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJVcmV0aHJhbCBkaXNjaGFyZ2Ugc3luZHJvbWUgLSBISVYuRC5ERTc3OSJdCmRlZmluZSAiVXJldGhyYWwgZGlzY2hhcmdlIHN5bmRyb21lIEQuREU3NzkgT2JzZXJ2YXRpb24iOgogICJTeW5kcm9tZS9TVEkgZGlhZ25vc2VkIEQuREU3NzggT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlVyZXRocmFsIGRpc2NoYXJnZSBzeW5kcm9tZSAtIEhJVi5ELkRFNzc5IgovKiBFbmQgb2YgVXJldGhyYWwgZGlzY2hhcmdlIHN5bmRyb21lIEQuREU3NzkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3ODAgLSBWYWdpbmFsIGRpc2NoYXJnZSBzeW5kcm9tZQpAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2xpZW50IGRpYWdub3NlZCB3aXRoIHZhZ2luYWwgZGlzY2hhcmdlIHN5bmRyb21lCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJWYWdpbmFsIGRpc2NoYXJnZSBzeW5kcm9tZSBELkRFNzgwIjoKICBleGlzdHMgIlZhZ2luYWwgZGlzY2hhcmdlIHN5bmRyb21lIEQuREU3ODAgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJWYWdpbmFsIGRpc2NoYXJnZSBzeW5kcm9tZSBELkRFNzgwIE9ic2VydmF0aW9uIgpkZWZpbmUgIlZhZ2luYWwgZGlzY2hhcmdlIHN5bmRyb21lIEQuREU3ODAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVmFnaW5hbCBkaXNjaGFyZ2Ugc3luZHJvbWUgLSBISVYuRC5ERTc4MCJdCmRlZmluZSAiVmFnaW5hbCBkaXNjaGFyZ2Ugc3luZHJvbWUgRC5ERTc4MCBPYnNlcnZhdGlvbiI6CiAgIlN5bmRyb21lL1NUSSBkaWFnbm9zZWQgRC5ERTc3OCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVmFnaW5hbCBkaXNjaGFyZ2Ugc3luZHJvbWUgLSBISVYuRC5ERTc4MCIKLyogRW5kIG9mIFZhZ2luYWwgZGlzY2hhcmdlIHN5bmRyb21lIEQuREU3ODAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3ODEgLSBMb3dlciBBYmRvbWluYWwgcGFpbiAKQGFjdGl2aXR5OiBISVYuRDI2IE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IENsaWVudCBkaWFnbm9zZWQgd2l0aCBsb3dlciBhYmRvbWluYWwgcGFpbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTG93ZXIgQWJkb21pbmFsIHBhaW4gIEQuREU3ODEiOgogIGV4aXN0cyAiTG93ZXIgQWJkb21pbmFsIHBhaW4gIEQuREU3ODEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJMb3dlciBBYmRvbWluYWwgcGFpbiAgRC5ERTc4MSBPYnNlcnZhdGlvbiIKZGVmaW5lICJMb3dlciBBYmRvbWluYWwgcGFpbiAgRC5ERTc4MSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJMb3dlciBBYmRvbWluYWwgcGFpbiAgLSBISVYuRC5ERTc4MSJdCmRlZmluZSAiTG93ZXIgQWJkb21pbmFsIHBhaW4gIEQuREU3ODEgT2JzZXJ2YXRpb24iOgogICJTeW5kcm9tZS9TVEkgZGlhZ25vc2VkIEQuREU3NzggT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkxvd2VyIEFiZG9taW5hbCBwYWluICAtIEhJVi5ELkRFNzgxIgovKiBFbmQgb2YgTG93ZXIgQWJkb21pbmFsIHBhaW4gIEQuREU3ODEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3ODIgLSBHZW5pdGFsIHVsY2VyIGRpc2Vhc2Ugc3luZHJvbWUKQGFjdGl2aXR5OiBISVYuRDI2IE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IENsaWVudCBkaWFnbm9zZWQgd2l0aCBnZW5pdGFsIHVsY2VyIGRpc2Vhc2Ugc3luZHJvbWUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkdlbml0YWwgdWxjZXIgZGlzZWFzZSBzeW5kcm9tZSBELkRFNzgyIjoKICBleGlzdHMgIkdlbml0YWwgdWxjZXIgZGlzZWFzZSBzeW5kcm9tZSBELkRFNzgyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiR2VuaXRhbCB1bGNlciBkaXNlYXNlIHN5bmRyb21lIEQuREU3ODIgT2JzZXJ2YXRpb24iCmRlZmluZSAiR2VuaXRhbCB1bGNlciBkaXNlYXNlIHN5bmRyb21lIEQuREU3ODIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iR2VuaXRhbCB1bGNlciBkaXNlYXNlIHN5bmRyb21lIC0gSElWLkQuREU3ODIiXQpkZWZpbmUgIkdlbml0YWwgdWxjZXIgZGlzZWFzZSBzeW5kcm9tZSBELkRFNzgyIE9ic2VydmF0aW9uIjoKICAiU3luZHJvbWUvU1RJIGRpYWdub3NlZCBELkRFNzc4IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJHZW5pdGFsIHVsY2VyIGRpc2Vhc2Ugc3luZHJvbWUgLSBISVYuRC5ERTc4MiIKLyogRW5kIG9mIEdlbml0YWwgdWxjZXIgZGlzZWFzZSBzeW5kcm9tZSBELkRFNzgyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzgzIC0gQW5vcmVjdGFsIGRpc2NoYXJnZQpAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2xpZW50IGRpYWdub3NlZCB3aXRoIGFub3JlY3RhbCBkaXNjaGFyZ2UKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFub3JlY3RhbCBkaXNjaGFyZ2UgRC5ERTc4MyI6CiAgZXhpc3RzICJBbm9yZWN0YWwgZGlzY2hhcmdlIEQuREU3ODMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBbm9yZWN0YWwgZGlzY2hhcmdlIEQuREU3ODMgT2JzZXJ2YXRpb24iCmRlZmluZSAiQW5vcmVjdGFsIGRpc2NoYXJnZSBELkRFNzgzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFub3JlY3RhbCBkaXNjaGFyZ2UgLSBISVYuRC5ERTc4MyJdCmRlZmluZSAiQW5vcmVjdGFsIGRpc2NoYXJnZSBELkRFNzgzIE9ic2VydmF0aW9uIjoKICAiU3luZHJvbWUvU1RJIGRpYWdub3NlZCBELkRFNzc4IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBbm9yZWN0YWwgZGlzY2hhcmdlIC0gSElWLkQuREU3ODMiCi8qIEVuZCBvZiBBbm9yZWN0YWwgZGlzY2hhcmdlIEQuREU3ODMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU3ODQgLSBTZW50IGZvciB0ZXN0aW5nCkBhY3Rpdml0eTogSElWLkQyNiBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBTcGVjaW1lbiBzZW50IGZvciB0ZXN0aW5nCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZW50IGZvciB0ZXN0aW5nIEQuREU3ODQiOgogIGV4aXN0cyAiU2VudCBmb3IgdGVzdGluZyBELkRFNzg0IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2VudCBmb3IgdGVzdGluZyBELkRFNzg0IE9ic2VydmF0aW9uIgpkZWZpbmUgIlNlbnQgZm9yIHRlc3RpbmcgRC5ERTc4NCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTZW50IGZvciB0ZXN0aW5nIC0gSElWLkQuREU3ODQiXQpkZWZpbmUgIlNlbnQgZm9yIHRlc3RpbmcgRC5ERTc4NCBPYnNlcnZhdGlvbiI6CiAgIlN5bmRyb21lL1NUSSBkaWFnbm9zZWQgRC5ERTc3OCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU2VudCBmb3IgdGVzdGluZyAtIEhJVi5ELkRFNzg0IgovKiBFbmQgb2YgU2VudCBmb3IgdGVzdGluZyBELkRFNzg0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFNzg1IC0gT3RoZXIKQGFjdGl2aXR5OiBISVYuRDI2IE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE90aGVyIHN5bmRyb21lL1NUSSBkaWFnbm9zZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk90aGVyIEQuREU3ODUiOgogIGV4aXN0cyAiT3RoZXIgRC5ERTc4NSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk90aGVyIEQuREU3ODUgT2JzZXJ2YXRpb24iCmRlZmluZSAiT3RoZXIgRC5ERTc4NSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPdGhlciAtIEhJVi5ELkRFNzg1Il0KZGVmaW5lICJPdGhlciBELkRFNzg1IE9ic2VydmF0aW9uIjoKICAiU3luZHJvbWUvU1RJIGRpYWdub3NlZCBELkRFNzc4IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJPdGhlciAtIEhJVi5ELkRFNzg1IgovKiBFbmQgb2YgT3RoZXIgRC5ERTc4NSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTc4NyAtIEFueSBTVEkgc3luZHJvbWUgZGlhZ25vc2VkCkBhY3Rpdml0eTogSElWLkQyNiBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBXYXMgdGhlIGNsaWVudCBkaWFnbm9zZWQgd2l0aCBhbnkgb2YgdGhlIGZpdmUgU1RJIHN5bmRyb21lcyBkdXJpbmcgdGhpcyB2aXNpdD8KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFueSBTVEkgc3luZHJvbWUgZGlhZ25vc2VkIEQuREU3ODciOgogIGV4aXN0cyAiQW55IFNUSSBzeW5kcm9tZSBkaWFnbm9zZWQgRC5ERTc4NyBPYnNlcnZhdGlvbiIKZGVmaW5lICJBbnkgU1RJIHN5bmRyb21lIGRpYWdub3NlZCBELkRFNzg3IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJBbnkgU1RJIHN5bmRyb21lIGRpYWdub3NlZCAtIEhJVi5ELkRFNzg3Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgaXMgdHJ1ZQovKiBFbmQgb2YgQW55IFNUSSBzeW5kcm9tZSBkaWFnbm9zZWQgRC5ERTc4NyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTgwMSAtIFN5cGhpbGlzIHRlc3QgZGF0ZQpAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogRGF0ZSBvZiBzeXBoaWxpcyB0ZXN0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTeXBoaWxpcyB0ZXN0IGRhdGUgRC5ERTgwMSI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iU3lwaGlsaXMgdGVzdCBkYXRlIC0gSElWLkQuREU4MDEiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIlN5cGhpbGlzIHRlc3QgZGF0ZSBELkRFODAxIFZhbHVlIjoKICAiU3lwaGlsaXMgdGVzdCBkYXRlIEQuREU4MDEiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgU3lwaGlsaXMgdGVzdCBkYXRlIEQuREU4MDEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU4MDIgLSBTeXBoaWxpcyB0ZXN0IHJlc3VsdApAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogUmVzdWx0IGZyb20gc3lwaGlsaXMgdGVzdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU3lwaGlsaXMgdGVzdCByZXN1bHQgRC5ERTgwMiI6CiAgZXhpc3RzICJTeXBoaWxpcyB0ZXN0IHJlc3VsdCBELkRFODAyIE9ic2VydmF0aW9uIgpkZWZpbmUgIlN5cGhpbGlzIHRlc3QgcmVzdWx0IEQuREU4MDIgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlN5cGhpbGlzIHRlc3QgcmVzdWx0IC0gSElWLkQuREU4MDIiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgU3lwaGlsaXMgdGVzdCByZXN1bHQgRC5ERTgwMiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTgwMyAtIFBvc2l0aXZlCkBhY3Rpdml0eTogSElWLkQyNiBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBUZXN0IHJlc3VsdCBpcyBwb3NpdGl2ZSBmb3Igc3lwaGlsaXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBvc2l0aXZlIEQuREU4MDMiOgogIGV4aXN0cyAiUG9zaXRpdmUgRC5ERTgwMyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlBvc2l0aXZlIEQuREU4MDMgT2JzZXJ2YXRpb24iCmRlZmluZSAiUG9zaXRpdmUgRC5ERTgwMyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQb3NpdGl2ZSAtIEhJVi5ELkRFODAzIl0KZGVmaW5lICJQb3NpdGl2ZSBELkRFODAzIE9ic2VydmF0aW9uIjoKICAiU3lwaGlsaXMgdGVzdCByZXN1bHQgRC5ERTgwMiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUG9zaXRpdmUgLSBISVYuRC5ERTgwMyIKLyogRW5kIG9mIFBvc2l0aXZlIEQuREU4MDMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU4MDQgLSBOZWdhdGl2ZQpAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogVGVzdCByZXN1bHQgaXMgbmVnYXRpdmUgZm9yIHN5cGhpbGlzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOZWdhdGl2ZSBELkRFODA0IjoKICBleGlzdHMgIk5lZ2F0aXZlIEQuREU4MDQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJOZWdhdGl2ZSBELkRFODA0IE9ic2VydmF0aW9uIgpkZWZpbmUgIk5lZ2F0aXZlIEQuREU4MDQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTmVnYXRpdmUgLSBISVYuRC5ERTgwNCJdCmRlZmluZSAiTmVnYXRpdmUgRC5ERTgwNCBPYnNlcnZhdGlvbiI6CiAgIlN5cGhpbGlzIHRlc3QgcmVzdWx0IEQuREU4MDIgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5lZ2F0aXZlIC0gSElWLkQuREU4MDQiCi8qIEVuZCBvZiBOZWdhdGl2ZSBELkRFODA0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFODA1IC0gSW5jb25jbHVzaXZlCkBhY3Rpdml0eTogSElWLkQyNiBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBUZXN0IHJlc3VsdCBpcyBpbmNvbmNsdXNpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkluY29uY2x1c2l2ZSBELkRFODA1IjoKICBleGlzdHMgIkluY29uY2x1c2l2ZSBELkRFODA1IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW5jb25jbHVzaXZlIEQuREU4MDUgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW5jb25jbHVzaXZlIEQuREU4MDUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW5jb25jbHVzaXZlIC0gSElWLkQuREU4MDUiXQpkZWZpbmUgIkluY29uY2x1c2l2ZSBELkRFODA1IE9ic2VydmF0aW9uIjoKICAiU3lwaGlsaXMgdGVzdCByZXN1bHQgRC5ERTgwMiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW5jb25jbHVzaXZlIC0gSElWLkQuREU4MDUiCi8qIEVuZCBvZiBJbmNvbmNsdXNpdmUgRC5ERTgwNSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTgwNiAtIFN5cGhpbGlzIHRyZWF0bWVudCBzdGFydCBkYXRlCkBhY3Rpdml0eTogSElWLkQyNiBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBEYXRlIG9mIGluaXRpYXRpb24gb2Ygc3lwaGlsaXMgdHJlYXRtZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTeXBoaWxpcyB0cmVhdG1lbnQgc3RhcnQgZGF0ZSBELkRFODA2IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJTeXBoaWxpcyB0cmVhdG1lbnQgc3RhcnQgZGF0ZSAtIEhJVi5ELkRFODA2Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJTeXBoaWxpcyB0cmVhdG1lbnQgc3RhcnQgZGF0ZSBELkRFODA2IFZhbHVlIjoKICAiU3lwaGlsaXMgdHJlYXRtZW50IHN0YXJ0IGRhdGUgRC5ERTgwNiIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBTeXBoaWxpcyB0cmVhdG1lbnQgc3RhcnQgZGF0ZSBELkRFODA2ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFODA3IC0gR29ub3JyaG9lYSB0ZXN0IGRhdGUKQGFjdGl2aXR5OiBISVYuRDI2IE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IERhdGUgb2YgR29ub3JyaG9lYSB0ZXN0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJHb25vcnJob2VhIHRlc3QgZGF0ZSBELkRFODA3IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJHb25vcnJob2VhIHRlc3QgZGF0ZSAtIEhJVi5ELkRFODA3Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJHb25vcnJob2VhIHRlc3QgZGF0ZSBELkRFODA3IFZhbHVlIjoKICAiR29ub3JyaG9lYSB0ZXN0IGRhdGUgRC5ERTgwNyIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBHb25vcnJob2VhIHRlc3QgZGF0ZSBELkRFODA3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFODA4IC0gR29ub3JyaG9lYSB0ZXN0IHJlc3VsdApAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogUmVzdWx0IGZyb20gR29ub3JyaG9lYSB0ZXN0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJHb25vcnJob2VhIHRlc3QgcmVzdWx0IEQuREU4MDgiOgogIGV4aXN0cyAiR29ub3JyaG9lYSB0ZXN0IHJlc3VsdCBELkRFODA4IE9ic2VydmF0aW9uIgpkZWZpbmUgIkdvbm9ycmhvZWEgdGVzdCByZXN1bHQgRC5ERTgwOCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iR29ub3JyaG9lYSB0ZXN0IHJlc3VsdCAtIEhJVi5ELkRFODA4Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEdvbm9ycmhvZWEgdGVzdCByZXN1bHQgRC5ERTgwOCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTgwOSAtIFBvc2l0aXZlCkBhY3Rpdml0eTogSElWLkQyNiBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBUZXN0IHJlc3VsdCBpcyBwb3NpdGl2ZSBmb3IgTmVpc3NlcmlhIGdvbm9ycmhvZWFlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQb3NpdGl2ZSBELkRFODA5IjoKICBleGlzdHMgIlBvc2l0aXZlIEQuREU4MDkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQb3NpdGl2ZSBELkRFODA5IE9ic2VydmF0aW9uIgpkZWZpbmUgIlBvc2l0aXZlIEQuREU4MDkgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUG9zaXRpdmUgLSBISVYuRC5ERTgwOSJdCmRlZmluZSAiUG9zaXRpdmUgRC5ERTgwOSBPYnNlcnZhdGlvbiI6CiAgIkdvbm9ycmhvZWEgdGVzdCByZXN1bHQgRC5ERTgwOCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUG9zaXRpdmUgLSBISVYuRC5ERTgwOSIKLyogRW5kIG9mIFBvc2l0aXZlIEQuREU4MDkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU4MTAgLSBOZWdhdGl2ZQpAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogVGVzdCByZXN1bHQgaXMgbmVnYXRpdmUgZm9yIE5laXNzZXJpYSBnb25vcnJob2VhZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTmVnYXRpdmUgRC5ERTgxMCI6CiAgZXhpc3RzICJOZWdhdGl2ZSBELkRFODEwIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTmVnYXRpdmUgRC5ERTgxMCBPYnNlcnZhdGlvbiIKZGVmaW5lICJOZWdhdGl2ZSBELkRFODEwIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5lZ2F0aXZlIC0gSElWLkQuREU4MTAiXQpkZWZpbmUgIk5lZ2F0aXZlIEQuREU4MTAgT2JzZXJ2YXRpb24iOgogICJHb25vcnJob2VhIHRlc3QgcmVzdWx0IEQuREU4MDggT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5lZ2F0aXZlIC0gSElWLkQuREU4MTAiCi8qIEVuZCBvZiBOZWdhdGl2ZSBELkRFODEwICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFODExIC0gSW5jb25jbHVzaXZlCkBhY3Rpdml0eTogSElWLkQyNiBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBUZXN0IHJlc3VsdCBpcyBpbmNvbmNsdXNpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkluY29uY2x1c2l2ZSBELkRFODExIjoKICBleGlzdHMgIkluY29uY2x1c2l2ZSBELkRFODExIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW5jb25jbHVzaXZlIEQuREU4MTEgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW5jb25jbHVzaXZlIEQuREU4MTEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW5jb25jbHVzaXZlIC0gSElWLkQuREU4MTEiXQpkZWZpbmUgIkluY29uY2x1c2l2ZSBELkRFODExIE9ic2VydmF0aW9uIjoKICAiR29ub3JyaG9lYSB0ZXN0IHJlc3VsdCBELkRFODA4IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJJbmNvbmNsdXNpdmUgLSBISVYuRC5ERTgxMSIKLyogRW5kIG9mIEluY29uY2x1c2l2ZSBELkRFODExICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFODEyIC0gR29ub3JyaG9lYSB0cmVhdG1lbnQgc3RhcnQgZGF0ZQpAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogRGF0ZSBvZiBpbml0aWF0aW9uIG9mIEdvbm9ycmhvZWEgdHJlYXRtZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJHb25vcnJob2VhIHRyZWF0bWVudCBzdGFydCBkYXRlIEQuREU4MTIiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkdvbm9ycmhvZWEgdHJlYXRtZW50IHN0YXJ0IGRhdGUgLSBISVYuRC5ERTgxMiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiR29ub3JyaG9lYSB0cmVhdG1lbnQgc3RhcnQgZGF0ZSBELkRFODEyIFZhbHVlIjoKICAiR29ub3JyaG9lYSB0cmVhdG1lbnQgc3RhcnQgZGF0ZSBELkRFODEyIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIEdvbm9ycmhvZWEgdHJlYXRtZW50IHN0YXJ0IGRhdGUgRC5ERTgxMiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTgxMyAtIFR5cGUgb2Ygc3BlY2ltZW4KQGFjdGl2aXR5OiBISVYuRDI2IE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IFR5cGUgb2Ygc3BlY2ltZW4gdG8gYmUgY29sbGVjdGVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUeXBlIG9mIHNwZWNpbWVuIEQuREU4MTMiOgogIGV4aXN0cyAiVHlwZSBvZiBzcGVjaW1lbiBELkRFODEzIE9ic2VydmF0aW9uIgpkZWZpbmUgIlR5cGUgb2Ygc3BlY2ltZW4gRC5ERTgxMyBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iVHlwZSBvZiBzcGVjaW1lbiAtIEhJVi5ELkRFODEzIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFR5cGUgb2Ygc3BlY2ltZW4gRC5ERTgxMyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTgxNCAtIEJsb29kCkBhY3Rpdml0eTogSElWLkQyNiBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBCbG9vZCBzcGVjaW1lbiB0byBiZSBjb2xsZWN0ZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkJsb29kIEQuREU4MTQiOgogIGV4aXN0cyAiQmxvb2QgRC5ERTgxNCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkJsb29kIEQuREU4MTQgT2JzZXJ2YXRpb24iCmRlZmluZSAiQmxvb2QgRC5ERTgxNCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJCbG9vZCAtIEhJVi5ELkRFODE0Il0KZGVmaW5lICJCbG9vZCBELkRFODE0IE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiBzcGVjaW1lbiBELkRFODEzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJCbG9vZCAtIEhJVi5ELkRFODE0IgovKiBFbmQgb2YgQmxvb2QgRC5ERTgxNCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTgxNSAtIFVyaW5lCkBhY3Rpdml0eTogSElWLkQyNiBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBVcmluZSBzcGVjaW1lbiB0byBiZSBjb2xsZWN0ZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlVyaW5lIEQuREU4MTUiOgogIGV4aXN0cyAiVXJpbmUgRC5ERTgxNSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlVyaW5lIEQuREU4MTUgT2JzZXJ2YXRpb24iCmRlZmluZSAiVXJpbmUgRC5ERTgxNSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJVcmluZSAtIEhJVi5ELkRFODE1Il0KZGVmaW5lICJVcmluZSBELkRFODE1IE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiBzcGVjaW1lbiBELkRFODEzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJVcmluZSAtIEhJVi5ELkRFODE1IgovKiBFbmQgb2YgVXJpbmUgRC5ERTgxNSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTgxNiAtIENlcnZpY2FsIG9yIHZhZ2luYWwgc3dhYgpAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogQ2VydmljYWwgb3IgdmFnaW5hbCBzd2FiIHRvIGJlIGNvbGxlY3RlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ2VydmljYWwgb3IgdmFnaW5hbCBzd2FiIEQuREU4MTYiOgogIGV4aXN0cyAiQ2VydmljYWwgb3IgdmFnaW5hbCBzd2FiIEQuREU4MTYgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDZXJ2aWNhbCBvciB2YWdpbmFsIHN3YWIgRC5ERTgxNiBPYnNlcnZhdGlvbiIKZGVmaW5lICJDZXJ2aWNhbCBvciB2YWdpbmFsIHN3YWIgRC5ERTgxNiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDZXJ2aWNhbCBvciB2YWdpbmFsIHN3YWIgLSBISVYuRC5ERTgxNiJdCmRlZmluZSAiQ2VydmljYWwgb3IgdmFnaW5hbCBzd2FiIEQuREU4MTYgT2JzZXJ2YXRpb24iOgogICJUeXBlIG9mIHNwZWNpbWVuIEQuREU4MTMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNlcnZpY2FsIG9yIHZhZ2luYWwgc3dhYiAtIEhJVi5ELkRFODE2IgovKiBFbmQgb2YgQ2VydmljYWwgb3IgdmFnaW5hbCBzd2FiIEQuREU4MTYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU4MTcgLSBVcmV0aHJhbCBvciBwZW5pbGUgc3dhYgpAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogVXJldGhyYWwgb3IgcGVuaWxlIHN3YWIgdG8gYmUgY29sbGVjdGVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJVcmV0aHJhbCBvciBwZW5pbGUgc3dhYiBELkRFODE3IjoKICBleGlzdHMgIlVyZXRocmFsIG9yIHBlbmlsZSBzd2FiIEQuREU4MTcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVcmV0aHJhbCBvciBwZW5pbGUgc3dhYiBELkRFODE3IE9ic2VydmF0aW9uIgpkZWZpbmUgIlVyZXRocmFsIG9yIHBlbmlsZSBzd2FiIEQuREU4MTcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVXJldGhyYWwgb3IgcGVuaWxlIHN3YWIgLSBISVYuRC5ERTgxNyJdCmRlZmluZSAiVXJldGhyYWwgb3IgcGVuaWxlIHN3YWIgRC5ERTgxNyBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2Ygc3BlY2ltZW4gRC5ERTgxMyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVXJldGhyYWwgb3IgcGVuaWxlIHN3YWIgLSBISVYuRC5ERTgxNyIKLyogRW5kIG9mIFVyZXRocmFsIG9yIHBlbmlsZSBzd2FiIEQuREU4MTcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU4MTggLSBSZWN0YWwgc3dhYgpAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogUmVjdGFsIHN3YWIgdG8gYmUgY29sbGVjdGVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZWN0YWwgc3dhYiBELkRFODE4IjoKICBleGlzdHMgIlJlY3RhbCBzd2FiIEQuREU4MTggQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSZWN0YWwgc3dhYiBELkRFODE4IE9ic2VydmF0aW9uIgpkZWZpbmUgIlJlY3RhbCBzd2FiIEQuREU4MTggQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUmVjdGFsIHN3YWIgLSBISVYuRC5ERTgxOCJdCmRlZmluZSAiUmVjdGFsIHN3YWIgRC5ERTgxOCBPYnNlcnZhdGlvbiI6CiAgIlR5cGUgb2Ygc3BlY2ltZW4gRC5ERTgxMyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUmVjdGFsIHN3YWIgLSBISVYuRC5ERTgxOCIKLyogRW5kIG9mIFJlY3RhbCBzd2FiIEQuREU4MTggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU4MTkgLSBPdGhlcgpAYWN0aXZpdHk6IEhJVi5EMjYgT2ZmZXIgc2V4dWFsIGFuZCByZXByb2R1Y3RpdmUgaGVhbHRoIHNlcnZpY2VzCkBkZXNjcmlwdGlvbjogT3RoZXIgc3BlY2ltZW4gdHlwZSB0byBiZSBjb2xsZWN0ZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk90aGVyIEQuREU4MTkiOgogIGV4aXN0cyAiT3RoZXIgRC5ERTgxOSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk90aGVyIEQuREU4MTkgT2JzZXJ2YXRpb24iCmRlZmluZSAiT3RoZXIgRC5ERTgxOSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPdGhlciAtIEhJVi5ELkRFODE5Il0KZGVmaW5lICJPdGhlciBELkRFODE5IE9ic2VydmF0aW9uIjoKICAiVHlwZSBvZiBzcGVjaW1lbiBELkRFODEzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJPdGhlciAtIEhJVi5ELkRFODE5IgovKiBFbmQgb2YgT3RoZXIgRC5ERTgxOSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTgyOCAtIE5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUKQGFjdGl2aXR5OiBISVYuRDI2IE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IFR5cGUgb2YgZGlhZ25vc3RpYyB0ZXN0IHVzZWQgZm9yIE5laXNzZXJpYSBnb25vcnJob2VhZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTmVpc3NlcmlhIGdvbm9ycmhvZWFlIHRlc3QgdHlwZSBELkRFODI4IjoKICBleGlzdHMgIk5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUgRC5ERTgyOCBPYnNlcnZhdGlvbiIKZGVmaW5lICJOZWlzc2VyaWEgZ29ub3JyaG9lYWUgdGVzdCB0eXBlIEQuREU4MjggT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIk5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUgLSBISVYuRC5ERTgyOCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBOZWlzc2VyaWEgZ29ub3JyaG9lYWUgdGVzdCB0eXBlIEQuREU4MjggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU4MjkgLSBOQUFUCkBhY3Rpdml0eTogSElWLkQyNiBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBOdWNsZWljIEFjaWQgQW1wbGlmaWNhdGlvbiBUZXN0IChOQUFUKSB1c2VkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOQUFUIEQuREU4MjkiOgogIGV4aXN0cyAiTkFBVCBELkRFODI5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTkFBVCBELkRFODI5IE9ic2VydmF0aW9uIgpkZWZpbmUgIk5BQVQgRC5ERTgyOSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOQUFUIC0gSElWLkQuREU4MjkiXQpkZWZpbmUgIk5BQVQgRC5ERTgyOSBPYnNlcnZhdGlvbiI6CiAgIk5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUgRC5ERTgyOCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTkFBVCAtIEhJVi5ELkRFODI5IgovKiBFbmQgb2YgTkFBVCBELkRFODI5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFODMwIC0gUE9DIFRlc3QKQGFjdGl2aXR5OiBISVYuRDI2IE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IFBvaW50LW9mLWNhcmUgKFBPQykgdGVzdCB1c2VkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQT0MgVGVzdCBELkRFODMwIjoKICBleGlzdHMgIlBPQyBUZXN0IEQuREU4MzAgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQT0MgVGVzdCBELkRFODMwIE9ic2VydmF0aW9uIgpkZWZpbmUgIlBPQyBUZXN0IEQuREU4MzAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUE9DIFRlc3QgLSBISVYuRC5ERTgzMCJdCmRlZmluZSAiUE9DIFRlc3QgRC5ERTgzMCBPYnNlcnZhdGlvbiI6CiAgIk5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUgRC5ERTgyOCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUE9DIFRlc3QgLSBISVYuRC5ERTgzMCIKLyogRW5kIG9mIFBPQyBUZXN0IEQuREU4MzAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU4MzEgLSBDdWx0dXJlCkBhY3Rpdml0eTogSElWLkQyNiBPZmZlciBzZXh1YWwgYW5kIHJlcHJvZHVjdGl2ZSBoZWFsdGggc2VydmljZXMKQGRlc2NyaXB0aW9uOiBDdWx0dXJlIHRlc3QgdXNlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ3VsdHVyZSBELkRFODMxIjoKICBleGlzdHMgIkN1bHR1cmUgRC5ERTgzMSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkN1bHR1cmUgRC5ERTgzMSBPYnNlcnZhdGlvbiIKZGVmaW5lICJDdWx0dXJlIEQuREU4MzEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ3VsdHVyZSAtIEhJVi5ELkRFODMxIl0KZGVmaW5lICJDdWx0dXJlIEQuREU4MzEgT2JzZXJ2YXRpb24iOgogICJOZWlzc2VyaWEgZ29ub3JyaG9lYWUgdGVzdCB0eXBlIEQuREU4MjggT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkN1bHR1cmUgLSBISVYuRC5ERTgzMSIKLyogRW5kIG9mIEN1bHR1cmUgRC5ERTgzMSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTgzMiAtIE1pY3Jvc2NvcHkKQGFjdGl2aXR5OiBISVYuRDI2IE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE1pY3Jvc2NvcHkgdGVzdCB1c2VkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJNaWNyb3Njb3B5IEQuREU4MzIiOgogIGV4aXN0cyAiTWljcm9zY29weSBELkRFODMyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTWljcm9zY29weSBELkRFODMyIE9ic2VydmF0aW9uIgpkZWZpbmUgIk1pY3Jvc2NvcHkgRC5ERTgzMiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJNaWNyb3Njb3B5IC0gSElWLkQuREU4MzIiXQpkZWZpbmUgIk1pY3Jvc2NvcHkgRC5ERTgzMiBPYnNlcnZhdGlvbiI6CiAgIk5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUgRC5ERTgyOCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTWljcm9zY29weSAtIEhJVi5ELkRFODMyIgovKiBFbmQgb2YgTWljcm9zY29weSBELkRFODMyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFODMzIC0gT3RoZXIKQGFjdGl2aXR5OiBISVYuRDI2IE9mZmVyIHNleHVhbCBhbmQgcmVwcm9kdWN0aXZlIGhlYWx0aCBzZXJ2aWNlcwpAZGVzY3JpcHRpb246IE90aGVyIHR5cGUgb2YgdGVzdCB1c2VkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPdGhlciBELkRFODMzIjoKICBleGlzdHMgIk90aGVyIEQuREU4MzMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPdGhlciBELkRFODMzIE9ic2VydmF0aW9uIgpkZWZpbmUgIk90aGVyIEQuREU4MzMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iT3RoZXIgLSBISVYuRC5ERTgzMyJdCmRlZmluZSAiT3RoZXIgRC5ERTgzMyBPYnNlcnZhdGlvbiI6CiAgIk5laXNzZXJpYSBnb25vcnJob2VhZSB0ZXN0IHR5cGUgRC5ERTgyOCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iT3RoZXIgLSBISVYuRC5ERTgzMyIKLyogRW5kIG9mIE90aGVyIEQuREU4MzMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5MDMgLSBNZWRpY2F0aW9uL2RydWcKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IEN1cnJlbnQgb3IgY29uc2lkZXJlZCBtZWRpY2F0aW9uL2RydWcsIGZvciB0aGUgcHVycG9zZSBvZiBkZXRlcm1pbmluZyBkcnVnIGludGVyYWN0aW9ucwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTWVkaWNhdGlvbi9kcnVnIjoKICBleGlzdHMgIk1lZGljYXRpb24vZHJ1ZyBPYnNlcnZhdGlvbiIKZGVmaW5lICJNZWRpY2F0aW9uL2RydWcgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIk1lZGljYXRpb24vZHJ1ZyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBNZWRpY2F0aW9uL2RydWcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5MDQgLSBSaWZhbXBpY2luCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBSaWZhbXBpY2luIGN1cnJlbnRseSBiZWluZyB0YWtlbiBieSwgb3IgY29uc2lkZXJlZCBmb3IsIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmlmYW1waWNpbiI6CiAgZXhpc3RzICJSaWZhbXBpY2luIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUmlmYW1waWNpbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJSaWZhbXBpY2luIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlJpZmFtcGljaW4iXQpkZWZpbmUgIlJpZmFtcGljaW4gT2JzZXJ2YXRpb24iOgogICJNZWRpY2F0aW9uL2RydWcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlJpZmFtcGljaW4iCi8qIEVuZCBvZiBSaWZhbXBpY2luICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTA1IC0gSGFsb2ZhbnRyaW5lCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBIYWxvZmFudHJpbmUgY3VycmVudGx5IGJlaW5nIHRha2VuIGJ5LCBvciBjb25zaWRlcmVkIGZvciwgY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIYWxvZmFudHJpbmUiOgogIGV4aXN0cyAiSGFsb2ZhbnRyaW5lIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSGFsb2ZhbnRyaW5lIE9ic2VydmF0aW9uIgpkZWZpbmUgIkhhbG9mYW50cmluZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIYWxvZmFudHJpbmUiXQpkZWZpbmUgIkhhbG9mYW50cmluZSBPYnNlcnZhdGlvbiI6CiAgIk1lZGljYXRpb24vZHJ1ZyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSGFsb2ZhbnRyaW5lIgovKiBFbmQgb2YgSGFsb2ZhbnRyaW5lICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTA2IC0gTG92YXN0YXRpbgpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogTG92YXN0YXRpbiBjdXJyZW50bHkgYmVpbmcgdGFrZW4gYnksIG9yIGNvbnNpZGVyZWQgZm9yLCBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkxvdmFzdGF0aW4iOgogIGV4aXN0cyAiTG92YXN0YXRpbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkxvdmFzdGF0aW4gT2JzZXJ2YXRpb24iCmRlZmluZSAiTG92YXN0YXRpbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJMb3Zhc3RhdGluIl0KZGVmaW5lICJMb3Zhc3RhdGluIE9ic2VydmF0aW9uIjoKICAiTWVkaWNhdGlvbi9kcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJMb3Zhc3RhdGluIgovKiBFbmQgb2YgTG92YXN0YXRpbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkwNyAtIFNpbXZhc3RhdGluCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBTaW12YXN0YXRpbiBjdXJyZW50bHkgYmVpbmcgdGFrZW4gYnksIG9yIGNvbnNpZGVyZWQgZm9yLCBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlNpbXZhc3RhdGluIjoKICBleGlzdHMgIlNpbXZhc3RhdGluIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2ltdmFzdGF0aW4gT2JzZXJ2YXRpb24iCmRlZmluZSAiU2ltdmFzdGF0aW4gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU2ltdmFzdGF0aW4iXQpkZWZpbmUgIlNpbXZhc3RhdGluIE9ic2VydmF0aW9uIjoKICAiTWVkaWNhdGlvbi9kcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTaW12YXN0YXRpbiIKLyogRW5kIG9mIFNpbXZhc3RhdGluICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTA4IC0gSG9ybW9uYWwgY29udHJhY2VwdGlvbgpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogSG9ybW9uYWwgY29udHJhY2VwdGlvbiBjdXJyZW50bHkgYmVpbmcgdGFrZW4gYnksIG9yIGNvbnNpZGVyZWQgZm9yLCBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhvcm1vbmFsIGNvbnRyYWNlcHRpb24iOgogIGV4aXN0cyAiSG9ybW9uYWwgY29udHJhY2VwdGlvbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhvcm1vbmFsIGNvbnRyYWNlcHRpb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiSG9ybW9uYWwgY29udHJhY2VwdGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIb3Jtb25hbCBjb250cmFjZXB0aW9uIl0KZGVmaW5lICJIb3Jtb25hbCBjb250cmFjZXB0aW9uIE9ic2VydmF0aW9uIjoKICAiTWVkaWNhdGlvbi9kcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJIb3Jtb25hbCBjb250cmFjZXB0aW9uIgovKiBFbmQgb2YgSG9ybW9uYWwgY29udHJhY2VwdGlvbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkwOSAtIE1ldGZvcm1pbgpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogTWV0Zm9ybWluIGN1cnJlbnRseSBiZWluZyB0YWtlbiBieSwgb3IgY29uc2lkZXJlZCBmb3IsIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTWV0Zm9ybWluIjoKICBleGlzdHMgIk1ldGZvcm1pbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk1ldGZvcm1pbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJNZXRmb3JtaW4gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTWV0Zm9ybWluIl0KZGVmaW5lICJNZXRmb3JtaW4gT2JzZXJ2YXRpb24iOgogICJNZWRpY2F0aW9uL2RydWcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk1ldGZvcm1pbiIKLyogRW5kIG9mIE1ldGZvcm1pbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkxMCAtIEFzdGVtaXpvbGUKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IEFzdGVtaXpvbGUgY3VycmVudGx5IGJlaW5nIHRha2VuIGJ5LCBvciBjb25zaWRlcmVkIGZvciwgY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBc3RlbWl6b2xlIjoKICBleGlzdHMgIkFzdGVtaXpvbGUgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBc3RlbWl6b2xlIE9ic2VydmF0aW9uIgpkZWZpbmUgIkFzdGVtaXpvbGUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQXN0ZW1pem9sZSJdCmRlZmluZSAiQXN0ZW1pem9sZSBPYnNlcnZhdGlvbiI6CiAgIk1lZGljYXRpb24vZHJ1ZyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQXN0ZW1pem9sZSIKLyogRW5kIG9mIEFzdGVtaXpvbGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5MTEgLSBUZXJmZW5hZGluZQpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogVGVyZmVuYWRpbmUgY3VycmVudGx5IGJlaW5nIHRha2VuIGJ5LCBvciBjb25zaWRlcmVkIGZvciwgY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUZXJmZW5hZGluZSI6CiAgZXhpc3RzICJUZXJmZW5hZGluZSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlRlcmZlbmFkaW5lIE9ic2VydmF0aW9uIgpkZWZpbmUgIlRlcmZlbmFkaW5lIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlRlcmZlbmFkaW5lIl0KZGVmaW5lICJUZXJmZW5hZGluZSBPYnNlcnZhdGlvbiI6CiAgIk1lZGljYXRpb24vZHJ1ZyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVGVyZmVuYWRpbmUiCi8qIEVuZCBvZiBUZXJmZW5hZGluZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkxMiAtIFRERgpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogVERGIGN1cnJlbnRseSBiZWluZyB0YWtlbiBieSwgb3IgY29uc2lkZXJlZCBmb3IsIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVERGIEQuREU5MTIiOgogIGV4aXN0cyAiVERGIEQuREU5MTIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJUREYgRC5ERTkxMiBPYnNlcnZhdGlvbiIKZGVmaW5lICJUREYgRC5ERTkxMiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJUREYgLSBISVYuRC5ERTkxMiJdCmRlZmluZSAiVERGIEQuREU5MTIgT2JzZXJ2YXRpb24iOgogICJNZWRpY2F0aW9uL2RydWcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlRERiAtIEhJVi5ELkRFOTEyIgovKiBFbmQgb2YgVERGIEQuREU5MTIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5MTMgLSBTaW1lcHJldmlyCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBTaW1lcHJldmlyIGN1cnJlbnRseSBiZWluZyB0YWtlbiBieSwgb3IgY29uc2lkZXJlZCBmb3IsIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU2ltZXByZXZpciI6CiAgZXhpc3RzICJTaW1lcHJldmlyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2ltZXByZXZpciBPYnNlcnZhdGlvbiIKZGVmaW5lICJTaW1lcHJldmlyIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlNpbWVwcmV2aXIiXQpkZWZpbmUgIlNpbWVwcmV2aXIgT2JzZXJ2YXRpb24iOgogICJNZWRpY2F0aW9uL2RydWcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlNpbWVwcmV2aXIiCi8qIEVuZCBvZiBTaW1lcHJldmlyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTE0IC0gT21iaXRhc3ZpciArIHBhcml0YXByZXZpci9yaXRvbmF2aXIgKyBkYXNhYnV2aXIKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IE9tYml0YXN2aXIgKyBwYXJpdGFwcmV2aXIvcml0b25hdmlyICsgZGFzYWJ1dmlyIGN1cnJlbnRseSBiZWluZyB0YWtlbiBieSwgb3IgY29uc2lkZXJlZCBmb3IsIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT21iaXRhc3ZpciArIHBhcml0YXByZXZpci9yaXRvbmF2aXIgKyBkYXNhYnV2aXIiOgogIGV4aXN0cyAiT21iaXRhc3ZpciArIHBhcml0YXByZXZpci9yaXRvbmF2aXIgKyBkYXNhYnV2aXIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPbWJpdGFzdmlyICsgcGFyaXRhcHJldmlyL3JpdG9uYXZpciArIGRhc2FidXZpciBPYnNlcnZhdGlvbiIKZGVmaW5lICJPbWJpdGFzdmlyICsgcGFyaXRhcHJldmlyL3JpdG9uYXZpciArIGRhc2FidXZpciBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPbWJpdGFzdmlyICsgcGFyaXRhcHJldmlyL3JpdG9uYXZpciArIGRhc2FidXZpciJdCmRlZmluZSAiT21iaXRhc3ZpciArIHBhcml0YXByZXZpci9yaXRvbmF2aXIgKyBkYXNhYnV2aXIgT2JzZXJ2YXRpb24iOgogICJNZWRpY2F0aW9uL2RydWcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk9tYml0YXN2aXIgKyBwYXJpdGFwcmV2aXIvcml0b25hdmlyICsgZGFzYWJ1dmlyIgovKiBFbmQgb2YgT21iaXRhc3ZpciArIHBhcml0YXByZXZpci9yaXRvbmF2aXIgKyBkYXNhYnV2aXIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5MTUgLSBNZXRoYWRvbmUKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IE1ldGhhZG9uZSBjdXJyZW50bHkgYmVpbmcgdGFrZW4gYnksIG9yIGNvbnNpZGVyZWQgZm9yLCBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk1ldGhhZG9uZSBELkRFOTE1IjoKICBleGlzdHMgIk1ldGhhZG9uZSBELkRFOTE1IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTWV0aGFkb25lIEQuREU5MTUgT2JzZXJ2YXRpb24iCmRlZmluZSAiTWV0aGFkb25lIEQuREU5MTUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTWV0aGFkb25lIC0gSElWLkQuREU5MTUiXQpkZWZpbmUgIk1ldGhhZG9uZSBELkRFOTE1IE9ic2VydmF0aW9uIjoKICAiTWVkaWNhdGlvbi9kcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJNZXRoYWRvbmUgLSBISVYuRC5ERTkxNSIKLyogRW5kIG9mIE1ldGhhZG9uZSBELkRFOTE1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTE2IC0gQnVwcmVub3JwaGluZQpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogQnVwcmVub3JwaGluZSBjdXJyZW50bHkgYmVpbmcgdGFrZW4gYnksIG9yIGNvbnNpZGVyZWQgZm9yLCBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkJ1cHJlbm9ycGhpbmUgRC5ERTkxNiI6CiAgZXhpc3RzICJCdXByZW5vcnBoaW5lIEQuREU5MTYgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJCdXByZW5vcnBoaW5lIEQuREU5MTYgT2JzZXJ2YXRpb24iCmRlZmluZSAiQnVwcmVub3JwaGluZSBELkRFOTE2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkJ1cHJlbm9ycGhpbmUgLSBISVYuRC5ERTkxNiJdCmRlZmluZSAiQnVwcmVub3JwaGluZSBELkRFOTE2IE9ic2VydmF0aW9uIjoKICAiTWVkaWNhdGlvbi9kcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJCdXByZW5vcnBoaW5lIC0gSElWLkQuREU5MTYiCi8qIEVuZCBvZiBCdXByZW5vcnBoaW5lIEQuREU5MTYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5MTcgLSBEb2ZldGlsaWRlCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBEb2ZldGlsaWRlIGN1cnJlbnRseSBiZWluZyB0YWtlbiBieSwgb3IgY29uc2lkZXJlZCBmb3IsIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRG9mZXRpbGlkZSI6CiAgZXhpc3RzICJEb2ZldGlsaWRlIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRG9mZXRpbGlkZSBPYnNlcnZhdGlvbiIKZGVmaW5lICJEb2ZldGlsaWRlIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkRvZmV0aWxpZGUiXQpkZWZpbmUgIkRvZmV0aWxpZGUgT2JzZXJ2YXRpb24iOgogICJNZWRpY2F0aW9uL2RydWcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkRvZmV0aWxpZGUiCi8qIEVuZCBvZiBEb2ZldGlsaWRlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTE4IC0gQ2FyYmFtYXplcGluZQpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogQ2FyYmFtYXplcGluZSBjdXJyZW50bHkgYmVpbmcgdGFrZW4gYnksIG9yIGNvbnNpZGVyZWQgZm9yLCBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNhcmJhbWF6ZXBpbmUiOgogIGV4aXN0cyAiQ2FyYmFtYXplcGluZSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNhcmJhbWF6ZXBpbmUgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ2FyYmFtYXplcGluZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDYXJiYW1hemVwaW5lIl0KZGVmaW5lICJDYXJiYW1hemVwaW5lIE9ic2VydmF0aW9uIjoKICAiTWVkaWNhdGlvbi9kcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJDYXJiYW1hemVwaW5lIgovKiBFbmQgb2YgQ2FyYmFtYXplcGluZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkxOSAtIFBoZW5vYmFyYml0YWwKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IFBoZW5vYmFyYml0YWwgY3VycmVudGx5IGJlaW5nIHRha2VuIGJ5LCBvciBjb25zaWRlcmVkIGZvciwgY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQaGVub2JhcmJpdGFsIjoKICBleGlzdHMgIlBoZW5vYmFyYml0YWwgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQaGVub2JhcmJpdGFsIE9ic2VydmF0aW9uIgpkZWZpbmUgIlBoZW5vYmFyYml0YWwgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUGhlbm9iYXJiaXRhbCJdCmRlZmluZSAiUGhlbm9iYXJiaXRhbCBPYnNlcnZhdGlvbiI6CiAgIk1lZGljYXRpb24vZHJ1ZyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUGhlbm9iYXJiaXRhbCIKLyogRW5kIG9mIFBoZW5vYmFyYml0YWwgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5MjAgLSBQaGVueXRvaW4KQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IFBoZW55dG9pbiBjdXJyZW50bHkgYmVpbmcgdGFrZW4gYnksIG9yIGNvbnNpZGVyZWQgZm9yLCBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBoZW55dG9pbiI6CiAgZXhpc3RzICJQaGVueXRvaW4gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQaGVueXRvaW4gT2JzZXJ2YXRpb24iCmRlZmluZSAiUGhlbnl0b2luIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlBoZW55dG9pbiJdCmRlZmluZSAiUGhlbnl0b2luIE9ic2VydmF0aW9uIjoKICAiTWVkaWNhdGlvbi9kcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQaGVueXRvaW4iCi8qIEVuZCBvZiBQaGVueXRvaW4gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5MjEgLSBQb2x5dmFsZW50IGNhdGlvbiBwcm9kdWN0cyBjb250YWluaW5nIE1nLCBBbCwgRmUsIENhIGFuZCBabgpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogUG9seXZhbGVudCBjYXRpb24gcHJvZHVjdHMgY29udGFpbmluZyBNZywgQWwsIEZlLCBDYSBhbmQgWm4gY3VycmVudGx5IGJlaW5nIHRha2VuIGJ5LCBvciBjb25zaWRlcmVkIGZvciwgY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQb2x5dmFsZW50IGNhdGlvbiBwcm9kdWN0cyBjb250YWluaW5nIE1nLCBBbCwgRmUsIENhIGFuZCBabiI6CiAgZXhpc3RzICJQb2x5dmFsZW50IGNhdGlvbiBwcm9kdWN0cyBjb250YWluaW5nIE1nLCBBbCwgRmUsIENhIGFuZCBabiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlBvbHl2YWxlbnQgY2F0aW9uIHByb2R1Y3RzIGNvbnRhaW5pbmcgTWcsIEFsLCBGZSwgQ2EgYW5kIFpuIE9ic2VydmF0aW9uIgpkZWZpbmUgIlBvbHl2YWxlbnQgY2F0aW9uIHByb2R1Y3RzIGNvbnRhaW5pbmcgTWcsIEFsLCBGZSwgQ2EgYW5kIFpuIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlBvbHl2YWxlbnQgY2F0aW9uIHByb2R1Y3RzIGNvbnRhaW5pbmcgTWcsIEFsLCBGZSwgQ2EgYW5kIFpuIl0KZGVmaW5lICJQb2x5dmFsZW50IGNhdGlvbiBwcm9kdWN0cyBjb250YWluaW5nIE1nLCBBbCwgRmUsIENhIGFuZCBabiBPYnNlcnZhdGlvbiI6CiAgIk1lZGljYXRpb24vZHJ1ZyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUG9seXZhbGVudCBjYXRpb24gcHJvZHVjdHMgY29udGFpbmluZyBNZywgQWwsIEZlLCBDYSBhbmQgWm4iCi8qIEVuZCBvZiBQb2x5dmFsZW50IGNhdGlvbiBwcm9kdWN0cyBjb250YWluaW5nIE1nLCBBbCwgRmUsIENhIGFuZCBabiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkyMiAtIEFtb2RpYXF1aW5lCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBBbW9kaWFxdWluZSBjdXJyZW50bHkgYmVpbmcgdGFrZW4gYnksIG9yIGNvbnNpZGVyZWQgZm9yLCBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFtb2RpYXF1aW5lIjoKICBleGlzdHMgIkFtb2RpYXF1aW5lIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQW1vZGlhcXVpbmUgT2JzZXJ2YXRpb24iCmRlZmluZSAiQW1vZGlhcXVpbmUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQW1vZGlhcXVpbmUiXQpkZWZpbmUgIkFtb2RpYXF1aW5lIE9ic2VydmF0aW9uIjoKICAiTWVkaWNhdGlvbi9kcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBbW9kaWFxdWluZSIKLyogRW5kIG9mIEFtb2RpYXF1aW5lICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTIzIC0gQ2lzYXByaWRlCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBDaXNhcHJpZGUgY3VycmVudGx5IGJlaW5nIHRha2VuIGJ5LCBvciBjb25zaWRlcmVkIGZvciwgY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDaXNhcHJpZGUiOgogIGV4aXN0cyAiQ2lzYXByaWRlIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ2lzYXByaWRlIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNpc2FwcmlkZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDaXNhcHJpZGUiXQpkZWZpbmUgIkNpc2FwcmlkZSBPYnNlcnZhdGlvbiI6CiAgIk1lZGljYXRpb24vZHJ1ZyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ2lzYXByaWRlIgovKiBFbmQgb2YgQ2lzYXByaWRlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTI0IC0gRXJnb3RhbWluZQpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogRXJnb3RhbWluZSBjdXJyZW50bHkgYmVpbmcgdGFrZW4gYnksIG9yIGNvbnNpZGVyZWQgZm9yLCBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkVyZ290YW1pbmUiOgogIGV4aXN0cyAiRXJnb3RhbWluZSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkVyZ290YW1pbmUgT2JzZXJ2YXRpb24iCmRlZmluZSAiRXJnb3RhbWluZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJFcmdvdGFtaW5lIl0KZGVmaW5lICJFcmdvdGFtaW5lIE9ic2VydmF0aW9uIjoKICAiTWVkaWNhdGlvbi9kcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJFcmdvdGFtaW5lIgovKiBFbmQgb2YgRXJnb3RhbWluZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkyNSAtIERpaHlkcm9lcmdvdGFtaW5lCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBEaWh5ZHJvZXJnb3RhbWluZSBjdXJyZW50bHkgYmVpbmcgdGFrZW4gYnksIG9yIGNvbnNpZGVyZWQgZm9yLCBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkRpaHlkcm9lcmdvdGFtaW5lIjoKICBleGlzdHMgIkRpaHlkcm9lcmdvdGFtaW5lIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRGloeWRyb2VyZ290YW1pbmUgT2JzZXJ2YXRpb24iCmRlZmluZSAiRGloeWRyb2VyZ290YW1pbmUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRGloeWRyb2VyZ290YW1pbmUiXQpkZWZpbmUgIkRpaHlkcm9lcmdvdGFtaW5lIE9ic2VydmF0aW9uIjoKICAiTWVkaWNhdGlvbi9kcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJEaWh5ZHJvZXJnb3RhbWluZSIKLyogRW5kIG9mIERpaHlkcm9lcmdvdGFtaW5lICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTI2IC0gTWlkYXpvbGFtCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBNaWRhem9sYW0gY3VycmVudGx5IGJlaW5nIHRha2VuIGJ5LCBvciBjb25zaWRlcmVkIGZvciwgY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJNaWRhem9sYW0iOgogIGV4aXN0cyAiTWlkYXpvbGFtIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTWlkYXpvbGFtIE9ic2VydmF0aW9uIgpkZWZpbmUgIk1pZGF6b2xhbSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJNaWRhem9sYW0iXQpkZWZpbmUgIk1pZGF6b2xhbSBPYnNlcnZhdGlvbiI6CiAgIk1lZGljYXRpb24vZHJ1ZyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTWlkYXpvbGFtIgovKiBFbmQgb2YgTWlkYXpvbGFtICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTI3IC0gVHJpYXpvbGFtCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBUcmlhem9sYW0gY3VycmVudGx5IGJlaW5nIHRha2VuIGJ5LCBvciBjb25zaWRlcmVkIGZvciwgY2xpZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUcmlhem9sYW0iOgogIGV4aXN0cyAiVHJpYXpvbGFtIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiVHJpYXpvbGFtIE9ic2VydmF0aW9uIgpkZWZpbmUgIlRyaWF6b2xhbSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJUcmlhem9sYW0iXQpkZWZpbmUgIlRyaWF6b2xhbSBPYnNlcnZhdGlvbiI6CiAgIk1lZGljYXRpb24vZHJ1ZyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVHJpYXpvbGFtIgovKiBFbmQgb2YgVHJpYXpvbGFtICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTI4IC0gRXN0cm9nZW4tYmFzZWQgaG9ybW9uYWwgY29udHJhY2VwdGlvbgpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogRXN0cm9nZW4tYmFzZWQgaG9ybW9uYWwgY29udHJhY2VwdGlvbiBjdXJyZW50bHkgYmVpbmcgdGFrZW4gYnksIG9yIGNvbnNpZGVyZWQgZm9yLCBjbGllbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkVzdHJvZ2VuLWJhc2VkIGhvcm1vbmFsIGNvbnRyYWNlcHRpb24iOgogIGV4aXN0cyAiRXN0cm9nZW4tYmFzZWQgaG9ybW9uYWwgY29udHJhY2VwdGlvbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkVzdHJvZ2VuLWJhc2VkIGhvcm1vbmFsIGNvbnRyYWNlcHRpb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiRXN0cm9nZW4tYmFzZWQgaG9ybW9uYWwgY29udHJhY2VwdGlvbiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJFc3Ryb2dlbi1iYXNlZCBob3Jtb25hbCBjb250cmFjZXB0aW9uIl0KZGVmaW5lICJFc3Ryb2dlbi1iYXNlZCBob3Jtb25hbCBjb250cmFjZXB0aW9uIE9ic2VydmF0aW9uIjoKICAiTWVkaWNhdGlvbi9kcnVnIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJFc3Ryb2dlbi1iYXNlZCBob3Jtb25hbCBjb250cmFjZXB0aW9uIgovKiBFbmQgb2YgRXN0cm9nZW4tYmFzZWQgaG9ybW9uYWwgY29udHJhY2VwdGlvbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkyOSAtIFJpYmF2aXJpbgpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogUmliYXZpcmluIGN1cnJlbnRseSBiZWluZyB0YWtlbiBieSwgb3IgY29uc2lkZXJlZCBmb3IsIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmliYXZpcmluIjoKICBleGlzdHMgIlJpYmF2aXJpbiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlJpYmF2aXJpbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJSaWJhdmlyaW4gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUmliYXZpcmluIl0KZGVmaW5lICJSaWJhdmlyaW4gT2JzZXJ2YXRpb24iOgogICJNZWRpY2F0aW9uL2RydWcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlJpYmF2aXJpbiIKLyogRW5kIG9mIFJpYmF2aXJpbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkzMCAtIFBlZ2ludGVyZmVyb24gYWxmYS0yYQpAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogUGVnaW50ZXJmZXJvbiBhbGZhLTJhIGN1cnJlbnRseSBiZWluZyB0YWtlbiBieSwgb3IgY29uc2lkZXJlZCBmb3IsIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUGVnaW50ZXJmZXJvbiBhbGZhLTJhIjoKICBleGlzdHMgIlBlZ2ludGVyZmVyb24gYWxmYS0yYSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlBlZ2ludGVyZmVyb24gYWxmYS0yYSBPYnNlcnZhdGlvbiIKZGVmaW5lICJQZWdpbnRlcmZlcm9uIGFsZmEtMmEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUGVnaW50ZXJmZXJvbiBhbGZhLTJhIl0KZGVmaW5lICJQZWdpbnRlcmZlcm9uIGFsZmEtMmEgT2JzZXJ2YXRpb24iOgogICJNZWRpY2F0aW9uL2RydWcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlBlZ2ludGVyZmVyb24gYWxmYS0yYSIKLyogRW5kIG9mIFBlZ2ludGVyZmVyb24gYWxmYS0yYSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkzMSAtIE90aGVyCkBhY3Rpdml0eTogSElWLkQyMSBEZXRlcm1pbmUgcmVnaW1lbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBPdGhlciBtZWRpY2F0aW9uIGN1cnJlbnRseSBiZWluZyB0YWtlbiBieSwgb3IgY29uc2lkZXJlZCBmb3IsIGNsaWVudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT3RoZXIgRC5ERTkzMSI6CiAgZXhpc3RzICJPdGhlciBELkRFOTMxIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiT3RoZXIgRC5ERTkzMSBPYnNlcnZhdGlvbiIKZGVmaW5lICJPdGhlciBELkRFOTMxIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk90aGVyIC0gSElWLkQuREU5MzEiXQpkZWZpbmUgIk90aGVyIEQuREU5MzEgT2JzZXJ2YXRpb24iOgogICJNZWRpY2F0aW9uL2RydWcgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk90aGVyIC0gSElWLkQuREU5MzEiCi8qIEVuZCBvZiBPdGhlciBELkRFOTMxICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTMzIC0gTWVkaWNhdGlvbiBjaGFuZ2UgcmVjb21tZW5kZWQKQGFjdGl2aXR5OiBISVYuRDIxIERldGVybWluZSByZWdpbWVuIGFuZCB0cmVhdG1lbnQgb3B0aW9ucwpAZGVzY3JpcHRpb246IEEgbWVkaWNhdGlvbiBjaGFuZ2UgaXMgcmVjb21tZW5kZWQgZm9yIHRoZSBjbGllbnQgYmFzZWQgdXBvbiBjdXJyZW50IG9yIGNvbnNpZGVyZWQgbWVkaWNhdGlvbnMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk1lZGljYXRpb24gY2hhbmdlIHJlY29tbWVuZGVkIjoKICBleGlzdHMgIk1lZGljYXRpb24gY2hhbmdlIHJlY29tbWVuZGVkIE9ic2VydmF0aW9uIgpkZWZpbmUgIk1lZGljYXRpb24gY2hhbmdlIHJlY29tbWVuZGVkIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJNZWRpY2F0aW9uIGNoYW5nZSByZWNvbW1lbmRlZCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIE1lZGljYXRpb24gY2hhbmdlIHJlY29tbWVuZGVkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTM0IC0gV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbQpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IE5ldyBvciByZWN1cnJlbnQgY2xpbmljYWwgZXZlbnRzIHVzZWQgdG8gY2F0ZWdvcml6ZSBISVYgZGlzZWFzZSBzZXZlcml0eSBiYXNlZCBhdCBiYXNlbGluZSBhbmQgZm9sbG93IHVwCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJXSE8gSElWIGNsaW5pY2FsIHN0YWdlIGNvbmRpdGlvbiBvciBzeW1wdG9tIEQuREU5MzQiOgogIGV4aXN0cyAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFOTM0IE9ic2VydmF0aW9uIgpkZWZpbmUgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTkzNCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSAtIEhJVi5ELkRFOTM0Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFdITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTkzNCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkzNSAtIFB1bG1vbmFyeSBUQgpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgcHVsbW9uYXJ5IFRCCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQdWxtb25hcnkgVEIgRC5ERTkzNSI6CiAgZXhpc3RzICJQdWxtb25hcnkgVEIgRC5ERTkzNSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlB1bG1vbmFyeSBUQiBELkRFOTM1IE9ic2VydmF0aW9uIgpkZWZpbmUgIlB1bG1vbmFyeSBUQiBELkRFOTM1IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlB1bG1vbmFyeSBUQiAtIEhJVi5ELkRFOTM1Il0KZGVmaW5lICJQdWxtb25hcnkgVEIgRC5ERTkzNSBPYnNlcnZhdGlvbiI6CiAgIldITyBISVYgY2xpbmljYWwgc3RhZ2UgY29uZGl0aW9uIG9yIHN5bXB0b20gRC5ERTkzNCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHVsbW9uYXJ5IFRCIC0gSElWLkQuREU5MzUiCi8qIEVuZCBvZiBQdWxtb25hcnkgVEIgRC5ERTkzNSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkzNiAtIEx5bXBoIG5vZGUgVEIKQGFjdGl2aXR5OiBISVYuRDE1IERldGVybWluZSBjbGluaWNhbCBzdGFnZSBvZiBISVYKQGRlc2NyaXB0aW9uOiBDbGllbnQncyBzeW1wdG9tcyBpbmNsdWRlIGx5bXBoIG5vZGUgVEIKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkx5bXBoIG5vZGUgVEIgRC5ERTkzNiI6CiAgZXhpc3RzICJMeW1waCBub2RlIFRCIEQuREU5MzYgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJMeW1waCBub2RlIFRCIEQuREU5MzYgT2JzZXJ2YXRpb24iCmRlZmluZSAiTHltcGggbm9kZSBUQiBELkRFOTM2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkx5bXBoIG5vZGUgVEIgLSBISVYuRC5ERTkzNiJdCmRlZmluZSAiTHltcGggbm9kZSBUQiBELkRFOTM2IE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFOTM0IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJMeW1waCBub2RlIFRCIC0gSElWLkQuREU5MzYiCi8qIEVuZCBvZiBMeW1waCBub2RlIFRCIEQuREU5MzYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5MzcgLSBFeHRyYXB1bG1vbmFyeSBUQgpAYWN0aXZpdHk6IEhJVi5EMTUgRGV0ZXJtaW5lIGNsaW5pY2FsIHN0YWdlIG9mIEhJVgpAZGVzY3JpcHRpb246IENsaWVudCdzIHN5bXB0b21zIGluY2x1ZGUgZXh0cmFwdWxtb25hcnkgdHViZXJjdWxvc2lzIChUQikKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkV4dHJhcHVsbW9uYXJ5IFRCIEQuREU5MzciOgogIGV4aXN0cyAiRXh0cmFwdWxtb25hcnkgVEIgRC5ERTkzNyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkV4dHJhcHVsbW9uYXJ5IFRCIEQuREU5MzcgT2JzZXJ2YXRpb24iCmRlZmluZSAiRXh0cmFwdWxtb25hcnkgVEIgRC5ERTkzNyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJFeHRyYXB1bG1vbmFyeSBUQiAtIEhJVi5ELkRFOTM3Il0KZGVmaW5lICJFeHRyYXB1bG1vbmFyeSBUQiBELkRFOTM3IE9ic2VydmF0aW9uIjoKICAiV0hPIEhJViBjbGluaWNhbCBzdGFnZSBjb25kaXRpb24gb3Igc3ltcHRvbSBELkRFOTM0IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJFeHRyYXB1bG1vbmFyeSBUQiAtIEhJVi5ELkRFOTM3IgovKiBFbmQgb2YgRXh0cmFwdWxtb25hcnkgVEIgRC5ERTkzNyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTkzOSAtIFRCIGRpYWdub3NpcyByZXN1bHQKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBGaW5hbCByZXN1bHQgb2YgdGhlIFRCIGludmVzdGlnYXRpb24gKGJhY3RlcmlvbG9naWNhbCBhbmQvb3IgY2xpbmljYWwpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUQiBkaWFnbm9zaXMgcmVzdWx0IjoKICBleGlzdHMgIlRCIGRpYWdub3NpcyByZXN1bHQgT2JzZXJ2YXRpb24iCmRlZmluZSAiVEIgZGlhZ25vc2lzIHJlc3VsdCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iVEIgZGlhZ25vc2lzIHJlc3VsdCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBUQiBkaWFnbm9zaXMgcmVzdWx0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTQwIC0gRGlhZ25vc2VkIFRCCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGRpYWdub3NlZCB3aXRoIFRCIGRpc2Vhc2UKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkRpYWdub3NlZCBUQiI6CiAgZXhpc3RzICJEaWFnbm9zZWQgVEIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJEaWFnbm9zZWQgVEIgT2JzZXJ2YXRpb24iCmRlZmluZSAiRGlhZ25vc2VkIFRCIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkRpYWdub3NlZCBUQiJdCmRlZmluZSAiRGlhZ25vc2VkIFRCIE9ic2VydmF0aW9uIjoKICAiVEIgZGlhZ25vc2lzIHJlc3VsdCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRGlhZ25vc2VkIFRCIgovKiBFbmQgb2YgRGlhZ25vc2VkIFRCICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTQxIC0gVEIgZXhjbHVkZWQKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgbm90IGRpYWdub3NlZCB3aXRoIFRCCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUQiBleGNsdWRlZCI6CiAgZXhpc3RzICJUQiBleGNsdWRlZCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlRCIGV4Y2x1ZGVkIE9ic2VydmF0aW9uIgpkZWZpbmUgIlRCIGV4Y2x1ZGVkIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlRCIGV4Y2x1ZGVkIl0KZGVmaW5lICJUQiBleGNsdWRlZCBPYnNlcnZhdGlvbiI6CiAgIlRCIGRpYWdub3NpcyByZXN1bHQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlRCIGV4Y2x1ZGVkIgovKiBFbmQgb2YgVEIgZXhjbHVkZWQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5NDUgLSBQcmVzdW1wdGl2ZSBUQgpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCBoYXMgc2lnbnMgb3Igc3ltcHRvbXMgb2YgdHViZXJjdWxvc2lzIChUQikgd2l0aG91dCBsYWJvcmF0b3J5IGNvbmZpcm1hdGlvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUHJlc3VtcHRpdmUgVEIgRC5ERTk0NSI6CiAgZXhpc3RzICJQcmVzdW1wdGl2ZSBUQiBELkRFOTQ1IE9ic2VydmF0aW9uIgpkZWZpbmUgIlByZXN1bXB0aXZlIFRCIEQuREU5NDUgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlByZXN1bXB0aXZlIFRCIC0gSElWLkQuREU5NDUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBQcmVzdW1wdGl2ZSBUQiBELkRFOTQ1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTUyIC0gRGF0ZSBvZiBUQiBkaWFnbm9zaXMKQGFjdGl2aXR5OiBISVYuRDggQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGUgZGF0ZSB3aGVuIHRoZSBkaWFnbm9zaXMgd2FzIGVzdGFibGlzaGVkCiovCgpkZWZpbmUgIkRhdGUgb2YgVEIgZGlhZ25vc2lzIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRGlhZ25vc2VkIFRCIl0gQwogIHJldHVybiBDLnByZXZhbGVuY2VJbnRlcnZhbCgpCi8qIEVuZCBvZiBEYXRlIG9mIFRCIGRpYWdub3NpcyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTk1NCAtIFRCIHByZXZlbnRpdmUgdHJlYXRtZW50IFRQVCBzdGFydCBkYXRlCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGhlIGRhdGUgb24gd2hpY2ggdGhlIGNsaWVudCBiZWdhbiB0YWtpbmcgVFBUCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUQiBwcmV2ZW50aXZlIHRyZWF0bWVudCBUUFQgc3RhcnQgZGF0ZSI6CiAgIlRQVCByZWdpbWVuIiBNUwogIHJldHVybiBzdGFydCBvZiBNUy5lZmZlY3RpdmUudG9JbnRlcnZhbCgpCiAgCi8qIEVuZCBvZiBUQiBwcmV2ZW50aXZlIHRyZWF0bWVudCBUUFQgc3RhcnQgZGF0ZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTk1NiAtIFRCIHNjcmVlbmluZyBhbGdvcml0aG0KQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IFNjcmVlbmluZyBhbGdvcml0aG0gc2VsZWN0ZWQgZm9yIHNjcmVlbmluZyBhY3Rpdml0aWVzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUQiBzY3JlZW5pbmcgYWxnb3JpdGhtIjoKICBleGlzdHMgIlRCIHNjcmVlbmluZyBhbGdvcml0aG0gT2JzZXJ2YXRpb24iCmRlZmluZSAiVEIgc2NyZWVuaW5nIGFsZ29yaXRobSBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iVEIgc2NyZWVuaW5nIGFsZ29yaXRobSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBUQiBzY3JlZW5pbmcgYWxnb3JpdGhtICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTU3IC0gU2NyZWVuaW5nIHdpdGggY291Z2gKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IENsaWVudCBzY3JlZW5lZCBmb3IgVEIgYmFzZWQgb24gY291Z2ggc3ltcHRvbQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU2NyZWVuaW5nIHdpdGggY291Z2giOgogIGV4aXN0cyAiU2NyZWVuaW5nIHdpdGggY291Z2ggQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJTY3JlZW5pbmcgd2l0aCBjb3VnaCBPYnNlcnZhdGlvbiIKZGVmaW5lICJTY3JlZW5pbmcgd2l0aCBjb3VnaCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTY3JlZW5pbmcgd2l0aCBjb3VnaCJdCmRlZmluZSAiU2NyZWVuaW5nIHdpdGggY291Z2ggT2JzZXJ2YXRpb24iOgogICJUQiBzY3JlZW5pbmcgYWxnb3JpdGhtIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTY3JlZW5pbmcgd2l0aCBjb3VnaCIKLyogRW5kIG9mIFNjcmVlbmluZyB3aXRoIGNvdWdoICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTU4IC0gU2NyZWVuaW5nIHdpdGggYW55IFRCIHN5bXB0b20KQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IENsaWVudCBzY3JlZW5lZCBmb3IgVEIgYmFzZWQgb24gYW55IFRCIHN5bXB0b20KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlNjcmVlbmluZyB3aXRoIGFueSBUQiBzeW1wdG9tIjoKICBleGlzdHMgIlNjcmVlbmluZyB3aXRoIGFueSBUQiBzeW1wdG9tIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2NyZWVuaW5nIHdpdGggYW55IFRCIHN5bXB0b20gT2JzZXJ2YXRpb24iCmRlZmluZSAiU2NyZWVuaW5nIHdpdGggYW55IFRCIHN5bXB0b20gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU2NyZWVuaW5nIHdpdGggYW55IFRCIHN5bXB0b20iXQpkZWZpbmUgIlNjcmVlbmluZyB3aXRoIGFueSBUQiBzeW1wdG9tIE9ic2VydmF0aW9uIjoKICAiVEIgc2NyZWVuaW5nIGFsZ29yaXRobSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU2NyZWVuaW5nIHdpdGggYW55IFRCIHN5bXB0b20iCi8qIEVuZCBvZiBTY3JlZW5pbmcgd2l0aCBhbnkgVEIgc3ltcHRvbSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTk1OSAtIFc0U1Mgc2luZ2xlIHNjcmVlbmluZyBhbGdvcml0aG0KQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IENsaWVudCBzY3JlZW5lZCBmb3IgVEIgYmFzZWQgb24gdGhlIFdITy1yZWNvbW1lbmRlZCBmb3VyLXN5bXB0b20gc2NyZWVuCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJXNFNTIHNpbmdsZSBzY3JlZW5pbmcgYWxnb3JpdGhtIjoKICBleGlzdHMgIlc0U1Mgc2luZ2xlIHNjcmVlbmluZyBhbGdvcml0aG0gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJXNFNTIHNpbmdsZSBzY3JlZW5pbmcgYWxnb3JpdGhtIE9ic2VydmF0aW9uIgpkZWZpbmUgIlc0U1Mgc2luZ2xlIHNjcmVlbmluZyBhbGdvcml0aG0gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVzRTUyBzaW5nbGUgc2NyZWVuaW5nIGFsZ29yaXRobSJdCmRlZmluZSAiVzRTUyBzaW5nbGUgc2NyZWVuaW5nIGFsZ29yaXRobSBPYnNlcnZhdGlvbiI6CiAgIlRCIHNjcmVlbmluZyBhbGdvcml0aG0gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlc0U1Mgc2luZ2xlIHNjcmVlbmluZyBhbGdvcml0aG0iCi8qIEVuZCBvZiBXNFNTIHNpbmdsZSBzY3JlZW5pbmcgYWxnb3JpdGhtICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTYwIC0gQ1JQIHNpbmdsZSBzY3JlZW5pbmcgYWxnb3JpdGhtCkBhY3Rpdml0eTogSElWLkQ0IFNjcmVlbiBmb3IgVEIKQGRlc2NyaXB0aW9uOiBDbGllbnQgc2NyZWVuZWQgZm9yIFRCIGJhc2VkIG9uIEMtcmVhY3RpdmUgcHJvdGVpbiAoQ1JQKSB0ZXN0aW5nCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDUlAgc2luZ2xlIHNjcmVlbmluZyBhbGdvcml0aG0iOgogIGV4aXN0cyAiQ1JQIHNpbmdsZSBzY3JlZW5pbmcgYWxnb3JpdGhtIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ1JQIHNpbmdsZSBzY3JlZW5pbmcgYWxnb3JpdGhtIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNSUCBzaW5nbGUgc2NyZWVuaW5nIGFsZ29yaXRobSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDUlAgc2luZ2xlIHNjcmVlbmluZyBhbGdvcml0aG0iXQpkZWZpbmUgIkNSUCBzaW5nbGUgc2NyZWVuaW5nIGFsZ29yaXRobSBPYnNlcnZhdGlvbiI6CiAgIlRCIHNjcmVlbmluZyBhbGdvcml0aG0gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNSUCBzaW5nbGUgc2NyZWVuaW5nIGFsZ29yaXRobSIKLyogRW5kIG9mIENSUCBzaW5nbGUgc2NyZWVuaW5nIGFsZ29yaXRobSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTk2MSAtIENYUiBzaW5nbGUgc2NyZWVuaW5nIGFsZ29yaXRobQpAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogQ2xpZW50IHNjcmVlbmVkIGZvciBUQiB3aXRoIGEgY2hlc3QgcmFkaW9ncmFwaHkgKENYUikKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNYUiBzaW5nbGUgc2NyZWVuaW5nIGFsZ29yaXRobSI6CiAgZXhpc3RzICJDWFIgc2luZ2xlIHNjcmVlbmluZyBhbGdvcml0aG0gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDWFIgc2luZ2xlIHNjcmVlbmluZyBhbGdvcml0aG0gT2JzZXJ2YXRpb24iCmRlZmluZSAiQ1hSIHNpbmdsZSBzY3JlZW5pbmcgYWxnb3JpdGhtIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNYUiBzaW5nbGUgc2NyZWVuaW5nIGFsZ29yaXRobSJdCmRlZmluZSAiQ1hSIHNpbmdsZSBzY3JlZW5pbmcgYWxnb3JpdGhtIE9ic2VydmF0aW9uIjoKICAiVEIgc2NyZWVuaW5nIGFsZ29yaXRobSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ1hSIHNpbmdsZSBzY3JlZW5pbmcgYWxnb3JpdGhtIgovKiBFbmQgb2YgQ1hSIHNpbmdsZSBzY3JlZW5pbmcgYWxnb3JpdGhtICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTYyIC0gUGFyYWxsZWwgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENSUApAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogQ2xpZW50IHNjcmVlbmVkIGZvciBUQiB1c2luZyBwYXJhbGxlbCBzY3JlZW5pbmcgd2l0aCBXSE8tcmVjb21tZW5kZWQgZm91ci1zeW1wdG9tIHNjcmVlbiBhbmQgQy1yZWFjdGl2ZSBwcm90ZWluIChDUlApIHRlc3RpbmcKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBhcmFsbGVsIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDUlAiOgogIGV4aXN0cyAiUGFyYWxsZWwgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENSUCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlBhcmFsbGVsIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDUlAgT2JzZXJ2YXRpb24iCmRlZmluZSAiUGFyYWxsZWwgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENSUCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQYXJhbGxlbCBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1JQIl0KZGVmaW5lICJQYXJhbGxlbCBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1JQIE9ic2VydmF0aW9uIjoKICAiVEIgc2NyZWVuaW5nIGFsZ29yaXRobSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUGFyYWxsZWwgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENSUCIKLyogRW5kIG9mIFBhcmFsbGVsIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDUlAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5NjMgLSBTZXF1ZW50aWFsIHBvc2l0aXZlIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDUlAKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IENsaWVudCBzY3JlZW5lZCBmb3IgVEIgdXNpbmcgc2VxdWVudGlhbCBwb3NpdGl2ZSBzY3JlZW5pbmcgd2l0aCBXSE8tcmVjb21tZW5kZWQgZm91ci1zeW1wdG9tIHNjcmVlbiBhbmQgQy1yZWFjdGl2ZSBwcm90ZWluIChDUlApIHRlc3RpbmcuCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZXF1ZW50aWFsIHBvc2l0aXZlIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDUlAiOgogIGV4aXN0cyAiU2VxdWVudGlhbCBwb3NpdGl2ZSBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1JQIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2VxdWVudGlhbCBwb3NpdGl2ZSBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1JQIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNlcXVlbnRpYWwgcG9zaXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENSUCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTZXF1ZW50aWFsIHBvc2l0aXZlIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDUlAiXQpkZWZpbmUgIlNlcXVlbnRpYWwgcG9zaXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENSUCBPYnNlcnZhdGlvbiI6CiAgIlRCIHNjcmVlbmluZyBhbGdvcml0aG0gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlNlcXVlbnRpYWwgcG9zaXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENSUCIKLyogRW5kIG9mIFNlcXVlbnRpYWwgcG9zaXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENSUCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTk2NCAtIFNlcXVlbnRpYWwgbmVnYXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENSUApAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogQ2xpZW50IHNjcmVlbmVkIGZvciBUQiB1c2luZyBzZXF1ZW50aWFsIG5lZ2F0aXZlIHNjcmVlbmluZyB3aXRoIFdITy1yZWNvbW1lbmRlZCBmb3VyLXN5bXB0b20gc2NyZWVuIGFuZCBDLXJlYWN0aXZlIHByb3RlaW4gKENSUCkgdGVzdGluZwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU2VxdWVudGlhbCBuZWdhdGl2ZSBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1JQIjoKICBleGlzdHMgIlNlcXVlbnRpYWwgbmVnYXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENSUCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlNlcXVlbnRpYWwgbmVnYXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENSUCBPYnNlcnZhdGlvbiIKZGVmaW5lICJTZXF1ZW50aWFsIG5lZ2F0aXZlIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDUlAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU2VxdWVudGlhbCBuZWdhdGl2ZSBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1JQIl0KZGVmaW5lICJTZXF1ZW50aWFsIG5lZ2F0aXZlIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDUlAgT2JzZXJ2YXRpb24iOgogICJUQiBzY3JlZW5pbmcgYWxnb3JpdGhtIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTZXF1ZW50aWFsIG5lZ2F0aXZlIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDUlAiCi8qIEVuZCBvZiBTZXF1ZW50aWFsIG5lZ2F0aXZlIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDUlAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5NjUgLSBQYXJhbGxlbCBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1hSCkBhY3Rpdml0eTogSElWLkQ0IFNjcmVlbiBmb3IgVEIKQGRlc2NyaXB0aW9uOiBDbGllbnQgc2NyZWVuZWQgZm9yIFRCIHVzaW5nIHRoZSBwYXJhbGxlbCBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1hSCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQYXJhbGxlbCBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1hSIjoKICBleGlzdHMgIlBhcmFsbGVsIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDWFIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQYXJhbGxlbCBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1hSIE9ic2VydmF0aW9uIgpkZWZpbmUgIlBhcmFsbGVsIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDWFIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUGFyYWxsZWwgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENYUiJdCmRlZmluZSAiUGFyYWxsZWwgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENYUiBPYnNlcnZhdGlvbiI6CiAgIlRCIHNjcmVlbmluZyBhbGdvcml0aG0gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlBhcmFsbGVsIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDWFIiCi8qIEVuZCBvZiBQYXJhbGxlbCBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1hSICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTY2IC0gU2VxdWVudGlhbCBwb3NpdGl2ZSBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1hSCkBhY3Rpdml0eTogSElWLkQ0IFNjcmVlbiBmb3IgVEIKQGRlc2NyaXB0aW9uOiBDbGllbnQgc2NyZWVuZWQgZm9yIFRCIHVzaW5nIHNlcXVlbnRpYWwgcG9zaXRpdmUgc2NyZWVuaW5nIHdpdGggV0hPLXJlY29tbWVuZGVkIGZvdXItc3ltcHRvbSBzY3JlZW4gYW5kIGNoZXN0IHJhZGlvZ3JhcGh5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZXF1ZW50aWFsIHBvc2l0aXZlIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDWFIiOgogIGV4aXN0cyAiU2VxdWVudGlhbCBwb3NpdGl2ZSBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1hSIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2VxdWVudGlhbCBwb3NpdGl2ZSBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1hSIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNlcXVlbnRpYWwgcG9zaXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENYUiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJTZXF1ZW50aWFsIHBvc2l0aXZlIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDWFIiXQpkZWZpbmUgIlNlcXVlbnRpYWwgcG9zaXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENYUiBPYnNlcnZhdGlvbiI6CiAgIlRCIHNjcmVlbmluZyBhbGdvcml0aG0gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlNlcXVlbnRpYWwgcG9zaXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENYUiIKLyogRW5kIG9mIFNlcXVlbnRpYWwgcG9zaXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENYUiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTk2NyAtIFNlcXVlbnRpYWwgbmVnYXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENYUgpAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogQ2xpZW50IHNjcmVlbmVkIGZvciBUQiB1c2luZyBzZXF1ZW50aWFsIG5lZ2F0aXZlIHNjcmVlbmluZyB3aXRoIFdITy1yZWNvbW1lbmRlZCBmb3VyLXN5bXB0b20gc2NyZWVuIGFuZCBjaGVzdCByYWRpb2dyYXBoeQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU2VxdWVudGlhbCBuZWdhdGl2ZSBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1hSIjoKICBleGlzdHMgIlNlcXVlbnRpYWwgbmVnYXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENYUiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlNlcXVlbnRpYWwgbmVnYXRpdmUgc2NyZWVuaW5nIGFsZ29yaXRobSB3aXRoIFc0U1MgYW5kIENYUiBPYnNlcnZhdGlvbiIKZGVmaW5lICJTZXF1ZW50aWFsIG5lZ2F0aXZlIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDWFIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU2VxdWVudGlhbCBuZWdhdGl2ZSBzY3JlZW5pbmcgYWxnb3JpdGhtIHdpdGggVzRTUyBhbmQgQ1hSIl0KZGVmaW5lICJTZXF1ZW50aWFsIG5lZ2F0aXZlIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDWFIgT2JzZXJ2YXRpb24iOgogICJUQiBzY3JlZW5pbmcgYWxnb3JpdGhtIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTZXF1ZW50aWFsIG5lZ2F0aXZlIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDWFIiCi8qIEVuZCBvZiBTZXF1ZW50aWFsIG5lZ2F0aXZlIHNjcmVlbmluZyBhbGdvcml0aG0gd2l0aCBXNFNTIGFuZCBDWFIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5NjggLSBTY3JlZW5pbmcgd2l0aCBtV1JECkBhY3Rpdml0eTogSElWLkQ0IFNjcmVlbiBmb3IgVEIKQGRlc2NyaXB0aW9uOiBDbGllbnQgc2NyZWVuZWQgZm9yIFRCIHdpdGggYSBtb2xlY3VsYXIgV0hPLXJlY29tbWVuZGVkIHJhcGlkIGRpYWdub3N0aWMgdGVzdCAobVdSRCksIHN1Y2ggYXMgYW4gWHBlcnQgTVRCL1JJRiB0ZXN0IHRvIGRldGVjdCBNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyAoTVRCKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU2NyZWVuaW5nIHdpdGggbVdSRCI6CiAgZXhpc3RzICJTY3JlZW5pbmcgd2l0aCBtV1JEIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU2NyZWVuaW5nIHdpdGggbVdSRCBPYnNlcnZhdGlvbiIKZGVmaW5lICJTY3JlZW5pbmcgd2l0aCBtV1JEIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlNjcmVlbmluZyB3aXRoIG1XUkQiXQpkZWZpbmUgIlNjcmVlbmluZyB3aXRoIG1XUkQgT2JzZXJ2YXRpb24iOgogICJUQiBzY3JlZW5pbmcgYWxnb3JpdGhtIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJTY3JlZW5pbmcgd2l0aCBtV1JEIgovKiBFbmQgb2YgU2NyZWVuaW5nIHdpdGggbVdSRCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTk2OSAtIENsaW5pY2FsIGFzc2Vzc21lbnQKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IENsaWVudCBzY3JlZW5lZCBmb3Igd2l0aCBhIGNsaW5pY2FsIGV2YWx1YXRpb24gZm9yIHR1YmVyY3Vsb3NpcyAoVEIpIGJhc2VkIG9uIG5hdGlvbmFsIGd1aWRlbGluZXMuIENsaW5pY2FsIGFzc2Vzc21lbnQgbWF5IGJlIHVzZWQgYXMgYW4gZWxpZ2liaWxpdHkgZXZhbHVhdGlvbiBmb3IgdGVzdGluZyB3aXRoIExGLUxBTSBvciBmb3IgZW1waXJpYyBUQiB0cmVhdG1lbnQuCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDbGluaWNhbCBhc3Nlc3NtZW50IjoKICBleGlzdHMgIkNsaW5pY2FsIGFzc2Vzc21lbnQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJDbGluaWNhbCBhc3Nlc3NtZW50IE9ic2VydmF0aW9uIgpkZWZpbmUgIkNsaW5pY2FsIGFzc2Vzc21lbnQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQ2xpbmljYWwgYXNzZXNzbWVudCJdCmRlZmluZSAiQ2xpbmljYWwgYXNzZXNzbWVudCBPYnNlcnZhdGlvbiI6CiAgIlRCIHNjcmVlbmluZyBhbGdvcml0aG0gT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNsaW5pY2FsIGFzc2Vzc21lbnQiCi8qIEVuZCBvZiBDbGluaWNhbCBhc3Nlc3NtZW50ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTcwIC0gT3RoZXIgVEIgc2NyZWVuaW5nIGFsZ29yaXRobQpAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogQ2xpZW50IHNjcmVlbmVkIGZvciB0dWJlcmN1bG9zaXMgKFRCKSB3aXRoIGEgZGlmZmVyZW50IHNjcmVlbmluZyBtZXRob2Qgbm90IGxpc3RlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT3RoZXIgVEIgc2NyZWVuaW5nIGFsZ29yaXRobSI6CiAgZXhpc3RzICJPdGhlciBUQiBzY3JlZW5pbmcgYWxnb3JpdGhtIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiT3RoZXIgVEIgc2NyZWVuaW5nIGFsZ29yaXRobSBPYnNlcnZhdGlvbiIKZGVmaW5lICJPdGhlciBUQiBzY3JlZW5pbmcgYWxnb3JpdGhtIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk90aGVyIFRCIHNjcmVlbmluZyBhbGdvcml0aG0iXQpkZWZpbmUgIk90aGVyIFRCIHNjcmVlbmluZyBhbGdvcml0aG0gT2JzZXJ2YXRpb24iOgogICJUQiBzY3JlZW5pbmcgYWxnb3JpdGhtIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJPdGhlciBUQiBzY3JlZW5pbmcgYWxnb3JpdGhtIgovKiBFbmQgb2YgT3RoZXIgVEIgc2NyZWVuaW5nIGFsZ29yaXRobSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTk3MyAtIFN5bXB0b21zIG9mIFRCCkBhY3Rpdml0eTogSElWLkQ0IFNjcmVlbiBmb3IgVEIKQGRlc2NyaXB0aW9uOiBTeW1wdG9tcyB0aGF0IG1heSBpbmRpY2F0ZSBUQiBkaXNlYXNlIGluIGNsaWVudHMgbGl2aW5nIHdpdGggSElWLCBiYXNlZCBvbiBhIGNsaW5pY2FsIGFsZ29yaXRobQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU3ltcHRvbXMgb2YgVEIiOgogIGV4aXN0cyAiU3ltcHRvbXMgb2YgVEIgT2JzZXJ2YXRpb24iCmRlZmluZSAiU3ltcHRvbXMgb2YgVEIgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlN5bXB0b21zIG9mIFRCIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFN5bXB0b21zIG9mIFRCICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTc0IC0gQ3VycmVudCBjb3VnaApAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogQ2xpZW50IGhhcyBhIGNvdWdoIHJlZ2FyZGxlc3Mgb2YgZHVyYXRpb24KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkN1cnJlbnQgY291Z2giOgogIGV4aXN0cyAiQ3VycmVudCBjb3VnaCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkN1cnJlbnQgY291Z2ggT2JzZXJ2YXRpb24iCmRlZmluZSAiQ3VycmVudCBjb3VnaCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDdXJyZW50IGNvdWdoIl0KZGVmaW5lICJDdXJyZW50IGNvdWdoIE9ic2VydmF0aW9uIjoKICAiU3ltcHRvbXMgb2YgVEIgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkN1cnJlbnQgY291Z2giCi8qIEVuZCBvZiBDdXJyZW50IGNvdWdoICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTc1IC0gUHJvbG9uZ2VkIGNvdWdoID49MncKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IENsaWVudCBoYXMgYSBwcm9sb25nZWQgY291Z2ggb2YgMiB3ZWVrcyBvciBtb3JlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQcm9sb25nZWQgY291Z2ggPj0ydyI6CiAgZXhpc3RzICJQcm9sb25nZWQgY291Z2ggPj0ydyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlByb2xvbmdlZCBjb3VnaCA+PTJ3IE9ic2VydmF0aW9uIgpkZWZpbmUgIlByb2xvbmdlZCBjb3VnaCA+PTJ3IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlByb2xvbmdlZCBjb3VnaCA+PTJ3Il0KZGVmaW5lICJQcm9sb25nZWQgY291Z2ggPj0ydyBPYnNlcnZhdGlvbiI6CiAgIlN5bXB0b21zIG9mIFRCIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQcm9sb25nZWQgY291Z2ggPj0ydyIKLyogRW5kIG9mIFByb2xvbmdlZCBjb3VnaCA+PTJ3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTc2IC0gRmV2ZXIgb2YgMzkgwrBDIG9yIGdyZWF0ZXIKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IENsaWVudCBoYXMgYSBmZXZlciB3aXRoIGEgbWVhc3VyZWQgdGVtcGVyYXR1cmUgb2YgMTAyLjIgwrBGLzM5IMKwQyBvciBncmVhdGVyCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJGZXZlciBvZiAzOSDCsEMgb3IgZ3JlYXRlciI6CiAgZXhpc3RzICJGZXZlciBvZiAzOSDCsEMgb3IgZ3JlYXRlciBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkZldmVyIG9mIDM5IMKwQyBvciBncmVhdGVyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkZldmVyIG9mIDM5IMKwQyBvciBncmVhdGVyIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkZldmVyIG9mIDM5IMKwQyBvciBncmVhdGVyIl0KZGVmaW5lICJGZXZlciBvZiAzOSDCsEMgb3IgZ3JlYXRlciBPYnNlcnZhdGlvbiI6CiAgIlN5bXB0b21zIG9mIFRCIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJGZXZlciBvZiAzOSDCsEMgb3IgZ3JlYXRlciIKLyogRW5kIG9mIEZldmVyIG9mIDM5IMKwQyBvciBncmVhdGVyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTc3IC0gV2VpZ2h0IGxvc3MgcmVwb3J0ZWQKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IFVuZXhwbGFpbmVkIHdlaWdodCBsb3NzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJXZWlnaHQgbG9zcyByZXBvcnRlZCI6CiAgZXhpc3RzICJXZWlnaHQgbG9zcyByZXBvcnRlZCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIldlaWdodCBsb3NzIHJlcG9ydGVkIE9ic2VydmF0aW9uIgpkZWZpbmUgIldlaWdodCBsb3NzIHJlcG9ydGVkIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIldlaWdodCBsb3NzIHJlcG9ydGVkIl0KZGVmaW5lICJXZWlnaHQgbG9zcyByZXBvcnRlZCBPYnNlcnZhdGlvbiI6CiAgIlN5bXB0b21zIG9mIFRCIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJXZWlnaHQgbG9zcyByZXBvcnRlZCIKLyogRW5kIG9mIFdlaWdodCBsb3NzIHJlcG9ydGVkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTc4IC0gTmlnaHQgc3dlYXRzCkBhY3Rpdml0eTogSElWLkQ0IFNjcmVlbiBmb3IgVEIKQGRlc2NyaXB0aW9uOiBDbGllbnQgcmVwb3J0cyBleHBlcmllbmNpbmcgbmlnaHQgc3dlYXRzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOaWdodCBzd2VhdHMiOgogIGV4aXN0cyAiTmlnaHQgc3dlYXRzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTmlnaHQgc3dlYXRzIE9ic2VydmF0aW9uIgpkZWZpbmUgIk5pZ2h0IHN3ZWF0cyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOaWdodCBzd2VhdHMiXQpkZWZpbmUgIk5pZ2h0IHN3ZWF0cyBPYnNlcnZhdGlvbiI6CiAgIlN5bXB0b21zIG9mIFRCIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJOaWdodCBzd2VhdHMiCi8qIEVuZCBvZiBOaWdodCBzd2VhdHMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5NzkgLSBQb29yIHdlaWdodCBnYWluCkBhY3Rpdml0eTogSElWLkQ0IFNjcmVlbiBmb3IgVEIKQGRlc2NyaXB0aW9uOiBDbGllbnQgcmVwb3J0cyBwb29yIHdlaWdodCBnYWluIG9mIGNoaWxkIG9yIGluZmFudCBvciBncm93dGggY3VydmUgZmxhdHRlbmluZyBvciB3ZWlnaHQgZm9yIGFnZSA8LTIgWi1zY29yZXMuCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQb29yIHdlaWdodCBnYWluIjoKICBleGlzdHMgIlBvb3Igd2VpZ2h0IGdhaW4gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQb29yIHdlaWdodCBnYWluIE9ic2VydmF0aW9uIgpkZWZpbmUgIlBvb3Igd2VpZ2h0IGdhaW4gQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUG9vciB3ZWlnaHQgZ2FpbiJdCmRlZmluZSAiUG9vciB3ZWlnaHQgZ2FpbiBPYnNlcnZhdGlvbiI6CiAgIlN5bXB0b21zIG9mIFRCIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQb29yIHdlaWdodCBnYWluIgovKiBFbmQgb2YgUG9vciB3ZWlnaHQgZ2FpbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTk4MCAtIFJlZHVjZWQgcGxheWZ1bG5lc3MKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IENsaWVudCByZXBvcnRzIHJlZHVjZWQgcGxheWZ1bG5lc3Mgb2YgY2hpbGQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlJlZHVjZWQgcGxheWZ1bG5lc3MiOgogIGV4aXN0cyAiUmVkdWNlZCBwbGF5ZnVsbmVzcyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlJlZHVjZWQgcGxheWZ1bG5lc3MgT2JzZXJ2YXRpb24iCmRlZmluZSAiUmVkdWNlZCBwbGF5ZnVsbmVzcyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJSZWR1Y2VkIHBsYXlmdWxuZXNzIl0KZGVmaW5lICJSZWR1Y2VkIHBsYXlmdWxuZXNzIE9ic2VydmF0aW9uIjoKICAiU3ltcHRvbXMgb2YgVEIgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlJlZHVjZWQgcGxheWZ1bG5lc3MiCi8qIEVuZCBvZiBSZWR1Y2VkIHBsYXlmdWxuZXNzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTgxIC0gQ2hlc3QgcGFpbgpAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogQ2xpZW50IHJlcG9ydHMgY2hlc3QgcGFpbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ2hlc3QgcGFpbiI6CiAgZXhpc3RzICJDaGVzdCBwYWluIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ2hlc3QgcGFpbiBPYnNlcnZhdGlvbiIKZGVmaW5lICJDaGVzdCBwYWluIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkNoZXN0IHBhaW4iXQpkZWZpbmUgIkNoZXN0IHBhaW4gT2JzZXJ2YXRpb24iOgogICJTeW1wdG9tcyBvZiBUQiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ2hlc3QgcGFpbiIKLyogRW5kIG9mIENoZXN0IHBhaW4gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5ODIgLSBIYWVtb3B0eXNpcwpAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogQ2xpZW50IHJlcG9ydHMgZXhwZXJpZW5jaW5nIGhhZW1vcHR5c2lzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIYWVtb3B0eXNpcyI6CiAgZXhpc3RzICJIYWVtb3B0eXNpcyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhhZW1vcHR5c2lzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkhhZW1vcHR5c2lzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhhZW1vcHR5c2lzIl0KZGVmaW5lICJIYWVtb3B0eXNpcyBPYnNlcnZhdGlvbiI6CiAgIlN5bXB0b21zIG9mIFRCIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJIYWVtb3B0eXNpcyIKLyogRW5kIG9mIEhhZW1vcHR5c2lzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTgzIC0gTGV0aGFyZ3kKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IENsaWVudCByZXBvcnRzIGxldGhhcmd5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJMZXRoYXJneSBELkRFOTgzIjoKICBleGlzdHMgIkxldGhhcmd5IEQuREU5ODMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJMZXRoYXJneSBELkRFOTgzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkxldGhhcmd5IEQuREU5ODMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTGV0aGFyZ3kgLSBISVYuRC5ERTk4MyJdCmRlZmluZSAiTGV0aGFyZ3kgRC5ERTk4MyBPYnNlcnZhdGlvbiI6CiAgIlN5bXB0b21zIG9mIFRCIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJMZXRoYXJneSAtIEhJVi5ELkRFOTgzIgovKiBFbmQgb2YgTGV0aGFyZ3kgRC5ERTk4MyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTk4NCAtIE5vbmUKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IE5vIHN5bXB0b21zIG9mIFRCIGlkZW50aWZpZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk5vbmUiOgogIGV4aXN0cyAiTm9uZSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk5vbmUgT2JzZXJ2YXRpb24iCmRlZmluZSAiTm9uZSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOb25lIl0KZGVmaW5lICJOb25lIE9ic2VydmF0aW9uIjoKICAiU3ltcHRvbXMgb2YgVEIgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5vbmUiCi8qIEVuZCBvZiBOb25lICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTg1IC0gSGlzdG9yeSBvZiBjb250YWN0IHdpdGggYSBwZXJzb24gd2l0aCBUQgpAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogQ2xpZW50IGhhZCBhIGhpc3Rvcnkgb2YgYSBjb250YWN0IHdpdGggYSBwZXJzb24gd2l0aCBUQgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSGlzdG9yeSBvZiBjb250YWN0IHdpdGggYSBwZXJzb24gd2l0aCBUQiI6CiAgZXhpc3RzICJIaXN0b3J5IG9mIGNvbnRhY3Qgd2l0aCBhIHBlcnNvbiB3aXRoIFRCIE9ic2VydmF0aW9uIgpkZWZpbmUgIkhpc3Rvcnkgb2YgY29udGFjdCB3aXRoIGEgcGVyc29uIHdpdGggVEIgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhpc3Rvcnkgb2YgY29udGFjdCB3aXRoIGEgcGVyc29uIHdpdGggVEIiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBIaXN0b3J5IG9mIGNvbnRhY3Qgd2l0aCBhIHBlcnNvbiB3aXRoIFRCICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTg2IC0gVEIgc2NyZWVuaW5nIHJlc3VsdApAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogUmVjb3JkIHRoZSByZXN1bHQgb2YgdGhlIHR1YmVyY3Vsb3NpcyAoVEIpIHNjcmVlbmluZwoqLwoKZGVmaW5lICJUQiBzY3JlZW5pbmcgcmVzdWx0IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJUQiBzY3JlZW5pbmcgcmVzdWx0Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFRCIHNjcmVlbmluZyByZXN1bHQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5ODcgLSBTY3JlZW4gcG9zaXRpdmUgZm9yIFRCCkBhY3Rpdml0eTogSElWLkQ0IFNjcmVlbiBmb3IgVEIKQGRlc2NyaXB0aW9uOiBTY3JlZW5pbmcgcmVzdWx0IHdhcyBwb3NpdGl2ZSBmb3IgdHViZXJjdWxvc2lzIChUQikKKi8KCmRlZmluZSAiU2NyZWVuIHBvc2l0aXZlIGZvciBUQiI6CiAgIlRCIHNjcmVlbmluZyByZXN1bHQiIE8KICB3aGVyZSBPLnZhbHVlIH4gQ29uY2VwdHMuIlNjcmVlbiBwb3NpdGl2ZSBmb3IgVEIiCi8qIEVuZCBvZiBTY3JlZW4gcG9zaXRpdmUgZm9yIFRCICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTg4IC0gU2NyZWVuIG5lZ2F0aXZlIGZvciBUQgpAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogU2NyZWVuaW5nIHJlc3VsdCB3YXMgbmVnYXRpdmUgZm9yIHR1YmVyY3Vsb3NpcyAoVEIpCiovCgpkZWZpbmUgIlNjcmVlbiBuZWdhdGl2ZSBmb3IgVEIiOgogICJUQiBzY3JlZW5pbmcgcmVzdWx0IiBPCiAgd2hlcmUgTy52YWx1ZSB+IENvbmNlcHRzLiJTY3JlZW4gbmVnYXRpdmUgZm9yIFRCIgovKiBFbmQgb2YgU2NyZWVuIG5lZ2F0aXZlIGZvciBUQiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTk4OSAtIEluY29uY2x1c2l2ZQpAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogU2NyZWVuaW5nIHJlc3VsdCB3YXMgaW5jb25jbHVzaXZlIGZvciB0dWJlcmN1bG9zaXMgKFRCKQoqLwoKZGVmaW5lICJJbmNvbmNsdXNpdmUgRC5ERTk4OSI6CiAgIlRCIHNjcmVlbmluZyByZXN1bHQiIE8KICB3aGVyZSBPLnZhbHVlIH4gQ29uY2VwdHMuIkluY29uY2x1c2l2ZSAtIEhJVi5ELkRFOTg5IgovKiBFbmQgb2YgSW5jb25jbHVzaXZlIEQuREU5ODkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5OTAgLSBUQiBzY3JlZW5pbmcgZGF0ZQpAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogRGF0ZSB0aGUgVEIgc2NyZWVuaW5nIHdhcyBjb25kdWN0ZWQKKi8KCmRlZmluZSAiVEIgc2NyZWVuaW5nIGRhdGUiOgogIFtQcm9jZWR1cmVdIFAKICB3aGVyZSBQLnN0YXR1cyA9ICdjb21wbGV0ZWQnCiAgYW5kIFAuY2F0ZWdvcnkgfiBDb25jZXB0cy4iVEIgZGlhZ25vc3RpYyB0ZXN0IGNhdGVnb3J5IgovKiBFbmQgb2YgVEIgc2NyZWVuaW5nIGRhdGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5OTIgLSBUQiBkaWFnbm9zdGljIHRlc3QgY2F0ZWdvcnkKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IFRoZSB0eXBlIG9mIGRpYWdub3N0aWMgdGVzdCBwZXJmb3JtZWQgdG8gZGV0ZWN0IHR1YmVyY3Vsb3NpcyAoVEIpIGRpc2Vhc2UKKi8KCmRlZmluZSAiVEIgZGlhZ25vc3RpYyB0ZXN0IGNhdGVnb3J5IjoKICBbUHJvY2VkdXJlXSBQCiAgd2hlcmUgUC5zdGF0dXMgPSAnY29tcGxldGVkJwogIGFuZCBQLmNhdGVnb3J5IH4gQ29uY2VwdHMuIlRCIGRpYWdub3N0aWMgdGVzdCBjYXRlZ29yeSIKLyogRW5kIG9mIFRCIGRpYWdub3N0aWMgdGVzdCBjYXRlZ29yeSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTk5MyAtIExGLUxBTQpAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogQ2xpZW50IHRlc3RlZCBmb3IgdHViZXJjdWxvc2lzIHdpdGggYSBsYXRlcmFsIGZsb3cgdXJpbmUgbGlwb2FyYWJpbm9tYW5uYW4gYXNzYXkKKi8KCmRlZmluZSAiTEYtTEFNIjoKICAiVEIgZGlhZ25vc3RpYyB0ZXN0IGNhdGVnb3J5IiBQCiAgd2hlcmUgUC5jb2RlIH4gQ29uY2VwdHMuIkxGLUxBTSIKLyogRW5kIG9mIExGLUxBTSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTk5NCAtIG1XUkQgdGVzdCBmb3IgVEIKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IENsaWVudCB0ZXN0ZWQgd2l0aCBhIFdITy1yZWNvbW1lbmRlZCBtb2xlY3VsYXIgZGlhZ25vc3RpYyB0ZXN0IHRvIGRldGVjdCBNeWNvYmFjdGVyaXVtIHR1YmVyY3Vsb3NpcyAoTVRCKQoqLwoKZGVmaW5lICJtV1JEIHRlc3QgZm9yIFRCIjoKICAiVEIgZGlhZ25vc3RpYyB0ZXN0IGNhdGVnb3J5IiBQCiAgd2hlcmUgUC5jb2RlIH4gQ29uY2VwdHMuIm1XUkQgdGVzdCBmb3IgVEIiCi8qIEVuZCBvZiBtV1JEIHRlc3QgZm9yIFRCICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTk1IC0gTWljcm9zY29weSAtIFNwdXR1bSBhY2lkLWZhc3QgYmFjaWxsaSBBRkIKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IENsaWVudCB0ZXN0ZWQgZm9yIHR1YmVyY3Vsb3NpcyB3aXRoIGEgc3B1dHVtIGFjaWQtZmFzdCBiYWNpbGxpIChBRkIpCiovCgpkZWZpbmUgIk1pY3Jvc2NvcHkgLSBTcHV0dW0gYWNpZC1mYXN0IGJhY2lsbGkgQUZCIjoKICAiVEIgZGlhZ25vc3RpYyB0ZXN0IGNhdGVnb3J5IiBQCiAgd2hlcmUgUC5jb2RlIH4gQ29uY2VwdHMuIk1pY3Jvc2NvcHkgLSBTcHV0dW0gYWNpZC1mYXN0IGJhY2lsbGkgQUZCIgovKiBFbmQgb2YgTWljcm9zY29weSAtIFNwdXR1bSBhY2lkLWZhc3QgYmFjaWxsaSBBRkIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREU5OTYgLSBUQiBDdWx0dXJlCkBhY3Rpdml0eTogSElWLkQ0IFNjcmVlbiBmb3IgVEIKQGRlc2NyaXB0aW9uOiBDbGllbnQgdGVzdGVkIGZvciB0dWJlcmN1bG9zaXMgKFRCKSB3aXRoIGEgY3VsdHVyZQoqLwoKZGVmaW5lICJUQiBDdWx0dXJlIjoKICAiVEIgZGlhZ25vc3RpYyB0ZXN0IGNhdGVnb3J5IiBQCiAgd2hlcmUgUC5jb2RlIH4gQ29uY2VwdHMuIlRCIEN1bHR1cmUiCi8qIEVuZCBvZiBUQiBDdWx0dXJlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFOTk3IC0gVEIgZGlhZ25vc3RpYyB0ZXN0IGRhdGUKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IFRoZSBkYXRlIHdoZW4gVEIgZGlhZ25vc3RpYyB0ZXN0IHdhcyBwZXJmb3JtZWQKKi8KCmRlZmluZSAiVEIgZGlhZ25vc3RpYyB0ZXN0IGRhdGUiOgogICJUQiBkaWFnbm9zdGljIHRlc3QgY2F0ZWdvcnkiIFAKICAgICByZXR1cm4gKHN0YXJ0IG9mIFAucGVyZm9ybWVkLnRvSW50ZXJ2YWwoKSkKLyogRW5kIG9mIFRCIGRpYWdub3N0aWMgdGVzdCBkYXRlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTAwMSAtIFRCIHRyZWF0bWVudCBzdGFydCBkYXRlCkBhY3Rpdml0eTogSElWLkQ4IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGhlIGRhdGUgb24gd2hpY2ggdGhlIGNsaWVudCBzdGFydCBvciByZXN0YXJ0ZWQgdHViZXJjdWxvc2lzIChUQikgdHJlYXRtZW50CiovCgpkZWZpbmUgIlRCIHRyZWF0bWVudCBzdGFydCBkYXRlIjoKICBbTWVkaWNhdGlvblN0YXRlbWVudF0gTVMKICAgIHdoZXJlIGV4aXN0cyhNUy5yZWFzb25Db2RlIEMgd2hlcmUgQyB+IEN1c3RvbUNvbmNlcHRzLiJ0YiB0cmVhdG1lbnQiKQogICAgcmV0dXJuIChzdGFydCBvZiBNUy5lZmZlY3RpdmUudG9JbnRlcnZhbCgpKQovKiBFbmQgb2YgVEIgdHJlYXRtZW50IHN0YXJ0IGRhdGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxMDE3IC0gRWxpZ2libGUgZm9yIFRCIHByZXZlbnRpdmUgdHJlYXRtZW50CkBhY3Rpdml0eTogSElWLkQxNCBQcmV2ZW50LCBzY3JlZW4sIGFuZCBtYW5hZ2UgY29tb3JiaWRpdGllcyBhbmQgY29pbmZlY3Rpb25zCkBkZXNjcmlwdGlvbjogQ2xpZW50IGlzIGVsaWdpYmxlIGZvciB0dWJlcmN1bG9zaXMgcHJldmVudGl2ZSB0cmVhdG1lbnQgKFRQVCkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkVsaWdpYmxlIGZvciBUQiBwcmV2ZW50aXZlIHRyZWF0bWVudCI6CiAgZXhpc3RzICJFbGlnaWJsZSBmb3IgVEIgcHJldmVudGl2ZSB0cmVhdG1lbnQgT2JzZXJ2YXRpb24iCmRlZmluZSAiRWxpZ2libGUgZm9yIFRCIHByZXZlbnRpdmUgdHJlYXRtZW50IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJFbGlnaWJsZSBmb3IgVEIgcHJldmVudGl2ZSB0cmVhdG1lbnQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBFbGlnaWJsZSBmb3IgVEIgcHJldmVudGl2ZSB0cmVhdG1lbnQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxMDIzIC0gVEIgcHJldmVudGlvbiBzZXJ2aWNlcyBhY2NlcHRlZApAYWN0aXZpdHk6IEhJVi5EMjEgRGV0ZXJtaW5lIHJlZ2ltZW4gYW5kIHRyZWF0bWVudCBvcHRpb25zCkBkZXNjcmlwdGlvbjogSW5kaWNhdGVzIGlmIHRoZSBjbGllbnQgYWNjZXB0cyB0byBiZSBldmFsdWF0ZWQgZm9yIFRCIGluZmVjdGlvbiBhbmQgdG8gdGFrZSB0aGUgdHJlYXRtZW50IGluIGNhc2UgaGUvc2hlIGlzIGVsaWdpYmxlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUQiBwcmV2ZW50aW9uIHNlcnZpY2VzIGFjY2VwdGVkIjoKICBleGlzdHMgIlRCIHByZXZlbnRpb24gc2VydmljZXMgYWNjZXB0ZWQgT2JzZXJ2YXRpb24iCmRlZmluZSAiVEIgcHJldmVudGlvbiBzZXJ2aWNlcyBhY2NlcHRlZCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iVEIgcHJldmVudGlvbiBzZXJ2aWNlcyBhY2NlcHRlZCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIFRCIHByZXZlbnRpb24gc2VydmljZXMgYWNjZXB0ZWQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxMDI2IC0gQyByZWFjdGl2ZSBwcm90ZWluIHRlc3QgcmVzdWx0CkBhY3Rpdml0eTogSElWLkQ0IFNjcmVlbiBmb3IgVEIKQGRlc2NyaXB0aW9uOiBUZXN0IHJlc3VsdCBvZiB0aGUgY2xpZW50J3MgQyByZWFjdGl2ZSBwcm90ZWluIHRlc3QgcmVzdWx0IGluIG1nL0wKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkMgcmVhY3RpdmUgcHJvdGVpbiB0ZXN0IHJlc3VsdCI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQyByZWFjdGl2ZSBwcm90ZWluIHRlc3QgcmVzdWx0Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJDIHJlYWN0aXZlIHByb3RlaW4gdGVzdCByZXN1bHQgVmFsdWUiOgogICJDIHJlYWN0aXZlIHByb3RlaW4gdGVzdCByZXN1bHQiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgQyByZWFjdGl2ZSBwcm90ZWluIHRlc3QgcmVzdWx0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTAyOCAtIFRQVCByZWdpbWVuIHR5cGUKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IFR5cGUgb2YgVFBUIHJlZ2ltZW4gdGhlIGNsaWVudCBpcyBjdXJyZW50bHkgb24KKi8KZGVmaW5lICJUUFQgcmVnaW1lbiI6CiAgW01lZGljYXRpb25TdGF0ZW1lbnQ6IENvbmNlcHRzLiJUUFQgcmVnaW1lbiB0eXBlIENob2ljZXMiXSBNUwogICAgd2hlcmUgTVMuc3RhdHVzIGluIHsgJ2FjdGl2ZScsICdjb21wbGV0ZWQnIH0KCmRlZmluZSAiVFBUIHJlZ2ltZW4gdHlwZSI6CiAgIlRQVCByZWdpbWVuIiBNUwogIHJldHVybiBDb21tb24uRXh0cmFjdE1lZGljYXRpb25Db2RlKE1TLm1lZGljYXRpb24pCi8qIEVuZCBvZiBUUFQgcmVnaW1lbiB0eXBlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTAzNCAtIFRCIHByZXZlbnRpdmUgdHJlYXRtZW50IFRQVCBzdGF0dXMKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IEluZGljYXRlcyB0aGUgY3VycmVudCBzdGF0dXMgb2YgVEIgcHJldmVudGl2ZSB0cmVhdG1lbnQgKFRQVCkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlRCIHByZXZlbnRpdmUgdHJlYXRtZW50IFRQVCBzdGF0dXMiOgogIGV4aXN0cyAiVEIgcHJldmVudGl2ZSB0cmVhdG1lbnQgVFBUIHN0YXR1cyBPYnNlcnZhdGlvbiIKZGVmaW5lICJUQiBwcmV2ZW50aXZlIHRyZWF0bWVudCBUUFQgc3RhdHVzIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJUQiBwcmV2ZW50aXZlIHRyZWF0bWVudCBUUFQgc3RhdHVzIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFRCIHByZXZlbnRpdmUgdHJlYXRtZW50IFRQVCBzdGF0dXMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxMDM1IC0gTm90IHN0YXJ0ZWQKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IFRoZSBjbGllbnQgZGlkIG5vdCBzdGFydCB0aGUgVEIgcHJldmVudGl2ZSB0cmVhdG1lbnQgKFRQVCkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk5vdCBzdGFydGVkIjoKICBleGlzdHMgIk5vdCBzdGFydGVkIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTm90IHN0YXJ0ZWQgT2JzZXJ2YXRpb24iCmRlZmluZSAiTm90IHN0YXJ0ZWQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTm90IHN0YXJ0ZWQiXQpkZWZpbmUgIk5vdCBzdGFydGVkIE9ic2VydmF0aW9uIjoKICAiVEIgcHJldmVudGl2ZSB0cmVhdG1lbnQgVFBUIHN0YXR1cyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTm90IHN0YXJ0ZWQiCi8qIEVuZCBvZiBOb3Qgc3RhcnRlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRC5ERTEwMzYgLSBPbiBUUFQKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IFRoZSBjbGllbnQgc3RhcnRlZCB0aGUgVEIgcHJldmVudGl2ZSB0cmVhdG1lbnQgKFRQVCkgYW5kIGlzIGN1cnJlbnRseSB0YWtpbmcgdGhlIG1lZGljYXRpb24sIHdpdGhvdXQgdHJlYXRtZW50IGludGVycnVwdGlvbnMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk9uIFRQVCI6CiAgZXhpc3RzICJPbiBUUFQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJPbiBUUFQgT2JzZXJ2YXRpb24iCmRlZmluZSAiT24gVFBUIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk9uIFRQVCJdCmRlZmluZSAiT24gVFBUIE9ic2VydmF0aW9uIjoKICAiVEIgcHJldmVudGl2ZSB0cmVhdG1lbnQgVFBUIHN0YXR1cyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iT24gVFBUIgovKiBFbmQgb2YgT24gVFBUICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ELkRFMTAzNyAtIE9uIFRQVCB3aXRoIGludGVycnVwdGlvbnMKQGFjdGl2aXR5OiBISVYuRDQgU2NyZWVuIGZvciBUQgpAZGVzY3JpcHRpb246IFRoZSBjbGllbnQgc3RhcnRlZCB0aGUgVEIgcHJldmVudGl2ZSB0cmVhdG1lbnQgKFRQVCkgYW5kIGlzIGN1cnJlbnRseSB0YWtpbmcgdGhlIG1lZGljYXRpb24sIHdpdGggdHJlYXRtZW50IGludGVycnVwdGlvbnMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk9uIFRQVCB3aXRoIGludGVycnVwdGlvbnMiOgogIGV4aXN0cyAiT24gVFBUIHdpdGggaW50ZXJydXB0aW9ucyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk9uIFRQVCB3aXRoIGludGVycnVwdGlvbnMgT2JzZXJ2YXRpb24iCmRlZmluZSAiT24gVFBUIHdpdGggaW50ZXJydXB0aW9ucyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPbiBUUFQgd2l0aCBpbnRlcnJ1cHRpb25zIl0KZGVmaW5lICJPbiBUUFQgd2l0aCBpbnRlcnJ1cHRpb25zIE9ic2VydmF0aW9uIjoKICAiVEIgcHJldmVudGl2ZSB0cmVhdG1lbnQgVFBUIHN0YXR1cyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iT24gVFBUIHdpdGggaW50ZXJydXB0aW9ucyIKLyogRW5kIG9mIE9uIFRQVCB3aXRoIGludGVycnVwdGlvbnMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxMDM4IC0gT24gaG9sZApAYWN0aXZpdHk6IEhJVi5ENCBTY3JlZW4gZm9yIFRCCkBkZXNjcmlwdGlvbjogVGhlIGhlYWx0aCBjYXJlIHdvcmtlciBoYXMgdGVtcG9yYXJpbHkgc3RvcHBlZCB0aGUgVEIgcHJldmVudGl2ZSB0cmVhdG1lbnQgKFRQVCksIGJ1dCBUUFQgaXMgZXhwZWN0ZWQgdG8gY29udGludWUgYWdhaW4gbGF0ZXIuIE1heSBhbHNvIGJlIGNhbGxlZCAnc3VzcGVuZGVkJy4KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk9uIGhvbGQiOgogIGV4aXN0cyAiT24gaG9sZCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk9uIGhvbGQgT2JzZXJ2YXRpb24iCmRlZmluZSAiT24gaG9sZCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPbiBob2xkIl0KZGVmaW5lICJPbiBob2xkIE9ic2VydmF0aW9uIjoKICAiVEIgcHJldmVudGl2ZSB0cmVhdG1lbnQgVFBUIHN0YXR1cyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iT24gaG9sZCIKLyogRW5kIG9mIE9uIGhvbGQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkQuREUxMDM5IC0gQ29tcGxldGVkCkBhY3Rpdml0eTogSElWLkQ0IFNjcmVlbiBmb3IgVEIKQGRlc2NyaXB0aW9uOiBUQiBwcmV2ZW50aXZlIHRyZWF0bWVudCAoVFBUKSB3YXMgY29tcGxldGVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJDb21wbGV0ZWQiOgogIGV4aXN0cyAiQ29tcGxldGVkIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQ29tcGxldGVkIE9ic2VydmF0aW9uIgpkZWZpbmUgIkNvbXBsZXRlZCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDb21wbGV0ZWQiXQpkZWZpbmUgIkNvbXBsZXRlZCBPYnNlcnZhdGlvbiI6CiAgIlRCIHByZXZlbnRpdmUgdHJlYXRtZW50IFRQVCBzdGF0dXMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkNvbXBsZXRlZCIKLyogRW5kIG9mIENvbXBsZXRlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTQxIC0gVGltaW5nIG9mIEFSVCBpbml0aWF0aW9uCkBhY3Rpdml0eTogSElWLkUxIENhcHR1cmUgb3IgdXBkYXRlIG1vdGhlcidzIGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBXaGVuIHRoZSBwcmVnbmFudCB3b21hbiBvciBtb3RoZXIgaW5pdGlhdGVkIEFSVCwgZm9yIHdvbWVuIGxpdmluZyB3aXRoIEhJVi4KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlRpbWluZyBvZiBBUlQgaW5pdGlhdGlvbiI6CiAgZXhpc3RzICJUaW1pbmcgb2YgQVJUIGluaXRpYXRpb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiVGltaW5nIG9mIEFSVCBpbml0aWF0aW9uIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJUaW1pbmcgb2YgQVJUIGluaXRpYXRpb24iXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgVGltaW5nIG9mIEFSVCBpbml0aWF0aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFNDIgLSBBbHJlYWR5IG9uIEFSVCBhdCBmaXJzdCBhbnRlbmF0YWwgY2FyZSB2aXNpdApAYWN0aXZpdHk6IEhJVi5FMSBDYXB0dXJlIG9yIHVwZGF0ZSBtb3RoZXIncyBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGhlIHByZWduYW50IHdvbWFuIHdhcyBhbHJlYWR5IG9uIGFudGlyZXRyb3ZpcmFsIHRoZXJhcHkgKEFSVCkgYXQgZmlyc3QgYW50ZW5hdGFsIGNhcmUgdmlzaXQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFscmVhZHkgb24gQVJUIGF0IGZpcnN0IGFudGVuYXRhbCBjYXJlIHZpc2l0IjoKICBleGlzdHMgIkFscmVhZHkgb24gQVJUIGF0IGZpcnN0IGFudGVuYXRhbCBjYXJlIHZpc2l0IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQWxyZWFkeSBvbiBBUlQgYXQgZmlyc3QgYW50ZW5hdGFsIGNhcmUgdmlzaXQgT2JzZXJ2YXRpb24iCmRlZmluZSAiQWxyZWFkeSBvbiBBUlQgYXQgZmlyc3QgYW50ZW5hdGFsIGNhcmUgdmlzaXQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQWxyZWFkeSBvbiBBUlQgYXQgZmlyc3QgYW50ZW5hdGFsIGNhcmUgdmlzaXQiXQpkZWZpbmUgIkFscmVhZHkgb24gQVJUIGF0IGZpcnN0IGFudGVuYXRhbCBjYXJlIHZpc2l0IE9ic2VydmF0aW9uIjoKICAiVGltaW5nIG9mIEFSVCBpbml0aWF0aW9uIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBbHJlYWR5IG9uIEFSVCBhdCBmaXJzdCBhbnRlbmF0YWwgY2FyZSB2aXNpdCIKLyogRW5kIG9mIEFscmVhZHkgb24gQVJUIGF0IGZpcnN0IGFudGVuYXRhbCBjYXJlIHZpc2l0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFNDMgLSBOZXdseSBvbiBBUlQgZHVyaW5nIHByZWduYW5jeQpAYWN0aXZpdHk6IEhJVi5FMSBDYXB0dXJlIG9yIHVwZGF0ZSBtb3RoZXIncyBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGhlIHByZWduYW50IHdvbWFuIHN0YXJ0ZWQgQVJUIGR1cmluZyBoZXIgcHJlZ25hbmN5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOZXdseSBvbiBBUlQgZHVyaW5nIHByZWduYW5jeSI6CiAgZXhpc3RzICJOZXdseSBvbiBBUlQgZHVyaW5nIHByZWduYW5jeSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk5ld2x5IG9uIEFSVCBkdXJpbmcgcHJlZ25hbmN5IE9ic2VydmF0aW9uIgpkZWZpbmUgIk5ld2x5IG9uIEFSVCBkdXJpbmcgcHJlZ25hbmN5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5ld2x5IG9uIEFSVCBkdXJpbmcgcHJlZ25hbmN5Il0KZGVmaW5lICJOZXdseSBvbiBBUlQgZHVyaW5nIHByZWduYW5jeSBPYnNlcnZhdGlvbiI6CiAgIlRpbWluZyBvZiBBUlQgaW5pdGlhdGlvbiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTmV3bHkgb24gQVJUIGR1cmluZyBwcmVnbmFuY3kiCi8qIEVuZCBvZiBOZXdseSBvbiBBUlQgZHVyaW5nIHByZWduYW5jeSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTQ0IC0gTmV3bHkgb24gQVJUIGR1cmluZyBsYWJvdXIgYW5kIGRlbGl2ZXJ5CkBhY3Rpdml0eTogSElWLkUxIENhcHR1cmUgb3IgdXBkYXRlIG1vdGhlcidzIGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGUgd29tYW4gc3RhcnRlZCBBUlQgZHVyaW5nIGxhYm91ciBhbmQgZGVsaXZlcnkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk5ld2x5IG9uIEFSVCBkdXJpbmcgbGFib3VyIGFuZCBkZWxpdmVyeSI6CiAgZXhpc3RzICJOZXdseSBvbiBBUlQgZHVyaW5nIGxhYm91ciBhbmQgZGVsaXZlcnkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJOZXdseSBvbiBBUlQgZHVyaW5nIGxhYm91ciBhbmQgZGVsaXZlcnkgT2JzZXJ2YXRpb24iCmRlZmluZSAiTmV3bHkgb24gQVJUIGR1cmluZyBsYWJvdXIgYW5kIGRlbGl2ZXJ5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5ld2x5IG9uIEFSVCBkdXJpbmcgbGFib3VyIGFuZCBkZWxpdmVyeSJdCmRlZmluZSAiTmV3bHkgb24gQVJUIGR1cmluZyBsYWJvdXIgYW5kIGRlbGl2ZXJ5IE9ic2VydmF0aW9uIjoKICAiVGltaW5nIG9mIEFSVCBpbml0aWF0aW9uIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJOZXdseSBvbiBBUlQgZHVyaW5nIGxhYm91ciBhbmQgZGVsaXZlcnkiCi8qIEVuZCBvZiBOZXdseSBvbiBBUlQgZHVyaW5nIGxhYm91ciBhbmQgZGVsaXZlcnkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREU0NiAtIERlbGl2ZXJ5IGRhdGUKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IERhdGUgb24gd2hpY2ggdGhlIHdvbWFuIGRlbGl2ZXJlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGVsaXZlcnkgZGF0ZSI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iRGVsaXZlcnkgZGF0ZSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRGVsaXZlcnkgZGF0ZSBWYWx1ZSI6CiAgIkRlbGl2ZXJ5IGRhdGUiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgRGVsaXZlcnkgZGF0ZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTY3IC0gUGxhY2Ugb2YgZGVsaXZlcnkKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRoZSB0eXBlIG9mIHBsYWNlIHdoZXJlIHRoZSB3b21hbiBkZWxpdmVyZWQKKi8KCmRlZmluZSAiUGxhY2Ugb2YgZGVsaXZlcnkiOgogIFtQcm9jZWR1cmU6IENvbmNlcHRzQ3VzdG9tLiJkZWxpdmVyeSJdCgovKiBFbmQgb2YgUGxhY2Ugb2YgZGVsaXZlcnkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREU2OCAtIEhlYWx0aCBmYWNpbGl0eQpAYWN0aXZpdHk6IEhJVi5FMSBDYXB0dXJlIG9yIHVwZGF0ZSBtb3RoZXIncyBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGhlIHdvbWFuIGRlbGl2ZXJlZCBhdCBhIGhlYWx0aCBmYWNpbGl0eQoqLwoKZGVmaW5lICJIZWFsdGggZmFjaWxpdHkiOgogICJQbGFjZSBvZiBkZWxpdmVyeSIgUAogIHdpdGggW0xvY2F0aW9uXSBMCiAgICAgIHN1Y2ggdGhhdCBQLmxvY2F0aW9uLnJlZmVyZW5jZXMoTCkgCiAgICAgIGFuZCBMLnBoeXNpY2FsVHlwZSB+IENvbmNlcHRzLiJIZWFsdGggZmFjaWxpdHkiCiAgICAgIAovKiBFbmQgb2YgSGVhbHRoIGZhY2lsaXR5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFNjkgLSBIb21lCkBhY3Rpdml0eTogSElWLkUxIENhcHR1cmUgb3IgdXBkYXRlIG1vdGhlcidzIGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGUgd29tYW4gZGVsaXZlcmVkIGF0IGhvbWUKKi8KCmRlZmluZSAiSG9tZSI6CiAgIlBsYWNlIG9mIGRlbGl2ZXJ5IiBQCiAgd2l0aCBbTG9jYXRpb25dIEwKICAgICAgc3VjaCB0aGF0IFAubG9jYXRpb24ucmVmZXJlbmNlcyhMKSAKICAgICAgYW5kIEwucGh5c2ljYWxUeXBlIH4gQ29uY2VwdHMuIkhvbWUiCiAgICAgIAovKiBFbmQgb2YgSG9tZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTcwIC0gT3RoZXIKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRoZSB3b21hbiBkZWxpdmVyZWQgYXQgYW5vdGhlciBsb2NhdGlvbiB0aGF0IGlzIG5vdCBhdCBob21lIG9yIGF0IGEgaGVhbHRoIGZhY2lsaXR5CiovCgpkZWZpbmUgIk90aGVyIEUuREU3MCI6CiAgIlBsYWNlIG9mIGRlbGl2ZXJ5IiBQCiAgd2l0aCBbTG9jYXRpb25dIEwKICAgICAgc3VjaCB0aGF0IFAubG9jYXRpb24ucmVmZXJlbmNlcyhMKSAKICAgICAgYW5kIEwucGh5c2ljYWxUeXBlIH4gQ29uY2VwdHMuIk90aGVyIC0gSElWLkUuREU3MCIKLyogRW5kIG9mIE90aGVyIEUuREU3MCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTg1IC0gQU5DIGNvbnRhY3QgZGF0ZQpAYWN0aXZpdHk6IEhJVi5FMSBDYXB0dXJlIG9yIHVwZGF0ZSBtb3RoZXIncyBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGhlIGRhdGUgYW5kIHRpbWUgb2YgdGhlIGNsaWVudCdzIEFOQyBjb250YWN0IChpbiB0aGUgQU5DIERBSyB0aGlzIGlzIGNhbGxlZCAnQ29udGFjdCBkYXRlJykKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFOQyBjb250YWN0IGRhdGUgRS5ERTg1IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJBTkMgY29udGFjdCBkYXRlIC0gSElWLkUuREU4NSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiQU5DIGNvbnRhY3QgZGF0ZSBFLkRFODUgVmFsdWUiOgogICJBTkMgY29udGFjdCBkYXRlIEUuREU4NSIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBBTkMgY29udGFjdCBkYXRlIEUuREU4NSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTg3IC0gSW5mYW50IGRhdGUgb2YgYmlydGgKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRoZSBpbmZhbnQncyBkYXRlIG9mIGJpcnRoIChET0IpIGlmIGtub3duCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJJbmZhbnQgZGF0ZSBvZiBiaXJ0aCI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSW5mYW50IGRhdGUgb2YgYmlydGgiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIkluZmFudCBkYXRlIG9mIGJpcnRoIFZhbHVlIjoKICAiSW5mYW50IGRhdGUgb2YgYmlydGgiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgSW5mYW50IGRhdGUgb2YgYmlydGggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREU5MCAtIEFnZSBvZiBpbmZhbnQKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IEluZmFudCBhZ2UgY2FsY3VsYXRlZCB1c2luZyBkYXRlIG9mIGJpcnRoCiovCmRlZmluZSAiQWdlIG9mIGluZmFudCBpbiBkYXlzIjoKICAiSW5mYW50IGRhdGUgb2YgYmlydGgiIE8KICAgIHJldHVybiBDYWxjdWxhdGVBZ2VJbkRheXMoTy52YWx1ZSkKCmRlZmluZSAiQWdlIG9mIGluZmFudCBpbiBob3VycyI6CiAgIkluZmFudCBkYXRlIG9mIGJpcnRoIiBPCiAgICByZXR1cm4gQ2FsY3VsYXRlQWdlSW5Ib3VycyhPLnZhbHVlKQoKZGVmaW5lICJBZ2Ugb2YgaW5mYW50IGluIHdlZWtzIjoKICAiSW5mYW50IGRhdGUgb2YgYmlydGgiIE8KICAgIHJldHVybiBDYWxjdWxhdGVBZ2VJbldlZWtzKE8udmFsdWUpCgpkZWZpbmUgIkFnZSBvZiBpbmZhbnQgaW4geWVhcnMiOgogICJJbmZhbnQgZGF0ZSBvZiBiaXJ0aCIgTwogICAgcmV0dXJuIENhbGN1bGF0ZUFnZUluWWVhcnMoTy52YWx1ZSkKICAgIAovKiBFbmQgb2YgQWdlIG9mIGluZmFudCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTExMiAtIEhJVi1leHBvc2VkIGluZmFudCBvciBjaGlsZApAYWN0aXZpdHk6IEhJVi5GNiBDaGVjayB3aGV0aGVyIGluZmFudC9jaGlsZCBoYWQgSElWIGV4cG9zdXJlCkBkZXNjcmlwdGlvbjogV2hldGhlciB0aGUgaW5mYW50IG9yIGNoaWxkIHdhcyBkZXRlcm1pbmVkIHRvIGhhdmUgaGFkIEhJViBleHBvc3VyZQoqLwoKZGVmaW5lICJISVYtZXhwb3NlZCBpbmZhbnQgb3IgY2hpbGQgRS5ERTExMiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSElWLWV4cG9zZWQgaW5mYW50IG9yIGNoaWxkIC0gSElWLkUuREUxMTIiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQoKLyogRW5kIG9mIEhJVi1leHBvc2VkIGluZmFudCBvciBjaGlsZCBFLkRFMTEyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTEzIC0gS2V5IHBvcHVsYXRpb24gbWVtYmVyCkBhY3Rpdml0eTogSElWLkUxIENhcHR1cmUgb3IgdXBkYXRlIG1vdGhlcidzIGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBNb3RoZXIgaXMgYSBtZW1iZXIgb2YgYSBrZXkgcG9wdWxhdGlvbiB3aGljaCBoYXMgYW4gaW5jcmVhc2VkIHJpc2sgb2YgSElWCiovCmRlZmluZSAiUmVsYXRlZFBlcnNvbk1vdGhlciI6CiAgW1JlbGF0ZWRQZXJzb25dIFIKICAgIHdoZXJlIENvbmNlcHRzQ3VzdG9tLiJNb3RoZXIiIGluIFIucmVsYXRpb25zaGlwLmNvZGluZwoKZGVmaW5lICJNb3RoZXIiOiBzaW5nbGV0b24gZnJvbSAiUmVsYXRlZFBlcnNvbk1vdGhlciIKCmRlZmluZSAiSXMgS2V5IHBvcHVsYXRpb24gbWVtYmVyIEUuREUxMTMiOgogIGV4aXN0cyAiS2V5IHBvcHVsYXRpb24gbWVtYmVyIEUuREUxMTMgT2JzZXJ2YXRpb24iCgpkZWZpbmUgIktleSBwb3B1bGF0aW9uIG1lbWJlciBFLkRFMTEzIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJLZXkgcG9wdWxhdGlvbiBtZW1iZXIgLSBISVYuRS5ERTExMyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIEtleSBwb3B1bGF0aW9uIG1lbWJlciBFLkRFMTEzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTE0IC0gS2V5IHBvcHVsYXRpb24gbWVtYmVyIHR5cGUKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRoZSB0eXBlIG9mIGtleSBwb3B1bGF0aW9uIHRoYXQgdGhlIGluZmFudCdzIG1vdGhlciBpcyBpbmNsdWRlZCBpbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiS2V5IHBvcHVsYXRpb24gbWVtYmVyIHR5cGUgRS5ERTExNCI6CiAgZXhpc3RzICJLZXkgcG9wdWxhdGlvbiBtZW1iZXIgdHlwZSBFLkRFMTE0IE9ic2VydmF0aW9uIgpkZWZpbmUgIktleSBwb3B1bGF0aW9uIG1lbWJlciB0eXBlIEUuREUxMTQgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIktleSBwb3B1bGF0aW9uIG1lbWJlciB0eXBlIC0gSElWLkUuREUxMTQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgS2V5IHBvcHVsYXRpb24gbWVtYmVyIHR5cGUgRS5ERTExNCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTExNSAtIFNleCB3b3JrZXIKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IEluZmFudCdzIG1vdGhlciBpcyBhIHNleCB3b3JrZXIKKi8KCmRlZmluZSAiU2V4IHdvcmtlciBFLkRFMTE1IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJLZXkgcG9wdWxhdGlvbiBtZW1iZXIgLSBISVYuRS5ERTExMyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICBhbmQgZXhpc3RzKE8uY2F0ZWdvcnkgT0Mgd2hlcmUgT0MgfiBDb25jZXB0c0N1c3RvbS4ic29jaWFsLWhpc3RvcnkiKQogICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iU2V4IHdvcmtlciAtIEhJVi5FLkRFMTE1IgovKiBFbmQgb2YgU2V4IHdvcmtlciBFLkRFMTE1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTE2IC0gUGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IEluZmFudCdzIG1vdGhlciBpcyBhIHBlcnNvbiB3aG8gaW5qZWN0cyBkcnVncwoqLwoKZGVmaW5lICJQZW9wbGUgd2hvIGluamVjdCBkcnVncyBFLkRFMTE2IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJLZXkgcG9wdWxhdGlvbiBtZW1iZXIgLSBISVYuRS5ERTExMyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICBhbmQgZXhpc3RzKE8uY2F0ZWdvcnkgT0Mgd2hlcmUgT0MgfiBDb25jZXB0c0N1c3RvbS4ic29jaWFsLWhpc3RvcnkiKQogICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MgLSBISVYuRS5ERTExNiIKLyogRW5kIG9mIFBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIEUuREUxMTYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxMTcgLSBUcmFucyBhbmQgZ2VuZGVyLWRpdmVyc2UgcGVvcGxlCkBhY3Rpdml0eTogSElWLkUxIENhcHR1cmUgb3IgdXBkYXRlIG1vdGhlcidzIGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBJbmZhbnQncyBtb3RoZXIgaWRlbnRpZmllcyBhcyB0cmFucyBhbmQgZ2VuZGVyLWRpdmVyc2UKKi8KCmRlZmluZSAiVHJhbnMgYW5kIGdlbmRlci1kaXZlcnNlIHBlb3BsZSBFLkRFMTE3IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJLZXkgcG9wdWxhdGlvbiBtZW1iZXIgLSBISVYuRS5ERTExMyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICBhbmQgZXhpc3RzKE8uY2F0ZWdvcnkgT0Mgd2hlcmUgT0MgfiBDb25jZXB0c0N1c3RvbS4ic29jaWFsLWhpc3RvcnkiKQogICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVHJhbnMgYW5kIGdlbmRlci1kaXZlcnNlIHBlb3BsZSAtIEhJVi5FLkRFMTE3IgovKiBFbmQgb2YgVHJhbnMgYW5kIGdlbmRlci1kaXZlcnNlIHBlb3BsZSBFLkRFMTE3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTE4IC0gUGVvcGxlIGxpdmluZyBpbiBwcmlzb25zIGFuZCBvdGhlciBjbG9zZWQgc2V0dGluZwpAYWN0aXZpdHk6IEhJVi5FMSBDYXB0dXJlIG9yIHVwZGF0ZSBtb3RoZXIncyBoaXN0b3J5CkBkZXNjcmlwdGlvbjogSW5mYW50J3MgbW90aGVyIGlzIGluIGEgcHJpc29uIG9yIGNsb3NlZCBzZXR0aW5nCiovCmRlZmluZSAiUGVvcGxlIGxpdmluZyBpbiBwcmlzb25zIGFuZCBvdGhlciBjbG9zZWQgc2V0dGluZyI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iS2V5IHBvcHVsYXRpb24gbWVtYmVyIC0gSElWLkUuREUxMTMiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgYW5kIGV4aXN0cyhPLmNhdGVnb3J5IE9DIHdoZXJlIE9DIH4gQ29uY2VwdHNDdXN0b20uInNvY2lhbC1oaXN0b3J5IikKICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlBlb3BsZSBsaXZpbmcgaW4gcHJpc29ucyBhbmQgb3RoZXIgY2xvc2VkIHNldHRpbmciCi8qIEVuZCBvZiBQZW9wbGUgbGl2aW5nIGluIHByaXNvbnMgYW5kIG90aGVyIGNsb3NlZCBzZXR0aW5nICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTU1IC0gU2lnbnMgb2Ygc3Vic3RhbnRpYWwgcmlzayBvZiBISVYgaW5mZWN0aW9uCkBhY3Rpdml0eTogSElWLkUxIENhcHR1cmUgb3IgdXBkYXRlIG1vdGhlcidzIGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBTaWducyB0aGUgY2xpZW50IGlzIGF0IGEgc3Vic3RhbnRpYWwgcmlzayBvZiBISVYgaW5mZWN0aW9uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTaWducyBvZiBzdWJzdGFudGlhbCByaXNrIG9mIEhJViBpbmZlY3Rpb24gRS5ERTE1NSI6CiAgZXhpc3RzICJTaWducyBvZiBzdWJzdGFudGlhbCByaXNrIG9mIEhJViBpbmZlY3Rpb24gRS5ERTE1NSBPYnNlcnZhdGlvbiIKZGVmaW5lICJTaWducyBvZiBzdWJzdGFudGlhbCByaXNrIG9mIEhJViBpbmZlY3Rpb24gRS5ERTE1NSBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iU2lnbnMgb2Ygc3Vic3RhbnRpYWwgcmlzayBvZiBISVYgaW5mZWN0aW9uIC0gSElWLkUuREUxNTUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgU2lnbnMgb2Ygc3Vic3RhbnRpYWwgcmlzayBvZiBISVYgaW5mZWN0aW9uIEUuREUxNTUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxNTYgLSBObyBjb25kb20gdXNlIGR1cmluZyBzZXggd2l0aCBtb3JlIHRoYW4gb25lIHBhcnRuZXIgaW4gdGhlIHBhc3QgNiBtb250aHMKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IFJlY2VudCB2YWdpbmFsIG9yIGFuYWwgc2V4dWFsIGludGVyY291cnNlIHdpdGhvdXQgYSBjb25kb20gd2l0aCBtb3JlIHRoYW4gb25lIHBhcnRuZXIKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk5vIGNvbmRvbSB1c2UgZHVyaW5nIHNleCB3aXRoIG1vcmUgdGhhbiBvbmUgcGFydG5lciBpbiB0aGUgcGFzdCA2IG1vbnRocyBFLkRFMTU2IjoKICBleGlzdHMgIk5vIGNvbmRvbSB1c2UgZHVyaW5nIHNleCB3aXRoIG1vcmUgdGhhbiBvbmUgcGFydG5lciBpbiB0aGUgcGFzdCA2IG1vbnRocyBFLkRFMTU2IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTm8gY29uZG9tIHVzZSBkdXJpbmcgc2V4IHdpdGggbW9yZSB0aGFuIG9uZSBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIEUuREUxNTYgT2JzZXJ2YXRpb24iCmRlZmluZSAiTm8gY29uZG9tIHVzZSBkdXJpbmcgc2V4IHdpdGggbW9yZSB0aGFuIG9uZSBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIEUuREUxNTYgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTm8gY29uZG9tIHVzZSBkdXJpbmcgc2V4IHdpdGggbW9yZSB0aGFuIG9uZSBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIC0gSElWLkUuREUxNTYiXQpkZWZpbmUgIk5vIGNvbmRvbSB1c2UgZHVyaW5nIHNleCB3aXRoIG1vcmUgdGhhbiBvbmUgcGFydG5lciBpbiB0aGUgcGFzdCA2IG1vbnRocyBFLkRFMTU2IE9ic2VydmF0aW9uIjoKICAiU2lnbnMgb2Ygc3Vic3RhbnRpYWwgcmlzayBvZiBISVYgaW5mZWN0aW9uIEUuREUxNTUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5vIGNvbmRvbSB1c2UgZHVyaW5nIHNleCB3aXRoIG1vcmUgdGhhbiBvbmUgcGFydG5lciBpbiB0aGUgcGFzdCA2IG1vbnRocyAtIEhJVi5FLkRFMTU2IgovKiBFbmQgb2YgTm8gY29uZG9tIHVzZSBkdXJpbmcgc2V4IHdpdGggbW9yZSB0aGFuIG9uZSBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIEUuREUxNTYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxNTcgLSBTVEkgaW4gdGhlIHBhc3QgNiBtb250aHMKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IEEgcmVjZW50IGhpc3RvcnkgKGluIHRoZSBsYXN0IDYgbW9udGhzKSBvZiBhIHNleHVhbGx5IHRyYW5zbWl0dGVkIGluZmVjdGlvbiAoU1RJKSBieSBsYWJvcmF0b3J5IHRlc3Rpbmcgb3Igc2VsZi1yZXBvcnQgb2Ygc3luZHJvbWljIFNUSSB0cmVhdG1lbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlNUSSBpbiB0aGUgcGFzdCA2IG1vbnRocyBFLkRFMTU3IjoKICBleGlzdHMgIlNUSSBpbiB0aGUgcGFzdCA2IG1vbnRocyBFLkRFMTU3IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiU1RJIGluIHRoZSBwYXN0IDYgbW9udGhzIEUuREUxNTcgT2JzZXJ2YXRpb24iCmRlZmluZSAiU1RJIGluIHRoZSBwYXN0IDYgbW9udGhzIEUuREUxNTcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iU1RJIGluIHRoZSBwYXN0IDYgbW9udGhzIC0gSElWLkUuREUxNTciXQpkZWZpbmUgIlNUSSBpbiB0aGUgcGFzdCA2IG1vbnRocyBFLkRFMTU3IE9ic2VydmF0aW9uIjoKICAiU2lnbnMgb2Ygc3Vic3RhbnRpYWwgcmlzayBvZiBISVYgaW5mZWN0aW9uIEUuREUxNTUgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlNUSSBpbiB0aGUgcGFzdCA2IG1vbnRocyAtIEhJVi5FLkRFMTU3IgovKiBFbmQgb2YgU1RJIGluIHRoZSBwYXN0IDYgbW9udGhzIEUuREUxNTcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxNTggLSBBIHNleHVhbCBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIGhhZCBvbmUgb3IgbW9yZSBISVYgcmlzayBmYWN0b3JzCkBhY3Rpdml0eTogSElWLkUxIENhcHR1cmUgb3IgdXBkYXRlIG1vdGhlcidzIGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBBIHJlY2VudCBzZXggcGFydG5lciBvZiB0aGUgY2xpZW50IGhhZCBISVYgcmlzayBmYWN0b3JzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBIHNleHVhbCBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIGhhZCBvbmUgb3IgbW9yZSBISVYgcmlzayBmYWN0b3JzIEUuREUxNTgiOgogIGV4aXN0cyAiQSBzZXh1YWwgcGFydG5lciBpbiB0aGUgcGFzdCA2IG1vbnRocyBoYWQgb25lIG9yIG1vcmUgSElWIHJpc2sgZmFjdG9ycyBFLkRFMTU4IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQSBzZXh1YWwgcGFydG5lciBpbiB0aGUgcGFzdCA2IG1vbnRocyBoYWQgb25lIG9yIG1vcmUgSElWIHJpc2sgZmFjdG9ycyBFLkRFMTU4IE9ic2VydmF0aW9uIgpkZWZpbmUgIkEgc2V4dWFsIHBhcnRuZXIgaW4gdGhlIHBhc3QgNiBtb250aHMgaGFkIG9uZSBvciBtb3JlIEhJViByaXNrIGZhY3RvcnMgRS5ERTE1OCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBIHNleHVhbCBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIGhhZCBvbmUgb3IgbW9yZSBISVYgcmlzayBmYWN0b3JzIC0gSElWLkUuREUxNTgiXQpkZWZpbmUgIkEgc2V4dWFsIHBhcnRuZXIgaW4gdGhlIHBhc3QgNiBtb250aHMgaGFkIG9uZSBvciBtb3JlIEhJViByaXNrIGZhY3RvcnMgRS5ERTE1OCBPYnNlcnZhdGlvbiI6CiAgIlNpZ25zIG9mIHN1YnN0YW50aWFsIHJpc2sgb2YgSElWIGluZmVjdGlvbiBFLkRFMTU1IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBIHNleHVhbCBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIGhhZCBvbmUgb3IgbW9yZSBISVYgcmlzayBmYWN0b3JzIC0gSElWLkUuREUxNTgiCi8qIEVuZCBvZiBBIHNleHVhbCBwYXJ0bmVyIGluIHRoZSBwYXN0IDYgbW9udGhzIGhhZCBvbmUgb3IgbW9yZSBISVYgcmlzayBmYWN0b3JzIEUuREUxNTggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxNTkgLSBQckVQIHJlcXVlc3RlZCBieSBjbGllbnQKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCBpcyByZXF1ZXN0aW5nIFByRVAsIHJlZmxlY3RpbmcgYSBkZWNpc2lvbi1tYWtpbmcgcHJvY2VzcyBoYXMgYWxyZWFkeSB0YWtlbiBwbGFjZSBhbmQgc3VnZ2VzdGluZyBvZiBzdWJzdGFudGlhbCByaXNrIG9mIEhJVgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUHJFUCByZXF1ZXN0ZWQgYnkgY2xpZW50IEUuREUxNTkiOgogIGV4aXN0cyAiUHJFUCByZXF1ZXN0ZWQgYnkgY2xpZW50IEUuREUxNTkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQckVQIHJlcXVlc3RlZCBieSBjbGllbnQgRS5ERTE1OSBPYnNlcnZhdGlvbiIKZGVmaW5lICJQckVQIHJlcXVlc3RlZCBieSBjbGllbnQgRS5ERTE1OSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQckVQIHJlcXVlc3RlZCBieSBjbGllbnQgLSBISVYuRS5ERTE1OSJdCmRlZmluZSAiUHJFUCByZXF1ZXN0ZWQgYnkgY2xpZW50IEUuREUxNTkgT2JzZXJ2YXRpb24iOgogICJTaWducyBvZiBzdWJzdGFudGlhbCByaXNrIG9mIEhJViBpbmZlY3Rpb24gRS5ERTE1NSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUHJFUCByZXF1ZXN0ZWQgYnkgY2xpZW50IC0gSElWLkUuREUxNTkiCi8qIEVuZCBvZiBQckVQIHJlcXVlc3RlZCBieSBjbGllbnQgRS5ERTE1OSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTE2MCAtIFNlcm9kaXNjb3JkYW50IHBhcnRuZXIKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IE1vdGhlcidzIEhJViBzdGF0dXMgaXMgZGlmZmVyZW50IGZyb20gYSBjdXJyZW50IHBhcnRuZXIncyBISVYgc3RhdHVzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZXJvZGlzY29yZGFudCBwYXJ0bmVyIEUuREUxNjAiOgogIGV4aXN0cyAiU2Vyb2Rpc2NvcmRhbnQgcGFydG5lciBFLkRFMTYwIE9ic2VydmF0aW9uIgpkZWZpbmUgIlNlcm9kaXNjb3JkYW50IHBhcnRuZXIgRS5ERTE2MCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iU2Vyb2Rpc2NvcmRhbnQgcGFydG5lciAtIEhJVi5FLkRFMTYwIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgaXMgdHJ1ZQovKiBFbmQgb2YgU2Vyb2Rpc2NvcmRhbnQgcGFydG5lciBFLkRFMTYwICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTY4IC0gSElWIHRlc3QgdHlwZQpAYWN0aXZpdHk6IEhJVi5FNCBUZXN0IG1vdGhlciBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVHlwZSBvZiBISVYgdGVzdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSElWIHRlc3QgdHlwZSBFLkRFMTY4IjoKICBleGlzdHMgIkhJViB0ZXN0IHR5cGUgRS5ERTE2OCBPYnNlcnZhdGlvbiIKZGVmaW5lICJISVYgdGVzdCB0eXBlIEUuREUxNjggT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhJViB0ZXN0IHR5cGUgLSBISVYuRS5ERTE2OCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBISVYgdGVzdCB0eXBlIEUuREUxNjggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxNjkgLSBSYXBpZCBkaWFnbm9zdGljIHRlc3QgZm9yIEhJVgpAYWN0aXZpdHk6IEhJVi5FNCBUZXN0IG1vdGhlciBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogQW50aWJvZHkgdGVzdCBmb3IgSElWIHBlcmZvcm1lZCB3aXRoIGEgcmFwaWQgZGlhZ25vc3RpYyAoUkRUKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmFwaWQgZGlhZ25vc3RpYyB0ZXN0IGZvciBISVYgRS5ERTE2OSI6CiAgZXhpc3RzICJSYXBpZCBkaWFnbm9zdGljIHRlc3QgZm9yIEhJViBFLkRFMTY5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUmFwaWQgZGlhZ25vc3RpYyB0ZXN0IGZvciBISVYgRS5ERTE2OSBPYnNlcnZhdGlvbiIKZGVmaW5lICJSYXBpZCBkaWFnbm9zdGljIHRlc3QgZm9yIEhJViBFLkRFMTY5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlJhcGlkIGRpYWdub3N0aWMgdGVzdCBmb3IgSElWIC0gSElWLkUuREUxNjkiXQpkZWZpbmUgIlJhcGlkIGRpYWdub3N0aWMgdGVzdCBmb3IgSElWIEUuREUxNjkgT2JzZXJ2YXRpb24iOgogICJISVYgdGVzdCB0eXBlIEUuREUxNjggT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlJhcGlkIGRpYWdub3N0aWMgdGVzdCBmb3IgSElWIC0gSElWLkUuREUxNjkiCi8qIEVuZCBvZiBSYXBpZCBkaWFnbm9zdGljIHRlc3QgZm9yIEhJViBFLkRFMTY5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTcwIC0gRW56eW1lIGltbXVub2Fzc2F5IGZvciBISVYKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IEFudGlib2R5IHRlc3QgZm9yIEhJViBwZXJmb3JtZWQgd2l0aCBhbiBlbnp5bWUgaW1tdW5vYXNzYXkgKEVJQSkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkVuenltZSBpbW11bm9hc3NheSBmb3IgSElWIEUuREUxNzAiOgogIGV4aXN0cyAiRW56eW1lIGltbXVub2Fzc2F5IGZvciBISVYgRS5ERTE3MCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkVuenltZSBpbW11bm9hc3NheSBmb3IgSElWIEUuREUxNzAgT2JzZXJ2YXRpb24iCmRlZmluZSAiRW56eW1lIGltbXVub2Fzc2F5IGZvciBISVYgRS5ERTE3MCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJFbnp5bWUgaW1tdW5vYXNzYXkgZm9yIEhJViAtIEhJVi5FLkRFMTcwIl0KZGVmaW5lICJFbnp5bWUgaW1tdW5vYXNzYXkgZm9yIEhJViBFLkRFMTcwIE9ic2VydmF0aW9uIjoKICAiSElWIHRlc3QgdHlwZSBFLkRFMTY4IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJFbnp5bWUgaW1tdW5vYXNzYXkgZm9yIEhJViAtIEhJVi5FLkRFMTcwIgovKiBFbmQgb2YgRW56eW1lIGltbXVub2Fzc2F5IGZvciBISVYgRS5ERTE3MCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTE3MSAtIE51Y2xlaWMgYWNpZCB0ZXN0IGZvciBISVYKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFZpcm9sb2dpY2FsIHRlc3QsIHdoaWNoIGluY2x1ZGVzIHRlc3RpbmcgZm9yIGVhcmx5IGluZmFudCBkaWFnbm9zaXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk51Y2xlaWMgYWNpZCB0ZXN0IGZvciBISVYgRS5ERTE3MSI6CiAgZXhpc3RzICJOdWNsZWljIGFjaWQgdGVzdCBmb3IgSElWIEUuREUxNzEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJOdWNsZWljIGFjaWQgdGVzdCBmb3IgSElWIEUuREUxNzEgT2JzZXJ2YXRpb24iCmRlZmluZSAiTnVjbGVpYyBhY2lkIHRlc3QgZm9yIEhJViBFLkRFMTcxIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk51Y2xlaWMgYWNpZCB0ZXN0IGZvciBISVYgLSBISVYuRS5ERTE3MSJdCmRlZmluZSAiTnVjbGVpYyBhY2lkIHRlc3QgZm9yIEhJViBFLkRFMTcxIE9ic2VydmF0aW9uIjoKICAiSElWIHRlc3QgdHlwZSBFLkRFMTY4IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJOdWNsZWljIGFjaWQgdGVzdCBmb3IgSElWIC0gSElWLkUuREUxNzEiCi8qIEVuZCBvZiBOdWNsZWljIGFjaWQgdGVzdCBmb3IgSElWIEUuREUxNzEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxNzIgLSBEdWFsIEhJVi9zeXBoaWxpcyByYXBpZCBkaWFnbm9zdGljIHRlc3QKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IEFudGlib2R5IHRlc3QgZm9yIEhJViBhbmQgc3lwaGlsaXMgcGVyZm9ybWVkIHdpdGggYSByYXBpZCBkaWFnbm9zdGljCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEdWFsIEhJVi9zeXBoaWxpcyByYXBpZCBkaWFnbm9zdGljIHRlc3QgRS5ERTE3MiI6CiAgZXhpc3RzICJEdWFsIEhJVi9zeXBoaWxpcyByYXBpZCBkaWFnbm9zdGljIHRlc3QgRS5ERTE3MiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkR1YWwgSElWL3N5cGhpbGlzIHJhcGlkIGRpYWdub3N0aWMgdGVzdCBFLkRFMTcyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkR1YWwgSElWL3N5cGhpbGlzIHJhcGlkIGRpYWdub3N0aWMgdGVzdCBFLkRFMTcyIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkR1YWwgSElWL3N5cGhpbGlzIHJhcGlkIGRpYWdub3N0aWMgdGVzdCAtIEhJVi5FLkRFMTcyIl0KZGVmaW5lICJEdWFsIEhJVi9zeXBoaWxpcyByYXBpZCBkaWFnbm9zdGljIHRlc3QgRS5ERTE3MiBPYnNlcnZhdGlvbiI6CiAgIkhJViB0ZXN0IHR5cGUgRS5ERTE2OCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRHVhbCBISVYvc3lwaGlsaXMgcmFwaWQgZGlhZ25vc3RpYyB0ZXN0IC0gSElWLkUuREUxNzIiCi8qIEVuZCBvZiBEdWFsIEhJVi9zeXBoaWxpcyByYXBpZCBkaWFnbm9zdGljIHRlc3QgRS5ERTE3MiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTE3MyAtIE1hdGVybmFsIGFuZCBjaGlsZCBoZWFsdGggc2VydmljZSB2aXNpdApAYWN0aXZpdHk6IEhJVi5FMSBDYXB0dXJlIG9yIHVwZGF0ZSBtb3RoZXIncyBoaXN0b3J5CkBkZXNjcmlwdGlvbjogTWF0ZXJuYWwgYW5kIGNoaWxkIGhlYWx0aCBzZXJ2aWNlIHZpc2l0IGF0dGVuZGVkIGJ5IGFuIEhJVi1leHBvc2VkIGluZmFudAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTWF0ZXJuYWwgYW5kIGNoaWxkIGhlYWx0aCBzZXJ2aWNlIHZpc2l0IjoKICBleGlzdHMgIk1hdGVybmFsIGFuZCBjaGlsZCBoZWFsdGggc2VydmljZSB2aXNpdCBPYnNlcnZhdGlvbiIKZGVmaW5lICJNYXRlcm5hbCBhbmQgY2hpbGQgaGVhbHRoIHNlcnZpY2UgdmlzaXQgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIk1hdGVybmFsIGFuZCBjaGlsZCBoZWFsdGggc2VydmljZSB2aXNpdCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBNYXRlcm5hbCBhbmQgY2hpbGQgaGVhbHRoIHNlcnZpY2UgdmlzaXQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxNzQgLSAxMi1tb250aCB2aXNpdApAYWN0aXZpdHk6IEhJVi5FMSBDYXB0dXJlIG9yIHVwZGF0ZSBtb3RoZXIncyBoaXN0b3J5CkBkZXNjcmlwdGlvbjogSElWLWV4cG9zZWQgaW5mYW50IGF0dGVuZGluZyBNQ0ggc2VydmljZXMgZm9yIGEgMTItbW9udGggdmlzaXQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIjEyLW1vbnRoIHZpc2l0IjoKICBleGlzdHMgIjEyLW1vbnRoIHZpc2l0IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiMTItbW9udGggdmlzaXQgT2JzZXJ2YXRpb24iCmRlZmluZSAiMTItbW9udGggdmlzaXQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iMTItbW9udGggdmlzaXQiXQpkZWZpbmUgIjEyLW1vbnRoIHZpc2l0IE9ic2VydmF0aW9uIjoKICAiTWF0ZXJuYWwgYW5kIGNoaWxkIGhlYWx0aCBzZXJ2aWNlIHZpc2l0IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiIxMi1tb250aCB2aXNpdCIKLyogRW5kIG9mIDEyLW1vbnRoIHZpc2l0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTc1IC0gMjQtbW9udGggdmlzaXQKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IEhJVi1leHBvc2VkIGluZmFudHMgYXR0ZW5kaW5nIE1DSCBzZXJ2aWNlcyBmb3IgYSAyNC1tb250aCB2aXNpdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiMjQtbW9udGggdmlzaXQiOgogIGV4aXN0cyAiMjQtbW9udGggdmlzaXQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICIyNC1tb250aCB2aXNpdCBPYnNlcnZhdGlvbiIKZGVmaW5lICIyNC1tb250aCB2aXNpdCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiIyNC1tb250aCB2aXNpdCJdCmRlZmluZSAiMjQtbW9udGggdmlzaXQgT2JzZXJ2YXRpb24iOgogICJNYXRlcm5hbCBhbmQgY2hpbGQgaGVhbHRoIHNlcnZpY2UgdmlzaXQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIjI0LW1vbnRoIHZpc2l0IgovKiBFbmQgb2YgMjQtbW9udGggdmlzaXQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxNzYgLSBGaXJzdCB2aXNpdCBhZnRlciB0aGUgZW5kIG9mIGJyZWFzdGZlZWRpbmcKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IEhJVi1leHBvc2VkIGluZmFudCBhdHRlbmRpbmcgTUNIIHNlcnZpY2VzIGZvciBhIGZpcnN0IHZpc2l0IGFmdGVyIHRoZSBlbmQgb2YgYnJlYXN0ZmVlZGluZwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRmlyc3QgdmlzaXQgYWZ0ZXIgdGhlIGVuZCBvZiBicmVhc3RmZWVkaW5nIjoKICBleGlzdHMgIkZpcnN0IHZpc2l0IGFmdGVyIHRoZSBlbmQgb2YgYnJlYXN0ZmVlZGluZyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkZpcnN0IHZpc2l0IGFmdGVyIHRoZSBlbmQgb2YgYnJlYXN0ZmVlZGluZyBPYnNlcnZhdGlvbiIKZGVmaW5lICJGaXJzdCB2aXNpdCBhZnRlciB0aGUgZW5kIG9mIGJyZWFzdGZlZWRpbmcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRmlyc3QgdmlzaXQgYWZ0ZXIgdGhlIGVuZCBvZiBicmVhc3RmZWVkaW5nIl0KZGVmaW5lICJGaXJzdCB2aXNpdCBhZnRlciB0aGUgZW5kIG9mIGJyZWFzdGZlZWRpbmcgT2JzZXJ2YXRpb24iOgogICJNYXRlcm5hbCBhbmQgY2hpbGQgaGVhbHRoIHNlcnZpY2UgdmlzaXQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkZpcnN0IHZpc2l0IGFmdGVyIHRoZSBlbmQgb2YgYnJlYXN0ZmVlZGluZyIKLyogRW5kIG9mIEZpcnN0IHZpc2l0IGFmdGVyIHRoZSBlbmQgb2YgYnJlYXN0ZmVlZGluZyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTE3OSAtIFJlZ2lzdGVyZWQgaW4gYmlydGggY29ob3J0CkBhY3Rpdml0eTogSElWLkYzIENhcHR1cmUgb3IgdXBkYXRlIGluZmFudCdzL2NoaWxkJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IFdoZXRoZXIgdGhlIGluZmFudCBoYXMgYmVlbiByZWdpc3RlcmVkIGluIGEgYmlydGggY29ob3J0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZWdpc3RlcmVkIGluIGJpcnRoIGNvaG9ydCI6CiAgZXhpc3RzICJSZWdpc3RlcmVkIGluIGJpcnRoIGNvaG9ydCBPYnNlcnZhdGlvbiIKZGVmaW5lICJSZWdpc3RlcmVkIGluIGJpcnRoIGNvaG9ydCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iUmVnaXN0ZXJlZCBpbiBiaXJ0aCBjb2hvcnQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyB0cnVlCi8qIEVuZCBvZiBSZWdpc3RlcmVkIGluIGJpcnRoIGNvaG9ydCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTE4MCAtIEVJRCBzYW1wbGUgbnVtYmVyCkBhY3Rpdml0eTogSElWLkY4IFRlc3QgaW5mYW50L2NoaWxkIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBFYXJseSBpbmZhbnQgZGlhZ25vc2lzIChFSUQpIHNhbXBsZSBudW1iZXIKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkVJRCBzYW1wbGUgbnVtYmVyIjoKICBleGlzdHMgIkVJRCBzYW1wbGUgbnVtYmVyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkVJRCBzYW1wbGUgbnVtYmVyIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJFSUQgc2FtcGxlIG51bWJlciJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBFSUQgc2FtcGxlIG51bWJlciAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTE4MSAtIEVJRCBzYW1wbGUgMQpAYWN0aXZpdHk6IEhJVi5GOCBUZXN0IGluZmFudC9jaGlsZCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogRmlyc3Qgc2FtcGxlIHVzZWQgdG8gdGVzdCBhbiBpbmZhbnQgZm9yIEhJVgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRUlEIHNhbXBsZSAxIjoKICBleGlzdHMgIkVJRCBzYW1wbGUgMSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkVJRCBzYW1wbGUgMSBPYnNlcnZhdGlvbiIKZGVmaW5lICJFSUQgc2FtcGxlIDEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRUlEIHNhbXBsZSAxIl0KZGVmaW5lICJFSUQgc2FtcGxlIDEgT2JzZXJ2YXRpb24iOgogICJFSUQgc2FtcGxlIG51bWJlciBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRUlEIHNhbXBsZSAxIgovKiBFbmQgb2YgRUlEIHNhbXBsZSAxICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTgyIC0gRUlEIHNhbXBsZSAyCkBhY3Rpdml0eTogSElWLkY4IFRlc3QgaW5mYW50L2NoaWxkIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBTZWNvbmQgc2FtcGxlIHVzZWQgdG8gdGVzdCBhbiBpbmZhbnQgZm9yIEhJVgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRUlEIHNhbXBsZSAyIjoKICBleGlzdHMgIkVJRCBzYW1wbGUgMiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkVJRCBzYW1wbGUgMiBPYnNlcnZhdGlvbiIKZGVmaW5lICJFSUQgc2FtcGxlIDIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRUlEIHNhbXBsZSAyIl0KZGVmaW5lICJFSUQgc2FtcGxlIDIgT2JzZXJ2YXRpb24iOgogICJFSUQgc2FtcGxlIG51bWJlciBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRUlEIHNhbXBsZSAyIgovKiBFbmQgb2YgRUlEIHNhbXBsZSAyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTgzIC0gRUlEIHRlc3QgbnVtYmVyCkBhY3Rpdml0eTogSElWLkY4IFRlc3QgaW5mYW50L2NoaWxkIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBFYXJseSBpbmZhbnQgZGlhZ25vc2lzIChFSUQpIEhJViB0ZXN0IG51bWJlciB1c2luZyB0aGUgc2FtZSBzYW1wbGUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkVJRCB0ZXN0IG51bWJlciI6CiAgZXhpc3RzICJFSUQgdGVzdCBudW1iZXIgT2JzZXJ2YXRpb24iCmRlZmluZSAiRUlEIHRlc3QgbnVtYmVyIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJFSUQgdGVzdCBudW1iZXIiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgRUlEIHRlc3QgbnVtYmVyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTg0IC0gRUlEIHRlc3QgbnVtYmVyIDEKQGFjdGl2aXR5OiBISVYuRjggVGVzdCBpbmZhbnQvY2hpbGQgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IEZpcnN0IHRlc3Qgb24gYSBzYW1wbGUgdG8gdGVzdCBhbiBpbmZhbnQgZm9yIEhJVgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRUlEIHRlc3QgbnVtYmVyIDEiOgogIGV4aXN0cyAiRUlEIHRlc3QgbnVtYmVyIDEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJFSUQgdGVzdCBudW1iZXIgMSBPYnNlcnZhdGlvbiIKZGVmaW5lICJFSUQgdGVzdCBudW1iZXIgMSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJFSUQgdGVzdCBudW1iZXIgMSJdCmRlZmluZSAiRUlEIHRlc3QgbnVtYmVyIDEgT2JzZXJ2YXRpb24iOgogICJFSUQgdGVzdCBudW1iZXIgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkVJRCB0ZXN0IG51bWJlciAxIgovKiBFbmQgb2YgRUlEIHRlc3QgbnVtYmVyIDEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxODUgLSBFSUQgdGVzdCBudW1iZXIgMgpAYWN0aXZpdHk6IEhJVi5GOCBUZXN0IGluZmFudC9jaGlsZCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogU2Vjb25kIHRlc3Qgb24gYSBzYW1wbGUgdG8gdGVzdCBhbiBpbmZhbnQgZm9yIEhJVgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRUlEIHRlc3QgbnVtYmVyIDIiOgogIGV4aXN0cyAiRUlEIHRlc3QgbnVtYmVyIDIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJFSUQgdGVzdCBudW1iZXIgMiBPYnNlcnZhdGlvbiIKZGVmaW5lICJFSUQgdGVzdCBudW1iZXIgMiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJFSUQgdGVzdCBudW1iZXIgMiJdCmRlZmluZSAiRUlEIHRlc3QgbnVtYmVyIDIgT2JzZXJ2YXRpb24iOgogICJFSUQgdGVzdCBudW1iZXIgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkVJRCB0ZXN0IG51bWJlciAyIgovKiBFbmQgb2YgRUlEIHRlc3QgbnVtYmVyIDIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxODYgLSBFSUQgdGVzdCBudW1iZXIgMSB0ZXN0IHJlc3VsdApAYWN0aXZpdHk6IEhJVi5GOCBUZXN0IGluZmFudC9jaGlsZCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogRWFybHkgaW5mYW50IGRpYWdub3NpcyB0ZXN0IG51bWJlciAxIHRlc3QgcmVzdWx0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJFSUQgdGVzdCBudW1iZXIgMSB0ZXN0IHJlc3VsdCI6CiAgZXhpc3RzICJFSUQgdGVzdCBudW1iZXIgMSB0ZXN0IHJlc3VsdCBPYnNlcnZhdGlvbiIKZGVmaW5lICJFSUQgdGVzdCBudW1iZXIgMSB0ZXN0IHJlc3VsdCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iRUlEIHRlc3QgbnVtYmVyIDEgdGVzdCByZXN1bHQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgRUlEIHRlc3QgbnVtYmVyIDEgdGVzdCByZXN1bHQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxODcgLSBQb3NpdGl2ZQpAYWN0aXZpdHk6IEhJVi5GOCBUZXN0IGluZmFudC9jaGlsZCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogUG9zaXRpdmUgSElWIHRlc3QgcmVzdWx0IGZyb20gdGhlIG51Y2xlaWMgYWNpZCB0ZXN0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQb3NpdGl2ZSBFLkRFMTg3IjoKICBleGlzdHMgIlBvc2l0aXZlIEUuREUxODcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQb3NpdGl2ZSBFLkRFMTg3IE9ic2VydmF0aW9uIgpkZWZpbmUgIlBvc2l0aXZlIEUuREUxODcgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUG9zaXRpdmUgLSBISVYuRS5ERTE4NyJdCmRlZmluZSAiUG9zaXRpdmUgRS5ERTE4NyBPYnNlcnZhdGlvbiI6CiAgIkVJRCB0ZXN0IG51bWJlciAxIHRlc3QgcmVzdWx0IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJQb3NpdGl2ZSAtIEhJVi5FLkRFMTg3IgovKiBFbmQgb2YgUG9zaXRpdmUgRS5ERTE4NyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTE4OCAtIE5lZ2F0aXZlCkBhY3Rpdml0eTogSElWLkY4IFRlc3QgaW5mYW50L2NoaWxkIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBOZWdhdGl2ZSBISVYgdGVzdCByZXN1bHQgZnJvbSB0aGUgbnVjbGVpYyBhY2lkIHRlc3QKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk5lZ2F0aXZlIEUuREUxODgiOgogIGV4aXN0cyAiTmVnYXRpdmUgRS5ERTE4OCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk5lZ2F0aXZlIEUuREUxODggT2JzZXJ2YXRpb24iCmRlZmluZSAiTmVnYXRpdmUgRS5ERTE4OCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOZWdhdGl2ZSAtIEhJVi5FLkRFMTg4Il0KZGVmaW5lICJOZWdhdGl2ZSBFLkRFMTg4IE9ic2VydmF0aW9uIjoKICAiRUlEIHRlc3QgbnVtYmVyIDEgdGVzdCByZXN1bHQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5lZ2F0aXZlIC0gSElWLkUuREUxODgiCi8qIEVuZCBvZiBOZWdhdGl2ZSBFLkRFMTg4ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTg5IC0gSW5kZXRlcm1pbmF0ZQpAYWN0aXZpdHk6IEhJVi5GOCBUZXN0IGluZmFudC9jaGlsZCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogSW5kZXRlcm1pbmF0ZSBISVYgdGVzdCByZXN1bHQgZnJvbSB0aGUgbnVjbGVpYyBhY2lkIHRlc3QKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkluZGV0ZXJtaW5hdGUgRS5ERTE4OSI6CiAgZXhpc3RzICJJbmRldGVybWluYXRlIEUuREUxODkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJJbmRldGVybWluYXRlIEUuREUxODkgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW5kZXRlcm1pbmF0ZSBFLkRFMTg5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkluZGV0ZXJtaW5hdGUgLSBISVYuRS5ERTE4OSJdCmRlZmluZSAiSW5kZXRlcm1pbmF0ZSBFLkRFMTg5IE9ic2VydmF0aW9uIjoKICAiRUlEIHRlc3QgbnVtYmVyIDEgdGVzdCByZXN1bHQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkluZGV0ZXJtaW5hdGUgLSBISVYuRS5ERTE4OSIKLyogRW5kIG9mIEluZGV0ZXJtaW5hdGUgRS5ERTE4OSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTE5MCAtIEVJRCB0ZXN0IG51bWJlciAyIHRlc3QgcmVzdWx0CkBhY3Rpdml0eTogSElWLkY4IFRlc3QgaW5mYW50L2NoaWxkIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBFYXJseSBpbmZhbnQgZGlhZ25vc2lzIHRlc3QgbnVtYmVyIDIgdGVzdCByZXN1bHQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkVJRCB0ZXN0IG51bWJlciAyIHRlc3QgcmVzdWx0IjoKICBleGlzdHMgIkVJRCB0ZXN0IG51bWJlciAyIHRlc3QgcmVzdWx0IE9ic2VydmF0aW9uIgpkZWZpbmUgIkVJRCB0ZXN0IG51bWJlciAyIHRlc3QgcmVzdWx0IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJFSUQgdGVzdCBudW1iZXIgMiB0ZXN0IHJlc3VsdCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBFSUQgdGVzdCBudW1iZXIgMiB0ZXN0IHJlc3VsdCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTE5MSAtIFBvc2l0aXZlCkBhY3Rpdml0eTogSElWLkY4IFRlc3QgaW5mYW50L2NoaWxkIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBQb3NpdGl2ZSBISVYgdGVzdCByZXN1bHQgZnJvbSB0aGUgbnVjbGVpYyBhY2lkIHRlc3QKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBvc2l0aXZlIEUuREUxOTEiOgogIGV4aXN0cyAiUG9zaXRpdmUgRS5ERTE5MSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlBvc2l0aXZlIEUuREUxOTEgT2JzZXJ2YXRpb24iCmRlZmluZSAiUG9zaXRpdmUgRS5ERTE5MSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQb3NpdGl2ZSAtIEhJVi5FLkRFMTkxIl0KZGVmaW5lICJQb3NpdGl2ZSBFLkRFMTkxIE9ic2VydmF0aW9uIjoKICAiRUlEIHRlc3QgbnVtYmVyIDIgdGVzdCByZXN1bHQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlBvc2l0aXZlIC0gSElWLkUuREUxOTEiCi8qIEVuZCBvZiBQb3NpdGl2ZSBFLkRFMTkxICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTkyIC0gTmVnYXRpdmUKQGFjdGl2aXR5OiBISVYuRjggVGVzdCBpbmZhbnQvY2hpbGQgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IE5lZ2F0aXZlIEhJViB0ZXN0IHJlc3VsdCBmcm9tIHRoZSBudWNsZWljIGFjaWQgdGVzdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTmVnYXRpdmUgRS5ERTE5MiI6CiAgZXhpc3RzICJOZWdhdGl2ZSBFLkRFMTkyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTmVnYXRpdmUgRS5ERTE5MiBPYnNlcnZhdGlvbiIKZGVmaW5lICJOZWdhdGl2ZSBFLkRFMTkyIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5lZ2F0aXZlIC0gSElWLkUuREUxOTIiXQpkZWZpbmUgIk5lZ2F0aXZlIEUuREUxOTIgT2JzZXJ2YXRpb24iOgogICJFSUQgdGVzdCBudW1iZXIgMiB0ZXN0IHJlc3VsdCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTmVnYXRpdmUgLSBISVYuRS5ERTE5MiIKLyogRW5kIG9mIE5lZ2F0aXZlIEUuREUxOTIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxOTMgLSBJbmRldGVybWluYXRlCkBhY3Rpdml0eTogSElWLkY4IFRlc3QgaW5mYW50L2NoaWxkIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBJbmRldGVybWluYXRlIEhJViB0ZXN0IHJlc3VsdCBmcm9tIHRoZSBudWNsZWljIGFjaWQgdGVzdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW5kZXRlcm1pbmF0ZSBFLkRFMTkzIjoKICBleGlzdHMgIkluZGV0ZXJtaW5hdGUgRS5ERTE5MyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkluZGV0ZXJtaW5hdGUgRS5ERTE5MyBPYnNlcnZhdGlvbiIKZGVmaW5lICJJbmRldGVybWluYXRlIEUuREUxOTMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW5kZXRlcm1pbmF0ZSAtIEhJVi5FLkRFMTkzIl0KZGVmaW5lICJJbmRldGVybWluYXRlIEUuREUxOTMgT2JzZXJ2YXRpb24iOgogICJFSUQgdGVzdCBudW1iZXIgMiB0ZXN0IHJlc3VsdCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW5kZXRlcm1pbmF0ZSAtIEhJVi5FLkRFMTkzIgovKiBFbmQgb2YgSW5kZXRlcm1pbmF0ZSBFLkRFMTkzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTk0IC0gQXNzYXkgbnVtYmVyIGluIHRlc3Rpbmcgc3RyYXRlZ3kKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSBudW1iZXIgb2YgdGhlIGFzc2F5ICh0ZXN0IGtpdCkgaW4gdGhlIEhJViB0ZXN0aW5nIHN0cmF0ZWd5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBc3NheSBudW1iZXIgaW4gdGVzdGluZyBzdHJhdGVneSBFLkRFMTk0IjoKICBleGlzdHMgIkFzc2F5IG51bWJlciBpbiB0ZXN0aW5nIHN0cmF0ZWd5IEUuREUxOTQgT2JzZXJ2YXRpb24iCmRlZmluZSAiQXNzYXkgbnVtYmVyIGluIHRlc3Rpbmcgc3RyYXRlZ3kgRS5ERTE5NCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQXNzYXkgbnVtYmVyIGluIHRlc3Rpbmcgc3RyYXRlZ3kgLSBISVYuRS5ERTE5NCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBBc3NheSBudW1iZXIgaW4gdGVzdGluZyBzdHJhdGVneSBFLkRFMTk0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMTk1IC0gQXNzYXkgMApAYWN0aXZpdHk6IEhJVi5FNCBUZXN0IG1vdGhlciBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogQSBjb21tdW5pdHkgb3V0cmVhY2ggdGVzdC1mb3ItdHJpYWdlIG9yIHNlbGYtdGVzdCB3aGljaCBpcyBub3QgaW5jbHVkZWQgaW4gdGhlIEhJViB0ZXN0aW5nIHN0cmF0ZWd5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBc3NheSAwIEUuREUxOTUiOgogIGV4aXN0cyAiQXNzYXkgMCBFLkRFMTk1IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQXNzYXkgMCBFLkRFMTk1IE9ic2VydmF0aW9uIgpkZWZpbmUgIkFzc2F5IDAgRS5ERTE5NSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBc3NheSAwIC0gSElWLkUuREUxOTUiXQpkZWZpbmUgIkFzc2F5IDAgRS5ERTE5NSBPYnNlcnZhdGlvbiI6CiAgIkFzc2F5IG51bWJlciBpbiB0ZXN0aW5nIHN0cmF0ZWd5IEUuREUxOTQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkFzc2F5IDAgLSBISVYuRS5ERTE5NSIKLyogRW5kIG9mIEFzc2F5IDAgRS5ERTE5NSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTE5NiAtIEFzc2F5IDEKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSBmaXJzdCB0ZXN0IGluIHRoZSBISVYgdGVzdGluZyBzdHJhdGVneQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQXNzYXkgMSBFLkRFMTk2IjoKICBleGlzdHMgIkFzc2F5IDEgRS5ERTE5NiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkFzc2F5IDEgRS5ERTE5NiBPYnNlcnZhdGlvbiIKZGVmaW5lICJBc3NheSAxIEUuREUxOTYgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQXNzYXkgMSAtIEhJVi5FLkRFMTk2Il0KZGVmaW5lICJBc3NheSAxIEUuREUxOTYgT2JzZXJ2YXRpb24iOgogICJBc3NheSBudW1iZXIgaW4gdGVzdGluZyBzdHJhdGVneSBFLkRFMTk0IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBc3NheSAxIC0gSElWLkUuREUxOTYiCi8qIEVuZCBvZiBBc3NheSAxIEUuREUxOTYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxOTcgLSBBc3NheSAyCkBhY3Rpdml0eTogSElWLkU0IFRlc3QgbW90aGVyIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgc2Vjb25kIHRlc3QgaW4gdGhlIEhJViB0ZXN0aW5nIHN0cmF0ZWd5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBc3NheSAyIEUuREUxOTciOgogIGV4aXN0cyAiQXNzYXkgMiBFLkRFMTk3IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiQXNzYXkgMiBFLkRFMTk3IE9ic2VydmF0aW9uIgpkZWZpbmUgIkFzc2F5IDIgRS5ERTE5NyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJBc3NheSAyIC0gSElWLkUuREUxOTciXQpkZWZpbmUgIkFzc2F5IDIgRS5ERTE5NyBPYnNlcnZhdGlvbiI6CiAgIkFzc2F5IG51bWJlciBpbiB0ZXN0aW5nIHN0cmF0ZWd5IEUuREUxOTQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkFzc2F5IDIgLSBISVYuRS5ERTE5NyIKLyogRW5kIG9mIEFzc2F5IDIgRS5ERTE5NyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTE5OCAtIEFzc2F5IDMKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSB0aGlyZCB0ZXN0IGluIHRoZSBISVYgdGVzdGluZyBzdHJhdGVneQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQXNzYXkgMyBFLkRFMTk4IjoKICBleGlzdHMgIkFzc2F5IDMgRS5ERTE5OCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkFzc2F5IDMgRS5ERTE5OCBPYnNlcnZhdGlvbiIKZGVmaW5lICJBc3NheSAzIEUuREUxOTggQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iQXNzYXkgMyAtIEhJVi5FLkRFMTk4Il0KZGVmaW5lICJBc3NheSAzIEUuREUxOTggT2JzZXJ2YXRpb24iOgogICJBc3NheSBudW1iZXIgaW4gdGVzdGluZyBzdHJhdGVneSBFLkRFMTk0IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJBc3NheSAzIC0gSElWLkUuREUxOTgiCi8qIEVuZCBvZiBBc3NheSAzIEUuREUxOTggKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUxOTkgLSBBc3NheSAxIHJlcGVhdGVkCkBhY3Rpdml0eTogSElWLkU0IFRlc3QgbW90aGVyIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgZmlyc3QgdGVzdCBpbiB0aGUgSElWIHRlc3Rpbmcgc3RyYXRlZ3kKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkFzc2F5IDEgcmVwZWF0ZWQgRS5ERTE5OSI6CiAgZXhpc3RzICJBc3NheSAxIHJlcGVhdGVkIEUuREUxOTkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJBc3NheSAxIHJlcGVhdGVkIEUuREUxOTkgT2JzZXJ2YXRpb24iCmRlZmluZSAiQXNzYXkgMSByZXBlYXRlZCBFLkRFMTk5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkFzc2F5IDEgcmVwZWF0ZWQgLSBISVYuRS5ERTE5OSJdCmRlZmluZSAiQXNzYXkgMSByZXBlYXRlZCBFLkRFMTk5IE9ic2VydmF0aW9uIjoKICAiQXNzYXkgbnVtYmVyIGluIHRlc3Rpbmcgc3RyYXRlZ3kgRS5ERTE5NCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQXNzYXkgMSByZXBlYXRlZCAtIEhJVi5FLkRFMTk5IgovKiBFbmQgb2YgQXNzYXkgMSByZXBlYXRlZCBFLkRFMTk5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMjAwIC0gVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDEKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIGZpcnN0IEhJViBhc3NheSBpbiB0aGUgdGVzdGluZyBzdHJhdGVneQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDEgRS5ERTIwMCI6CiAgZXhpc3RzICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSBFLkRFMjAwIE9ic2VydmF0aW9uIgpkZWZpbmUgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAxIEUuREUyMDAgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAxIC0gSElWLkUuREUyMDAiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDEgRS5ERTIwMCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTIwMSAtIFJlYWN0aXZlCkBhY3Rpdml0eTogSElWLkU0IFRlc3QgbW90aGVyIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBISVYgYXNzYXkgaW4gdGhlIHRlc3Rpbmcgc3RyYXRlZ3kgd2FzIHJlYWN0aXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZWFjdGl2ZSBFLkRFMjAxIjoKICBleGlzdHMgIlJlYWN0aXZlIEUuREUyMDEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSZWFjdGl2ZSBFLkRFMjAxIE9ic2VydmF0aW9uIgpkZWZpbmUgIlJlYWN0aXZlIEUuREUyMDEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUmVhY3RpdmUgLSBISVYuRS5ERTIwMSJdCmRlZmluZSAiUmVhY3RpdmUgRS5ERTIwMSBPYnNlcnZhdGlvbiI6CiAgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAxIEUuREUyMDAgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlJlYWN0aXZlIC0gSElWLkUuREUyMDEiCi8qIEVuZCBvZiBSZWFjdGl2ZSBFLkRFMjAxICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMjAyIC0gTm9uLXJlYWN0aXZlCkBhY3Rpdml0eTogSElWLkU0IFRlc3QgbW90aGVyIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBISVYgYXNzYXkgaW4gdGhlIHRlc3Rpbmcgc3RyYXRlZ3kgd2FzIG5vbi1yZWFjdGl2ZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTm9uLXJlYWN0aXZlIEUuREUyMDIiOgogIGV4aXN0cyAiTm9uLXJlYWN0aXZlIEUuREUyMDIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJOb24tcmVhY3RpdmUgRS5ERTIwMiBPYnNlcnZhdGlvbiIKZGVmaW5lICJOb24tcmVhY3RpdmUgRS5ERTIwMiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOb24tcmVhY3RpdmUgLSBISVYuRS5ERTIwMiJdCmRlZmluZSAiTm9uLXJlYWN0aXZlIEUuREUyMDIgT2JzZXJ2YXRpb24iOgogICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSBFLkRFMjAwIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJOb24tcmVhY3RpdmUgLSBISVYuRS5ERTIwMiIKLyogRW5kIG9mIE5vbi1yZWFjdGl2ZSBFLkRFMjAyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMjAzIC0gSW52YWxpZApAYWN0aXZpdHk6IEhJVi5FNCBUZXN0IG1vdGhlciBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVGhlIHJlc3VsdCBvZiB0aGUgSElWIGFzc2F5IGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5IHdhcyBpbnZhbGlkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJJbnZhbGlkIEUuREUyMDMiOgogIGV4aXN0cyAiSW52YWxpZCBFLkRFMjAzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW52YWxpZCBFLkRFMjAzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkludmFsaWQgRS5ERTIwMyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJJbnZhbGlkIC0gSElWLkUuREUyMDMiXQpkZWZpbmUgIkludmFsaWQgRS5ERTIwMyBPYnNlcnZhdGlvbiI6CiAgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAxIEUuREUyMDAgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkludmFsaWQgLSBISVYuRS5ERTIwMyIKLyogRW5kIG9mIEludmFsaWQgRS5ERTIwMyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTIwNCAtIFRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAyCkBhY3Rpdml0eTogSElWLkU0IFRlc3QgbW90aGVyIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBzZWNvbmQgSElWIGFzc2F5IGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMiBFLkRFMjA0IjoKICBleGlzdHMgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAyIEUuREUyMDQgT2JzZXJ2YXRpb24iCmRlZmluZSAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDIgRS5ERTIwNCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDIgLSBISVYuRS5ERTIwNCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMiBFLkRFMjA0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMjA1IC0gUmVhY3RpdmUKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIEhJViBhc3NheSBpbiB0aGUgdGVzdGluZyBzdHJhdGVneSB3YXMgcmVhY3RpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlJlYWN0aXZlIEUuREUyMDUiOgogIGV4aXN0cyAiUmVhY3RpdmUgRS5ERTIwNSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlJlYWN0aXZlIEUuREUyMDUgT2JzZXJ2YXRpb24iCmRlZmluZSAiUmVhY3RpdmUgRS5ERTIwNSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJSZWFjdGl2ZSAtIEhJVi5FLkRFMjA1Il0KZGVmaW5lICJSZWFjdGl2ZSBFLkRFMjA1IE9ic2VydmF0aW9uIjoKICAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDIgRS5ERTIwNCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUmVhY3RpdmUgLSBISVYuRS5ERTIwNSIKLyogRW5kIG9mIFJlYWN0aXZlIEUuREUyMDUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUyMDYgLSBOb24tcmVhY3RpdmUKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIEhJViBhc3NheSBpbiB0aGUgdGVzdGluZyBzdHJhdGVneSB3YXMgbm9uLXJlYWN0aXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOb24tcmVhY3RpdmUgRS5ERTIwNiI6CiAgZXhpc3RzICJOb24tcmVhY3RpdmUgRS5ERTIwNiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk5vbi1yZWFjdGl2ZSBFLkRFMjA2IE9ic2VydmF0aW9uIgpkZWZpbmUgIk5vbi1yZWFjdGl2ZSBFLkRFMjA2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5vbi1yZWFjdGl2ZSAtIEhJVi5FLkRFMjA2Il0KZGVmaW5lICJOb24tcmVhY3RpdmUgRS5ERTIwNiBPYnNlcnZhdGlvbiI6CiAgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAyIEUuREUyMDQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5vbi1yZWFjdGl2ZSAtIEhJVi5FLkRFMjA2IgovKiBFbmQgb2YgTm9uLXJlYWN0aXZlIEUuREUyMDYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUyMDcgLSBJbnZhbGlkCkBhY3Rpdml0eTogSElWLkU0IFRlc3QgbW90aGVyIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBISVYgYXNzYXkgaW4gdGhlIHRlc3Rpbmcgc3RyYXRlZ3kgd2FzIGludmFsaWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkludmFsaWQgRS5ERTIwNyI6CiAgZXhpc3RzICJJbnZhbGlkIEUuREUyMDcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJJbnZhbGlkIEUuREUyMDcgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW52YWxpZCBFLkRFMjA3IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkludmFsaWQgLSBISVYuRS5ERTIwNyJdCmRlZmluZSAiSW52YWxpZCBFLkRFMjA3IE9ic2VydmF0aW9uIjoKICAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDIgRS5ERTIwNCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW52YWxpZCAtIEhJVi5FLkRFMjA3IgovKiBFbmQgb2YgSW52YWxpZCBFLkRFMjA3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMjA4IC0gVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDMKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIHRoaXJkIEhJViBhc3NheSBpbiB0aGUgdGVzdGluZyBzdHJhdGVneQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDMgRS5ERTIwOCI6CiAgZXhpc3RzICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMyBFLkRFMjA4IE9ic2VydmF0aW9uIgpkZWZpbmUgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAzIEUuREUyMDggT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAzIC0gSElWLkUuREUyMDgiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDMgRS5ERTIwOCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTIwOSAtIFJlYWN0aXZlCkBhY3Rpdml0eTogSElWLkU0IFRlc3QgbW90aGVyIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBISVYgYXNzYXkgaW4gdGhlIHRlc3Rpbmcgc3RyYXRlZ3kgd2FzIHJlYWN0aXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZWFjdGl2ZSBFLkRFMjA5IjoKICBleGlzdHMgIlJlYWN0aXZlIEUuREUyMDkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJSZWFjdGl2ZSBFLkRFMjA5IE9ic2VydmF0aW9uIgpkZWZpbmUgIlJlYWN0aXZlIEUuREUyMDkgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUmVhY3RpdmUgLSBISVYuRS5ERTIwOSJdCmRlZmluZSAiUmVhY3RpdmUgRS5ERTIwOSBPYnNlcnZhdGlvbiI6CiAgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAzIEUuREUyMDggT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlJlYWN0aXZlIC0gSElWLkUuREUyMDkiCi8qIEVuZCBvZiBSZWFjdGl2ZSBFLkRFMjA5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMjEwIC0gTm9uLXJlYWN0aXZlCkBhY3Rpdml0eTogSElWLkU0IFRlc3QgbW90aGVyIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBISVYgYXNzYXkgaW4gdGhlIHRlc3Rpbmcgc3RyYXRlZ3kgd2FzIG5vbi1yZWFjdGl2ZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiTm9uLXJlYWN0aXZlIEUuREUyMTAiOgogIGV4aXN0cyAiTm9uLXJlYWN0aXZlIEUuREUyMTAgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJOb24tcmVhY3RpdmUgRS5ERTIxMCBPYnNlcnZhdGlvbiIKZGVmaW5lICJOb24tcmVhY3RpdmUgRS5ERTIxMCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOb24tcmVhY3RpdmUgLSBISVYuRS5ERTIxMCJdCmRlZmluZSAiTm9uLXJlYWN0aXZlIEUuREUyMTAgT2JzZXJ2YXRpb24iOgogICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMyBFLkRFMjA4IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJOb24tcmVhY3RpdmUgLSBISVYuRS5ERTIxMCIKLyogRW5kIG9mIE5vbi1yZWFjdGl2ZSBFLkRFMjEwICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMjExIC0gSW52YWxpZApAYWN0aXZpdHk6IEhJVi5FNCBUZXN0IG1vdGhlciBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVGhlIHJlc3VsdCBvZiB0aGUgSElWIGFzc2F5IGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5IHdhcyBpbnZhbGlkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJJbnZhbGlkIEUuREUyMTEiOgogIGV4aXN0cyAiSW52YWxpZCBFLkRFMjExIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW52YWxpZCBFLkRFMjExIE9ic2VydmF0aW9uIgpkZWZpbmUgIkludmFsaWQgRS5ERTIxMSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJJbnZhbGlkIC0gSElWLkUuREUyMTEiXQpkZWZpbmUgIkludmFsaWQgRS5ERTIxMSBPYnNlcnZhdGlvbiI6CiAgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAzIEUuREUyMDggT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkludmFsaWQgLSBISVYuRS5ERTIxMSIKLyogRW5kIG9mIEludmFsaWQgRS5ERTIxMSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTIxMiAtIFRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAxIHJlcGVhdGVkCkBhY3Rpdml0eTogSElWLkU0IFRlc3QgbW90aGVyIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSByZXBlYXRlZCBmaXJzdCBISVYgYXNzYXkgaW4gdGhlIHRlc3Rpbmcgc3RyYXRlZ3kKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAxIHJlcGVhdGVkIEUuREUyMTIiOgogIGV4aXN0cyAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDEgcmVwZWF0ZWQgRS5ERTIxMiBPYnNlcnZhdGlvbiIKZGVmaW5lICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSByZXBlYXRlZCBFLkRFMjEyIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSByZXBlYXRlZCAtIEhJVi5FLkRFMjEyIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIFRlc3QgcmVzdWx0IG9mIEhJViBhc3NheSAxIHJlcGVhdGVkIEUuREUyMTIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUyMTMgLSBSZWFjdGl2ZQpAYWN0aXZpdHk6IEhJVi5FNCBUZXN0IG1vdGhlciBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVGhlIHJlc3VsdCBvZiB0aGUgSElWIGFzc2F5IGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5IHdhcyByZWFjdGl2ZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmVhY3RpdmUgRS5ERTIxMyI6CiAgZXhpc3RzICJSZWFjdGl2ZSBFLkRFMjEzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUmVhY3RpdmUgRS5ERTIxMyBPYnNlcnZhdGlvbiIKZGVmaW5lICJSZWFjdGl2ZSBFLkRFMjEzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlJlYWN0aXZlIC0gSElWLkUuREUyMTMiXQpkZWZpbmUgIlJlYWN0aXZlIEUuREUyMTMgT2JzZXJ2YXRpb24iOgogICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSByZXBlYXRlZCBFLkRFMjEyIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJSZWFjdGl2ZSAtIEhJVi5FLkRFMjEzIgovKiBFbmQgb2YgUmVhY3RpdmUgRS5ERTIxMyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTIxNCAtIE5vbi1yZWFjdGl2ZQpAYWN0aXZpdHk6IEhJVi5FNCBUZXN0IG1vdGhlciBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVGhlIHJlc3VsdCBvZiB0aGUgSElWIGFzc2F5IGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5IHdhcyBub24tcmVhY3RpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk5vbi1yZWFjdGl2ZSBFLkRFMjE0IjoKICBleGlzdHMgIk5vbi1yZWFjdGl2ZSBFLkRFMjE0IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTm9uLXJlYWN0aXZlIEUuREUyMTQgT2JzZXJ2YXRpb24iCmRlZmluZSAiTm9uLXJlYWN0aXZlIEUuREUyMTQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTm9uLXJlYWN0aXZlIC0gSElWLkUuREUyMTQiXQpkZWZpbmUgIk5vbi1yZWFjdGl2ZSBFLkRFMjE0IE9ic2VydmF0aW9uIjoKICAiVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDEgcmVwZWF0ZWQgRS5ERTIxMiBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTm9uLXJlYWN0aXZlIC0gSElWLkUuREUyMTQiCi8qIEVuZCBvZiBOb24tcmVhY3RpdmUgRS5ERTIxNCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTIxNSAtIEludmFsaWQKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIEhJViBhc3NheSBpbiB0aGUgdGVzdGluZyBzdHJhdGVneSB3YXMgaW52YWxpZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW52YWxpZCBFLkRFMjE1IjoKICBleGlzdHMgIkludmFsaWQgRS5ERTIxNSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkludmFsaWQgRS5ERTIxNSBPYnNlcnZhdGlvbiIKZGVmaW5lICJJbnZhbGlkIEUuREUyMTUgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW52YWxpZCAtIEhJVi5FLkRFMjE1Il0KZGVmaW5lICJJbnZhbGlkIEUuREUyMTUgT2JzZXJ2YXRpb24iOgogICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSByZXBlYXRlZCBFLkRFMjEyIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJJbnZhbGlkIC0gSElWLkUuREUyMTUiCi8qIEVuZCBvZiBJbnZhbGlkIEUuREUyMTUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUyMTYgLSBUZXN0IHJlc3VsdCBvZiBzeXBoaWxpcyBhc3NheSAxCkBhY3Rpdml0eTogSElWLkU0IFRlc3QgbW90aGVyIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBmaXJzdCBzeXBoaWxpcyBhc3NheSBpbiB0aGUgdGVzdGluZyBzdHJhdGVneQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVGVzdCByZXN1bHQgb2Ygc3lwaGlsaXMgYXNzYXkgMSI6CiAgZXhpc3RzICJUZXN0IHJlc3VsdCBvZiBzeXBoaWxpcyBhc3NheSAxIE9ic2VydmF0aW9uIgpkZWZpbmUgIlRlc3QgcmVzdWx0IG9mIHN5cGhpbGlzIGFzc2F5IDEgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlRlc3QgcmVzdWx0IG9mIHN5cGhpbGlzIGFzc2F5IDEiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgVGVzdCByZXN1bHQgb2Ygc3lwaGlsaXMgYXNzYXkgMSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTIxNyAtIFJlYWN0aXZlCkBhY3Rpdml0eTogSElWLkU0IFRlc3QgbW90aGVyIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBmaXJzdCBzeXBoaWxpcyBhc3NheSBpbiB0aGUgdGVzdGluZyBzdHJhdGVneSB3YXMgcmVhY3RpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlJlYWN0aXZlIEUuREUyMTciOgogIGV4aXN0cyAiUmVhY3RpdmUgRS5ERTIxNyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlJlYWN0aXZlIEUuREUyMTcgT2JzZXJ2YXRpb24iCmRlZmluZSAiUmVhY3RpdmUgRS5ERTIxNyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJSZWFjdGl2ZSAtIEhJVi5FLkRFMjE3Il0KZGVmaW5lICJSZWFjdGl2ZSBFLkRFMjE3IE9ic2VydmF0aW9uIjoKICAiVGVzdCByZXN1bHQgb2Ygc3lwaGlsaXMgYXNzYXkgMSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUmVhY3RpdmUgLSBISVYuRS5ERTIxNyIKLyogRW5kIG9mIFJlYWN0aXZlIEUuREUyMTcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUyMTggLSBOb24tcmVhY3RpdmUKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIGZpcnN0IHN5cGhpbGlzIGFzc2F5IGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5IHdhcyBub24tcmVhY3RpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk5vbi1yZWFjdGl2ZSBFLkRFMjE4IjoKICBleGlzdHMgIk5vbi1yZWFjdGl2ZSBFLkRFMjE4IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTm9uLXJlYWN0aXZlIEUuREUyMTggT2JzZXJ2YXRpb24iCmRlZmluZSAiTm9uLXJlYWN0aXZlIEUuREUyMTggQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTm9uLXJlYWN0aXZlIC0gSElWLkUuREUyMTgiXQpkZWZpbmUgIk5vbi1yZWFjdGl2ZSBFLkRFMjE4IE9ic2VydmF0aW9uIjoKICAiVGVzdCByZXN1bHQgb2Ygc3lwaGlsaXMgYXNzYXkgMSBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTm9uLXJlYWN0aXZlIC0gSElWLkUuREUyMTgiCi8qIEVuZCBvZiBOb24tcmVhY3RpdmUgRS5ERTIxOCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTIxOSAtIEludmFsaWQKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIEhJViBhc3NheSBpbiB0aGUgdGVzdGluZyBzdHJhdGVneSB3YXMgaW52YWxpZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW52YWxpZCBFLkRFMjE5IjoKICBleGlzdHMgIkludmFsaWQgRS5ERTIxOSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkludmFsaWQgRS5ERTIxOSBPYnNlcnZhdGlvbiIKZGVmaW5lICJJbnZhbGlkIEUuREUyMTkgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW52YWxpZCAtIEhJVi5FLkRFMjE5Il0KZGVmaW5lICJJbnZhbGlkIEUuREUyMTkgT2JzZXJ2YXRpb24iOgogICJUZXN0IHJlc3VsdCBvZiBzeXBoaWxpcyBhc3NheSAxIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJJbnZhbGlkIC0gSElWLkUuREUyMTkiCi8qIEVuZCBvZiBJbnZhbGlkIEUuREUyMTkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUyMjAgLSBUZXN0IHJlc3VsdCBvZiBzeXBoaWxpcyBhc3NheSAxIHJlcGVhdGVkCkBhY3Rpdml0eTogSElWLkU0IFRlc3QgbW90aGVyIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBmaXJzdCBzeXBoaWxpcyBhc3NheSByZXBlYXRlZCBpbiB0aGUgdGVzdGluZyBzdHJhdGVneQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiVGVzdCByZXN1bHQgb2Ygc3lwaGlsaXMgYXNzYXkgMSByZXBlYXRlZCI6CiAgZXhpc3RzICJUZXN0IHJlc3VsdCBvZiBzeXBoaWxpcyBhc3NheSAxIHJlcGVhdGVkIE9ic2VydmF0aW9uIgpkZWZpbmUgIlRlc3QgcmVzdWx0IG9mIHN5cGhpbGlzIGFzc2F5IDEgcmVwZWF0ZWQgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlRlc3QgcmVzdWx0IG9mIHN5cGhpbGlzIGFzc2F5IDEgcmVwZWF0ZWQiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgVGVzdCByZXN1bHQgb2Ygc3lwaGlsaXMgYXNzYXkgMSByZXBlYXRlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTIyMSAtIFJlYWN0aXZlCkBhY3Rpdml0eTogSElWLkU0IFRlc3QgbW90aGVyIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBUaGUgcmVzdWx0IG9mIHRoZSBmaXJzdCBzeXBoaWxpcyBhc3NheSByZXBlYXRlZCBpbiB0aGUgdGVzdGluZyBzdHJhdGVneSB3YXMgcmVhY3RpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlJlYWN0aXZlIEUuREUyMjEiOgogIGV4aXN0cyAiUmVhY3RpdmUgRS5ERTIyMSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlJlYWN0aXZlIEUuREUyMjEgT2JzZXJ2YXRpb24iCmRlZmluZSAiUmVhY3RpdmUgRS5ERTIyMSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJSZWFjdGl2ZSAtIEhJVi5FLkRFMjIxIl0KZGVmaW5lICJSZWFjdGl2ZSBFLkRFMjIxIE9ic2VydmF0aW9uIjoKICAiVGVzdCByZXN1bHQgb2Ygc3lwaGlsaXMgYXNzYXkgMSByZXBlYXRlZCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUmVhY3RpdmUgLSBISVYuRS5ERTIyMSIKLyogRW5kIG9mIFJlYWN0aXZlIEUuREUyMjEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUyMjIgLSBOb24tcmVhY3RpdmUKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIGZpcnN0IHN5cGhpbGlzIGFzc2F5IHJlcGVhdGVkIGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5IHdhcyBub24tcmVhY3RpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk5vbi1yZWFjdGl2ZSBFLkRFMjIyIjoKICBleGlzdHMgIk5vbi1yZWFjdGl2ZSBFLkRFMjIyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTm9uLXJlYWN0aXZlIEUuREUyMjIgT2JzZXJ2YXRpb24iCmRlZmluZSAiTm9uLXJlYWN0aXZlIEUuREUyMjIgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iTm9uLXJlYWN0aXZlIC0gSElWLkUuREUyMjIiXQpkZWZpbmUgIk5vbi1yZWFjdGl2ZSBFLkRFMjIyIE9ic2VydmF0aW9uIjoKICAiVGVzdCByZXN1bHQgb2Ygc3lwaGlsaXMgYXNzYXkgMSByZXBlYXRlZCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTm9uLXJlYWN0aXZlIC0gSElWLkUuREUyMjIiCi8qIEVuZCBvZiBOb24tcmVhY3RpdmUgRS5ERTIyMiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTIyMyAtIEludmFsaWQKQGFjdGl2aXR5OiBISVYuRTQgVGVzdCBtb3RoZXIgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgb2YgdGhlIGZpcnN0IHN5cGhpbGlzIGFzc2F5IHJlcGVhdGVkIGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5IHdhcyBpbnZhbGlkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJJbnZhbGlkIEUuREUyMjMiOgogIGV4aXN0cyAiSW52YWxpZCBFLkRFMjIzIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW52YWxpZCBFLkRFMjIzIE9ic2VydmF0aW9uIgpkZWZpbmUgIkludmFsaWQgRS5ERTIyMyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJJbnZhbGlkIC0gSElWLkUuREUyMjMiXQpkZWZpbmUgIkludmFsaWQgRS5ERTIyMyBPYnNlcnZhdGlvbiI6CiAgIlRlc3QgcmVzdWx0IG9mIHN5cGhpbGlzIGFzc2F5IDEgcmVwZWF0ZWQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkludmFsaWQgLSBISVYuRS5ERTIyMyIKLyogRW5kIG9mIEludmFsaWQgRS5ERTIyMyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTIyNCAtIEhJViB0ZXN0IGRhdGUKQGFjdGl2aXR5OiBISVYuRjggVGVzdCBpbmZhbnQvY2hpbGQgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IERhdGUgb2YgdGhlIEhJViB0ZXN0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYgdGVzdCBkYXRlIEUuREUyMjQiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhJViB0ZXN0IGRhdGUgLSBISVYuRS5ERTIyNCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiSElWIHRlc3QgZGF0ZSBFLkRFMjI0IFZhbHVlIjoKICAiSElWIHRlc3QgZGF0ZSBFLkRFMjI0IiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIEhJViB0ZXN0IGRhdGUgRS5ERTIyNCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTIyNSAtIEluZmFudCBISVYgc3RhdHVzCkBhY3Rpdml0eTogSElWLkY4IFRlc3QgaW5mYW50L2NoaWxkIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBISVYgc3RhdHVzIHJlcG9ydGVkIGFmdGVyIGFwcGx5aW5nIHRoZSBISVYgdGVzdGluZyBhbGdvcml0aG0uIE5vIHNpbmdsZSBISVYgdGVzdCBjYW4gcHJvdmlkZSBhbiBISVYtcG9zaXRpdmUgZGlhZ25vc2lzLgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSW5mYW50IEhJViBzdGF0dXMiOgogIGV4aXN0cyAiSW5mYW50IEhJViBzdGF0dXMgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW5mYW50IEhJViBzdGF0dXMgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkluZmFudCBISVYgc3RhdHVzIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEluZmFudCBISVYgc3RhdHVzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMjI2IC0gSElWLXBvc2l0aXZlCkBhY3Rpdml0eTogSElWLkY4IFRlc3QgaW5mYW50L2NoaWxkIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBJbmZhbnQgaXMgSElWLXBvc2l0aXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYtcG9zaXRpdmUgRS5ERTIyNiI6CiAgZXhpc3RzICJISVYtcG9zaXRpdmUgRS5ERTIyNiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhJVi1wb3NpdGl2ZSBFLkRFMjI2IE9ic2VydmF0aW9uIgpkZWZpbmUgIkhJVi1wb3NpdGl2ZSBFLkRFMjI2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhJVi1wb3NpdGl2ZSAtIEhJVi5FLkRFMjI2Il0KZGVmaW5lICJISVYtcG9zaXRpdmUgRS5ERTIyNiBPYnNlcnZhdGlvbiI6CiAgIkluZmFudCBISVYgc3RhdHVzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJISVYtcG9zaXRpdmUgLSBISVYuRS5ERTIyNiIKLyogRW5kIG9mIEhJVi1wb3NpdGl2ZSBFLkRFMjI2ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMjI3IC0gSElWLW5lZ2F0aXZlCkBhY3Rpdml0eTogSElWLkY4IFRlc3QgaW5mYW50L2NoaWxkIGZvciBISVYgdXNpbmcgdGVzdGluZyBhbGdvcml0aG0KQGRlc2NyaXB0aW9uOiBJbmZhbnQgaXMgSElWLW5lZ2F0aXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYtbmVnYXRpdmUgRS5ERTIyNyI6CiAgZXhpc3RzICJISVYtbmVnYXRpdmUgRS5ERTIyNyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkhJVi1uZWdhdGl2ZSBFLkRFMjI3IE9ic2VydmF0aW9uIgpkZWZpbmUgIkhJVi1uZWdhdGl2ZSBFLkRFMjI3IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhJVi1uZWdhdGl2ZSAtIEhJVi5FLkRFMjI3Il0KZGVmaW5lICJISVYtbmVnYXRpdmUgRS5ERTIyNyBPYnNlcnZhdGlvbiI6CiAgIkluZmFudCBISVYgc3RhdHVzIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJISVYtbmVnYXRpdmUgLSBISVYuRS5ERTIyNyIKLyogRW5kIG9mIEhJVi1uZWdhdGl2ZSBFLkRFMjI3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMjI4IC0gVW5rbm93bgpAYWN0aXZpdHk6IEhJVi5GOCBUZXN0IGluZmFudC9jaGlsZCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogSW5mYW50IGhhcyB1bmtub3duIEhJViBzdGF0dXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlVua25vd24gRS5ERTIyOCI6CiAgZXhpc3RzICJVbmtub3duIEUuREUyMjggQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVbmtub3duIEUuREUyMjggT2JzZXJ2YXRpb24iCmRlZmluZSAiVW5rbm93biBFLkRFMjI4IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlVua25vd24gLSBISVYuRS5ERTIyOCJdCmRlZmluZSAiVW5rbm93biBFLkRFMjI4IE9ic2VydmF0aW9uIjoKICAiSW5mYW50IEhJViBzdGF0dXMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlVua25vd24gLSBISVYuRS5ERTIyOCIKLyogRW5kIG9mIFVua25vd24gRS5ERTIyOCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRS5ERTIyOSAtIEluZmFudCBBUlQgc3RhcnQgZGF0ZQpAYWN0aXZpdHk6IEhJVi5GMTYgSW1tZWRpYXRlbHkgc3RhcnQgaW5mYW50IG9uIEFSVApAZGVzY3JpcHRpb246IFRoZSBkYXRlIG9uIHdoaWNoIHRoZSBpbmZhbnQgd2FzIHN0YXJ0ZWQgb3IgcmVzdGFydGVkIG9uIGFudGlyZXRyb3ZpcmFsIHRoZXJhcHkgKEFSVCkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkluZmFudCBBUlQgc3RhcnQgZGF0ZSI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSW5mYW50IEFSVCBzdGFydCBkYXRlIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJJbmZhbnQgQVJUIHN0YXJ0IGRhdGUgVmFsdWUiOgogICJJbmZhbnQgQVJUIHN0YXJ0IGRhdGUiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgSW5mYW50IEFSVCBzdGFydCBkYXRlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMjMwIC0gRmluYWwgZGlhZ25vc2lzIG9mIEhJVi1leHBvc2VkIGluZmFudApAYWN0aXZpdHk6IEhJVi5GMjAgUmVjb3JkIGluZmFudCdzL2NoaWxkJ3MgZmluYWwgSElWIGRpYWdub3NpcwpAZGVzY3JpcHRpb246IEhJVi1leHBvc2VkIGluZmFudCBmaW5hbCBzdGF0dXMgYXQgMTggbW9udGhzIG9yIDMgbW9udGhzIGFmdGVyIGNlc3NhdGlvbiBvZiBicmVhc3RmZWVkaW5nICh3aGljaGV2ZXIgaXMgbGF0ZXIpLgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRmluYWwgZGlhZ25vc2lzIG9mIEhJVi1leHBvc2VkIGluZmFudCBFLkRFMjMwIjoKICBleGlzdHMgIkZpbmFsIGRpYWdub3NpcyBvZiBISVYtZXhwb3NlZCBpbmZhbnQgRS5ERTIzMCBPYnNlcnZhdGlvbiIKZGVmaW5lICJGaW5hbCBkaWFnbm9zaXMgb2YgSElWLWV4cG9zZWQgaW5mYW50IEUuREUyMzAgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkZpbmFsIGRpYWdub3NpcyBvZiBISVYtZXhwb3NlZCBpbmZhbnQgLSBISVYuRS5ERTIzMCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBGaW5hbCBkaWFnbm9zaXMgb2YgSElWLWV4cG9zZWQgaW5mYW50IEUuREUyMzAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUyMzEgLSBISVYtcG9zaXRpdmUKQGFjdGl2aXR5OiBISVYuRjIwIFJlY29yZCBpbmZhbnQncy9jaGlsZCdzIGZpbmFsIEhJViBkaWFnbm9zaXMKQGRlc2NyaXB0aW9uOiBUaGUgaW5mYW50IGlzIEhJVi1wb3NpdGl2ZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSElWLXBvc2l0aXZlIEUuREUyMzEiOgogIGV4aXN0cyAiSElWLXBvc2l0aXZlIEUuREUyMzEgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJISVYtcG9zaXRpdmUgRS5ERTIzMSBPYnNlcnZhdGlvbiIKZGVmaW5lICJISVYtcG9zaXRpdmUgRS5ERTIzMSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJISVYtcG9zaXRpdmUgLSBISVYuRS5ERTIzMSJdCmRlZmluZSAiSElWLXBvc2l0aXZlIEUuREUyMzEgT2JzZXJ2YXRpb24iOgogICJGaW5hbCBkaWFnbm9zaXMgb2YgSElWLWV4cG9zZWQgaW5mYW50IEUuREUyMzAgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkhJVi1wb3NpdGl2ZSAtIEhJVi5FLkRFMjMxIgovKiBFbmQgb2YgSElWLXBvc2l0aXZlIEUuREUyMzEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkUuREUyMzIgLSBISVYtbmVnYXRpdmUgYW5kIG5vIGxvbmdlciBicmVhc3RmZWVkaW5nCkBhY3Rpdml0eTogSElWLkYyMCBSZWNvcmQgaW5mYW50J3MvY2hpbGQncyBmaW5hbCBISVYgZGlhZ25vc2lzCkBkZXNjcmlwdGlvbjogVGhlIGluZmFudCBpcyBISVYtbmVnYXRpdmUgYW5kIHRoZSBtb3RoZXIgaGFzIHF1aXQgYnJlYXN0ZmVlZGluZwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSElWLW5lZ2F0aXZlIGFuZCBubyBsb25nZXIgYnJlYXN0ZmVlZGluZyI6CiAgZXhpc3RzICJISVYtbmVnYXRpdmUgYW5kIG5vIGxvbmdlciBicmVhc3RmZWVkaW5nIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSElWLW5lZ2F0aXZlIGFuZCBubyBsb25nZXIgYnJlYXN0ZmVlZGluZyBPYnNlcnZhdGlvbiIKZGVmaW5lICJISVYtbmVnYXRpdmUgYW5kIG5vIGxvbmdlciBicmVhc3RmZWVkaW5nIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhJVi1uZWdhdGl2ZSBhbmQgbm8gbG9uZ2VyIGJyZWFzdGZlZWRpbmciXQpkZWZpbmUgIkhJVi1uZWdhdGl2ZSBhbmQgbm8gbG9uZ2VyIGJyZWFzdGZlZWRpbmcgT2JzZXJ2YXRpb24iOgogICJGaW5hbCBkaWFnbm9zaXMgb2YgSElWLWV4cG9zZWQgaW5mYW50IEUuREUyMzAgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkhJVi1uZWdhdGl2ZSBhbmQgbm8gbG9uZ2VyIGJyZWFzdGZlZWRpbmciCi8qIEVuZCBvZiBISVYtbmVnYXRpdmUgYW5kIG5vIGxvbmdlciBicmVhc3RmZWVkaW5nICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5FLkRFMjMzIC0gSElWIHN0YXR1cyB1bmtub3duCkBhY3Rpdml0eTogSElWLkYyMCBSZWNvcmQgaW5mYW50J3MvY2hpbGQncyBmaW5hbCBISVYgZGlhZ25vc2lzCkBkZXNjcmlwdGlvbjogVGhlIGZpbmFsIEhJViBzdGF0dXMgb2YgdGhlIGNoaWxkIGlzIHVua25vd24gYmVjYXVzZSB0aGUgaW5mYW50IGRpZWQsIHdhcyBsb3N0IHRvIGZvbGxvdy11cCBvciB0cmFuc2ZlcnJlZCBvdXQgd2l0aG91dCBldmVyIGhhdmluZyBhbiBISVYtcG9zaXRpdmUgZGlhZ25vc2lzIG9yIGlzIGFjdGl2ZSBpbiBjYXJlIGJ1dCB3YXMgbm90IHRlc3RlZCBhdCAxOCBtb250aHMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhJViBzdGF0dXMgdW5rbm93biI6CiAgZXhpc3RzICJISVYgc3RhdHVzIHVua25vd24gQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJISVYgc3RhdHVzIHVua25vd24gT2JzZXJ2YXRpb24iCmRlZmluZSAiSElWIHN0YXR1cyB1bmtub3duIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhJViBzdGF0dXMgdW5rbm93biJdCmRlZmluZSAiSElWIHN0YXR1cyB1bmtub3duIE9ic2VydmF0aW9uIjoKICAiRmluYWwgZGlhZ25vc2lzIG9mIEhJVi1leHBvc2VkIGluZmFudCBFLkRFMjMwIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJISVYgc3RhdHVzIHVua25vd24iCi8qIEVuZCBvZiBISVYgc3RhdHVzIHVua25vd24gKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkcuREUxIC0gQ0Q0IGNvdW50CkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IENENCBjZWxsIGNvdW50IGluIGNlbGxzL21tXjMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNENCBjb3VudCBHLkRFMSI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQ0Q0IGNvdW50IC0gSElWLkcuREUxIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJDRDQgY291bnQgRy5ERTEgVmFsdWUiOgogICJDRDQgY291bnQgRy5ERTEiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgQ0Q0IGNvdW50IEcuREUxICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5HLkRFMyAtIEJhc2VsaW5lIENENCBjb3VudApAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBDRDQgY291bnQgcGVyZm9ybWVkIGF0IEhJViBkaWFnbm9zaXMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkJhc2VsaW5lIENENCBjb3VudCBHLkRFMyI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQmFzZWxpbmUgQ0Q0IGNvdW50IC0gSElWLkcuREUzIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJCYXNlbGluZSBDRDQgY291bnQgRy5ERTMgVmFsdWUiOgogICJCYXNlbGluZSBDRDQgY291bnQgRy5ERTMiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgQmFzZWxpbmUgQ0Q0IGNvdW50IEcuREUzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5HLkRFOCAtIERhdGUgb2YgdmlyYWwgbG9hZCBzYW1wbGUgY29sbGVjdGlvbgpAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBEYXRlIGFuZCB0aW1lIHdoZW4gdGhlIHNhbXBsZSB3YXMgY29sbGVjdGVkIHRvIHRlc3QgdGhlIGNsaWVudCdzIEhJViB2aXJhbCBsb2FkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEYXRlIG9mIHZpcmFsIGxvYWQgc2FtcGxlIGNvbGxlY3Rpb24gRy5ERTgiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkRhdGUgb2YgdmlyYWwgbG9hZCBzYW1wbGUgY29sbGVjdGlvbiAtIEhJVi5HLkRFOCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRGF0ZSBvZiB2aXJhbCBsb2FkIHNhbXBsZSBjb2xsZWN0aW9uIEcuREU4IFZhbHVlIjoKICAiRGF0ZSBvZiB2aXJhbCBsb2FkIHNhbXBsZSBjb2xsZWN0aW9uIEcuREU4IiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIERhdGUgb2YgdmlyYWwgbG9hZCBzYW1wbGUgY29sbGVjdGlvbiBHLkRFOCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRy5ERTEyIC0gVmlyYWwgbG9hZCB0ZXN0IHJlc3VsdApAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBSZXN1bHQgZnJvbSB0aGUgdmlyYWwgbG9hZCB0ZXN0IGluIG51bWJlciBvZiBjb3BpZXMvbUwKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlZpcmFsIGxvYWQgdGVzdCByZXN1bHQgRy5ERTEyIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJWaXJhbCBsb2FkIHRlc3QgcmVzdWx0IC0gSElWLkcuREUxMiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiVmlyYWwgbG9hZCB0ZXN0IHJlc3VsdCBHLkRFMTIgVmFsdWUiOgogICJWaXJhbCBsb2FkIHRlc3QgcmVzdWx0IEcuREUxMiIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBWaXJhbCBsb2FkIHRlc3QgcmVzdWx0IEcuREUxMiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRy5ERTE3IC0gSEJzQWcgdGVzdCBkYXRlCkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IERhdGUgY2xpZW50IHdhcyB0ZXN0ZWQgZm9yIGhlcGF0aXRpcyBCIHZpcnVzIChIQlYpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIQnNBZyB0ZXN0IGRhdGUgRy5ERTE3IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJIQnNBZyB0ZXN0IGRhdGUgLSBISVYuRy5ERTE3Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJIQnNBZyB0ZXN0IGRhdGUgRy5ERTE3IFZhbHVlIjoKICAiSEJzQWcgdGVzdCBkYXRlIEcuREUxNyIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBIQnNBZyB0ZXN0IGRhdGUgRy5ERTE3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5HLkRFMTggLSBIQnNBZyB0ZXN0IHJlc3VsdApAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBIZXBhdGl0aXMgQiB2aXJ1cyB0ZXN0IHJlc3VsdCAoSEJzQWcpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIQnNBZyB0ZXN0IHJlc3VsdCBHLkRFMTgiOgogIGV4aXN0cyAiSEJzQWcgdGVzdCByZXN1bHQgRy5ERTE4IE9ic2VydmF0aW9uIgpkZWZpbmUgIkhCc0FnIHRlc3QgcmVzdWx0IEcuREUxOCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSEJzQWcgdGVzdCByZXN1bHQgLSBISVYuRy5ERTE4Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEhCc0FnIHRlc3QgcmVzdWx0IEcuREUxOCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRy5ERTE5IC0gUG9zaXRpdmUKQGFjdGl2aXR5OiBISVYuRDIwIERpYWdub3N0aWNzCkBkZXNjcmlwdGlvbjogSEJzQWcgdGVzdCByZXN1bHQgd2FzIHBvc2l0aXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJQb3NpdGl2ZSBHLkRFMTkiOgogIGV4aXN0cyAiUG9zaXRpdmUgRy5ERTE5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiUG9zaXRpdmUgRy5ERTE5IE9ic2VydmF0aW9uIgpkZWZpbmUgIlBvc2l0aXZlIEcuREUxOSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJQb3NpdGl2ZSAtIEhJVi5HLkRFMTkiXQpkZWZpbmUgIlBvc2l0aXZlIEcuREUxOSBPYnNlcnZhdGlvbiI6CiAgIkhCc0FnIHRlc3QgcmVzdWx0IEcuREUxOCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUG9zaXRpdmUgLSBISVYuRy5ERTE5IgovKiBFbmQgb2YgUG9zaXRpdmUgRy5ERTE5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5HLkRFMjAgLSBOZWdhdGl2ZQpAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBIQnNBZyB0ZXN0IHJlc3VsdCB3YXMgbmVnYXRpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk5lZ2F0aXZlIEcuREUyMCI6CiAgZXhpc3RzICJOZWdhdGl2ZSBHLkRFMjAgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJOZWdhdGl2ZSBHLkRFMjAgT2JzZXJ2YXRpb24iCmRlZmluZSAiTmVnYXRpdmUgRy5ERTIwIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIk5lZ2F0aXZlIC0gSElWLkcuREUyMCJdCmRlZmluZSAiTmVnYXRpdmUgRy5ERTIwIE9ic2VydmF0aW9uIjoKICAiSEJzQWcgdGVzdCByZXN1bHQgRy5ERTE4IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJOZWdhdGl2ZSAtIEhJVi5HLkRFMjAiCi8qIEVuZCBvZiBOZWdhdGl2ZSBHLkRFMjAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkcuREUyMSAtIEluZGV0ZXJtaW5hdGUKQGFjdGl2aXR5OiBISVYuRDIwIERpYWdub3N0aWNzCkBkZXNjcmlwdGlvbjogSEJzQWcgdGVzdCByZXN1bHQgd2FzIGluZGV0ZXJtaW5hdGUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkluZGV0ZXJtaW5hdGUgRy5ERTIxIjoKICBleGlzdHMgIkluZGV0ZXJtaW5hdGUgRy5ERTIxIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW5kZXRlcm1pbmF0ZSBHLkRFMjEgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW5kZXRlcm1pbmF0ZSBHLkRFMjEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW5kZXRlcm1pbmF0ZSAtIEhJVi5HLkRFMjEiXQpkZWZpbmUgIkluZGV0ZXJtaW5hdGUgRy5ERTIxIE9ic2VydmF0aW9uIjoKICAiSEJzQWcgdGVzdCByZXN1bHQgRy5ERTE4IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJJbmRldGVybWluYXRlIC0gSElWLkcuREUyMSIKLyogRW5kIG9mIEluZGV0ZXJtaW5hdGUgRy5ERTIxICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5HLkRFNDIgLSBIQ1YgdGVzdCBkYXRlCkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IERhdGUgY2xpZW50IHdhcyB0ZXN0ZWQgZm9yIGhlcGF0aXRpcyBDIHZpcnVzIChIQ1YgYW50aWJvZHksIEhDViBSTkEgb3IgSENWIGNvcmUgYW50aWdlbikKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhDViB0ZXN0IGRhdGUgRy5ERTQyIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJIQ1YgdGVzdCBkYXRlIC0gSElWLkcuREU0MiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiSENWIHRlc3QgZGF0ZSBHLkRFNDIgVmFsdWUiOgogICJIQ1YgdGVzdCBkYXRlIEcuREU0MiIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBIQ1YgdGVzdCBkYXRlIEcuREU0MiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRy5ERTQzIC0gSENWIHRlc3QgcmVzdWx0CkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IEhlcGF0aXRpcyBDIHZpcnVzIHRlc3QgcmVzdWx0IChIQ1YgYW50aWJvZHksIEhDViBSTkEgb3IgSENWIGNvcmUgYW50aWdlbikKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhDViB0ZXN0IHJlc3VsdCBHLkRFNDMiOgogIGV4aXN0cyAiSENWIHRlc3QgcmVzdWx0IEcuREU0MyBPYnNlcnZhdGlvbiIKZGVmaW5lICJIQ1YgdGVzdCByZXN1bHQgRy5ERTQzIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJIQ1YgdGVzdCByZXN1bHQgLSBISVYuRy5ERTQzIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEhDViB0ZXN0IHJlc3VsdCBHLkRFNDMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkcuREU0NCAtIFBvc2l0aXZlCkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IEhDViB0ZXN0IHJlc3VsdCB3YXMgcG9zaXRpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIlBvc2l0aXZlIEcuREU0NCI6CiAgZXhpc3RzICJQb3NpdGl2ZSBHLkRFNDQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJQb3NpdGl2ZSBHLkRFNDQgT2JzZXJ2YXRpb24iCmRlZmluZSAiUG9zaXRpdmUgRy5ERTQ0IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlBvc2l0aXZlIC0gSElWLkcuREU0NCJdCmRlZmluZSAiUG9zaXRpdmUgRy5ERTQ0IE9ic2VydmF0aW9uIjoKICAiSENWIHRlc3QgcmVzdWx0IEcuREU0MyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iUG9zaXRpdmUgLSBISVYuRy5ERTQ0IgovKiBFbmQgb2YgUG9zaXRpdmUgRy5ERTQ0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5HLkRFNDUgLSBOZWdhdGl2ZQpAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBIQ1YgdGVzdCByZXN1bHQgd2FzIG5lZ2F0aXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOZWdhdGl2ZSBHLkRFNDUiOgogIGV4aXN0cyAiTmVnYXRpdmUgRy5ERTQ1IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTmVnYXRpdmUgRy5ERTQ1IE9ic2VydmF0aW9uIgpkZWZpbmUgIk5lZ2F0aXZlIEcuREU0NSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOZWdhdGl2ZSAtIEhJVi5HLkRFNDUiXQpkZWZpbmUgIk5lZ2F0aXZlIEcuREU0NSBPYnNlcnZhdGlvbiI6CiAgIkhDViB0ZXN0IHJlc3VsdCBHLkRFNDMgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk5lZ2F0aXZlIC0gSElWLkcuREU0NSIKLyogRW5kIG9mIE5lZ2F0aXZlIEcuREU0NSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRy5ERTQ2IC0gSW5kZXRlcm1pbmF0ZQpAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBIQ1YgdGVzdCByZXN1bHQgd2FzIGluZGV0ZXJtaW5hdGUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkluZGV0ZXJtaW5hdGUgRy5ERTQ2IjoKICBleGlzdHMgIkluZGV0ZXJtaW5hdGUgRy5ERTQ2IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiSW5kZXRlcm1pbmF0ZSBHLkRFNDYgT2JzZXJ2YXRpb24iCmRlZmluZSAiSW5kZXRlcm1pbmF0ZSBHLkRFNDYgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW5kZXRlcm1pbmF0ZSAtIEhJVi5HLkRFNDYiXQpkZWZpbmUgIkluZGV0ZXJtaW5hdGUgRy5ERTQ2IE9ic2VydmF0aW9uIjoKICAiSENWIHRlc3QgcmVzdWx0IEcuREU0MyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW5kZXRlcm1pbmF0ZSAtIEhJVi5HLkRFNDYiCi8qIEVuZCBvZiBJbmRldGVybWluYXRlIEcuREU0NiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRy5ERTQ3IC0gSENWIHZpcmFsIGxvYWQgdGVzdCBkYXRlCkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IEhlcGF0aXRpcyBDIHZpcmFsIGxvYWQgdGVzdCBkYXRlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJIQ1YgdmlyYWwgbG9hZCB0ZXN0IGRhdGUgRy5ERTQ3IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJIQ1YgdmlyYWwgbG9hZCB0ZXN0IGRhdGUgLSBISVYuRy5ERTQ3Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJIQ1YgdmlyYWwgbG9hZCB0ZXN0IGRhdGUgRy5ERTQ3IFZhbHVlIjoKICAiSENWIHZpcmFsIGxvYWQgdGVzdCBkYXRlIEcuREU0NyIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBIQ1YgdmlyYWwgbG9hZCB0ZXN0IGRhdGUgRy5ERTQ3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5HLkRFNDggLSBIQ1YgdmlyYWwgbG9hZCB0ZXN0IHJlc3VsdApAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBIZXBhdGl0aXMgQyB2aXJhbCBsb2FkIHRlc3QgcmVzdWx0IChxdWFsaXRhdGl2ZSkKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhDViB2aXJhbCBsb2FkIHRlc3QgcmVzdWx0IEcuREU0OCI6CiAgZXhpc3RzICJIQ1YgdmlyYWwgbG9hZCB0ZXN0IHJlc3VsdCBHLkRFNDggT2JzZXJ2YXRpb24iCmRlZmluZSAiSENWIHZpcmFsIGxvYWQgdGVzdCByZXN1bHQgRy5ERTQ4IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJIQ1YgdmlyYWwgbG9hZCB0ZXN0IHJlc3VsdCAtIEhJVi5HLkRFNDgiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgSENWIHZpcmFsIGxvYWQgdGVzdCByZXN1bHQgRy5ERTQ4ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5HLkRFNDkgLSBEZXRlY3RlZApAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBIQ1Ygd2FzIGRldGVjdGVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEZXRlY3RlZCBHLkRFNDkiOgogIGV4aXN0cyAiRGV0ZWN0ZWQgRy5ERTQ5IENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiRGV0ZWN0ZWQgRy5ERTQ5IE9ic2VydmF0aW9uIgpkZWZpbmUgIkRldGVjdGVkIEcuREU0OSBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJEZXRlY3RlZCAtIEhJVi5HLkRFNDkiXQpkZWZpbmUgIkRldGVjdGVkIEcuREU0OSBPYnNlcnZhdGlvbiI6CiAgIkhDViB2aXJhbCBsb2FkIHRlc3QgcmVzdWx0IEcuREU0OCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRGV0ZWN0ZWQgLSBISVYuRy5ERTQ5IgovKiBFbmQgb2YgRGV0ZWN0ZWQgRy5ERTQ5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5HLkRFNTAgLSBOb3QgZGV0ZWN0ZWQKQGFjdGl2aXR5OiBISVYuRDIwIERpYWdub3N0aWNzCkBkZXNjcmlwdGlvbjogSENWIHdhcyBub3QgZGV0ZWN0ZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk5vdCBkZXRlY3RlZCBHLkRFNTAiOgogIGV4aXN0cyAiTm90IGRldGVjdGVkIEcuREU1MCBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIk5vdCBkZXRlY3RlZCBHLkRFNTAgT2JzZXJ2YXRpb24iCmRlZmluZSAiTm90IGRldGVjdGVkIEcuREU1MCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOb3QgZGV0ZWN0ZWQgLSBISVYuRy5ERTUwIl0KZGVmaW5lICJOb3QgZGV0ZWN0ZWQgRy5ERTUwIE9ic2VydmF0aW9uIjoKICAiSENWIHZpcmFsIGxvYWQgdGVzdCByZXN1bHQgRy5ERTQ4IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJOb3QgZGV0ZWN0ZWQgLSBISVYuRy5ERTUwIgovKiBFbmQgb2YgTm90IGRldGVjdGVkIEcuREU1MCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRy5ERTY5IC0gU3lwaGlsaXMgdGVzdCBkYXRlCkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IERhdGUgb2Ygc3lwaGlsaXMgdGVzdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU3lwaGlsaXMgdGVzdCBkYXRlIEcuREU2OSI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iU3lwaGlsaXMgdGVzdCBkYXRlIC0gSElWLkcuREU2OSJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiU3lwaGlsaXMgdGVzdCBkYXRlIEcuREU2OSBWYWx1ZSI6CiAgIlN5cGhpbGlzIHRlc3QgZGF0ZSBHLkRFNjkiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgU3lwaGlsaXMgdGVzdCBkYXRlIEcuREU2OSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRy5ERTcwIC0gU3lwaGlsaXMgdGVzdCByZXN1bHQKQGFjdGl2aXR5OiBISVYuRDIwIERpYWdub3N0aWNzCkBkZXNjcmlwdGlvbjogUmVzdWx0IGZyb20gc3lwaGlsaXMgdGVzdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiU3lwaGlsaXMgdGVzdCByZXN1bHQgRy5ERTcwIjoKICBleGlzdHMgIlN5cGhpbGlzIHRlc3QgcmVzdWx0IEcuREU3MCBPYnNlcnZhdGlvbiIKZGVmaW5lICJTeXBoaWxpcyB0ZXN0IHJlc3VsdCBHLkRFNzAgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIlN5cGhpbGlzIHRlc3QgcmVzdWx0IC0gSElWLkcuREU3MCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBTeXBoaWxpcyB0ZXN0IHJlc3VsdCBHLkRFNzAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkcuREU3MSAtIFBvc2l0aXZlCkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IFRlc3QgcmVzdWx0IGlzIHBvc2l0aXZlIGZvciBzeXBoaWxpcwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUG9zaXRpdmUgRy5ERTcxIjoKICBleGlzdHMgIlBvc2l0aXZlIEcuREU3MSBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlBvc2l0aXZlIEcuREU3MSBPYnNlcnZhdGlvbiIKZGVmaW5lICJQb3NpdGl2ZSBHLkRFNzEgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iUG9zaXRpdmUgLSBISVYuRy5ERTcxIl0KZGVmaW5lICJQb3NpdGl2ZSBHLkRFNzEgT2JzZXJ2YXRpb24iOgogICJTeXBoaWxpcyB0ZXN0IHJlc3VsdCBHLkRFNzAgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlBvc2l0aXZlIC0gSElWLkcuREU3MSIKLyogRW5kIG9mIFBvc2l0aXZlIEcuREU3MSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuRy5ERTcyIC0gTmVnYXRpdmUKQGFjdGl2aXR5OiBISVYuRDIwIERpYWdub3N0aWNzCkBkZXNjcmlwdGlvbjogVGVzdCByZXN1bHQgaXMgbmVnYXRpdmUgZm9yIHN5cGhpbGlzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOZWdhdGl2ZSBHLkRFNzIiOgogIGV4aXN0cyAiTmVnYXRpdmUgRy5ERTcyIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiTmVnYXRpdmUgRy5ERTcyIE9ic2VydmF0aW9uIgpkZWZpbmUgIk5lZ2F0aXZlIEcuREU3MiBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJOZWdhdGl2ZSAtIEhJVi5HLkRFNzIiXQpkZWZpbmUgIk5lZ2F0aXZlIEcuREU3MiBPYnNlcnZhdGlvbiI6CiAgIlN5cGhpbGlzIHRlc3QgcmVzdWx0IEcuREU3MCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTmVnYXRpdmUgLSBISVYuRy5ERTcyIgovKiBFbmQgb2YgTmVnYXRpdmUgRy5ERTcyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5HLkRFNzMgLSBJbmNvbmNsdXNpdmUKQGFjdGl2aXR5OiBISVYuRDIwIERpYWdub3N0aWNzCkBkZXNjcmlwdGlvbjogVGVzdCByZXN1bHQgaXMgaW5jb25jbHVzaXZlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJJbmNvbmNsdXNpdmUgRy5ERTczIjoKICBleGlzdHMgIkluY29uY2x1c2l2ZSBHLkRFNzMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJJbmNvbmNsdXNpdmUgRy5ERTczIE9ic2VydmF0aW9uIgpkZWZpbmUgIkluY29uY2x1c2l2ZSBHLkRFNzMgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iSW5jb25jbHVzaXZlIC0gSElWLkcuREU3MyJdCmRlZmluZSAiSW5jb25jbHVzaXZlIEcuREU3MyBPYnNlcnZhdGlvbiI6CiAgIlN5cGhpbGlzIHRlc3QgcmVzdWx0IEcuREU3MCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iSW5jb25jbHVzaXZlIC0gSElWLkcuREU3MyIKLyogRW5kIG9mIEluY29uY2x1c2l2ZSBHLkRFNzMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkguREUzNCAtIEhJViBzdGF0dXMgb2YgcGFydG5lciBvciBjb250YWN0CkBhY3Rpdml0eTogSElWLkI2IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogSElWIHN0YXR1cyBvZiB0aGUgcGFydG5lciBvciBjb250YWN0IGdpdmVuIGJ5IHRoZSBpbmRleCBjYXNlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYgc3RhdHVzIG9mIHBhcnRuZXIgb3IgY29udGFjdCI6CiAgZXhpc3RzICJISVYgc3RhdHVzIG9mIHBhcnRuZXIgb3IgY29udGFjdCBPYnNlcnZhdGlvbiIKZGVmaW5lICJISVYgc3RhdHVzIG9mIHBhcnRuZXIgb3IgY29udGFjdCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSElWIHN0YXR1cyBvZiBwYXJ0bmVyIG9yIGNvbnRhY3QiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgSElWIHN0YXR1cyBvZiBwYXJ0bmVyIG9yIGNvbnRhY3QgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkguREUzNSAtIEFscmVhZHkga25ldyBwb3NpdGl2ZQpAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRoZSBwYXJ0bmVyIG9yIGNvbnRhY3Qgb2YgdGhlIGluZGV4IGNhc2UgYWxyZWFkeSBrbmV3IHRoZXkgYXJlIEhJVi1wb3NpdGl2ZQoqLwoKZGVmaW5lICJBbHJlYWR5IGtuZXcgcG9zaXRpdmUiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhJViBzdGF0dXMgb2YgcGFydG5lciBvciBjb250YWN0Il0gTyAKICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICBhbmQgZXhpc3RzKE8uY2F0ZWdvcnkgT0Mgd2hlcmUgT0MgfiBDb25jZXB0c0N1c3RvbS4ic29jaWFsLWhpc3RvcnkiKQogICAgYW5kIE8uY29kZSB+IENvbmNlcHRzLiJBbHJlYWR5IGtuZXcgcG9zaXRpdmUiCi8qIEVuZCBvZiBBbHJlYWR5IGtuZXcgcG9zaXRpdmUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkguREUzNiAtIE5ld2x5IGRpYWdub3NlZApAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRoZSBwYXJ0bmVyIG9yIGNvbnRhY3Qgb2YgdGhlIGluZGV4IGNhc2UgaXMgbmV3bHkgZGlhZ25vc2VkIGFzIEhJVi1wb3NpdGl2ZQoqLwoKZGVmaW5lICJOZXdseSBkaWFnbm9zZWQiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhJViBzdGF0dXMgb2YgcGFydG5lciBvciBjb250YWN0Il0gTyAKICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICBhbmQgZXhpc3RzKE8uY2F0ZWdvcnkgT0Mgd2hlcmUgT0MgfiBDb25jZXB0c0N1c3RvbS4ic29jaWFsLWhpc3RvcnkiKQogICAgYW5kIE8uY29kZSB+IENvbmNlcHRzLiJOZXdseSBkaWFnbm9zZWQiCi8qIEVuZCBvZiBOZXdseSBkaWFnbm9zZWQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkguREUzNyAtIE5lZ2F0aXZlCkBhY3Rpdml0eTogSElWLkI2IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogVGhlIHBhcnRuZXIgb3IgY29udGFjdCBvZiB0aGUgaW5kZXggY2FzZSBpcyBuZXdseSBkaWFnbm9zZWQgaXMgSElWLW5lZ2F0aXZlCiovCgpkZWZpbmUgIk5lZ2F0aXZlIEguREUzNyI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSElWIHN0YXR1cyBvZiBwYXJ0bmVyIG9yIGNvbnRhY3QiXSBPIAogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgIGFuZCBleGlzdHMoTy5jYXRlZ29yeSBPQyB3aGVyZSBPQyB+IENvbmNlcHRzQ3VzdG9tLiJzb2NpYWwtaGlzdG9yeSIpCiAgICBhbmQgTy5jb2RlIH4gQ29uY2VwdHMuIk5lZ2F0aXZlIC0gSElWLkguREUzNyIKLyogRW5kIG9mIE5lZ2F0aXZlIEguREUzNyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuSC5ERTQxIC0gSElWIHRyZWF0bWVudCBvdXRjb21lCkBhY3Rpdml0eTogSElWLkgzIFJlY29yZCBvdXRyZWFjaCBhbmQgcmVzdWx0CkBkZXNjcmlwdGlvbjogVGhlIG91dGNvbWUgZm9yIHRoZSBjbGllbnQgd2hpY2ggaXMgdXNlZCBmb3IgcmVwb3J0aW5nIHJldGVudGlvbi9hdHRyaXRpb24uCiovCgpkZWZpbmUgIkhJViB0cmVhdG1lbnQgb3V0Y29tZSI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSElWIHRyZWF0bWVudCBvdXRjb21lIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIEhJViB0cmVhdG1lbnQgb3V0Y29tZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuSC5ERTQyIC0gTG9zdCB0byBmb2xsb3ctdXAKQGFjdGl2aXR5OiBISVYuSDMgUmVjb3JkIG91dHJlYWNoIGFuZCByZXN1bHQKQGRlc2NyaXB0aW9uOiBUd2VudHktZWlnaHQgZGF5cyBvciBtb3JlIHNpbmNlIGxhc3QgbWlzc2VkIGFwcG9pbnRtZW50IAoqLwogICAKLyogRW5kIG9mIExvc3QgdG8gZm9sbG93LXVwICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ILkRFNDMgLSBUcmFuc2ZlcnJlZCBvdXQKQGFjdGl2aXR5OiBISVYuSDMgUmVjb3JkIG91dHJlYWNoIGFuZCByZXN1bHQKQGRlc2NyaXB0aW9uOiBUaGUgY2xpZW50IHRyYW5zZmVycmVkIHRvIGFub3RoZXIgZmFjaWxpdHkKKi8KZGVmaW5lICJIYXMgdHJhbnNmZXJyZWQgb3V0IjoKICBleGlzdHMgIlRyYW5zZmVycmVkIG91dCIKCmRlZmluZSAiVHJhbnNmZXJyZWQgb3V0IjoKICBmbGF0dGVueyJUcmFuc2ZlcnJlZCBvdXQgc3RhdHVzIiwiVHJhbnNmZXJyZWQgb3V0IHN0YXR1c0hpc3RvcnkiLnN0YXR1c0hpc3RvcnkucGVyaW9kfQoKZGVmaW5lICJUcmFuc2ZlcnJlZCBvdXQgc3RhdHVzIjoKICAgIFtFcGlzb2RlT2ZDYXJlXSBFT0MKICAgIHdoZXJlIGV4aXN0cyhFT0MudHlwZSBUIHdoZXJlIFQgfiBDb25jZXB0cy4iT24gQVJUIC0gSElWLkguREU0NyIpCiAgICAgIGFuZCBFT0Muc3RhdHVzID0gJ2ZpbmlzaGVkJwogICAgcmV0dXJuIEVPQy5wZXJpb2QKCmRlZmluZSAiVHJhbnNmZXJyZWQgb3V0IHN0YXR1c0hpc3RvcnkiOgogICAgW0VwaXNvZGVPZkNhcmVdIEVPQwogICAgd2hlcmUgZXhpc3RzKEVPQy50eXBlIFQgd2hlcmUgVCB+IENvbmNlcHRzLiJPbiBBUlQgLSBISVYuSC5ERTQ3IikgCiAgICBhbmQgKGV4aXN0cyAoCiAgICAgIEVPQy5zdGF0dXNIaXN0b3J5IEgKICAgICAgd2hlcmUgSC5zdGF0dXMgPSAnZmluaXNoZWQnCiAgICAgIGFuZCBILnBlcmlvZCBpcyBub3QgbnVsbCkpCiAgICAgIAoKCi8qIEVuZCBvZiBUcmFuc2ZlcnJlZCBvdXQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkguREU0NCAtIERlYXRoIGRvY3VtZW50ZWQKQGFjdGl2aXR5OiBISVYuSDMgUmVjb3JkIG91dHJlYWNoIGFuZCByZXN1bHQKQGRlc2NyaXB0aW9uOiBQZW9wbGUgbGl2aW5nIHdpdGggSElWIHByZXZpb3VzbHkgb24gQVJUIHdobyBhcmUgY29uZmlybWVkIHRvIGhhdmUgZGllZCBmcm9tIGFueSBjYXVzZQoqLwpkZWZpbmUgIkRlYXRoIGRvY3VtZW50ZWQiOgogIGNhc2UgCiAgICB3aGVuIFBhdGllbnQuZGVjZWFzZWQgaXMgRkhJUi5ib29sZWFuIGFuZCBQYXRpZW50LmRlY2Vhc2VkIH4gdHJ1ZSB0aGVuIFBhdGllbnQubWV0YS5sYXN0VXBkYXRlZC52YWx1ZQogICAgd2hlbiBQYXRpZW50LmRlY2Vhc2VkIGlzIEZISVIuZGF0ZVRpbWUgdGhlbiBQYXRpZW50LmRlY2Vhc2VkIGFzIEZISVIuZGF0ZVRpbWUKICAgIGVsc2UgbnVsbAogIGVuZAoKZGVmaW5lICJIYXMgZGVhdGggZG9jdW1lbnRlZCI6CiAgIkRlYXRoIGRvY3VtZW50ZWQiIGlzIG5vdCBudWxsCi8qIEVuZCBvZiBEZWF0aCBkb2N1bWVudGVkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ILkRFNDUgLSBSZWZ1c2VkIHN0b3BwZWQgdHJlYXRtZW50CkBhY3Rpdml0eTogSElWLkgzIFJlY29yZCBvdXRyZWFjaCBhbmQgcmVzdWx0CkBkZXNjcmlwdGlvbjogQ2xpZW50IHdhcyBjb250YWN0ZWQgYW5kIGNvbmZpcm1lZCB0byBoYXZlIHN0b3BwZWQgQVJUIChyZWFzb25zIG1heSBpbmNsdWRlIHN0aWdtYSBhbmQgZGlzY3JpbWluYXRpb24sIGZhaXRoIGhlYWxpbmcsIGV0Yy4pCiovCgpkZWZpbmUgIlJlZnVzZWQgc3RvcHBlZCB0cmVhdG1lbnQiOgogIFtNZWRpY2F0aW9uU3RhdGVtZW50XSBNUwogICAgd2hlcmUgTVMuc3RhdHVzIGluIHsnc3RvcHBlZCd9CiAgICBhbmQgZXhpc3RzKE1TLnJlYXNvbkNvZGUgQyB3aGVyZSBDIH4gQ29uY2VwdHMuIk9uIEFSVCAtIEhJVi5ILkRFNDciKQogICAgYW5kIGV4aXN0cyhNUy5zdGF0dXNSZWFzb24gUiB3aGVyZSBSIH4gQ29uY2VwdHMuIlJlZnVzZWQgc3RvcHBlZCB0cmVhdG1lbnQiKQogICAgc29ydCBieSBzdGFydCBvZiBlZmZlY3RpdmUudG9JbnRlcnZhbCgpCi8qIEVuZCBvZiBSZWZ1c2VkIHN0b3BwZWQgdHJlYXRtZW50ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ILkRFNDcgLSBPbiBBUlQKQGFjdGl2aXR5OiBISVYuSDMgUmVjb3JkIG91dHJlYWNoIGFuZCByZXN1bHQKQGRlc2NyaXB0aW9uOiBDbGllbnQgaXMgY3VycmVudGx5IHRha2luZyBBUlQgCiovCgpkZWZpbmUgIk9uIEFSVCBILkRFNDciOgogICAgW01lZGljYXRpb25TdGF0ZW1lbnRdIE1TCiAgICB3aGVyZSBleGlzdHMoTVMucmVhc29uQ29kZSBDIHdoZXJlIEMgfiBDb25jZXB0cy4iT24gQVJUIC0gSElWLkguREU0NyIpCiAgICBzb3J0IGJ5IHN0YXJ0IG9mIGVmZmVjdGl2ZS50b0ludGVydmFsKCkKLyogRW5kIG9mIE9uIEFSVCBILkRFNDcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkguREU3MyAtIERhdGUgQVJUIHN0b3BwZWQKQGFjdGl2aXR5OiBISVYuSDMgUmVjb3JkIG91dHJlYWNoIGFuZCByZXN1bHQKQGRlc2NyaXB0aW9uOiBEYXRlIG9uIHdoaWNoIGNsaWVudCBzdG9wcGVkIEFSVAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGF0ZSBBUlQgc3RvcHBlZCBILkRFNzMiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkRhdGUgQVJUIHN0b3BwZWQgLSBISVYuSC5ERTczIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJEYXRlIEFSVCBzdG9wcGVkIEguREU3MyBWYWx1ZSI6CiAgIkRhdGUgQVJUIHN0b3BwZWQgSC5ERTczIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIERhdGUgQVJUIHN0b3BwZWQgSC5ERTczICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ILkRFNzQgLSBSZWFzb24gQVJUIHN0b3BwZWQKQGFjdGl2aXR5OiBISVYuSDMgUmVjb3JkIG91dHJlYWNoIGFuZCByZXN1bHQKQGRlc2NyaXB0aW9uOiBSZWFzb24gd2h5IGNsaWVudCBpbnRlbnRpb25hbGx5IHN0b3BwZWQgQVJUCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZWFzb24gQVJUIHN0b3BwZWQgSC5ERTc0IjoKICBleGlzdHMgIlJlYXNvbiBBUlQgc3RvcHBlZCBILkRFNzQgT2JzZXJ2YXRpb24iCmRlZmluZSAiUmVhc29uIEFSVCBzdG9wcGVkIEguREU3NCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iUmVhc29uIEFSVCBzdG9wcGVkIC0gSElWLkguREU3NCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBSZWFzb24gQVJUIHN0b3BwZWQgSC5ERTc0ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ILkRFNzUgLSBUb3hpY2l0eS9zaWRlIGVmZmVjdHMKQGFjdGl2aXR5OiBISVYuSDMgUmVjb3JkIG91dHJlYWNoIGFuZCByZXN1bHQKQGRlc2NyaXB0aW9uOiBDbGllbnQgc3RvcHBlZCBBUlQgYmVjYXVzZSBvZiB0b3hpY2l0eS9zaWRlIGVmZmVjdHMKKi8KCmRlZmluZSAiVG94aWNpdHkvc2lkZSBlZmZlY3RzIEguREU3NSI6CiAgW01lZGljYXRpb25TdGF0ZW1lbnRdIE1TCiAgICB3aGVyZSBNUy5zdGF0dXMgaW4geydzdG9wcGVkJ30KICAgIGFuZCBleGlzdHMoTVMucmVhc29uQ29kZSBDIHdoZXJlIEMgfiBDb25jZXB0cy4iT24gQVJUIC0gSElWLkguREU0NyIpCiAgICBhbmQgZXhpc3RzKE1TLnN0YXR1c1JlYXNvbiBSIHdoZXJlIFIgfiBDb25jZXB0cy4iVG94aWNpdHkvc2lkZSBlZmZlY3RzIC0gSElWLkguREU3NSIpCiAgICBzb3J0IGJ5IHN0YXJ0IG9mIGVmZmVjdGl2ZS50b0ludGVydmFsKCkKLyogRW5kIG9mIFRveGljaXR5L3NpZGUgZWZmZWN0cyBILkRFNzUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkguREU3NiAtIFNldmVyZSBpbGxuZXNzLCBob3NwaXRhbGl6YXRpb24KQGFjdGl2aXR5OiBISVYuSDMgUmVjb3JkIG91dHJlYWNoIGFuZCByZXN1bHQKQGRlc2NyaXB0aW9uOiBDbGllbnQgc3RvcHBlZCBBUlQgYmVjYXVzZSBvZiBzZXZlcmUgaWxsbmVzcywgaG9zcGl0YWxpemF0aW9uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJTZXZlcmUgaWxsbmVzcywgaG9zcGl0YWxpemF0aW9uIEguREU3NiI6CiAgZXhpc3RzICJTZXZlcmUgaWxsbmVzcywgaG9zcGl0YWxpemF0aW9uIEguREU3NiBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIlNldmVyZSBpbGxuZXNzLCBob3NwaXRhbGl6YXRpb24gSC5ERTc2IE9ic2VydmF0aW9uIgpkZWZpbmUgIlNldmVyZSBpbGxuZXNzLCBob3NwaXRhbGl6YXRpb24gSC5ERTc2IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIlNldmVyZSBpbGxuZXNzLCBob3NwaXRhbGl6YXRpb24gLSBISVYuSC5ERTc2Il0KZGVmaW5lICJTZXZlcmUgaWxsbmVzcywgaG9zcGl0YWxpemF0aW9uIEguREU3NiBPYnNlcnZhdGlvbiI6CiAgIlJlYXNvbiBBUlQgc3RvcHBlZCBILkRFNzQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIlNldmVyZSBpbGxuZXNzLCBob3NwaXRhbGl6YXRpb24gLSBISVYuSC5ERTc2IgovKiBFbmQgb2YgU2V2ZXJlIGlsbG5lc3MsIGhvc3BpdGFsaXphdGlvbiBILkRFNzYgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkguREU3NyAtIERydWdzIG91dCBvZiBzdG9jayAKQGFjdGl2aXR5OiBISVYuSDMgUmVjb3JkIG91dHJlYWNoIGFuZCByZXN1bHQKQGRlc2NyaXB0aW9uOiBDbGllbnQgc3RvcHBlZCBBUlQgYmVjYXVzZSBvZiBkcnVncyBiZWluZyBvdXQgb2Ygc3RvY2sgCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEcnVncyBvdXQgb2Ygc3RvY2sgIjoKICBleGlzdHMgIkRydWdzIG91dCBvZiBzdG9jayAgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJEcnVncyBvdXQgb2Ygc3RvY2sgIE9ic2VydmF0aW9uIgpkZWZpbmUgIkRydWdzIG91dCBvZiBzdG9jayAgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iRHJ1Z3Mgb3V0IG9mIHN0b2NrICJdCmRlZmluZSAiRHJ1Z3Mgb3V0IG9mIHN0b2NrICBPYnNlcnZhdGlvbiI6CiAgIlJlYXNvbiBBUlQgc3RvcHBlZCBILkRFNzQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIkRydWdzIG91dCBvZiBzdG9jayAiCi8qIEVuZCBvZiBEcnVncyBvdXQgb2Ygc3RvY2sgICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ILkRFNzggLSBDbGllbnQgbGFja3MgZmluYW5jZXMgCkBhY3Rpdml0eTogSElWLkgzIFJlY29yZCBvdXRyZWFjaCBhbmQgcmVzdWx0CkBkZXNjcmlwdGlvbjogQ2xpZW50IHN0b3BwZWQgQVJUIGJlY2F1c2UgY2xpZW50IGxhY2tlZCBmaW5hbmNlcyAKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNsaWVudCBsYWNrcyBmaW5hbmNlcyAiOgogIGV4aXN0cyAiQ2xpZW50IGxhY2tzIGZpbmFuY2VzICBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkNsaWVudCBsYWNrcyBmaW5hbmNlcyAgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ2xpZW50IGxhY2tzIGZpbmFuY2VzICBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJDbGllbnQgbGFja3MgZmluYW5jZXMgIl0KZGVmaW5lICJDbGllbnQgbGFja3MgZmluYW5jZXMgIE9ic2VydmF0aW9uIjoKICAiUmVhc29uIEFSVCBzdG9wcGVkIEguREU3NCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iQ2xpZW50IGxhY2tzIGZpbmFuY2VzICIKLyogRW5kIG9mIENsaWVudCBsYWNrcyBmaW5hbmNlcyAgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkguREU3OSAtIEV4Y2x1ZGVkIEhJViBpbmZlY3Rpb24gaW4gaW5mYW50CkBhY3Rpdml0eTogSElWLkgzIFJlY29yZCBvdXRyZWFjaCBhbmQgcmVzdWx0CkBkZXNjcmlwdGlvbjogQ2xpZW50IHN0b3BwZWQgQVJUIGJlY2F1c2UgdGhlIGluZmFudCB3YXMgZGV0ZXJtaW5lZCB0byBub3QgaGF2ZSBISVYKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkV4Y2x1ZGVkIEhJViBpbmZlY3Rpb24gaW4gaW5mYW50IEguREU3OSI6CiAgZXhpc3RzICJFeGNsdWRlZCBISVYgaW5mZWN0aW9uIGluIGluZmFudCBILkRFNzkgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJFeGNsdWRlZCBISVYgaW5mZWN0aW9uIGluIGluZmFudCBILkRFNzkgT2JzZXJ2YXRpb24iCmRlZmluZSAiRXhjbHVkZWQgSElWIGluZmVjdGlvbiBpbiBpbmZhbnQgSC5ERTc5IENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkV4Y2x1ZGVkIEhJViBpbmZlY3Rpb24gaW4gaW5mYW50IC0gSElWLkguREU3OSJdCmRlZmluZSAiRXhjbHVkZWQgSElWIGluZmVjdGlvbiBpbiBpbmZhbnQgSC5ERTc5IE9ic2VydmF0aW9uIjoKICAiUmVhc29uIEFSVCBzdG9wcGVkIEguREU3NCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iRXhjbHVkZWQgSElWIGluZmVjdGlvbiBpbiBpbmZhbnQgLSBISVYuSC5ERTc5IgovKiBFbmQgb2YgRXhjbHVkZWQgSElWIGluZmVjdGlvbiBpbiBpbmZhbnQgSC5ERTc5ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5ILkRFODAgLSBPdGhlciByZWFzb24gZm9yIHN0b3BwaW5nIEFSVApAYWN0aXZpdHk6IEhJVi5IMyBSZWNvcmQgb3V0cmVhY2ggYW5kIHJlc3VsdApAZGVzY3JpcHRpb246IENsaWVudCBzdG9wcGVkIEFSVCBmb3Igb3RoZXIgcmVhc29uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJPdGhlciByZWFzb24gZm9yIHN0b3BwaW5nIEFSVCBILkRFODAiOgogIGV4aXN0cyAiT3RoZXIgcmVhc29uIGZvciBzdG9wcGluZyBBUlQgSC5ERTgwIENvbmRpdGlvbiIKICAgIG9yIGV4aXN0cyAiT3RoZXIgcmVhc29uIGZvciBzdG9wcGluZyBBUlQgSC5ERTgwIE9ic2VydmF0aW9uIgpkZWZpbmUgIk90aGVyIHJlYXNvbiBmb3Igc3RvcHBpbmcgQVJUIEguREU4MCBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJPdGhlciByZWFzb24gZm9yIHN0b3BwaW5nIEFSVCAtIEhJVi5ILkRFODAiXQpkZWZpbmUgIk90aGVyIHJlYXNvbiBmb3Igc3RvcHBpbmcgQVJUIEguREU4MCBPYnNlcnZhdGlvbiI6CiAgIlJlYXNvbiBBUlQgc3RvcHBlZCBILkRFNzQgT2JzZXJ2YXRpb24iIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIH4gQ29uY2VwdHMuIk90aGVyIHJlYXNvbiBmb3Igc3RvcHBpbmcgQVJUIC0gSElWLkguREU4MCIKLyogRW5kIG9mIE90aGVyIHJlYXNvbiBmb3Igc3RvcHBpbmcgQVJUIEguREU4MCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuUFJWLkRFMSAtIEF0IGVsZXZhdGVkIHJpc2sgZm9yIEhJViBhY3F1aXNpdGlvbgpAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCBpcyBhdCBlbGV2YXRlZCByaXNrIGZvciBISVYgYWNxdWlzaXRpb24sIGRlZmluZWQgYWNjb3JkaW5nIHRvIGNvdW50cnkvcHJvZ3JhbW1lIGNvbnRleHQKKi8KCmRlZmluZSAiQXQgZWxldmF0ZWQgcmlzayBmb3IgSElWIGFjcXVpc2l0aW9uIFBSVi5ERTEiOgogIFtPYnNlcnZhdGlvbl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgIGFuZCBleGlzdHMoTy5jYXRlZ29yeSBPQyB3aGVyZSBPQyB+IENvbmNlcHRzQ3VzdG9tLiJzb2NpYWwtaGlzdG9yeSIpCiAgICBhbmQgTy5jb2RlIH4gQ29uY2VwdHMuIkF0IGVsZXZhdGVkIHJpc2sgZm9yIEhJViBhY3F1aXNpdGlvbiAtIEhJVi5QUlYuREUxIgovKiBFbmQgb2YgQXQgZWxldmF0ZWQgcmlzayBmb3IgSElWIGFjcXVpc2l0aW9uIFBSVi5ERTEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLlBSVi5ERTIgLSBISVYgcHJldmVudGlvbiBpbnRlcnZlbnRpb24KQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBISVYgcHJldmVudGlvbiBpbnRlcnZlbnRpb24gdGhhdCBjbGllbnQgYWNjZXNzZWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhJViBwcmV2ZW50aW9uIGludGVydmVudGlvbiI6CiAgZXhpc3RzICJISVYgcHJldmVudGlvbiBpbnRlcnZlbnRpb24gT2JzZXJ2YXRpb24iCmRlZmluZSAiSElWIHByZXZlbnRpb24gaW50ZXJ2ZW50aW9uIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJISVYgcHJldmVudGlvbiBpbnRlcnZlbnRpb24iXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgSElWIHByZXZlbnRpb24gaW50ZXJ2ZW50aW9uICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5QUlYuREUzIC0gUHJFUCBzZXJ2aWNlCkBhY3Rpdml0eTogSElWLkI2IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50IGFjY2Vzc2VkIFByRVAgc2VydmljZXMKKi8KCmRlZmluZSAiUHJFUCBzZXJ2aWNlIjoKICBbTWVkaWNhdGlvblN0YXRlbWVudF0gTVMKICAgIHdoZXJlIGV4aXN0cyhNUy5yZWFzb25Db2RlIEMgd2hlcmUgQyB+IENvbmNlcHRzLiJQckVQIGZvciBISVYgcHJldmVudGlvbiIpCiAgICBzb3J0IGJ5IHN0YXJ0IG9mIGVmZmVjdGl2ZS50b0ludGVydmFsKCkKLyogRW5kIG9mIFByRVAgc2VydmljZSAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuUFJWLkRFNCAtIE9BTVQKQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgYWNjZXNzZWQgb3Bpb2lkIGFnb25pc3QgbWFpbnRlbmFuY2UgdHJlYXRtZW50IChPQU1UKSBzZXJ2aWNlcwoqLwoKZGVmaW5lICJPQU1UIjoKICBmbGF0dGVueyJPQU1UIHN0YXR1cyIsIk9BTVQgc3RhdHVzSGlzdG9yeSIuc3RhdHVzSGlzdG9yeS5wZXJpb2R9CgpkZWZpbmUgIk9BTVQgc3RhdHVzIjoKICAgIFtFcGlzb2RlT2ZDYXJlXSBFT0MKICAgIHdoZXJlIGV4aXN0cyhFT0MudHlwZSBUIHdoZXJlIFQgfiBDb25jZXB0cy4iT0FNVCIpCiAgICByZXR1cm4gRU9DLnBlcmlvZAoKZGVmaW5lICJPQU1UIHN0YXR1c0hpc3RvcnkiOgogICAgW0VwaXNvZGVPZkNhcmVdIEVPQwogICAgd2hlcmUgZXhpc3RzKEVPQy50eXBlIFQgd2hlcmUgVCB+IENvbmNlcHRzLiJPQU1UIikgCiAgICBhbmQgKGV4aXN0cyAoCiAgICAgIEVPQy5zdGF0dXNIaXN0b3J5IEgKICAgICAgd2hlcmUgSC5wZXJpb2QgaXMgbm90IG51bGwpKQoKCgoKLyogRW5kIG9mIE9BTVQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLlBSVi5ERTUgLSBOU1AKQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBDbGllbnQgYWNjZXNzZWQgbmVlZGxlLXN5cmluZ2UgcHJvZ3JhbW1lIChOU1ApIHNlcnZpY2VzCiovCgpkZWZpbmUgIk5TUCI6CiAgW0RldmljZVVzZVN0YXRlbWVudF0gRFVTCiAgd2l0aCBbRGV2aWNlOiBDb25jZXB0c0N1c3RvbS4ibmVlZGxlLXN5cmluZ2UiXSBECiAgICAgIHN1Y2ggdGhhdCBEVVMucmVhc29uUmVmZXJlbmNlLnJlZmVyZW5jZXMoRCkgCiAgICAgICAgYW5kIEQuc3RhdHVzIGluIHsgJ2FjdGl2ZScgfQogIHdoZXJlIERVUy5zdGF0dXMgPSAnY29tcGxldGVkJwovKiBFbmQgb2YgTlNQICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5QUlYuREU2IC0gU1RJIHNlcnZpY2VzCkBhY3Rpdml0eTogSElWLkI2IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50IGFjY2Vzc2VkIHNleHVhbGx5IHRyYW5zbWl0dGVkIGluZmVjdGlvbiAoU1RJKSBzZXJ2aWNlcwoqLwoKZGVmaW5lICJTVEkgc2VydmljZXMiOgogIFtQcm9jZWR1cmVdIFAKICB3aGVyZSBQLnN0YXR1cyA9ICdjb21wbGV0ZWQnCiAgYW5kIFAuY29kZSB+IENvbmNlcHRzLiJTVEkgdGVzdGluZyBhbmQgdHJlYXRtZW50IHNlcnZpY2VzIgovKiBFbmQgb2YgU1RJIHNlcnZpY2VzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5QUlYuREU3IC0gVk1NQwpAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCBhY2Nlc3NlZCB2b2x1bnRhcnkgbWVkaWNhbCBtYWxlIGNpcmN1bWNpc2lvbiAoVk1NQykgc2VydmljZXMKKi8KLy8gZGVmaW5lICJWTU1DX2RvbmUiOgovLyBbUHJvY2VkdXJlXSBQCi8vICAgd2hlcmUgUC5zdGF0dXMgPSAnY29tcGxldGVkJwovLyAgIGFuZCBQLmNvZGUgfiBDb25jZXB0cy4iVm9sdW50YXJ5IG1lZGljYWwgbWFsZSBjaXJjdW1jaXNpb24gVk1NQyIKCgpkZWZpbmUgIlZNTUMiOgogIFtQcm9jZWR1cmVdIFAKICB3aGVyZSBQLnN0YXR1cyA9ICdjb21wbGV0ZWQnCiAgYW5kIFAuY29kZSB+IENvbmNlcHRzLiJWb2x1bnRhcnkgbWVkaWNhbCBtYWxlIGNpcmN1bWNpc2lvbiBWTU1DIgovKiBFbmQgb2YgVk1NQyAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuUFJWLkRFOCAtIE90aGVyCkBhY3Rpdml0eTogSElWLkI2IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50IGFjY2Vzc2VkIG90aGVyIEhJViBwcmV2ZW50aW9uIHNlcnZpY2VzCiovCgpkZWZpbmUgIk90aGVyIFBSVi5ERTgiOgogIFtPYnNlcnZhdGlvbl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geydmaW5hbCcsICdhbWVuZGVkJ30KICAgIGFuZCBPLmNvZGUgfiBDb25jZXB0cy4iSElWIHByZXZlbnRpb24gaW50ZXJ2ZW50aW9uIgogICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iT3RoZXIgLSBISVYuUFJWLkRFOCIKICAgIHNvcnQgYnkgc3RhcnQgb2YgZWZmZWN0aXZlLnRvSW50ZXJ2YWwoKQogIAovKiBFbmQgb2YgT3RoZXIgUFJWLkRFOCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuUFJWLkRFMTAgLSBEYXRlIGFjY2Vzc2VkIEhJViBwcmV2ZW50aW9uIGludGVydmVudGlvbgpAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IERhdGUgdGhlIGNsaWVudCBhY2Nlc3NlZCBISVYgcHJldmVudGlvbiBpbnRlcnZlbnRpb24KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkRhdGUgYWNjZXNzZWQgSElWIHByZXZlbnRpb24gaW50ZXJ2ZW50aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJEYXRlIGFjY2Vzc2VkIEhJViBwcmV2ZW50aW9uIGludGVydmVudGlvbiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRGF0ZSBhY2Nlc3NlZCBISVYgcHJldmVudGlvbiBpbnRlcnZlbnRpb24gVmFsdWUiOgogICJEYXRlIGFjY2Vzc2VkIEhJViBwcmV2ZW50aW9uIGludGVydmVudGlvbiIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBEYXRlIGFjY2Vzc2VkIEhJViBwcmV2ZW50aW9uIGludGVydmVudGlvbiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuUFJWLkRFMTEgLSBISVYgc3RhdHVzIG9mIGNvbnRhY3QKQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBUaGUgSElWIHN0YXR1cyBvZiB0aGUgY2xpZW50J3MgY29udGFjdAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSElWIHN0YXR1cyBvZiBjb250YWN0IjoKICBleGlzdHMgIkhJViBzdGF0dXMgb2YgY29udGFjdCBPYnNlcnZhdGlvbiIKZGVmaW5lICJISVYgc3RhdHVzIG9mIGNvbnRhY3QgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhJViBzdGF0dXMgb2YgY29udGFjdCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBISVYgc3RhdHVzIG9mIGNvbnRhY3QgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLlBSVi5ERTEyIC0gSElWLXBvc2l0aXZlCkBhY3Rpdml0eTogSElWLkI2IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50J3MgY29udGFjdCBpcyBISVYtcG9zaXRpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhJVi1wb3NpdGl2ZSBQUlYuREUxMiI6CiAgZXhpc3RzICJISVYtcG9zaXRpdmUgUFJWLkRFMTIgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJISVYtcG9zaXRpdmUgUFJWLkRFMTIgT2JzZXJ2YXRpb24iCmRlZmluZSAiSElWLXBvc2l0aXZlIFBSVi5ERTEyIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhJVi1wb3NpdGl2ZSAtIEhJVi5QUlYuREUxMiJdCmRlZmluZSAiSElWLXBvc2l0aXZlIFBSVi5ERTEyIE9ic2VydmF0aW9uIjoKICAiSElWIHN0YXR1cyBvZiBjb250YWN0IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJISVYtcG9zaXRpdmUgLSBISVYuUFJWLkRFMTIiCi8qIEVuZCBvZiBISVYtcG9zaXRpdmUgUFJWLkRFMTIgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLlBSVi5ERTEzIC0gSElWLW5lZ2F0aXZlCkBhY3Rpdml0eTogSElWLkI2IENhcHR1cmUgb3IgdXBkYXRlIGNsaWVudCBoaXN0b3J5CkBkZXNjcmlwdGlvbjogQ2xpZW50J3MgY29udGFjdCBpcyBISVYtbmVnYXRpdmUKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhJVi1uZWdhdGl2ZSBQUlYuREUxMyI6CiAgZXhpc3RzICJISVYtbmVnYXRpdmUgUFJWLkRFMTMgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJISVYtbmVnYXRpdmUgUFJWLkRFMTMgT2JzZXJ2YXRpb24iCmRlZmluZSAiSElWLW5lZ2F0aXZlIFBSVi5ERTEzIENvbmRpdGlvbiI6CiAgW0NvbmRpdGlvbjogQ29uY2VwdHMuIkhJVi1uZWdhdGl2ZSAtIEhJVi5QUlYuREUxMyJdCmRlZmluZSAiSElWLW5lZ2F0aXZlIFBSVi5ERTEzIE9ic2VydmF0aW9uIjoKICAiSElWIHN0YXR1cyBvZiBjb250YWN0IE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJISVYtbmVnYXRpdmUgLSBISVYuUFJWLkRFMTMiCi8qIEVuZCBvZiBISVYtbmVnYXRpdmUgUFJWLkRFMTMgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLlBSVi5ERTE0IC0gVW5rbm93bgpAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCBkb2VzIG5vdCBrbm93IGNvbnRhY3QncyBISVYgc3RhdHVzCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJVbmtub3duIFBSVi5ERTE0IjoKICBleGlzdHMgIlVua25vd24gUFJWLkRFMTQgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJVbmtub3duIFBSVi5ERTE0IE9ic2VydmF0aW9uIgpkZWZpbmUgIlVua25vd24gUFJWLkRFMTQgQ29uZGl0aW9uIjoKICBbQ29uZGl0aW9uOiBDb25jZXB0cy4iVW5rbm93biAtIEhJVi5QUlYuREUxNCJdCmRlZmluZSAiVW5rbm93biBQUlYuREUxNCBPYnNlcnZhdGlvbiI6CiAgIkhJViBzdGF0dXMgb2YgY29udGFjdCBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iVW5rbm93biAtIEhJVi5QUlYuREUxNCIKLyogRW5kIG9mIFVua25vd24gUFJWLkRFMTQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLlBSVi5ERTE1IC0gRGF0ZSBpbmplY3RpbmcgZXF1aXBtZW50IHByb3ZpZGVkCkBhY3Rpdml0eTogSElWLkIyMSBPZmZlciBwcmV2ZW50aW9uIG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBEYXRlIGNsaWVudCB3YXMgcHJvdmlkZWQgd2l0aCBpbmplY3RpbmcgZXF1aXBtZW50CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJEYXRlIGluamVjdGluZyBlcXVpcG1lbnQgcHJvdmlkZWQiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkRhdGUgaW5qZWN0aW5nIGVxdWlwbWVudCBwcm92aWRlZCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRGF0ZSBpbmplY3RpbmcgZXF1aXBtZW50IHByb3ZpZGVkIFZhbHVlIjoKICAiRGF0ZSBpbmplY3RpbmcgZXF1aXBtZW50IHByb3ZpZGVkIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIERhdGUgaW5qZWN0aW5nIGVxdWlwbWVudCBwcm92aWRlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuUFJWLkRFMTcgLSBEYXRlIE9BTVQgaW5pdGlhdGVkCkBhY3Rpdml0eTogSElWLkIyMSBPZmZlciBwcmV2ZW50aW9uIG9wdGlvbnMKQGRlc2NyaXB0aW9uOiBEYXRlIGNsaWVudCBpbml0aWF0ZWQgb3Bpb2lkIGFnb25pc3QgbWFpbnRlbmFuY2UgdHJlYXRtZW50IChPQU1UKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGF0ZSBPQU1UIGluaXRpYXRlZCI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iRGF0ZSBPQU1UIGluaXRpYXRlZCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiRGF0ZSBPQU1UIGluaXRpYXRlZCBWYWx1ZSI6CiAgIkRhdGUgT0FNVCBpbml0aWF0ZWQiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgRGF0ZSBPQU1UIGluaXRpYXRlZCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuUFJWLkRFMjAgLSBDdXJyZW50bHkgb24gT0FNVApAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCBpcyBjdXJyZW50bHkgb24gb3Bpb2lkIGFnb25pc3QgbWFpbnRlbmFuY2UgdHJlYXRtZW50IChPQU1UKSBhdCByZXBvcnRpbmcgZGF0ZSwgZGVmaW5lZCBhY2NvcmRpbmcgdG8gY291bnRyeS9wcm9ncmFtIHRvIGFjY291bnQgZm9yIG1lZGljYXRpb24gZGlzcGVuc2VkIGFuZCBMVEZVIGNyaXRlcmlvbgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQ3VycmVudGx5IG9uIE9BTVQiOgogIGV4aXN0cyAiQ3VycmVudGx5IG9uIE9BTVQgT2JzZXJ2YXRpb24iCmRlZmluZSAiQ3VycmVudGx5IG9uIE9BTVQgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkN1cnJlbnRseSBvbiBPQU1UIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgaXMgdHJ1ZQovKiBFbmQgb2YgQ3VycmVudGx5IG9uIE9BTVQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLlBSVi5ERTIxIC0gUmV0YWluZWQgb24gT0FNVApAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCBpcyByZXRhaW5lZCBvbiBvcGlvaWQgYWdvbmlzdCBtYWludGVuYW5jZSB0cmVhdG1lbnQgKE9BTVQpIGF0IHJlcG9ydGluZyBkYXRlLCBkZWZpbmVkIGFjY29yZGluZyB0byBjb3VudHJ5L3Byb2dyYW0gdG8gYWNjb3VudCBmb3IgbWVkaWNhdGlvbiBkaXNwZW5zZWQgYW5kIExURlUgY3JpdGVyaW9uCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZXRhaW5lZCBvbiBPQU1UIjoKICBleGlzdHMgIlJldGFpbmVkIG9uIE9BTVQgT2JzZXJ2YXRpb24iCmRlZmluZSAiUmV0YWluZWQgb24gT0FNVCBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iUmV0YWluZWQgb24gT0FNVCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIFJldGFpbmVkIG9uIE9BTVQgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLlBSVi5ERTI1IC0gRGF0ZSBvZiBsb3NzIHRvIGZvbGxvdy11cCBvciBPQU1UIHN0b3BwZWQKQGFjdGl2aXR5OiBISVYuQjYgQ2FwdHVyZSBvciB1cGRhdGUgY2xpZW50IGhpc3RvcnkKQGRlc2NyaXB0aW9uOiBEYXRlIG9mIGxvc3MgdG8gZm9sbG93LXVwIG9yIG9waW9pZCBhZ29uaXN0IG1haW50ZW5hbmNlIHRyZWF0bWVudCAoT0FNVCkgc3RvcHBlZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRGF0ZSBvZiBsb3NzIHRvIGZvbGxvdy11cCBvciBPQU1UIHN0b3BwZWQiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkRhdGUgb2YgbG9zcyB0byBmb2xsb3ctdXAgb3IgT0FNVCBzdG9wcGVkIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJEYXRlIG9mIGxvc3MgdG8gZm9sbG93LXVwIG9yIE9BTVQgc3RvcHBlZCBWYWx1ZSI6CiAgIkRhdGUgb2YgbG9zcyB0byBmb2xsb3ctdXAgb3IgT0FNVCBzdG9wcGVkIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIERhdGUgb2YgbG9zcyB0byBmb2xsb3ctdXAgb3IgT0FNVCBzdG9wcGVkICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5QUlYuREUyNyAtIERhdGUgbWVkaWNhdGlvbnMgcHJlc2NyaWJlZApAYWN0aXZpdHk6IEhJVi5DMjMgUHJlc2NyaWJlIG9yIGFkbWluaXN0ZXIgUHJFUCBvciBQRVAKQGRlc2NyaXB0aW9uOiBEYXRlIHRoZSBjbGllbnQgd2FzIHByZXNjcmliZWQgbWVkaWNhdGlvbnMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkRhdGUgbWVkaWNhdGlvbnMgcHJlc2NyaWJlZCBQUlYuREUyNyI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iRGF0ZSBtZWRpY2F0aW9ucyBwcmVzY3JpYmVkIC0gSElWLlBSVi5ERTI3Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJEYXRlIG1lZGljYXRpb25zIHByZXNjcmliZWQgUFJWLkRFMjcgVmFsdWUiOgogICJEYXRlIG1lZGljYXRpb25zIHByZXNjcmliZWQgUFJWLkRFMjciIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgRGF0ZSBtZWRpY2F0aW9ucyBwcmVzY3JpYmVkIFBSVi5ERTI3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5QUlYuREUyOCAtIE51bWJlciBvZiBkYXlzIHByZXNjcmliZWQKQGFjdGl2aXR5OiBISVYuQzIzIFByZXNjcmliZSBvciBhZG1pbmlzdGVyIFByRVAgb3IgUEVQCkBkZXNjcmlwdGlvbjogRGF5cyBvZiBtZWRpY2F0aW9uIGNsaWVudCBoYXMgYmVlbiBwcmVzY3JpYmVkCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJOdW1iZXIgb2YgZGF5cyBwcmVzY3JpYmVkIFBSVi5ERTI4IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJOdW1iZXIgb2YgZGF5cyBwcmVzY3JpYmVkIC0gSElWLlBSVi5ERTI4Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJOdW1iZXIgb2YgZGF5cyBwcmVzY3JpYmVkIFBSVi5ERTI4IFZhbHVlIjoKICAiTnVtYmVyIG9mIGRheXMgcHJlc2NyaWJlZCBQUlYuREUyOCIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBOdW1iZXIgb2YgZGF5cyBwcmVzY3JpYmVkIFBSVi5ERTI4ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5TUlYuREUxIC0gSElWIHRlc3QgZGF0ZQpAYWN0aXZpdHk6IEhJVi5GOCBUZXN0IGluZmFudC9jaGlsZCBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogRGF0ZSBvZiB0aGUgSElWIHRlc3QKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhJViB0ZXN0IGRhdGUgU1JWLkRFMSI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSElWIHRlc3QgZGF0ZSAtIEhJVi5TUlYuREUxIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJISVYgdGVzdCBkYXRlIFNSVi5ERTEgVmFsdWUiOgogICJISVYgdGVzdCBkYXRlIFNSVi5ERTEiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgSElWIHRlc3QgZGF0ZSBTUlYuREUxICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5TUlYuREUyIC0gSElWIHRlc3QgcmVzdWx0CkBhY3Rpdml0eTogSElWLkI3IFRlc3QgZm9yIEhJViB1c2luZyB0ZXN0aW5nIGFsZ29yaXRobQpAZGVzY3JpcHRpb246IFRoZSByZXN1bHQgZnJvbSBISVYgdGVzdGluZyBhZnRlciBhcHBseWluZyB0aGUgdGVzdGluZyBhbGdvcml0aG0KKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkhJViB0ZXN0IHJlc3VsdCBTUlYuREUyIjoKICBleGlzdHMgIkhJViB0ZXN0IHJlc3VsdCBTUlYuREUyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkhJViB0ZXN0IHJlc3VsdCBTUlYuREUyIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJISVYgdGVzdCByZXN1bHQgLSBISVYuU1JWLkRFMiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBISVYgdGVzdCByZXN1bHQgU1JWLkRFMiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuU1JWLkRFMyAtIEJhc2VsaW5lIENENCBjb3VudApAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBDRDQgY291bnQgcGVyZm9ybWVkIGF0IEhJViBkaWFnbm9zaXMKKi8KCmRlZmluZSAiQmFzZWxpbmUgQ0Q0IGNvdW50IFNSVi5ERTMiOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkJhc2VsaW5lIENENCBjb3VudCAtIEhJVi5TUlYuREUzIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJCYXNlbGluZSBDRDQgY291bnQgU1JWLkRFMyBWYWx1ZSI6CiAgIkJhc2VsaW5lIENENCBjb3VudCBTUlYuREUzIiBPCiAgcmV0dXJuIE8udmFsdWUKLyogRW5kIG9mIEJhc2VsaW5lIENENCBjb3VudCBTUlYuREUzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5TUlYuREU0IC0gRGF0ZSBvZiBiYXNlbGluZSBDRDQgY291bnQgdGVzdApAYWN0aXZpdHk6IEhJVi5EMjAgRGlhZ25vc3RpY3MKQGRlc2NyaXB0aW9uOiBEYXRlIGFuZCB0aW1lIHdoZW4gYmFzZWxpbmUgQ0Q0IGNvdW50IHRlc3Qgd2FzIGNvbmR1Y3RlZAoqLwoKZGVmaW5lICJEYXRlIG9mIGJhc2VsaW5lIENENCBjb3VudCB0ZXN0IFNSVi5ERTQiOgogICJCYXNlbGluZSBDRDQgY291bnQgU1JWLkRFMyIgTwogIHJldHVybiBPLmVmZmVjdGl2ZS50b0ludGVydmFsKCkKLyogRW5kIG9mIERhdGUgb2YgYmFzZWxpbmUgQ0Q0IGNvdW50IHRlc3QgU1JWLkRFNCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuU1JWLkRFNSAtIEhJViBjbGluaWNhbCBzdGFnZQpAYWN0aXZpdHk6IEhJVi5EOCBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IFdITyBjbGluaWNhbCBzdGFnZSBvZiBjbGllbnQgYmFzZWQgb24gc2lnbnMgYW5kIHN5bXB0b21zLiBXSE8gY2xpbmljYWwgc3RhZ2luZyBpcyBhIHdheSB0byBjYXRlZ29yaXplIEhJViBkaXNlYXNlIHNldmVyaXR5IGJhc2VkIG9uIG5ldyBvciByZWN1cnJlbnQgY2xpbmljYWwgZXZlbnRzLiBUaGVyZSBhcmUgNCBXSE8gY2xpbmljYWwgc3RhZ2VzIHRoYXQgcmFuZ2UgZnJvbSBtaWxkIHN5bXB0b21zIChXSE8gY2xpbmljYWwgc3RhZ2UgMSkgdG8gc2V2ZXJlIHN5bXB0b21zIChXSE8gY2xpbmljYWwgc3RhZ2UgNCkuCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYgY2xpbmljYWwgc3RhZ2UgU1JWLkRFNSI6CiAgZXhpc3RzICJISVYgY2xpbmljYWwgc3RhZ2UgU1JWLkRFNSBPYnNlcnZhdGlvbiIKZGVmaW5lICJISVYgY2xpbmljYWwgc3RhZ2UgU1JWLkRFNSBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSElWIGNsaW5pY2FsIHN0YWdlIC0gSElWLlNSVi5ERTUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgSElWIGNsaW5pY2FsIHN0YWdlIFNSVi5ERTUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLlNSVi5ERTYgLSBBUlQgc3RhcnQgZGF0ZQpAYWN0aXZpdHk6IEhJVi5COCBQcm92aWRlIHBvc3QtdGVzdCBjb3Vuc2VsbGluZwpAZGVzY3JpcHRpb246IFRoZSBkYXRlIG9uIHdoaWNoIHRoZSBjbGllbnQgc3RhcnRlZCBvciByZXN0YXJ0ZWQgYW50aXJldHJvdmlyYWwgdGhlcmFweSAoQVJUKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiQVJUIHN0YXJ0IGRhdGUgU1JWLkRFNiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iQVJUIHN0YXJ0IGRhdGUgLSBISVYuU1JWLkRFNiJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiQVJUIHN0YXJ0IGRhdGUgU1JWLkRFNiBWYWx1ZSI6CiAgIkFSVCBzdGFydCBkYXRlIFNSVi5ERTYiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgQVJUIHN0YXJ0IGRhdGUgU1JWLkRFNiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuU1JWLkRFNyAtIEN1cnJlbnRseSBwcmVnbmFudApAYWN0aXZpdHk6IEhJVi5CNiBDYXB0dXJlIG9yIHVwZGF0ZSBjbGllbnQgaGlzdG9yeQpAZGVzY3JpcHRpb246IENsaWVudCBpcyBjdXJyZW50bHkgcHJlZ25hbnQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkN1cnJlbnRseSBwcmVnbmFudCBTUlYuREU3IjoKICBleGlzdHMgIkN1cnJlbnRseSBwcmVnbmFudCBTUlYuREU3IE9ic2VydmF0aW9uIgpkZWZpbmUgIkN1cnJlbnRseSBwcmVnbmFudCBTUlYuREU3IE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJDdXJyZW50bHkgcHJlZ25hbnQgLSBISVYuU1JWLkRFNyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIEN1cnJlbnRseSBwcmVnbmFudCBTUlYuREU3ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5TUlYuREU4IC0gQ0Q0IGNvdW50CkBhY3Rpdml0eTogSElWLkQyMCBEaWFnbm9zdGljcwpAZGVzY3JpcHRpb246IENENCBjZWxsIGNvdW50IGluIGNlbGxzL21tXjMKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkNENCBjb3VudCBTUlYuREU4IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJDRDQgY291bnQgLSBISVYuU1JWLkRFOCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CmRlZmluZSAiQ0Q0IGNvdW50IFNSVi5ERTggVmFsdWUiOgogICJDRDQgY291bnQgU1JWLkRFOCIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBDRDQgY291bnQgU1JWLkRFOCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuU1JWLkRFMTIgLSBEYXRlIG9mIHZpcmFsIGxvYWQgc2FtcGxlIGNvbGxlY3Rpb24KQGFjdGl2aXR5OiBISVYuRDEwIENvdW5zZWwgcmV0dXJuaW5nIGNsaWVudApAZGVzY3JpcHRpb246IERhdGUgYW5kIHRpbWUgd2hlbiB0aGUgc2FtcGxlIHdhcyBjb2xsZWN0ZWQgdG8gdGVzdCB0aGUgY2xpZW50J3MgSElWIHZpcmFsIGxvYWQKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkRhdGUgb2YgdmlyYWwgbG9hZCBzYW1wbGUgY29sbGVjdGlvbiBTUlYuREUxMiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iRGF0ZSBvZiB2aXJhbCBsb2FkIHNhbXBsZSBjb2xsZWN0aW9uIC0gSElWLlNSVi5ERTEyIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJEYXRlIG9mIHZpcmFsIGxvYWQgc2FtcGxlIGNvbGxlY3Rpb24gU1JWLkRFMTIgVmFsdWUiOgogICJEYXRlIG9mIHZpcmFsIGxvYWQgc2FtcGxlIGNvbGxlY3Rpb24gU1JWLkRFMTIiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgRGF0ZSBvZiB2aXJhbCBsb2FkIHNhbXBsZSBjb2xsZWN0aW9uIFNSVi5ERTEyICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5TUlYuREUxMyAtIFZpcmFsIGxvYWQgdGVzdCByZXN1bHQKQGFjdGl2aXR5OiBISVYuRDIwIERpYWdub3N0aWNzCkBkZXNjcmlwdGlvbjogUmVzdWx0IGZyb20gdGhlIHZpcmFsIGxvYWQgdGVzdCBpbiBudW1iZXIgb2YgY29waWVzL21MCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJWaXJhbCBsb2FkIHRlc3QgcmVzdWx0IFNSVi5ERTEzIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJWaXJhbCBsb2FkIHRlc3QgcmVzdWx0IC0gSElWLlNSVi5ERTEzIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJWaXJhbCBsb2FkIHRlc3QgcmVzdWx0IFNSVi5ERTEzIFZhbHVlIjoKICAiVmlyYWwgbG9hZCB0ZXN0IHJlc3VsdCBTUlYuREUxMyIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBWaXJhbCBsb2FkIHRlc3QgcmVzdWx0IFNSVi5ERTEzICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5TUlYuREUxNSAtIFZpc2l0IGRhdGUKQGFjdGl2aXR5OiBISVYuQTIgR2F0aGVyIGNsaWVudCBkZXRhaWxzCkBkZXNjcmlwdGlvbjogVGhlIGRhdGUgYW5kIHRpbWUgb2YgdGhlIGNsaWVudCdzIHZpc2l0CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJWaXNpdCBkYXRlIFNSVi5ERTE1IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJWaXNpdCBkYXRlIC0gSElWLlNSVi5ERTE1Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJWaXNpdCBkYXRlIFNSVi5ERTE1IFZhbHVlIjoKICAiVmlzaXQgZGF0ZSBTUlYuREUxNSIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBWaXNpdCBkYXRlIFNSVi5ERTE1ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5TUlYuREUxOCAtIEFOQyBjb250YWN0IGRhdGUKQGFjdGl2aXR5OiBISVYuRTEgQ2FwdHVyZSBvciB1cGRhdGUgbW90aGVyJ3MgaGlzdG9yeQpAZGVzY3JpcHRpb246IFRoZSBkYXRlIGFuZCB0aW1lIG9mIHRoZSBjbGllbnQncyBBTkMgY29udGFjdCAoaW4gdGhlIEFOQyBEQUsgdGhpcyBpcyBjYWxsZWQgJ0NvbnRhY3QgZGF0ZScpCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJBTkMgY29udGFjdCBkYXRlIFNSVi5ERTE4IjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJBTkMgY29udGFjdCBkYXRlIC0gSElWLlNSVi5ERTE4Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJBTkMgY29udGFjdCBkYXRlIFNSVi5ERTE4IFZhbHVlIjoKICAiQU5DIGNvbnRhY3QgZGF0ZSBTUlYuREUxOCIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBBTkMgY29udGFjdCBkYXRlIFNSVi5ERTE4ICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5TUlYuREUyMCAtIEhJVi1leHBvc2VkIGluZmFudCBvciBjaGlsZApAYWN0aXZpdHk6IEhJVi5GNiBDaGVjayB3aGV0aGVyIGluZmFudC9jaGlsZCBoYWQgSElWIGV4cG9zdXJlCkBkZXNjcmlwdGlvbjogV2hldGhlciB0aGUgaW5mYW50IG9yIGNoaWxkIHdhcyBkZXRlcm1pbmVkIHRvIGhhdmUgaGFkIEhJViBleHBvc3VyZQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSElWLWV4cG9zZWQgaW5mYW50IG9yIGNoaWxkIFNSVi5ERTIwIjoKICBleGlzdHMgIkhJVi1leHBvc2VkIGluZmFudCBvciBjaGlsZCBTUlYuREUyMCBPYnNlcnZhdGlvbiIKZGVmaW5lICJISVYtZXhwb3NlZCBpbmZhbnQgb3IgY2hpbGQgU1JWLkRFMjAgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhJVi1leHBvc2VkIGluZmFudCBvciBjaGlsZCAtIEhJVi5TUlYuREUyMCJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIEhJVi1leHBvc2VkIGluZmFudCBvciBjaGlsZCBTUlYuREUyMCAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuU1JWLkRFMjEgLSBUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMQpAYWN0aXZpdHk6IEhJVi5FNCBUZXN0IG1vdGhlciBmb3IgSElWIHVzaW5nIHRlc3RpbmcgYWxnb3JpdGhtCkBkZXNjcmlwdGlvbjogVGhlIHJlc3VsdCBvZiB0aGUgZmlyc3QgSElWIGFzc2F5IGluIHRoZSB0ZXN0aW5nIHN0cmF0ZWd5CiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSBTUlYuREUyMSI6CiAgZXhpc3RzICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSBTUlYuREUyMSBPYnNlcnZhdGlvbiIKZGVmaW5lICJUZXN0IHJlc3VsdCBvZiBISVYgYXNzYXkgMSBTUlYuREUyMSBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDEgLSBISVYuU1JWLkRFMjEiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgVGVzdCByZXN1bHQgb2YgSElWIGFzc2F5IDEgU1JWLkRFMjEgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLlNSVi5ERTIyIC0gRmluYWwgZGlhZ25vc2lzIG9mIEhJVi1leHBvc2VkIGluZmFudApAYWN0aXZpdHk6IEhJVi5GMjAgUmVjb3JkIGluZmFudCdzL2NoaWxkJ3MgZmluYWwgSElWIGRpYWdub3NpcwpAZGVzY3JpcHRpb246IEhJVi1leHBvc2VkIGluZmFudCBmaW5hbCBzdGF0dXMgYXQgMTggbW9udGhzIG9yIDMgbW9udGhzIGFmdGVyIGNlc3NhdGlvbiBvZiBicmVhc3RmZWVkaW5nICh3aGljaGV2ZXIgaXMgbGF0ZXIpLgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiRmluYWwgZGlhZ25vc2lzIG9mIEhJVi1leHBvc2VkIGluZmFudCBTUlYuREUyMiI6CiAgZXhpc3RzICJGaW5hbCBkaWFnbm9zaXMgb2YgSElWLWV4cG9zZWQgaW5mYW50IFNSVi5ERTIyIE9ic2VydmF0aW9uIgpkZWZpbmUgIkZpbmFsIGRpYWdub3NpcyBvZiBISVYtZXhwb3NlZCBpbmZhbnQgU1JWLkRFMjIgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkZpbmFsIGRpYWdub3NpcyBvZiBISVYtZXhwb3NlZCBpbmZhbnQgLSBISVYuU1JWLkRFMjIiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQovKiBFbmQgb2YgRmluYWwgZGlhZ25vc2lzIG9mIEhJVi1leHBvc2VkIGluZmFudCBTUlYuREUyMiAqLwoKLyoKQGRhdGFFbGVtZW50OiBISVYuQ29uZmlnLkRFNiAtIE1hbGFyaWEtZW5kZW1pYyBzZXR0aW5nCkBhY3Rpdml0eTogSElWLkNvbmZpZ3VyYXRpb24KQGRlc2NyaXB0aW9uOiBXaGV0aGVyIHRoZSBzZXR0aW5nIGlzIGEgbWFsYXJpYS1lbmRlbWljIHNldHRpbmcKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIk1hbGFyaWEtZW5kZW1pYyBzZXR0aW5nIjoKICBleGlzdHMgIk1hbGFyaWEtZW5kZW1pYyBzZXR0aW5nIE9ic2VydmF0aW9uIgpkZWZpbmUgIk1hbGFyaWEtZW5kZW1pYyBzZXR0aW5nIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJNYWxhcmlhLWVuZGVtaWMgc2V0dGluZyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIHRydWUKLyogRW5kIG9mIE1hbGFyaWEtZW5kZW1pYyBzZXR0aW5nICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5Db25maWcuREUxMiAtIEhJViBidXJkZW4gb2YgdGhlIHNldHRpbmcKQGFjdGl2aXR5OiBISVYuQ29uZmlndXJhdGlvbgpAZGVzY3JpcHRpb246IEhJViBidXJkZW4gb2YgdGhlIHNldHRpbmcgKGhpZ2ggb3IgbG93KSBiYXNlZCBvbiB0aGUgbmF0aW9uYWwgSElWIHByZXZhbGVuY2Ugb3Igd2hlcmUgdGhlIEhJViBwcmV2YWxlbmNlIGFuZC9vciBpbmNpZGVuY2UgaW4gYSBnZW9ncmFwaGljYWwgc2V0dGluZyBpcyBoaWdoZXIgdGhhbiBuYXRpb25hbCBwcmV2YWxlbmNlIGFuZCwgdGhlcmVmb3JlLCBuZWVkcyBwcmlvcml0eSBpbiB0aGUgSElWIHJlc3BvbnNlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJISVYgYnVyZGVuIG9mIHRoZSBzZXR0aW5nIjoKICBleGlzdHMgIkhJViBidXJkZW4gb2YgdGhlIHNldHRpbmcgT2JzZXJ2YXRpb24iCmRlZmluZSAiSElWIGJ1cmRlbiBvZiB0aGUgc2V0dGluZyBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iSElWIGJ1cmRlbiBvZiB0aGUgc2V0dGluZyJdIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9Ci8qIEVuZCBvZiBISVYgYnVyZGVuIG9mIHRoZSBzZXR0aW5nICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5Db25maWcuREUxMyAtIEhpZ2ggSElWIGJ1cmRlbiBzZXR0aW5nCkBhY3Rpdml0eTogSElWLkNvbmZpZ3VyYXRpb24KQGRlc2NyaXB0aW9uOiBTZXR0aW5ncyB3aXRoID41JSBuYXRpb25hbCBISVYgcHJldmFsZW5jZSBhbmQgc3VicG9wdWxhdGlvbnMgYW5kIGdlb2dyYXBoaWMgc2V0dGluZ3Mgd2hlcmUgSElWIHByZXZhbGVuY2UgYW5kL29yIGluY2lkZW5jZSBpcyBoaWdoZXIgdGhhbiBuYXRpb25hbGx5LgoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSGlnaCBISVYgYnVyZGVuIHNldHRpbmciOgogIGV4aXN0cyAiSGlnaCBISVYgYnVyZGVuIHNldHRpbmcgQ29uZGl0aW9uIgogICAgb3IgZXhpc3RzICJIaWdoIEhJViBidXJkZW4gc2V0dGluZyBPYnNlcnZhdGlvbiIKZGVmaW5lICJIaWdoIEhJViBidXJkZW4gc2V0dGluZyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJIaWdoIEhJViBidXJkZW4gc2V0dGluZyJdCmRlZmluZSAiSGlnaCBISVYgYnVyZGVuIHNldHRpbmcgT2JzZXJ2YXRpb24iOgogICJISVYgYnVyZGVuIG9mIHRoZSBzZXR0aW5nIE9ic2VydmF0aW9uIiBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSB+IENvbmNlcHRzLiJIaWdoIEhJViBidXJkZW4gc2V0dGluZyIKLyogRW5kIG9mIEhpZ2ggSElWIGJ1cmRlbiBzZXR0aW5nICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5Db25maWcuREUxNCAtIExvdyBISVYgYnVyZGVuIHNldHRpbmcKQGFjdGl2aXR5OiBISVYuQ29uZmlndXJhdGlvbgpAZGVzY3JpcHRpb246IFNldHRpbmdzIHdpdGggPDUlIEhJViBuYXRpb25hbCBwcmV2YWxlbmNlIGJ1dCB3aGVyZSBjZXJ0YWluIHBvcHVsYXRpb25zIChwcmltYXJpbHkga2V5IHBvcHVsYXRpb25zIGFuZCB0aGVpciBwYXJ0bmVycykgYW5kIGdlb2dyYXBoaWMgc2V0dGluZ3MgbWF5IGhhdmUgaGlnaGVyIEhJViBwcmV2YWxlbmNlIGFuZC9vciBpbmNpZGVuY2UgdGhhbiBuYXRpb25hbGx5IGFuZCwgdGhlcmVmb3JlLCBuZWVkIHByaW9yaXR5IGluIHRoZSBISVYgcmVzcG9uc2UKKi8KLy8gVE9ETzogUmVwbGFjZSBwbGFjZWhvbGRlciB3aXRoIHJlbGV2YW50IENRTCBsb2dpYwpkZWZpbmUgIkxvdyBISVYgYnVyZGVuIHNldHRpbmciOgogIGV4aXN0cyAiTG93IEhJViBidXJkZW4gc2V0dGluZyBDb25kaXRpb24iCiAgICBvciBleGlzdHMgIkxvdyBISVYgYnVyZGVuIHNldHRpbmcgT2JzZXJ2YXRpb24iCmRlZmluZSAiTG93IEhJViBidXJkZW4gc2V0dGluZyBDb25kaXRpb24iOgogIFtDb25kaXRpb246IENvbmNlcHRzLiJMb3cgSElWIGJ1cmRlbiBzZXR0aW5nIl0KZGVmaW5lICJMb3cgSElWIGJ1cmRlbiBzZXR0aW5nIE9ic2VydmF0aW9uIjoKICAiSElWIGJ1cmRlbiBvZiB0aGUgc2V0dGluZyBPYnNlcnZhdGlvbiIgTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgfiBDb25jZXB0cy4iTG93IEhJViBidXJkZW4gc2V0dGluZyIKLyogRW5kIG9mIExvdyBISVYgYnVyZGVuIHNldHRpbmcgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkNvbmZpZy5ERTE1IC0gSFBWIEROQSB0ZXN0aW5nIG9wZXJhdGlvbmFsIGF0IHRoZSBoZWFsdGggZmFjaWxpdHkKQGFjdGl2aXR5OiBISVYuQ29uZmlndXJhdGlvbgpAZGVzY3JpcHRpb246IElzIEhQViBETkEgdGVzdGluZyBvcGVyYXRpb25hbCBhdCB0aGUgaGVhbHRoIGZhY2lsaXR5IGZvciBjZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nPwoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiSFBWIEROQSB0ZXN0aW5nIG9wZXJhdGlvbmFsIGF0IHRoZSBoZWFsdGggZmFjaWxpdHkiOgogIGV4aXN0cyAiSFBWIEROQSB0ZXN0aW5nIG9wZXJhdGlvbmFsIGF0IHRoZSBoZWFsdGggZmFjaWxpdHkgT2JzZXJ2YXRpb24iCmRlZmluZSAiSFBWIEROQSB0ZXN0aW5nIG9wZXJhdGlvbmFsIGF0IHRoZSBoZWFsdGggZmFjaWxpdHkgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIkhQViBETkEgdGVzdGluZyBvcGVyYXRpb25hbCBhdCB0aGUgaGVhbHRoIGZhY2lsaXR5Il0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgaXMgdHJ1ZQovKiBFbmQgb2YgSFBWIEROQSB0ZXN0aW5nIG9wZXJhdGlvbmFsIGF0IHRoZSBoZWFsdGggZmFjaWxpdHkgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkNvbmZpZy5ERTE5IC0gT3RoZXIgcHJpb3JpdHkgcG9wdWxhdGlvbnMKQGFjdGl2aXR5OiBISVYuQ29uZmlndXJhdGlvbgpAZGVzY3JpcHRpb246IE90aGVyIHBvcHVsYXRpb25zIG9mIHByaW9yaXR5IG9mIEhJViBwcmV2ZW50aW9uIGFuZCBjYXJlIGluIGxvY2FsIGNvbnRleHQgKHByb3ZpZGVkIGR1cmluZyBhZGFwdGF0aW9uKQoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiT3RoZXIgcHJpb3JpdHkgcG9wdWxhdGlvbnMiOgogIGV4aXN0cyAiT3RoZXIgcHJpb3JpdHkgcG9wdWxhdGlvbnMgT2JzZXJ2YXRpb24iCmRlZmluZSAiT3RoZXIgcHJpb3JpdHkgcG9wdWxhdGlvbnMgT2JzZXJ2YXRpb24iOgogIFtPYnNlcnZhdGlvbjogQ29uY2VwdHMuIk90aGVyIHByaW9yaXR5IHBvcHVsYXRpb25zIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KLyogRW5kIG9mIE90aGVyIHByaW9yaXR5IHBvcHVsYXRpb25zICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5Db25maWcuREUyMCAtIFJlcG9ydGluZyBwZXJpb2QgZW5kIGRhdGUKQGFjdGl2aXR5OiBISVYuQ29uZmlndXJhdGlvbgpAZGVzY3JpcHRpb246IEVuZCBkYXRlIG9mIHRoZSByZXBvcnRpbmcgcGVyaW9kCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZXBvcnRpbmcgcGVyaW9kIGVuZCBkYXRlIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJSZXBvcnRpbmcgcGVyaW9kIGVuZCBkYXRlIl0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KZGVmaW5lICJSZXBvcnRpbmcgcGVyaW9kIGVuZCBkYXRlIFZhbHVlIjoKICAiUmVwb3J0aW5nIHBlcmlvZCBlbmQgZGF0ZSIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBSZXBvcnRpbmcgcGVyaW9kIGVuZCBkYXRlICovCgovKgpAZGF0YUVsZW1lbnQ6IEhJVi5Db25maWcuREUyMSAtIFJlcG9ydGluZyBwZXJpb2Qgc3RhcnQgZGF0ZQpAYWN0aXZpdHk6IEhJVi5Db25maWd1cmF0aW9uCkBkZXNjcmlwdGlvbjogU3RhcnQgZGF0ZSBvZiB0aGUgcmVwb3J0aW5nIHBlcmlvZAoqLwovLyBUT0RPOiBSZXBsYWNlIHBsYWNlaG9sZGVyIHdpdGggcmVsZXZhbnQgQ1FMIGxvZ2ljCmRlZmluZSAiUmVwb3J0aW5nIHBlcmlvZCBzdGFydCBkYXRlIjoKICBbT2JzZXJ2YXRpb246IENvbmNlcHRzLiJSZXBvcnRpbmcgcGVyaW9kIHN0YXJ0IGRhdGUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIlJlcG9ydGluZyBwZXJpb2Qgc3RhcnQgZGF0ZSBWYWx1ZSI6CiAgIlJlcG9ydGluZyBwZXJpb2Qgc3RhcnQgZGF0ZSIgTwogIHJldHVybiBPLnZhbHVlCi8qIEVuZCBvZiBSZXBvcnRpbmcgcGVyaW9kIHN0YXJ0IGRhdGUgKi8KCi8qCkBkYXRhRWxlbWVudDogSElWLkNvbmZpZy5ERTIyIC0gUmVwb3J0aW5nIGRhdGUKQGFjdGl2aXR5OiBISVYuQ29uZmlndXJhdGlvbgpAZGVzY3JpcHRpb246IFJlcG9ydGluZyBkYXRlLCBmb3Igc3VydmV5cyBwZXJmb3JtZWQgb24gYSBzcGVjaWZpYyBkYXRlCiovCi8vIFRPRE86IFJlcGxhY2UgcGxhY2Vob2xkZXIgd2l0aCByZWxldmFudCBDUUwgbG9naWMKZGVmaW5lICJSZXBvcnRpbmcgZGF0ZSI6CiAgW09ic2VydmF0aW9uOiBDb25jZXB0cy4iUmVwb3J0aW5nIGRhdGUiXSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQpkZWZpbmUgIlJlcG9ydGluZyBkYXRlIFZhbHVlIjoKICAiUmVwb3J0aW5nIGRhdGUiIE8KICByZXR1cm4gTy52YWx1ZQovKiBFbmQgb2YgUmVwb3J0aW5nIGRhdGUgKi8KCgovKgogKiBDdXN0b20gZWxlbWVudHMgYW5kIGxvZ2ljIGZvciB1c2UgRFQgYW5kIElORCBDUUwgTGlicmFyaWVzCiAqLwoKZGVmaW5lICJGaXJzdCBPbiBBUlQiOgogIChGaXJzdCgiT24gQVJUIEQuREUzOCIpKQ=="/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
  </content>
</Library>