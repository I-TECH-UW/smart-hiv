<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="HIVIND41Logic"/>
  <meta>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"/>
  </meta>
  <text>
    <status value="extensions"/><div xmlns="http://www.w3.org/1999/xhtml">
<div>
    <table class="grid dict">
        
        
        <tr>
            <th scope="row"><b>Title: </b></th>
            <td style="padding-left: 4px;">HIV.IND.41 Logic</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Id: </b></th>
            <td style="padding-left: 4px;">HIVIND41Logic</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Version: </b></th>
            <td style="padding-left: 4px;">0.4.0</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Url: </b></th>
            <td style="padding-left: 4px;"><a href="Library-HIVIND41Logic.html">HIV.IND.41 Logic</a></td>
        </tr>
        

        

        

        
        <tr>
            <th scope="row"><b>Status: </b></th>
            <td style="padding-left: 4px;">draft</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Experimental: </b></th>
            <td style="padding-left: 4px;">true</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Type: </b></th>
            <td style="padding-left: 4px;">
                
                    
                        
                        <p style="margin-bottom: 5px;">
                            <b>system: </b> <span><a href="http://terminology.hl7.org/6.0.2/CodeSystem-library-type.html">http://terminology.hl7.org/CodeSystem/library-type</a></span>
                        </p>
                        
                        
                        <p style="margin-bottom: 5px;">
                            <b>code: </b> <span>logic-library</span>
                        </p>
                        
                        
                    
                
                
            </td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Date: </b></th>
            <td style="padding-left: 4px;">2025-01-21 18:11:19+0000</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Publisher: </b></th>
            <td style="padding-left: 4px;">WHO</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Description: </b></th>
            <td style="padding-left: 4px;"><div><p>% of HIV-exposed breastfeeding infants whose mothers are receiving ART at 12 (and 24 months) postpartum</p>
</div></td>
        </tr>
        

        

        

        

        

        

        

        

        

        

        

        
        <tr>
            <th scope="row"><b>Related Artifacts: </b></th>
            <td style="padding-left: 4px;">
                
                
                
                <p><b>Dependencies</b></p>
                <ul>
                  
                    <li><code>http://smart.who.int/hiv/Library/HIVCommon|0.0.1</code></li>
                  
                    <li><a href="Library-WHOCommon.html">WHOCommon</a></li>
                  
                </ul>
                
                
                
                
                
            </td>
        </tr>
        

        
        <tr>
          <th scope="row"><b>Parameters: </b></th>
          <td style="padding-left: 4px;">
            <table class="grid-dict">
              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>
              
                <tr><th>Measurement Period</th><th>Period</th><th>0</th><th>1</th><th>In</th></tr>
              
                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Initial Population</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Numerator</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Denominator</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
            </table>
          </td>
        </tr>
        

        

        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><a id="cql-content"><b>Content: </b></a> text/cql</th></tr>
              <tr><td><pre><code class="language-cql">/**
 * Library: HIV.IND.41 Logic
 * Ref No: VER.5
 * Short Name: ART coverage in breastfeeding mothers
 *
 * Definition: % of HIV-exposed breastfeeding infants whose mothers are receiving ART at 12 (and 24 months) postpartum
 *
 * Numerator: Number of HIV-exposed breastfeeding infants whose mothers are receiving ART at 12 months (and 24 months*) postpartum
 * Numerator Calculation: COUNT of infants who are an &quot;HIV-exposed infant or child&quot; AND whose mothers are &quot;Breastfeeding&quot; 12 months after &quot;Delivery date&quot; AND mothers with &quot;On ART&quot;=True 12 months after &quot;Delivery date&quot; |  | Also reported for 24 months after &quot;Delivery date&quot;
 * Numerator Exclusions: 
 *
 * Denominator: Number of HIV-exposed infants attending MNCH services for a 12-month visit (and 24-month visit or first visit after the end of breastfeeding)
 * Denominator Calculation: COUNT of infants who are an &quot;HIV-exposed infant or child&quot; AND [(whose mothers attend a 12-month &quot;Maternal and child health service visit&quot;) OR (first &quot;Maternal and child health service visit&quot; after &quot;Delivery date&quot; where mother is NOT &quot;Breastfeeding&quot;)] |  | Also reported for mothers attending 24-month &quot;Maternal and child health service visit&quot;
 * Denominator Exclusions: 
 *
 * Disaggregations:
 * • Age (&lt;15, 15–19, 20–24, 25+ years) 
 *  • Timing of ART initiation (already on ART at first ANC visit, newly on ART during pregnancy or labour and delivery) 
 *  • Cities and other administrative regions of epidemiologic importance
 *
 * Disaggregation Elements: Age | Timing of ART initiation | Breastfeeding at 24 months
 *
 * Numerator and Denominator Elements:
 * Breastfeeding 
 *  Delivery date 
 *  HIV-exposed infant or child 
 *  Maternal and child health service visit 
 *  On ART
 *
 * Reference: Consolidated guidelines on person-centred HIV strategic information: strengthening routine data for impact. Geneva: World Health Organization; 2022
 * 
 * Data Concepts:
 * HIV.A.DE17: Age | Calculated age (number of years) of the client based on date of birth
 * HIV.B.DE32: Breastfeeding | Infant is being breastfed by mother
 * HIV.D.DE32: Breastfeeding | Client is giving infant breast milk
 * HIV.D.DE38: On ART | Client is currently taking ART
 * HIV.E.DE41: Timing of ART initiation | When the pregnant woman or mother initiated ART, for women living with HIV.
 * HIV.E.DE42: Already on ART at first antenatal care visit | The pregnant woman was already on antiretroviral therapy (ART) at first antenatal care visit
 * HIV.E.DE43: Newly on ART during pregnancy | The pregnant woman started ART during her pregnancy
 * HIV.E.DE44: Newly on ART during labour and delivery | The woman started ART during labour and delivery
 * HIV.E.DE46: Delivery date | Date on which the woman delivered
 * HIV.E.DE112: HIV-exposed infant or child | Whether the infant or child was determined to have had HIV exposure
 * HIV.E.DE173: Maternal and child health service visit | Maternal and child health service visit attended by an HIV-exposed infant
 * HIV.E.DE174: 12-month visit | HIV-exposed infant attending MCH services for a 12-month visit
 * HIV.E.DE175: 24-month visit | HIV-exposed infants attending MCH services for a 24-month visit
 * HIV.E.DE176: First visit after the end of breastfeeding | HIV-exposed infant attending MCH services for a first visit after the end of breastfeeding
 * HIV.H.DE47: On ART | Client is currently taking ART 
 * HIV.SRV.DE20: HIV-exposed infant or child | Whether the infant or child was determined to have had HIV exposure
 *
 * Additional Context
 * - what it measures: This indicator measures the programme's ability to reduce the risk of transmission via breastfeeding (Prong 3 of the PMTCT strategy).
 * - rationale: • In many countries the average breastfeeding period is 18–24 months. The long breastfeeding period represents an important risk period for HIV-exposed infants. | • Ensuring that HIV-positive mothers are retained on ART, especially during the breastfeeding period, is critical to sustaining the health of the mother and preventing infection of her infant.
 * - method: For the numerator: Programme records (for example, PMTCT registers, ART registers). |  | For the denominator: Programme records (for example, MCH service records)
 * 
 * Suggested Scoring Method: proportion | http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/proportion-measure-cqfm
 */

library HIVIND41Logic

// Included Libraries
using FHIR version '4.0.1'

include HIVCommon version '0.0.1' called HIC
include FHIRHelpers version '4.0.1'

include WHOCommon called WCom

// Indicator Definition
parameter &quot;Measurement Period&quot; Interval&lt;Date&gt; default Interval[@2023-01-01, @2023-01-30]

context Patient
/* Populations */

/*
 *Initial Population
 */

define &quot;Initial Population&quot;:
  true

/**
 * Numerator
 * 
 * Definition: Number of HIV-exposed breastfeeding infants whose mothers are receiving ART at 12 months (and 24 months*) postpartum
 * Calculation: COUNT of infants who are an &quot;HIV-exposed infant or child&quot; AND whose mothers are &quot;Breastfeeding&quot; 12 months after &quot;Delivery date&quot; AND mothers with &quot;On ART&quot;=True 12 months after &quot;Delivery date&quot; |  | Also reported for 24 months after &quot;Delivery date&quot;
 */

define &quot;Numerator&quot;:
  true


/**
 * Denominator
 *
 * Definition: Number of HIV-exposed infants attending MNCH services for a 12-month visit (and 24-month visit or first visit after the end of breastfeeding)
 * Calculation: COUNT of infants who are an &quot;HIV-exposed infant or child&quot; AND [(whose mothers attend a 12-month &quot;Maternal and child health service visit&quot;) OR (first &quot;Maternal and child health service visit&quot; after &quot;Delivery date&quot; where mother is NOT &quot;Breastfeeding&quot;)] |  | Also reported for mothers attending 24-month &quot;Maternal and child health service visit&quot;
 */

define &quot;Denominator&quot;:
  true
    

/* end Populations */

</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
        
        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><b>Content: </b> application/elm+xml</th></tr>
              <tr><td><pre><code>Encoded data (15416 characters)</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><b>Content: </b> application/elm+json</th></tr>
              <tr><td><pre><code>Encoded data (20504 characters)</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
    </table>
</div>
</div>
  </text>
  <extension url="http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability">
    <valueCode value="computable"/>
  </extension>
  <url value="http://smart.who.int/hiv/Library/HIVIND41Logic"/>
  <version value="0.4.0"/>
  <name value="HIVIND41Logic"/>
  <title value="HIV.IND.41 Logic"/>
  <status value="draft"/>
  <experimental value="true"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2025-01-21T18:11:19+00:00"/>
  <publisher value="WHO"/>
  <contact>
    <name value="WHO"/>
    <telecom>
      <system value="url"/>
      <value value="http://who.int"/>
    </telecom>
  </contact>
  <description value="% of HIV-exposed breastfeeding infants whose mothers are receiving ART at 12 (and 24 months) postpartum"/>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library HIC"/>
    <resource value="http://smart.who.int/hiv/Library/HIVCommon|0.0.1"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library WCom"/>
    <resource value="http://smart.who.int/hiv/Library/WHOCommon"/>
  </relatedArtifact>
  <parameter>
    <name value="Measurement Period"/>
    <use value="in"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Period"/>
  </parameter>
  <parameter>
    <name value="Patient"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Patient"/>
  </parameter>
  <parameter>
    <name value="Initial Population"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Numerator"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Denominator"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <content>
    <contentType value="text/cql"/>
    <data value="LyoqCiAqIExpYnJhcnk6IEhJVi5JTkQuNDEgTG9naWMKICogUmVmIE5vOiBWRVIuNQogKiBTaG9ydCBOYW1lOiBBUlQgY292ZXJhZ2UgaW4gYnJlYXN0ZmVlZGluZyBtb3RoZXJzCiAqCiAqIERlZmluaXRpb246ICUgb2YgSElWLWV4cG9zZWQgYnJlYXN0ZmVlZGluZyBpbmZhbnRzIHdob3NlIG1vdGhlcnMgYXJlIHJlY2VpdmluZyBBUlQgYXQgMTIgKGFuZCAyNCBtb250aHMpIHBvc3RwYXJ0dW0KICoKICogTnVtZXJhdG9yOiBOdW1iZXIgb2YgSElWLWV4cG9zZWQgYnJlYXN0ZmVlZGluZyBpbmZhbnRzIHdob3NlIG1vdGhlcnMgYXJlIHJlY2VpdmluZyBBUlQgYXQgMTIgbW9udGhzIChhbmQgMjQgbW9udGhzKikgcG9zdHBhcnR1bQogKiBOdW1lcmF0b3IgQ2FsY3VsYXRpb246IENPVU5UIG9mIGluZmFudHMgd2hvIGFyZSBhbiAiSElWLWV4cG9zZWQgaW5mYW50IG9yIGNoaWxkIiBBTkQgd2hvc2UgbW90aGVycyBhcmUgIkJyZWFzdGZlZWRpbmciIDEyIG1vbnRocyBhZnRlciAiRGVsaXZlcnkgZGF0ZSIgQU5EIG1vdGhlcnMgd2l0aCAiT24gQVJUIj1UcnVlIDEyIG1vbnRocyBhZnRlciAiRGVsaXZlcnkgZGF0ZSIgfCAgfCBBbHNvIHJlcG9ydGVkIGZvciAyNCBtb250aHMgYWZ0ZXIgIkRlbGl2ZXJ5IGRhdGUiCiAqIE51bWVyYXRvciBFeGNsdXNpb25zOiAKICoKICogRGVub21pbmF0b3I6IE51bWJlciBvZiBISVYtZXhwb3NlZCBpbmZhbnRzIGF0dGVuZGluZyBNTkNIIHNlcnZpY2VzIGZvciBhIDEyLW1vbnRoIHZpc2l0IChhbmQgMjQtbW9udGggdmlzaXQgb3IgZmlyc3QgdmlzaXQgYWZ0ZXIgdGhlIGVuZCBvZiBicmVhc3RmZWVkaW5nKQogKiBEZW5vbWluYXRvciBDYWxjdWxhdGlvbjogQ09VTlQgb2YgaW5mYW50cyB3aG8gYXJlIGFuICJISVYtZXhwb3NlZCBpbmZhbnQgb3IgY2hpbGQiIEFORCBbKHdob3NlIG1vdGhlcnMgYXR0ZW5kIGEgMTItbW9udGggIk1hdGVybmFsIGFuZCBjaGlsZCBoZWFsdGggc2VydmljZSB2aXNpdCIpIE9SIChmaXJzdCAiTWF0ZXJuYWwgYW5kIGNoaWxkIGhlYWx0aCBzZXJ2aWNlIHZpc2l0IiBhZnRlciAiRGVsaXZlcnkgZGF0ZSIgd2hlcmUgbW90aGVyIGlzIE5PVCAiQnJlYXN0ZmVlZGluZyIpXSB8ICB8IEFsc28gcmVwb3J0ZWQgZm9yIG1vdGhlcnMgYXR0ZW5kaW5nIDI0LW1vbnRoICJNYXRlcm5hbCBhbmQgY2hpbGQgaGVhbHRoIHNlcnZpY2UgdmlzaXQiCiAqIERlbm9taW5hdG9yIEV4Y2x1c2lvbnM6IAogKgogKiBEaXNhZ2dyZWdhdGlvbnM6CiAqIOKAoiBBZ2UgKDwxNSwgMTXigJMxOSwgMjDigJMyNCwgMjUrIHllYXJzKSAKICogIOKAoiBUaW1pbmcgb2YgQVJUIGluaXRpYXRpb24gKGFscmVhZHkgb24gQVJUIGF0IGZpcnN0IEFOQyB2aXNpdCwgbmV3bHkgb24gQVJUIGR1cmluZyBwcmVnbmFuY3kgb3IgbGFib3VyIGFuZCBkZWxpdmVyeSkgCiAqICDigKLCoENpdGllcyBhbmQgb3RoZXIgYWRtaW5pc3RyYXRpdmUgcmVnaW9ucyBvZiBlcGlkZW1pb2xvZ2ljIGltcG9ydGFuY2UKICoKICogRGlzYWdncmVnYXRpb24gRWxlbWVudHM6IEFnZSB8IFRpbWluZyBvZiBBUlQgaW5pdGlhdGlvbiB8IEJyZWFzdGZlZWRpbmcgYXQgMjQgbW9udGhzCiAqCiAqIE51bWVyYXRvciBhbmQgRGVub21pbmF0b3IgRWxlbWVudHM6CiAqIEJyZWFzdGZlZWRpbmcgCiAqICBEZWxpdmVyeSBkYXRlIAogKiAgSElWLWV4cG9zZWQgaW5mYW50IG9yIGNoaWxkIAogKiAgTWF0ZXJuYWwgYW5kIGNoaWxkIGhlYWx0aCBzZXJ2aWNlIHZpc2l0IAogKiAgT24gQVJUCiAqCiAqIFJlZmVyZW5jZTogQ29uc29saWRhdGVkIGd1aWRlbGluZXMgb24gcGVyc29uLWNlbnRyZWQgSElWIHN0cmF0ZWdpYyBpbmZvcm1hdGlvbjogc3RyZW5ndGhlbmluZyByb3V0aW5lIGRhdGEgZm9yIGltcGFjdC4gR2VuZXZhOiBXb3JsZCBIZWFsdGggT3JnYW5pemF0aW9uOyAyMDIyCiAqIAogKiBEYXRhIENvbmNlcHRzOgogKiBISVYuQS5ERTE3OiBBZ2UgfCBDYWxjdWxhdGVkIGFnZSAobnVtYmVyIG9mIHllYXJzKSBvZiB0aGUgY2xpZW50IGJhc2VkIG9uIGRhdGUgb2YgYmlydGgKICogSElWLkIuREUzMjogQnJlYXN0ZmVlZGluZyB8IEluZmFudCBpcyBiZWluZyBicmVhc3RmZWQgYnkgbW90aGVyCiAqIEhJVi5ELkRFMzI6IEJyZWFzdGZlZWRpbmcgfCBDbGllbnQgaXMgZ2l2aW5nIGluZmFudCBicmVhc3QgbWlsawogKiBISVYuRC5ERTM4OiBPbiBBUlQgfCBDbGllbnQgaXMgY3VycmVudGx5IHRha2luZyBBUlQKICogSElWLkUuREU0MTogVGltaW5nIG9mIEFSVCBpbml0aWF0aW9uIHwgV2hlbiB0aGUgcHJlZ25hbnQgd29tYW4gb3IgbW90aGVyIGluaXRpYXRlZCBBUlQsIGZvciB3b21lbiBsaXZpbmcgd2l0aCBISVYuCiAqIEhJVi5FLkRFNDI6IEFscmVhZHkgb24gQVJUIGF0IGZpcnN0IGFudGVuYXRhbCBjYXJlIHZpc2l0IHwgVGhlIHByZWduYW50IHdvbWFuIHdhcyBhbHJlYWR5IG9uIGFudGlyZXRyb3ZpcmFsIHRoZXJhcHkgKEFSVCkgYXQgZmlyc3QgYW50ZW5hdGFsIGNhcmUgdmlzaXQKICogSElWLkUuREU0MzogTmV3bHkgb24gQVJUIGR1cmluZyBwcmVnbmFuY3kgfCBUaGUgcHJlZ25hbnQgd29tYW4gc3RhcnRlZCBBUlQgZHVyaW5nIGhlciBwcmVnbmFuY3kKICogSElWLkUuREU0NDogTmV3bHkgb24gQVJUIGR1cmluZyBsYWJvdXIgYW5kIGRlbGl2ZXJ5IHwgVGhlIHdvbWFuIHN0YXJ0ZWQgQVJUIGR1cmluZyBsYWJvdXIgYW5kIGRlbGl2ZXJ5CiAqIEhJVi5FLkRFNDY6IERlbGl2ZXJ5IGRhdGUgfCBEYXRlIG9uIHdoaWNoIHRoZSB3b21hbiBkZWxpdmVyZWQKICogSElWLkUuREUxMTI6IEhJVi1leHBvc2VkIGluZmFudCBvciBjaGlsZCB8IFdoZXRoZXIgdGhlIGluZmFudCBvciBjaGlsZCB3YXMgZGV0ZXJtaW5lZCB0byBoYXZlIGhhZCBISVYgZXhwb3N1cmUKICogSElWLkUuREUxNzM6IE1hdGVybmFsIGFuZCBjaGlsZCBoZWFsdGggc2VydmljZSB2aXNpdCB8IE1hdGVybmFsIGFuZCBjaGlsZCBoZWFsdGggc2VydmljZSB2aXNpdCBhdHRlbmRlZCBieSBhbiBISVYtZXhwb3NlZCBpbmZhbnQKICogSElWLkUuREUxNzQ6IDEyLW1vbnRoIHZpc2l0IHwgSElWLWV4cG9zZWQgaW5mYW50IGF0dGVuZGluZyBNQ0ggc2VydmljZXMgZm9yIGEgMTItbW9udGggdmlzaXQKICogSElWLkUuREUxNzU6IDI0LW1vbnRoIHZpc2l0IHwgSElWLWV4cG9zZWQgaW5mYW50cyBhdHRlbmRpbmcgTUNIIHNlcnZpY2VzIGZvciBhIDI0LW1vbnRoIHZpc2l0CiAqIEhJVi5FLkRFMTc2OiBGaXJzdCB2aXNpdCBhZnRlciB0aGUgZW5kIG9mIGJyZWFzdGZlZWRpbmcgfCBISVYtZXhwb3NlZCBpbmZhbnQgYXR0ZW5kaW5nIE1DSCBzZXJ2aWNlcyBmb3IgYSBmaXJzdCB2aXNpdCBhZnRlciB0aGUgZW5kIG9mIGJyZWFzdGZlZWRpbmcKICogSElWLkguREU0NzogT24gQVJUIHwgQ2xpZW50IGlzIGN1cnJlbnRseSB0YWtpbmcgQVJUIAogKiBISVYuU1JWLkRFMjA6IEhJVi1leHBvc2VkIGluZmFudCBvciBjaGlsZCB8IFdoZXRoZXIgdGhlIGluZmFudCBvciBjaGlsZCB3YXMgZGV0ZXJtaW5lZCB0byBoYXZlIGhhZCBISVYgZXhwb3N1cmUKICoKICogQWRkaXRpb25hbCBDb250ZXh0CiAqIC0gd2hhdCBpdCBtZWFzdXJlczogVGhpcyBpbmRpY2F0b3IgbWVhc3VyZXMgdGhlIHByb2dyYW1tZSdzIGFiaWxpdHkgdG8gcmVkdWNlIHRoZSByaXNrIG9mIHRyYW5zbWlzc2lvbiB2aWEgYnJlYXN0ZmVlZGluZyAoUHJvbmcgMyBvZiB0aGUgUE1UQ1Qgc3RyYXRlZ3kpLgogKiAtIHJhdGlvbmFsZTog4oCiwqBJbiBtYW55IGNvdW50cmllcyB0aGUgYXZlcmFnZSBicmVhc3RmZWVkaW5nIHBlcmlvZCBpcyAxOOKAkzI0IG1vbnRocy4gVGhlIGxvbmcgYnJlYXN0ZmVlZGluZyBwZXJpb2QgcmVwcmVzZW50cyBhbiBpbXBvcnRhbnQgcmlzayBwZXJpb2QgZm9yIEhJVi1leHBvc2VkIGluZmFudHMuIHwg4oCiwqBFbnN1cmluZyB0aGF0IEhJVi1wb3NpdGl2ZSBtb3RoZXJzIGFyZSByZXRhaW5lZCBvbiBBUlQsIGVzcGVjaWFsbHkgZHVyaW5nIHRoZSBicmVhc3RmZWVkaW5nIHBlcmlvZCwgaXMgY3JpdGljYWwgdG8gc3VzdGFpbmluZyB0aGUgaGVhbHRoIG9mIHRoZSBtb3RoZXIgYW5kIHByZXZlbnRpbmcgaW5mZWN0aW9uIG9mIGhlciBpbmZhbnQuCiAqIC0gbWV0aG9kOiBGb3IgdGhlIG51bWVyYXRvcjogUHJvZ3JhbW1lIHJlY29yZHMgKGZvciBleGFtcGxlLCBQTVRDVCByZWdpc3RlcnMsIEFSVCByZWdpc3RlcnMpLiB8ICB8IEZvciB0aGUgZGVub21pbmF0b3I6IFByb2dyYW1tZSByZWNvcmRzIChmb3IgZXhhbXBsZSwgTUNIIHNlcnZpY2UgcmVjb3JkcykKICogCiAqIFN1Z2dlc3RlZCBTY29yaW5nIE1ldGhvZDogcHJvcG9ydGlvbiB8IGh0dHA6Ly9obDcub3JnL2ZoaXIvdXMvY3FmbWVhc3VyZXMvU3RydWN0dXJlRGVmaW5pdGlvbi9wcm9wb3J0aW9uLW1lYXN1cmUtY3FmbQogKi8KCmxpYnJhcnkgSElWSU5ENDFMb2dpYwoKLy8gSW5jbHVkZWQgTGlicmFyaWVzCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIEhJVkNvbW1vbiB2ZXJzaW9uICcwLjAuMScgY2FsbGVkIEhJQwppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJwoKaW5jbHVkZSBXSE9Db21tb24gY2FsbGVkIFdDb20KCi8vIEluZGljYXRvciBEZWZpbml0aW9uCnBhcmFtZXRlciAiTWVhc3VyZW1lbnQgUGVyaW9kIiBJbnRlcnZhbDxEYXRlPiBkZWZhdWx0IEludGVydmFsW0AyMDIzLTAxLTAxLCBAMjAyMy0wMS0zMF0KCmNvbnRleHQgUGF0aWVudAovKiBQb3B1bGF0aW9ucyAqLwoKLyoKICpJbml0aWFsIFBvcHVsYXRpb24KICovCgpkZWZpbmUgIkluaXRpYWwgUG9wdWxhdGlvbiI6CiAgdHJ1ZQoKLyoqCiAqIE51bWVyYXRvcgogKiAKICogRGVmaW5pdGlvbjogTnVtYmVyIG9mIEhJVi1leHBvc2VkIGJyZWFzdGZlZWRpbmcgaW5mYW50cyB3aG9zZSBtb3RoZXJzIGFyZSByZWNlaXZpbmcgQVJUIGF0IDEyIG1vbnRocyAoYW5kIDI0IG1vbnRocyopIHBvc3RwYXJ0dW0KICogQ2FsY3VsYXRpb246IENPVU5UIG9mIGluZmFudHMgd2hvIGFyZSBhbiAiSElWLWV4cG9zZWQgaW5mYW50IG9yIGNoaWxkIiBBTkQgd2hvc2UgbW90aGVycyBhcmUgIkJyZWFzdGZlZWRpbmciIDEyIG1vbnRocyBhZnRlciAiRGVsaXZlcnkgZGF0ZSIgQU5EIG1vdGhlcnMgd2l0aCAiT24gQVJUIj1UcnVlIDEyIG1vbnRocyBhZnRlciAiRGVsaXZlcnkgZGF0ZSIgfCAgfCBBbHNvIHJlcG9ydGVkIGZvciAyNCBtb250aHMgYWZ0ZXIgIkRlbGl2ZXJ5IGRhdGUiCiAqLwoKZGVmaW5lICJOdW1lcmF0b3IiOgogIHRydWUKCgovKioKICogRGVub21pbmF0b3IKICoKICogRGVmaW5pdGlvbjogTnVtYmVyIG9mIEhJVi1leHBvc2VkIGluZmFudHMgYXR0ZW5kaW5nIE1OQ0ggc2VydmljZXMgZm9yIGEgMTItbW9udGggdmlzaXQgKGFuZCAyNC1tb250aCB2aXNpdCBvciBmaXJzdCB2aXNpdCBhZnRlciB0aGUgZW5kIG9mIGJyZWFzdGZlZWRpbmcpCiAqIENhbGN1bGF0aW9uOiBDT1VOVCBvZiBpbmZhbnRzIHdobyBhcmUgYW4gIkhJVi1leHBvc2VkIGluZmFudCBvciBjaGlsZCIgQU5EIFsod2hvc2UgbW90aGVycyBhdHRlbmQgYSAxMi1tb250aCAiTWF0ZXJuYWwgYW5kIGNoaWxkIGhlYWx0aCBzZXJ2aWNlIHZpc2l0IikgT1IgKGZpcnN0ICJNYXRlcm5hbCBhbmQgY2hpbGQgaGVhbHRoIHNlcnZpY2UgdmlzaXQiIGFmdGVyICJEZWxpdmVyeSBkYXRlIiB3aGVyZSBtb3RoZXIgaXMgTk9UICJCcmVhc3RmZWVkaW5nIildIHwgIHwgQWxzbyByZXBvcnRlZCBmb3IgbW90aGVycyBhdHRlbmRpbmcgMjQtbW9udGggIk1hdGVybmFsIGFuZCBjaGlsZCBoZWFsdGggc2VydmljZSB2aXNpdCIKICovCgpkZWZpbmUgIkRlbm9taW5hdG9yIjoKICB0cnVlCiAgICAKCi8qIGVuZCBQb3B1bGF0aW9ucyAqLwoK"/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
    <data value=""/>
  </content>
  <content>
    <contentType value="application/elm+json"/>
    <data value=""/>
  </content>
</Library>