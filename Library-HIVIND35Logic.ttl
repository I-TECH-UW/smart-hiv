@prefix fhir: <http://hl7.org/fhir/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# - resource -------------------------------------------------------------------

<http://smart.who.int/hiv/Library/HIVIND35Logic> a fhir:Library ;
  fhir:nodeRole fhir:treeRoot ;
  fhir:id [ fhir:v "HIVIND35Logic"] ; # 
  fhir:meta [
     fhir:profile ( [
       fhir:v "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary>
     ] [
       fhir:v "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary>
     ] [
       fhir:v "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library>
     ] [
       fhir:v "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module>
     ] )
  ] ; # 
  fhir:text [
     fhir:status [ fhir:v "generated" ] ;
     fhir:div "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p class=\"res-header-id\"><b>Generated Narrative: Library HIVIND35Logic</b></p><a name=\"HIVIND35Logic\"> </a><a name=\"hcHIVIND35Logic\"> </a><a name=\"HIVIND35Logic-en-US\"> </a><h2>Related Artifacts</h2><table class=\"grid\"><tr><td>Depends On</td><td>Library HIC</td><td><code>http://smart.who.int/hiv/Library/HIVCommon|0.0.1</code></td></tr><tr><td>Depends On</td><td>Library WCom</td><td><a href=\"Library-WHOCommon.html\">WHOCommon</a></td></tr><tr><td>Depends On</td><td>Library HE</td><td><a href=\"Library-HIVElements.html\">HIVElements</a></td></tr><tr><td>Depends On</td><td>Library HIE</td><td><a href=\"Library-HIVIndicatorElements.html\">HIVIndicatorElements</a></td></tr></table><h2>Parameters</h2><table class=\"grid\"><tr><td>Measurement Period</td><td>in</td><td>0</td><td>1</td><td>Period</td></tr><tr><td>Patient</td><td>out</td><td>0</td><td>1</td><td>Patient</td></tr><tr><td>Initial Population</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Numerator</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Denominator</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Administrative Gender Stratifier</td><td>out</td><td>0</td><td>1</td><td>Coding</td></tr><tr><td>Age Stratifier</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>Geographic Region Stratifier</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>patientGroups Stratifier</td><td>out</td><td>0</td><td>*</td><td>string</td></tr><tr><td>Stratification</td><td>out</td><td>0</td><td>1</td><td>string</td></tr></table><h2>Contents</h2><p><code>text/cql</code></p><pre><code class=\"language-sql\">/**\n * Library: HIV.IND.35 Logic\n * Ref No: ART.9\n * Short Name: ARV toxicity prevalence\n *\n * Definition: % of ART patients with treatment-limiting ARV toxicity\n *\n * Numerator: Number of ART patients who have stopped treatment or switched regimen due to toxicity in the reporting period\n * Numerator Calculation: COUNT of clients with &quot;HIV status&quot;='HIV-positive' with a &quot;Date ART stopped&quot; in the reporting period AND &quot;Reason ART stopped&quot;='Toxicity/side effects' | PLUS | COUNT of clients with &quot;HIV status&quot;='HIV-positive' AND &quot;On ART&quot;=True AND either &quot;Date of switch to second-line regimen&quot; OR &quot;Date of switch to third-line regimen&quot; in the reporting period with a &quot;Reason for regimen switch&quot;='Toxicity/side effects'  | PLUS | COUNT of clients with &quot;HIV status&quot;='HIV-positive' AND &quot;On ART&quot;=True AND either &quot;Date(s) of substitution within second-line regimen&quot; OR &quot;Date(s) of substitution within third-line regimen&quot; in the reporting period AND &quot;Reason for ARV drug regimen substitution&quot;='Toxicity/side effects'\n * Numerator Exclusions: \n *\n * Denominator: Number of ART patients in the reporting period\n * Denominator Calculation: COUNT of clients with &quot;HIV status&quot;='HIV-positive' AND &quot;On ART&quot;=True within the reporting period\n * Denominator Exclusions: \n *\n * Disaggregations:\n * • Gender (female, male, other*) \n *  • Age (&lt;0–4, 5–9, 10–14, 15-19, &gt;19 years)** \n *  • Key populations (men who have sex with men, people living in prisons and other closed settings, people who inject drugs, sex workers, trans and gender diverse people)*** \n *  • ART regimen \n *  • Pregnancy status \n *  • Type of toxicity (gastrointestinal, skin, peripheral neuropathy, central nervous system, weight gain, hepatic dysfunction, haematological, fatigue, headache, bone dysfunction, metabolic, kidney dysfunction) \n *  • Cities and other administrative regions of epidemiologic importance\n *\n * Disaggregation Elements: Gender | Age | Key population member type | Current ART regimen | Currently pregnant | Type of treatment-limiting toxicity\n *\n * Numerator and Denominator Elements:\n * Date ART stopped \n *  Date of switch to second-line regimen \n *  Date of switch to third-line regimen \n *  Date(s) of substitution within second-line regimen \n *  Date(s) of substitution within third-line regimen \n *  HIV status \n *  On ART \n *  Reason ART stopped \n *  Reason for ARV drug regimen substitution \n *  Reason for regimen switch\n *\n * Reference: Consolidated guidelines on person-centred HIV strategic information: strengthening routine data for impact. Geneva: World Health Organization; 2022\n * \n * Data Concepts:\n * HIV.A.DE17: Age | Calculated age (number of years) of the client based on date of birth\n * HIV.A.DE18: Gender* | Gender of the client*\n * HIV.A.DE19: Female | Client identifies as female\n * HIV.A.DE20: Male | Client identifies as male\n * HIV.A.DE21: Transgender male | Client identifies as transgender male\n * HIV.A.DE22: Transgender female | Client identifies as transgender female\n * HIV.A.DE23: Other | Additional category\n * HIV.B.DE29: Currently pregnant | Client is currently pregnant\n * HIV.B.DE50: Key population member type* | The type of key population that the client is included in\n * HIV.B.DE51: Sex worker | Client is a sex worker\n * HIV.B.DE52: Men who have sex with men | Client is a man who has sex with men\n * HIV.B.DE53: Trans and gender-diverse people | Client identifies as trans and gender-diverse\n * HIV.B.DE54: People who inject drugs | Client is a person who injects drugs\n * HIV.B.DE55: People living in prisons and other closed settings | Client lives in a prison or another closed setting\n * HIV.B.DE115: HIV status | HIV status reported after applying the national HIV testing algorithm. No single HIV test can provide an HIV-positive diagnosis.\n * HIV.B.DE116: HIV-positive | Client is HIV-positive\n * HIV.B.DE117: HIV-negative | Client is HIV-negative\n * HIV.B.DE118: Unknown | Client has unknown HIV status\n * HIV.D.DE31: Currently pregnant | Client is currently pregnant\n * HIV.D.DE38: On ART | Client is currently taking ART\n * HIV.D.DE41: Date ART stopped | Date on which client stopped ART\n * HIV.D.DE75: Current ART regimen | The current ART regimen the client is taking\n * HIV.D.DE217: Reason ART stopped | Reason client intentionally stopped ART\n * HIV.D.DE218: Toxicity/side effects | Client stopped ART because of toxicity/side effects\n * HIV.D.DE219: Severe illness, hospitalization | Client stopped ART because of severe illness, hospitalization\n * HIV.D.DE220: Drugs out of stock | Client stopped ART because drugs were out of stock\n * HIV.D.DE221: Client lacks finances | Client stopped ART because of lack of finances\n * HIV.D.DE222: Excluded HIV infection in infant | Client stopped ART because HIV infection in infant was excluded\n * HIV.D.DE223: Other reason for stopping ART | Client stopped ART because of other reason\n * HIV.D.DE418: Reason for ARV drug regimen substitution | Reason why a substitution was made to the antiretroviral (ARV) drug regimen\n * HIV.D.DE419: Toxicity/side effects | A substitution was made to the regimen because of toxicity/side effects\n * HIV.D.DE420: Drug-drug interaction | A substitution was made to the regimen because of a drug-drug interaction\n * HIV.D.DE421: Pregnancy | A substitution was made to the regimen because of pregnancy\n * HIV.D.DE422: New TB | A substitution was made to the regimen because of new tuberculosis (TB)\n * HIV.D.DE423: New drug available | A substitution was made to the regimen because a new drug was available\n * HIV.D.DE424: Drug out of stock | A substitution was made to the regimen because drug was out of stock\n * HIV.D.DE425: Other reason for regimen substitution | A substitution was made for another reason\n * HIV.D.DE466: Type of treatment-limiting toxicity | Type of treatment-limiting toxicity experienced by client. Treatment-limiting toxicity is defined as a serious adverse drug reaction that results in drug discontinuation or substitution. In addition, any reaction that leads to treatment interruption or requires changing the drug or regimen because of an adverse drug reaction is also considered a serious adverse drug reaction.\n * HIV.D.DE467: Gastrointestinal | Treatment-limiting toxicity due to GI issues (nausea, diarrhoea, abdominal pain, vomiting)\n * HIV.D.DE468: Skin issues | Treatment-limiting toxicity due to skin issues (rash, hypersensitivity reaction)\n * HIV.D.DE469: Peripheral neuropathy | Treatment-limiting toxicity due to peripheral neuropathy (burning/numbness/ tingling)\n * HIV.D.DE470: Central nervous system symptoms | Treatment-limiting toxicity due to central nervous system symptoms (dizzy, anxiety, nightmare, depression, seizures)\n * HIV.D.DE471: Weight gain | Treatment-limiting toxicity due to weight gain\n * HIV.D.DE472: Hepatic dysfunction | Treatment-limiting toxicity due to hepatic dysfunction (jaundice)\n * HIV.D.DE473: Haematological disorders | Treatment-limiting toxicity due to haematological (anaemia, neutropenia) disorders\n * HIV.D.DE474: Fatigue | Treatment-limiting toxicity due to fatigue\n * HIV.D.DE475: Headache | Treatment-limiting toxicity due to headache\n * HIV.D.DE476: Bone dysfunction | Treatment-limiting toxicity due to bone dysfunction (fractures, osteopenia)\n * HIV.D.DE477: Metabolic symptoms | Treatment-limiting toxicity due to metabolic symptoms (body fat changes, hyperglycaemia, dyslipidaemia)\n * HIV.D.DE478: Kidney dysfunction | Treatment-limiting toxicity due to kidney dysfunction (nephrolithiasis, renal insufficiency)\n * HIV.D.DE479: Unexpected adverse drug reaction | Client experienced an unexpected adverse drug reaction\n * HIV.D.DE487: Date(s) of substitution within second-line regimen | Date on which ARV drug regimen for client was changed within the second-line regimen (substitution)\n * HIV.D.DE493: Date(s) of substitution within third-line regimen | Date on which ARV drug regimen for client was changed within the third-line (substitution)\n * HIV.E.DE114: Key population member type* | The type of key population that the infant's mother is included in\n * HIV.E.DE115: Sex worker | Infant's mother is a sex worker\n * HIV.E.DE116: People who inject drugs | Infant's mother is a person who injects drugs\n * HIV.E.DE117: Trans and gender-diverse people | Infant's mother identifies as trans and gender-diverse\n * HIV.E.DE118: People living in prisons and other closed setting | Infant's mother is in a prison or closed setting\n * HIV.H.DE47: On ART | Client is currently taking ART \n * HIV.H.DE73: Date ART stopped | Date on which client stopped ART\n * HIV.H.DE74: Reason ART stopped | Reason why client intentionally stopped ART\n * HIV.H.DE75: Toxicity/side effects | Client stopped ART because of toxicity/side effects\n * HIV.H.DE76: Severe illness, hospitalization | Client stopped ART because of severe illness, hospitalization\n * HIV.H.DE77: Drugs out of stock  | Client stopped ART because of drugs being out of stock \n * HIV.H.DE78: Client lacks finances  | Client stopped ART because client lacked finances \n * HIV.H.DE79: Excluded HIV infection in infant | Client stopped ART because the infant was determined to not have HIV\n * HIV.H.DE80: Other reason for stopping ART | Client stopped ART for other reason\n * HIV.SRV.DE7: Currently pregnant | Client is currently pregnant\n *\n * Additional Context\n * - what it measures: Measures the incidence of serious ARV toxicities among ART patients.\n * - rationale: • As use of ARVs is scaled up, people living with HIV have the potential for prolonged exposure to ARVs and the potential to experience ARV-related toxicity. | • ARV-related toxicities are some of the most common reasons reported for ART non- adherence, treatment discontinuation or substitution of drugs and, thus, are important to monitor.\n * - method: For the numerator and denominator: HIV patient monitoring tools (ART registers, patient records/EMRs). To enable reporting codes for reasons for ART stop or switch are provided in patient monitoring tools (Web Annex H HIV patient card and Annex K ART register) |  | &quot;Treatment-limiting&quot; toxicity is defined as follows: A serious adverse drug reaction that results in drug discontinuation or substitution. In addition, any reaction that leads to treatment interruption or requires changing the drug or regimen because of an adverse drug reaction is also considered a serious adverse drug reaction.\n * \n * Suggested Scoring Method: proportion | http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/proportion-measure-cqfm\n */\n\nlibrary HIVIND35Logic\n\n// Included Libraries\nusing FHIR version '4.0.1'\n\ninclude HIVCommon version '0.0.1' called HIC\ninclude FHIRHelpers version '4.0.1'\ninclude WHOCommon called WCom\ninclude HIVElements called HE\ninclude HIVIndicatorElements called HIE\n\n// Indicator Definition\nparameter &quot;Measurement Period&quot; Interval&lt;Date&gt; default Interval[@2023-01-01, @2023-01-30]\n\ncontext Patient\n/* Populations */\n\n/*\n *Initial Population\n */\n\ndefine &quot;Initial Population&quot;:\n  true\n\n/**\n * Numerator\n * \n * Definition: Number of ART patients who have stopped treatment or switched regimen due to toxicity in the reporting period\n * Calculation: COUNT of clients with &quot;HIV status&quot;='HIV-positive' with a &quot;Date ART stopped&quot; in the reporting period AND &quot;Reason ART stopped&quot;='Toxicity/side effects' | PLUS | COUNT of clients with &quot;HIV status&quot;='HIV-positive' AND &quot;On ART&quot;=True AND either &quot;Date of switch to second-line regimen&quot; OR &quot;Date of switch to third-line regimen&quot; in the reporting period with a &quot;Reason for regimen switch&quot;='Toxicity/side effects'  | PLUS | COUNT of clients with &quot;HIV status&quot;='HIV-positive' AND &quot;On ART&quot;=True AND either &quot;Date(s) of substitution within second-line regimen&quot; OR &quot;Date(s) of substitution within third-line regimen&quot; in the reporting period AND &quot;Reason for ARV drug regimen substitution&quot;='Toxicity/side effects'\n */\n\ndefine &quot;Numerator&quot;:\n  (HIE.&quot;Has HIV-positive Status&quot;\n  and HIE.&quot;Toxicity/side effects H.DE75&quot;)\n  and ((\n    HIE.&quot;Has HIV-positive Status&quot; \n    and HIE.&quot;On ART H.DE47&quot;\n    and \n    (exists(HE.&quot;New regimen after switch to second-line regimen&quot; R\n    with HE.&quot;Toxicity/side effects H.DE75&quot; T\n    such that R.partOf.references(T)\n    where R.effective.toInterval() during &quot;Measurement Period&quot;\n    )\n    or \n    (\n    exists(HE.&quot;New regimen after switch to third-line regimen&quot; R\n    with HE.&quot;Toxicity/side effects H.DE75&quot; T\n    such that R.partOf.references(T)\n    where R.effective.toInterval() during &quot;Measurement Period&quot;  \n    )\n    )\n  )\n  )\n  or\n  (\n    HIE.&quot;Has HIV-positive Status&quot;\n    and HIE.&quot;On ART H.DE47&quot;\n    and \n    (exists(HE.&quot;New regimen after substitution within second-line regimen&quot; R\n    with HE.&quot;Toxicity/side effects H.DE75&quot; T\n    such that R.partOf.references(T)\n    where R.effective.toInterval() during &quot;Measurement Period&quot;\n    )\n    or \n    (\n    exists(HE.&quot;New regimen after substitution within third-line regimen&quot; R\n    with HE.&quot;Toxicity/side effects H.DE75&quot; T\n    such that R.partOf.references(T)\n    where R.effective.toInterval() during &quot;Measurement Period&quot;  \n    )\n    )\n  )\n  )\n\n  )\n\n/**\n * Denominator\n *\n * Definition: Number of ART patients in the reporting period\n * Calculation: COUNT of clients with &quot;HIV status&quot;='HIV-positive' AND &quot;On ART&quot;=True within the reporting period\n */\n\ndefine &quot;Denominator&quot;:\n  HIE.&quot;Has HIV-positive Status&quot;\n    and HIE.&quot;On ART H.DE47&quot;\n    \n\n/* end Populations */\n\n\n/*\n * Disaggregators\n */\n\ndefine &quot;Administrative Gender Stratifier&quot;:\n	HIE.&quot;By Administrative Gender Stratifier&quot;\n\ndefine &quot;Age Stratifier&quot;:\n	HIE.&quot;By Age Stratifier&quot;\n\ndefine &quot;Geographic Region Stratifier&quot;:\n	HIE.&quot;By Geographic Region Stratifier&quot;\n\ndefine &quot;patientGroups Stratifier&quot;:\n	HIE.&quot;patientGroups&quot;\n\ndefine &quot;Stratification&quot;:\n HIE.&quot;By Administrative Gender Stratifier&quot;.code \n  + ':' + HIE.&quot;By Age Stratifier&quot;\n+ ':' + HIE.&quot;By Geographic Region Stratifier&quot;\n+ Combine(HIE.patientGroups, ':')\n\n/*\nneed to add\n*  • ART regimen \n *  • Pregnancy status \n *  • Type of toxicity (gastrointestinal, skin, peripheral neuropathy, central nervous system, weight gain, hepatic dysfunction, haematological, fatigue, headache, bone dysfunction, metabolic, kidney dysfunction) \n*/</code></pre><p><code>Content not shown - (</code><code>application/elm+xml</code>, size = 68Kb )</p></div>"
  ] ; # 
  fhir:extension ( [
     fhir:url [ fhir:v "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability"^^xsd:anyURI ] ;
     fhir:value [ fhir:v "computable" ]
  ] ) ; # 
  fhir:url [ fhir:v "http://smart.who.int/hiv/Library/HIVIND35Logic"^^xsd:anyURI] ; # 
  fhir:version [ fhir:v "0.3.0"] ; # 
  fhir:name [ fhir:v "HIVIND35Logic"] ; # 
  fhir:title [ fhir:v "HIV.IND.35 Logic"] ; # 
  fhir:status [ fhir:v "draft"] ; # 
  fhir:experimental [ fhir:v "true"^^xsd:boolean] ; # 
  fhir:type [
     fhir:coding ( [
       fhir:system [ fhir:v "http://terminology.hl7.org/CodeSystem/library-type"^^xsd:anyURI ] ;
       fhir:code [ fhir:v "logic-library" ]
     ] )
  ] ; # 
  fhir:date [ fhir:v "2024-10-17T13:46:08+00:00"^^xsd:dateTime] ; # 
  fhir:publisher [ fhir:v "WHO"] ; # 
  fhir:contact ( [
     fhir:name [ fhir:v "WHO" ] ;
     fhir:telecom ( [
       fhir:system [ fhir:v "url" ] ;
       fhir:value [ fhir:v "http://who.int" ]
     ] )
  ] ) ; # 
  fhir:description [ fhir:v "% of ART patients with treatment-limiting ARV toxicity"] ; # 
  fhir:relatedArtifact ( [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library HIC" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/hiv/Library/HIVCommon|0.0.1"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/hiv/Library/HIVCommon|0.0.1>
     ]
  ] [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library WCom" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/hiv/Library/WHOCommon"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/hiv/Library/WHOCommon>
     ]
  ] [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library HE" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/hiv/Library/HIVElements"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/hiv/Library/HIVElements>
     ]
  ] [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library HIE" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/hiv/Library/HIVIndicatorElements"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/hiv/Library/HIVIndicatorElements>
     ]
  ] ) ; # 
  fhir:parameter ( [
     fhir:name [ fhir:v "Measurement Period" ] ;
     fhir:use [ fhir:v "in" ] ;
     fhir:min [ fhir:v "0"^^xsd:integer ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "Period" ]
  ] [
     fhir:name [ fhir:v "Patient" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v "0"^^xsd:integer ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "Patient" ]
  ] [
     fhir:name [ fhir:v "Initial Population" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v "0"^^xsd:integer ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Numerator" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v "0"^^xsd:integer ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Denominator" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v "0"^^xsd:integer ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Administrative Gender Stratifier" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v "0"^^xsd:integer ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "Coding" ]
  ] [
     fhir:name [ fhir:v "Age Stratifier" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v "0"^^xsd:integer ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Geographic Region Stratifier" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v "0"^^xsd:integer ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "patientGroups Stratifier" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v "0"^^xsd:integer ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Stratification" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v "0"^^xsd:integer ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] ) ; # 
  fhir:content ( [
     fhir:contentType [ fhir:v "text/cql" ] ;
     fhir:data [ fhir:v "LyoqCiAqIExpYnJhcnk6IEhJVi5JTkQuMzUgTG9naWMKICogUmVmIE5vOiBBUlQuOQogKiBTaG9ydCBOYW1lOiBBUlYgdG94aWNpdHkgcHJldmFsZW5jZQogKgogKiBEZWZpbml0aW9uOiAlIG9mIEFSVCBwYXRpZW50cyB3aXRoIHRyZWF0bWVudC1saW1pdGluZyBBUlYgdG94aWNpdHkKICoKICogTnVtZXJhdG9yOiBOdW1iZXIgb2YgQVJUIHBhdGllbnRzIHdobyBoYXZlIHN0b3BwZWQgdHJlYXRtZW50IG9yIHN3aXRjaGVkIHJlZ2ltZW4gZHVlIHRvIHRveGljaXR5IGluIHRoZSByZXBvcnRpbmcgcGVyaW9kCiAqIE51bWVyYXRvciBDYWxjdWxhdGlvbjogQ09VTlQgb2YgY2xpZW50cyB3aXRoICJISVYgc3RhdHVzIj0nSElWLXBvc2l0aXZlJyB3aXRoIGEgIkRhdGUgQVJUIHN0b3BwZWQiIGluIHRoZSByZXBvcnRpbmcgcGVyaW9kIEFORCAiUmVhc29uIEFSVCBzdG9wcGVkIj0nVG94aWNpdHkvc2lkZSBlZmZlY3RzJyB8IFBMVVMgfCBDT1VOVCBvZiBjbGllbnRzIHdpdGggIkhJViBzdGF0dXMiPSdISVYtcG9zaXRpdmUnIEFORCAiT24gQVJUIj1UcnVlIEFORCBlaXRoZXIgIkRhdGUgb2Ygc3dpdGNoIHRvIHNlY29uZC1saW5lIHJlZ2ltZW4iIE9SICJEYXRlIG9mIHN3aXRjaCB0byB0aGlyZC1saW5lIHJlZ2ltZW4iIGluIHRoZSByZXBvcnRpbmcgcGVyaW9kIHdpdGggYSAiUmVhc29uIGZvciByZWdpbWVuIHN3aXRjaCI9J1RveGljaXR5L3NpZGUgZWZmZWN0cycgIHwgUExVUyB8IENPVU5UIG9mIGNsaWVudHMgd2l0aCAiSElWIHN0YXR1cyI9J0hJVi1wb3NpdGl2ZScgQU5EICJPbiBBUlQiPVRydWUgQU5EIGVpdGhlciAiRGF0ZShzKSBvZiBzdWJzdGl0dXRpb24gd2l0aGluIHNlY29uZC1saW5lIHJlZ2ltZW4iIE9SICJEYXRlKHMpIG9mIHN1YnN0aXR1dGlvbiB3aXRoaW4gdGhpcmQtbGluZSByZWdpbWVuIiBpbiB0aGUgcmVwb3J0aW5nIHBlcmlvZCBBTkQgIlJlYXNvbiBmb3IgQVJWIGRydWcgcmVnaW1lbiBzdWJzdGl0dXRpb24iPSdUb3hpY2l0eS9zaWRlIGVmZmVjdHMnCiAqIE51bWVyYXRvciBFeGNsdXNpb25zOiAKICoKICogRGVub21pbmF0b3I6IE51bWJlciBvZiBBUlQgcGF0aWVudHMgaW4gdGhlIHJlcG9ydGluZyBwZXJpb2QKICogRGVub21pbmF0b3IgQ2FsY3VsYXRpb246IENPVU5UIG9mIGNsaWVudHMgd2l0aCAiSElWIHN0YXR1cyI9J0hJVi1wb3NpdGl2ZScgQU5EICJPbiBBUlQiPVRydWUgd2l0aGluIHRoZSByZXBvcnRpbmcgcGVyaW9kCiAqIERlbm9taW5hdG9yIEV4Y2x1c2lvbnM6IAogKgogKiBEaXNhZ2dyZWdhdGlvbnM6CiAqIOKAosKgR2VuZGVyIChmZW1hbGUsIG1hbGUsIG90aGVyKikgCiAqICDigKLCoEFnZSAoPDDigJM0LCA14oCTOSwgMTDigJMxNCwgMTUtMTksID4xOSB5ZWFycykqKiAKICogIOKAosKgS2V5IHBvcHVsYXRpb25zIChtZW4gd2hvIGhhdmUgc2V4IHdpdGggbWVuLCBwZW9wbGUgbGl2aW5nIGluIHByaXNvbnMgYW5kIG90aGVyIGNsb3NlZCBzZXR0aW5ncywgcGVvcGxlIHdobyBpbmplY3QgZHJ1Z3MsIHNleCB3b3JrZXJzLCB0cmFucyBhbmQgZ2VuZGVyIGRpdmVyc2UgcGVvcGxlKSoqKiAKICogIOKAosKgQVJUIHJlZ2ltZW4gCiAqICDigKLCoFByZWduYW5jeSBzdGF0dXMgCiAqICDigKLCoFR5cGUgb2YgdG94aWNpdHkgKGdhc3Ryb2ludGVzdGluYWwsIHNraW4sIHBlcmlwaGVyYWwgbmV1cm9wYXRoeSwgY2VudHJhbCBuZXJ2b3VzIHN5c3RlbSwgd2VpZ2h0IGdhaW4sIGhlcGF0aWMgZHlzZnVuY3Rpb24sIGhhZW1hdG9sb2dpY2FsLCBmYXRpZ3VlLCBoZWFkYWNoZSwgYm9uZSBkeXNmdW5jdGlvbiwgbWV0YWJvbGljLCBraWRuZXkgZHlzZnVuY3Rpb24pIAogKiAg4oCiwqBDaXRpZXMgYW5kIG90aGVyIGFkbWluaXN0cmF0aXZlIHJlZ2lvbnMgb2YgZXBpZGVtaW9sb2dpYyBpbXBvcnRhbmNlCiAqCiAqIERpc2FnZ3JlZ2F0aW9uIEVsZW1lbnRzOiBHZW5kZXIgfCBBZ2UgfCBLZXkgcG9wdWxhdGlvbiBtZW1iZXIgdHlwZSB8IEN1cnJlbnQgQVJUIHJlZ2ltZW4gfCBDdXJyZW50bHkgcHJlZ25hbnQgfCBUeXBlIG9mIHRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eQogKgogKiBOdW1lcmF0b3IgYW5kIERlbm9taW5hdG9yIEVsZW1lbnRzOgogKiBEYXRlIEFSVCBzdG9wcGVkIAogKiAgRGF0ZSBvZiBzd2l0Y2ggdG8gc2Vjb25kLWxpbmUgcmVnaW1lbiAKICogIERhdGUgb2Ygc3dpdGNoIHRvIHRoaXJkLWxpbmUgcmVnaW1lbiAKICogIERhdGUocykgb2Ygc3Vic3RpdHV0aW9uIHdpdGhpbiBzZWNvbmQtbGluZSByZWdpbWVuIAogKiAgRGF0ZShzKSBvZiBzdWJzdGl0dXRpb24gd2l0aGluIHRoaXJkLWxpbmUgcmVnaW1lbiAKICogIEhJViBzdGF0dXMgCiAqICBPbiBBUlQgCiAqICBSZWFzb24gQVJUIHN0b3BwZWQgCiAqICBSZWFzb24gZm9yIEFSViBkcnVnIHJlZ2ltZW4gc3Vic3RpdHV0aW9uIAogKiAgUmVhc29uIGZvciByZWdpbWVuIHN3aXRjaAogKgogKiBSZWZlcmVuY2U6IENvbnNvbGlkYXRlZCBndWlkZWxpbmVzIG9uIHBlcnNvbi1jZW50cmVkIEhJViBzdHJhdGVnaWMgaW5mb3JtYXRpb246IHN0cmVuZ3RoZW5pbmcgcm91dGluZSBkYXRhIGZvciBpbXBhY3QuIEdlbmV2YTogV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbjsgMjAyMgogKiAKICogRGF0YSBDb25jZXB0czoKICogSElWLkEuREUxNzogQWdlIHwgQ2FsY3VsYXRlZCBhZ2UgKG51bWJlciBvZiB5ZWFycykgb2YgdGhlIGNsaWVudCBiYXNlZCBvbiBkYXRlIG9mIGJpcnRoCiAqIEhJVi5BLkRFMTg6IEdlbmRlciogfCBHZW5kZXIgb2YgdGhlIGNsaWVudCoKICogSElWLkEuREUxOTogRmVtYWxlIHwgQ2xpZW50IGlkZW50aWZpZXMgYXMgZmVtYWxlCiAqIEhJVi5BLkRFMjA6IE1hbGUgfCBDbGllbnQgaWRlbnRpZmllcyBhcyBtYWxlCiAqIEhJVi5BLkRFMjE6IFRyYW5zZ2VuZGVyIG1hbGUgfCBDbGllbnQgaWRlbnRpZmllcyBhcyB0cmFuc2dlbmRlciBtYWxlCiAqIEhJVi5BLkRFMjI6IFRyYW5zZ2VuZGVyIGZlbWFsZSB8IENsaWVudCBpZGVudGlmaWVzIGFzIHRyYW5zZ2VuZGVyIGZlbWFsZQogKiBISVYuQS5ERTIzOiBPdGhlciB8IEFkZGl0aW9uYWwgY2F0ZWdvcnkKICogSElWLkIuREUyOTogQ3VycmVudGx5IHByZWduYW50IHwgQ2xpZW50IGlzIGN1cnJlbnRseSBwcmVnbmFudAogKiBISVYuQi5ERTUwOiBLZXkgcG9wdWxhdGlvbiBtZW1iZXIgdHlwZSogfCBUaGUgdHlwZSBvZiBrZXkgcG9wdWxhdGlvbiB0aGF0IHRoZSBjbGllbnQgaXMgaW5jbHVkZWQgaW4KICogSElWLkIuREU1MTogU2V4IHdvcmtlciB8IENsaWVudCBpcyBhIHNleCB3b3JrZXIKICogSElWLkIuREU1MjogTWVuIHdobyBoYXZlIHNleCB3aXRoIG1lbiB8IENsaWVudCBpcyBhIG1hbiB3aG8gaGFzIHNleCB3aXRoIG1lbgogKiBISVYuQi5ERTUzOiBUcmFucyBhbmQgZ2VuZGVyLWRpdmVyc2UgcGVvcGxlIHwgQ2xpZW50IGlkZW50aWZpZXMgYXMgdHJhbnMgYW5kIGdlbmRlci1kaXZlcnNlCiAqIEhJVi5CLkRFNTQ6IFBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIHwgQ2xpZW50IGlzIGEgcGVyc29uIHdobyBpbmplY3RzIGRydWdzCiAqIEhJVi5CLkRFNTU6IFBlb3BsZSBsaXZpbmcgaW4gcHJpc29ucyBhbmQgb3RoZXIgY2xvc2VkIHNldHRpbmdzIHwgQ2xpZW50IGxpdmVzIGluIGEgcHJpc29uIG9yIGFub3RoZXIgY2xvc2VkIHNldHRpbmcKICogSElWLkIuREUxMTU6IEhJViBzdGF0dXMgfCBISVYgc3RhdHVzIHJlcG9ydGVkIGFmdGVyIGFwcGx5aW5nIHRoZSBuYXRpb25hbCBISVYgdGVzdGluZyBhbGdvcml0aG0uIE5vIHNpbmdsZSBISVYgdGVzdCBjYW4gcHJvdmlkZSBhbiBISVYtcG9zaXRpdmUgZGlhZ25vc2lzLgogKiBISVYuQi5ERTExNjogSElWLXBvc2l0aXZlIHwgQ2xpZW50IGlzIEhJVi1wb3NpdGl2ZQogKiBISVYuQi5ERTExNzogSElWLW5lZ2F0aXZlIHwgQ2xpZW50IGlzIEhJVi1uZWdhdGl2ZQogKiBISVYuQi5ERTExODogVW5rbm93biB8IENsaWVudCBoYXMgdW5rbm93biBISVYgc3RhdHVzCiAqIEhJVi5ELkRFMzE6IEN1cnJlbnRseSBwcmVnbmFudCB8IENsaWVudCBpcyBjdXJyZW50bHkgcHJlZ25hbnQKICogSElWLkQuREUzODogT24gQVJUIHwgQ2xpZW50IGlzIGN1cnJlbnRseSB0YWtpbmcgQVJUCiAqIEhJVi5ELkRFNDE6IERhdGUgQVJUIHN0b3BwZWQgfCBEYXRlIG9uIHdoaWNoIGNsaWVudCBzdG9wcGVkIEFSVAogKiBISVYuRC5ERTc1OiBDdXJyZW50IEFSVCByZWdpbWVuIHwgVGhlIGN1cnJlbnQgQVJUIHJlZ2ltZW4gdGhlIGNsaWVudCBpcyB0YWtpbmcKICogSElWLkQuREUyMTc6IFJlYXNvbiBBUlQgc3RvcHBlZCB8IFJlYXNvbiBjbGllbnQgaW50ZW50aW9uYWxseSBzdG9wcGVkIEFSVAogKiBISVYuRC5ERTIxODogVG94aWNpdHkvc2lkZSBlZmZlY3RzIHwgQ2xpZW50IHN0b3BwZWQgQVJUIGJlY2F1c2Ugb2YgdG94aWNpdHkvc2lkZSBlZmZlY3RzCiAqIEhJVi5ELkRFMjE5OiBTZXZlcmUgaWxsbmVzcywgaG9zcGl0YWxpemF0aW9uIHwgQ2xpZW50IHN0b3BwZWQgQVJUIGJlY2F1c2Ugb2Ygc2V2ZXJlIGlsbG5lc3MsIGhvc3BpdGFsaXphdGlvbgogKiBISVYuRC5ERTIyMDogRHJ1Z3Mgb3V0IG9mIHN0b2NrIHwgQ2xpZW50IHN0b3BwZWQgQVJUIGJlY2F1c2UgZHJ1Z3Mgd2VyZSBvdXQgb2Ygc3RvY2sKICogSElWLkQuREUyMjE6IENsaWVudCBsYWNrcyBmaW5hbmNlcyB8IENsaWVudCBzdG9wcGVkIEFSVCBiZWNhdXNlIG9mIGxhY2sgb2YgZmluYW5jZXMKICogSElWLkQuREUyMjI6IEV4Y2x1ZGVkIEhJViBpbmZlY3Rpb24gaW4gaW5mYW50IHwgQ2xpZW50IHN0b3BwZWQgQVJUIGJlY2F1c2UgSElWIGluZmVjdGlvbiBpbiBpbmZhbnQgd2FzIGV4Y2x1ZGVkCiAqIEhJVi5ELkRFMjIzOiBPdGhlciByZWFzb24gZm9yIHN0b3BwaW5nIEFSVCB8IENsaWVudCBzdG9wcGVkIEFSVCBiZWNhdXNlIG9mIG90aGVyIHJlYXNvbgogKiBISVYuRC5ERTQxODogUmVhc29uIGZvciBBUlYgZHJ1ZyByZWdpbWVuIHN1YnN0aXR1dGlvbiB8IFJlYXNvbiB3aHkgYSBzdWJzdGl0dXRpb24gd2FzIG1hZGUgdG8gdGhlIGFudGlyZXRyb3ZpcmFsIChBUlYpIGRydWcgcmVnaW1lbgogKiBISVYuRC5ERTQxOTogVG94aWNpdHkvc2lkZSBlZmZlY3RzIHwgQSBzdWJzdGl0dXRpb24gd2FzIG1hZGUgdG8gdGhlIHJlZ2ltZW4gYmVjYXVzZSBvZiB0b3hpY2l0eS9zaWRlIGVmZmVjdHMKICogSElWLkQuREU0MjA6IERydWctZHJ1ZyBpbnRlcmFjdGlvbiB8IEEgc3Vic3RpdHV0aW9uIHdhcyBtYWRlIHRvIHRoZSByZWdpbWVuIGJlY2F1c2Ugb2YgYSBkcnVnLWRydWcgaW50ZXJhY3Rpb24KICogSElWLkQuREU0MjE6IFByZWduYW5jeSB8IEEgc3Vic3RpdHV0aW9uIHdhcyBtYWRlIHRvIHRoZSByZWdpbWVuIGJlY2F1c2Ugb2YgcHJlZ25hbmN5CiAqIEhJVi5ELkRFNDIyOiBOZXcgVEIgfCBBIHN1YnN0aXR1dGlvbiB3YXMgbWFkZSB0byB0aGUgcmVnaW1lbiBiZWNhdXNlIG9mIG5ldyB0dWJlcmN1bG9zaXMgKFRCKQogKiBISVYuRC5ERTQyMzogTmV3IGRydWcgYXZhaWxhYmxlIHwgQSBzdWJzdGl0dXRpb24gd2FzIG1hZGUgdG8gdGhlIHJlZ2ltZW4gYmVjYXVzZSBhIG5ldyBkcnVnIHdhcyBhdmFpbGFibGUKICogSElWLkQuREU0MjQ6IERydWcgb3V0IG9mIHN0b2NrIHwgQSBzdWJzdGl0dXRpb24gd2FzIG1hZGUgdG8gdGhlIHJlZ2ltZW4gYmVjYXVzZSBkcnVnIHdhcyBvdXQgb2Ygc3RvY2sKICogSElWLkQuREU0MjU6IE90aGVyIHJlYXNvbiBmb3IgcmVnaW1lbiBzdWJzdGl0dXRpb24gfCBBIHN1YnN0aXR1dGlvbiB3YXMgbWFkZSBmb3IgYW5vdGhlciByZWFzb24KICogSElWLkQuREU0NjY6IFR5cGUgb2YgdHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IHwgVHlwZSBvZiB0cmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgZXhwZXJpZW5jZWQgYnkgY2xpZW50LiBUcmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgaXMgZGVmaW5lZCBhcyBhIHNlcmlvdXMgYWR2ZXJzZSBkcnVnIHJlYWN0aW9uIHRoYXQgcmVzdWx0cyBpbiBkcnVnIGRpc2NvbnRpbnVhdGlvbiBvciBzdWJzdGl0dXRpb24uIEluIGFkZGl0aW9uLCBhbnkgcmVhY3Rpb24gdGhhdCBsZWFkcyB0byB0cmVhdG1lbnQgaW50ZXJydXB0aW9uIG9yIHJlcXVpcmVzIGNoYW5naW5nIHRoZSBkcnVnIG9yIHJlZ2ltZW4gYmVjYXVzZSBvZiBhbiBhZHZlcnNlIGRydWcgcmVhY3Rpb24gaXMgYWxzbyBjb25zaWRlcmVkIGEgc2VyaW91cyBhZHZlcnNlIGRydWcgcmVhY3Rpb24uCiAqIEhJVi5ELkRFNDY3OiBHYXN0cm9pbnRlc3RpbmFsIHwgVHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IGR1ZSB0byBHSSBpc3N1ZXMgKG5hdXNlYSwgZGlhcnJob2VhLCBhYmRvbWluYWwgcGFpbiwgdm9taXRpbmcpCiAqIEhJVi5ELkRFNDY4OiBTa2luIGlzc3VlcyB8IFRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBkdWUgdG8gc2tpbiBpc3N1ZXMgKHJhc2gsIGh5cGVyc2Vuc2l0aXZpdHkgcmVhY3Rpb24pCiAqIEhJVi5ELkRFNDY5OiBQZXJpcGhlcmFsIG5ldXJvcGF0aHkgfCBUcmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgZHVlIHRvIHBlcmlwaGVyYWwgbmV1cm9wYXRoeSAoYnVybmluZy9udW1ibmVzcy8gdGluZ2xpbmcpCiAqIEhJVi5ELkRFNDcwOiBDZW50cmFsIG5lcnZvdXMgc3lzdGVtIHN5bXB0b21zIHwgVHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IGR1ZSB0byBjZW50cmFsIG5lcnZvdXMgc3lzdGVtIHN5bXB0b21zIChkaXp6eSwgYW54aWV0eSwgbmlnaHRtYXJlLCBkZXByZXNzaW9uLCBzZWl6dXJlcykKICogSElWLkQuREU0NzE6IFdlaWdodCBnYWluIHwgVHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IGR1ZSB0byB3ZWlnaHQgZ2FpbgogKiBISVYuRC5ERTQ3MjogSGVwYXRpYyBkeXNmdW5jdGlvbiB8IFRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBkdWUgdG8gaGVwYXRpYyBkeXNmdW5jdGlvbiAoamF1bmRpY2UpCiAqIEhJVi5ELkRFNDczOiBIYWVtYXRvbG9naWNhbCBkaXNvcmRlcnMgfCBUcmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgZHVlIHRvIGhhZW1hdG9sb2dpY2FsIChhbmFlbWlhLCBuZXV0cm9wZW5pYSkgZGlzb3JkZXJzCiAqIEhJVi5ELkRFNDc0OiBGYXRpZ3VlIHwgVHJlYXRtZW50LWxpbWl0aW5nIHRveGljaXR5IGR1ZSB0byBmYXRpZ3VlCiAqIEhJVi5ELkRFNDc1OiBIZWFkYWNoZSB8IFRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBkdWUgdG8gaGVhZGFjaGUKICogSElWLkQuREU0NzY6IEJvbmUgZHlzZnVuY3Rpb24gfCBUcmVhdG1lbnQtbGltaXRpbmcgdG94aWNpdHkgZHVlIHRvIGJvbmUgZHlzZnVuY3Rpb24gKGZyYWN0dXJlcywgb3N0ZW9wZW5pYSkKICogSElWLkQuREU0Nzc6IE1ldGFib2xpYyBzeW1wdG9tcyB8IFRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBkdWUgdG8gbWV0YWJvbGljIHN5bXB0b21zIChib2R5IGZhdCBjaGFuZ2VzLCBoeXBlcmdseWNhZW1pYSwgZHlzbGlwaWRhZW1pYSkKICogSElWLkQuREU0Nzg6IEtpZG5leSBkeXNmdW5jdGlvbiB8IFRyZWF0bWVudC1saW1pdGluZyB0b3hpY2l0eSBkdWUgdG8ga2lkbmV5IGR5c2Z1bmN0aW9uIChuZXBocm9saXRoaWFzaXMsIHJlbmFsIGluc3VmZmljaWVuY3kpCiAqIEhJVi5ELkRFNDc5OiBVbmV4cGVjdGVkIGFkdmVyc2UgZHJ1ZyByZWFjdGlvbiB8IENsaWVudCBleHBlcmllbmNlZCBhbiB1bmV4cGVjdGVkIGFkdmVyc2UgZHJ1ZyByZWFjdGlvbgogKiBISVYuRC5ERTQ4NzogRGF0ZShzKSBvZiBzdWJzdGl0dXRpb24gd2l0aGluIHNlY29uZC1saW5lIHJlZ2ltZW4gfCBEYXRlIG9uIHdoaWNoIEFSViBkcnVnIHJlZ2ltZW4gZm9yIGNsaWVudCB3YXMgY2hhbmdlZCB3aXRoaW4gdGhlIHNlY29uZC1saW5lIHJlZ2ltZW4gKHN1YnN0aXR1dGlvbikKICogSElWLkQuREU0OTM6IERhdGUocykgb2Ygc3Vic3RpdHV0aW9uIHdpdGhpbiB0aGlyZC1saW5lIHJlZ2ltZW4gfCBEYXRlIG9uIHdoaWNoIEFSViBkcnVnIHJlZ2ltZW4gZm9yIGNsaWVudCB3YXMgY2hhbmdlZCB3aXRoaW4gdGhlIHRoaXJkLWxpbmUgKHN1YnN0aXR1dGlvbikKICogSElWLkUuREUxMTQ6IEtleSBwb3B1bGF0aW9uIG1lbWJlciB0eXBlKiB8IFRoZSB0eXBlIG9mIGtleSBwb3B1bGF0aW9uIHRoYXQgdGhlIGluZmFudCdzIG1vdGhlciBpcyBpbmNsdWRlZCBpbgogKiBISVYuRS5ERTExNTogU2V4IHdvcmtlciB8IEluZmFudCdzIG1vdGhlciBpcyBhIHNleCB3b3JrZXIKICogSElWLkUuREUxMTY6IFBlb3BsZSB3aG8gaW5qZWN0IGRydWdzIHwgSW5mYW50J3MgbW90aGVyIGlzIGEgcGVyc29uIHdobyBpbmplY3RzIGRydWdzCiAqIEhJVi5FLkRFMTE3OiBUcmFucyBhbmQgZ2VuZGVyLWRpdmVyc2UgcGVvcGxlIHwgSW5mYW50J3MgbW90aGVyIGlkZW50aWZpZXMgYXMgdHJhbnMgYW5kIGdlbmRlci1kaXZlcnNlCiAqIEhJVi5FLkRFMTE4OiBQZW9wbGUgbGl2aW5nIGluIHByaXNvbnMgYW5kIG90aGVyIGNsb3NlZCBzZXR0aW5nIHwgSW5mYW50J3MgbW90aGVyIGlzIGluIGEgcHJpc29uIG9yIGNsb3NlZCBzZXR0aW5nCiAqIEhJVi5ILkRFNDc6IE9uIEFSVCB8IENsaWVudCBpcyBjdXJyZW50bHkgdGFraW5nIEFSVCAKICogSElWLkguREU3MzogRGF0ZSBBUlQgc3RvcHBlZCB8IERhdGUgb24gd2hpY2ggY2xpZW50IHN0b3BwZWQgQVJUCiAqIEhJVi5ILkRFNzQ6IFJlYXNvbiBBUlQgc3RvcHBlZCB8IFJlYXNvbiB3aHkgY2xpZW50IGludGVudGlvbmFsbHkgc3RvcHBlZCBBUlQKICogSElWLkguREU3NTogVG94aWNpdHkvc2lkZSBlZmZlY3RzIHwgQ2xpZW50IHN0b3BwZWQgQVJUIGJlY2F1c2Ugb2YgdG94aWNpdHkvc2lkZSBlZmZlY3RzCiAqIEhJVi5ILkRFNzY6IFNldmVyZSBpbGxuZXNzLCBob3NwaXRhbGl6YXRpb24gfCBDbGllbnQgc3RvcHBlZCBBUlQgYmVjYXVzZSBvZiBzZXZlcmUgaWxsbmVzcywgaG9zcGl0YWxpemF0aW9uCiAqIEhJVi5ILkRFNzc6IERydWdzIG91dCBvZiBzdG9jayAgfCBDbGllbnQgc3RvcHBlZCBBUlQgYmVjYXVzZSBvZiBkcnVncyBiZWluZyBvdXQgb2Ygc3RvY2sgCiAqIEhJVi5ILkRFNzg6IENsaWVudCBsYWNrcyBmaW5hbmNlcyAgfCBDbGllbnQgc3RvcHBlZCBBUlQgYmVjYXVzZSBjbGllbnQgbGFja2VkIGZpbmFuY2VzIAogKiBISVYuSC5ERTc5OiBFeGNsdWRlZCBISVYgaW5mZWN0aW9uIGluIGluZmFudCB8IENsaWVudCBzdG9wcGVkIEFSVCBiZWNhdXNlIHRoZSBpbmZhbnQgd2FzIGRldGVybWluZWQgdG8gbm90IGhhdmUgSElWCiAqIEhJVi5ILkRFODA6IE90aGVyIHJlYXNvbiBmb3Igc3RvcHBpbmcgQVJUIHwgQ2xpZW50IHN0b3BwZWQgQVJUIGZvciBvdGhlciByZWFzb24KICogSElWLlNSVi5ERTc6IEN1cnJlbnRseSBwcmVnbmFudCB8IENsaWVudCBpcyBjdXJyZW50bHkgcHJlZ25hbnQKICoKICogQWRkaXRpb25hbCBDb250ZXh0CiAqIC0gd2hhdCBpdCBtZWFzdXJlczogTWVhc3VyZXMgdGhlIGluY2lkZW5jZSBvZiBzZXJpb3VzIEFSViB0b3hpY2l0aWVzIGFtb25nIEFSVCBwYXRpZW50cy4KICogLSByYXRpb25hbGU6IOKAosKgQXMgdXNlIG9mIEFSVnMgaXMgc2NhbGVkIHVwLCBwZW9wbGUgbGl2aW5nIHdpdGggSElWIGhhdmUgdGhlIHBvdGVudGlhbCBmb3IgcHJvbG9uZ2VkIGV4cG9zdXJlIHRvIEFSVnMgYW5kIHRoZSBwb3RlbnRpYWwgdG8gZXhwZXJpZW5jZSBBUlYtcmVsYXRlZCB0b3hpY2l0eS4gfCDigKLCoEFSVi1yZWxhdGVkIHRveGljaXRpZXMgYXJlIHNvbWUgb2YgdGhlIG1vc3QgY29tbW9uIHJlYXNvbnMgcmVwb3J0ZWQgZm9yIEFSVCBub24tIGFkaGVyZW5jZSwgdHJlYXRtZW50IGRpc2NvbnRpbnVhdGlvbiBvciBzdWJzdGl0dXRpb24gb2YgZHJ1Z3MgYW5kLCB0aHVzLCBhcmUgaW1wb3J0YW50IHRvIG1vbml0b3IuCiAqIC0gbWV0aG9kOiBGb3IgdGhlIG51bWVyYXRvciBhbmQgZGVub21pbmF0b3I6IEhJViBwYXRpZW50IG1vbml0b3JpbmcgdG9vbHMgKEFSVCByZWdpc3RlcnMsIHBhdGllbnQgcmVjb3Jkcy9FTVJzKS4gVG8gZW5hYmxlIHJlcG9ydGluZyBjb2RlcyBmb3IgcmVhc29ucyBmb3IgQVJUIHN0b3Agb3Igc3dpdGNoIGFyZSBwcm92aWRlZCBpbiBwYXRpZW50IG1vbml0b3JpbmcgdG9vbHMgKFdlYiBBbm5leCBIIEhJViBwYXRpZW50IGNhcmQgYW5kIEFubmV4IEsgQVJUIHJlZ2lzdGVyKSB8ICB8ICJUcmVhdG1lbnQtbGltaXRpbmciIHRveGljaXR5IGlzIGRlZmluZWQgYXMgZm9sbG93czogQSBzZXJpb3VzIGFkdmVyc2UgZHJ1ZyByZWFjdGlvbiB0aGF0IHJlc3VsdHMgaW4gZHJ1ZyBkaXNjb250aW51YXRpb24gb3Igc3Vic3RpdHV0aW9uLiBJbiBhZGRpdGlvbiwgYW55IHJlYWN0aW9uIHRoYXQgbGVhZHMgdG8gdHJlYXRtZW50IGludGVycnVwdGlvbiBvciByZXF1aXJlcyBjaGFuZ2luZyB0aGUgZHJ1ZyBvciByZWdpbWVuIGJlY2F1c2Ugb2YgYW4gYWR2ZXJzZSBkcnVnIHJlYWN0aW9uIGlzIGFsc28gY29uc2lkZXJlZCBhIHNlcmlvdXMgYWR2ZXJzZSBkcnVnIHJlYWN0aW9uLgogKiAKICogU3VnZ2VzdGVkIFNjb3JpbmcgTWV0aG9kOiBwcm9wb3J0aW9uIHwgaHR0cDovL2hsNy5vcmcvZmhpci91cy9jcWZtZWFzdXJlcy9TdHJ1Y3R1cmVEZWZpbml0aW9uL3Byb3BvcnRpb24tbWVhc3VyZS1jcWZtCiAqLwoKbGlicmFyeSBISVZJTkQzNUxvZ2ljCgovLyBJbmNsdWRlZCBMaWJyYXJpZXMKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKCmluY2x1ZGUgSElWQ29tbW9uIHZlcnNpb24gJzAuMC4xJyBjYWxsZWQgSElDCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4wLjEnCmluY2x1ZGUgV0hPQ29tbW9uIGNhbGxlZCBXQ29tCmluY2x1ZGUgSElWRWxlbWVudHMgY2FsbGVkIEhFCmluY2x1ZGUgSElWSW5kaWNhdG9yRWxlbWVudHMgY2FsbGVkIEhJRQoKLy8gSW5kaWNhdG9yIERlZmluaXRpb24KcGFyYW1ldGVyICJNZWFzdXJlbWVudCBQZXJpb2QiIEludGVydmFsPERhdGU+IGRlZmF1bHQgSW50ZXJ2YWxbQDIwMjMtMDEtMDEsIEAyMDIzLTAxLTMwXQoKY29udGV4dCBQYXRpZW50Ci8qIFBvcHVsYXRpb25zICovCgovKgogKkluaXRpYWwgUG9wdWxhdGlvbgogKi8KCmRlZmluZSAiSW5pdGlhbCBQb3B1bGF0aW9uIjoKICB0cnVlCgovKioKICogTnVtZXJhdG9yCiAqIAogKiBEZWZpbml0aW9uOiBOdW1iZXIgb2YgQVJUIHBhdGllbnRzIHdobyBoYXZlIHN0b3BwZWQgdHJlYXRtZW50IG9yIHN3aXRjaGVkIHJlZ2ltZW4gZHVlIHRvIHRveGljaXR5IGluIHRoZSByZXBvcnRpbmcgcGVyaW9kCiAqIENhbGN1bGF0aW9uOiBDT1VOVCBvZiBjbGllbnRzIHdpdGggIkhJViBzdGF0dXMiPSdISVYtcG9zaXRpdmUnIHdpdGggYSAiRGF0ZSBBUlQgc3RvcHBlZCIgaW4gdGhlIHJlcG9ydGluZyBwZXJpb2QgQU5EICJSZWFzb24gQVJUIHN0b3BwZWQiPSdUb3hpY2l0eS9zaWRlIGVmZmVjdHMnIHwgUExVUyB8IENPVU5UIG9mIGNsaWVudHMgd2l0aCAiSElWIHN0YXR1cyI9J0hJVi1wb3NpdGl2ZScgQU5EICJPbiBBUlQiPVRydWUgQU5EIGVpdGhlciAiRGF0ZSBvZiBzd2l0Y2ggdG8gc2Vjb25kLWxpbmUgcmVnaW1lbiIgT1IgIkRhdGUgb2Ygc3dpdGNoIHRvIHRoaXJkLWxpbmUgcmVnaW1lbiIgaW4gdGhlIHJlcG9ydGluZyBwZXJpb2Qgd2l0aCBhICJSZWFzb24gZm9yIHJlZ2ltZW4gc3dpdGNoIj0nVG94aWNpdHkvc2lkZSBlZmZlY3RzJyAgfCBQTFVTIHwgQ09VTlQgb2YgY2xpZW50cyB3aXRoICJISVYgc3RhdHVzIj0nSElWLXBvc2l0aXZlJyBBTkQgIk9uIEFSVCI9VHJ1ZSBBTkQgZWl0aGVyICJEYXRlKHMpIG9mIHN1YnN0aXR1dGlvbiB3aXRoaW4gc2Vjb25kLWxpbmUgcmVnaW1lbiIgT1IgIkRhdGUocykgb2Ygc3Vic3RpdHV0aW9uIHdpdGhpbiB0aGlyZC1saW5lIHJlZ2ltZW4iIGluIHRoZSByZXBvcnRpbmcgcGVyaW9kIEFORCAiUmVhc29uIGZvciBBUlYgZHJ1ZyByZWdpbWVuIHN1YnN0aXR1dGlvbiI9J1RveGljaXR5L3NpZGUgZWZmZWN0cycKICovCgpkZWZpbmUgIk51bWVyYXRvciI6CiAgKEhJRS4iSGFzIEhJVi1wb3NpdGl2ZSBTdGF0dXMiCiAgYW5kIEhJRS4iVG94aWNpdHkvc2lkZSBlZmZlY3RzIEguREU3NSIpCiAgYW5kICgoCiAgICBISUUuIkhhcyBISVYtcG9zaXRpdmUgU3RhdHVzIiAKICAgIGFuZCBISUUuIk9uIEFSVCBILkRFNDciCiAgICBhbmQgCiAgICAoZXhpc3RzKEhFLiJOZXcgcmVnaW1lbiBhZnRlciBzd2l0Y2ggdG8gc2Vjb25kLWxpbmUgcmVnaW1lbiIgUgogICAgd2l0aCBIRS4iVG94aWNpdHkvc2lkZSBlZmZlY3RzIEguREU3NSIgVAogICAgc3VjaCB0aGF0IFIucGFydE9mLnJlZmVyZW5jZXMoVCkKICAgIHdoZXJlIFIuZWZmZWN0aXZlLnRvSW50ZXJ2YWwoKSBkdXJpbmcgIk1lYXN1cmVtZW50IFBlcmlvZCIKICAgICkKICAgIG9yIAogICAgKAogICAgZXhpc3RzKEhFLiJOZXcgcmVnaW1lbiBhZnRlciBzd2l0Y2ggdG8gdGhpcmQtbGluZSByZWdpbWVuIiBSCiAgICB3aXRoIEhFLiJUb3hpY2l0eS9zaWRlIGVmZmVjdHMgSC5ERTc1IiBUCiAgICBzdWNoIHRoYXQgUi5wYXJ0T2YucmVmZXJlbmNlcyhUKQogICAgd2hlcmUgUi5lZmZlY3RpdmUudG9JbnRlcnZhbCgpIGR1cmluZyAiTWVhc3VyZW1lbnQgUGVyaW9kIiAgCiAgICApCiAgICApCiAgKQogICkKICBvcgogICgKICAgIEhJRS4iSGFzIEhJVi1wb3NpdGl2ZSBTdGF0dXMiCiAgICBhbmQgSElFLiJPbiBBUlQgSC5ERTQ3IgogICAgYW5kIAogICAgKGV4aXN0cyhIRS4iTmV3IHJlZ2ltZW4gYWZ0ZXIgc3Vic3RpdHV0aW9uIHdpdGhpbiBzZWNvbmQtbGluZSByZWdpbWVuIiBSCiAgICB3aXRoIEhFLiJUb3hpY2l0eS9zaWRlIGVmZmVjdHMgSC5ERTc1IiBUCiAgICBzdWNoIHRoYXQgUi5wYXJ0T2YucmVmZXJlbmNlcyhUKQogICAgd2hlcmUgUi5lZmZlY3RpdmUudG9JbnRlcnZhbCgpIGR1cmluZyAiTWVhc3VyZW1lbnQgUGVyaW9kIgogICAgKQogICAgb3IgCiAgICAoCiAgICBleGlzdHMoSEUuIk5ldyByZWdpbWVuIGFmdGVyIHN1YnN0aXR1dGlvbiB3aXRoaW4gdGhpcmQtbGluZSByZWdpbWVuIiBSCiAgICB3aXRoIEhFLiJUb3hpY2l0eS9zaWRlIGVmZmVjdHMgSC5ERTc1IiBUCiAgICBzdWNoIHRoYXQgUi5wYXJ0T2YucmVmZXJlbmNlcyhUKQogICAgd2hlcmUgUi5lZmZlY3RpdmUudG9JbnRlcnZhbCgpIGR1cmluZyAiTWVhc3VyZW1lbnQgUGVyaW9kIiAgCiAgICApCiAgICApCiAgKQogICkKCiAgKQoKLyoqCiAqIERlbm9taW5hdG9yCiAqCiAqIERlZmluaXRpb246IE51bWJlciBvZiBBUlQgcGF0aWVudHMgaW4gdGhlIHJlcG9ydGluZyBwZXJpb2QKICogQ2FsY3VsYXRpb246IENPVU5UIG9mIGNsaWVudHMgd2l0aCAiSElWIHN0YXR1cyI9J0hJVi1wb3NpdGl2ZScgQU5EICJPbiBBUlQiPVRydWUgd2l0aGluIHRoZSByZXBvcnRpbmcgcGVyaW9kCiAqLwoKZGVmaW5lICJEZW5vbWluYXRvciI6CiAgSElFLiJIYXMgSElWLXBvc2l0aXZlIFN0YXR1cyIKICAgIGFuZCBISUUuIk9uIEFSVCBILkRFNDciCiAgICAKCi8qIGVuZCBQb3B1bGF0aW9ucyAqLwoKCi8qCiAqIERpc2FnZ3JlZ2F0b3JzCiAqLwoKZGVmaW5lICJBZG1pbmlzdHJhdGl2ZSBHZW5kZXIgU3RyYXRpZmllciI6CglISUUuIkJ5IEFkbWluaXN0cmF0aXZlIEdlbmRlciBTdHJhdGlmaWVyIgoKZGVmaW5lICJBZ2UgU3RyYXRpZmllciI6CglISUUuIkJ5IEFnZSBTdHJhdGlmaWVyIgoKZGVmaW5lICJHZW9ncmFwaGljIFJlZ2lvbiBTdHJhdGlmaWVyIjoKCUhJRS4iQnkgR2VvZ3JhcGhpYyBSZWdpb24gU3RyYXRpZmllciIKCmRlZmluZSAicGF0aWVudEdyb3VwcyBTdHJhdGlmaWVyIjoKCUhJRS4icGF0aWVudEdyb3VwcyIKCmRlZmluZSAiU3RyYXRpZmljYXRpb24iOgogSElFLiJCeSBBZG1pbmlzdHJhdGl2ZSBHZW5kZXIgU3RyYXRpZmllciIuY29kZSAKICArICc6JyArIEhJRS4iQnkgQWdlIFN0cmF0aWZpZXIiCisgJzonICsgSElFLiJCeSBHZW9ncmFwaGljIFJlZ2lvbiBTdHJhdGlmaWVyIgorIENvbWJpbmUoSElFLnBhdGllbnRHcm91cHMsICc6JykKCi8qCm5lZWQgdG8gYWRkCiogIOKAosKgQVJUIHJlZ2ltZW4gCiAqICDigKLCoFByZWduYW5jeSBzdGF0dXMgCiAqICDigKLCoFR5cGUgb2YgdG94aWNpdHkgKGdhc3Ryb2ludGVzdGluYWwsIHNraW4sIHBlcmlwaGVyYWwgbmV1cm9wYXRoeSwgY2VudHJhbCBuZXJ2b3VzIHN5c3RlbSwgd2VpZ2h0IGdhaW4sIGhlcGF0aWMgZHlzZnVuY3Rpb24sIGhhZW1hdG9sb2dpY2FsLCBmYXRpZ3VlLCBoZWFkYWNoZSwgYm9uZSBkeXNmdW5jdGlvbiwgbWV0YWJvbGljLCBraWRuZXkgZHlzZnVuY3Rpb24pIAoqLw=="^^xsd:base64Binary ]
  ] [
     fhir:contentType [ fhir:v "application/elm+xml" ] ;
     fhir:data [ fhir:v ""^^xsd:base64Binary ]
  ] ) . # 

# -------------------------------------------------------------------------------------

